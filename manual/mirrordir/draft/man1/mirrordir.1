.\" (c) 1998 by James R. Van Zandt <jrv@vanzandt.mv.com>    -*- nroff -*-
.\"
.\" Japanese Version Copyright (c) 2003 NAKANO Takeo all rights reserved.
.\" Translated Wed 29 Jan 2003 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\"
.TH mirrordir 1 "1998 November 1" "Linux"
.\"O .SH NAME
.SH 名前
.\"O pslogin \- secure remote tcp login using strong stream
.\"O cipher encryption and diffie-hellman key exchanges.
pslogin \- 強力なストリーム cipher 暗号化と diffie-hellman 鍵交換を用いた安全なリモート tcp ログイン
.PP
.\"O forward \- arbitrary tcp socket forwarding over a
.\"O secure/encrypted channel.
forward \- 任意の tcp ソケットを安全かつ暗号化されたチャネルにフォワードする
.PP
.\"O copydir, mirrordir \- copy, mirror directory trees
.\"O via a minimal set of changes, locally or over FTP,
.\"O or over a secure tcp connection.
copydir, mirrordir \- 変更された最小の部分のみを用いて
(ローカル、FTP 経由、安全な tcp 接続経由で)
ディレクトリツリーをコピーまたはミラーする
.PP
.\"O recursdir \- recurse through local or remote directories
.\"O to command/find files or create tar files.
recursdir \- ファイルの操作/検索や tar ファイル作成のために、ローカルまたはリモートのディレクトリを再帰的に探索する
.\"O .SH SYNOPSIS
.SH 書式
.B mirrordir
.br
[\fB-a\fP, \fB--access-times\fP]
.br
[\fB-m\fP, \fB--strict-mtimes\fP]
.br
[\fB--no-mtimes\fP]
.br
[\fB--ignore-size\fP]
.br
[\fB-A\fP, \fB--mtime-threshold\fP \fIext\fP]
.br
[\fB--time-offset\fP [[\fI+\fP]|\fI-\fP][\fIH\fP]\fIH\fP[\fI:MM\fP]]
.br
[\fB-A\fP, \fB--always-write\fP]
.br
[\fB-r\fP, \fB--restore-access\fP]
.br
[\fB--no-chown\fP]
.br
[\fB--no-chmod\fP]
.br
[\fB-D\fP, \fB--only-delete\fP]
.br
[\fB-b\fP, \fB-S\fP, \fB--backup-extension\fP, \fB--suffix\fP \fIext\fP]
.br
[\fB-N\fP, \fB--num-backups\fP \fInum\fP]
.br
[\fB-O\fP, \fB--backup-outdate\fP \fIsec\fP]
.br
[\fB-B\fP, \fB--block-size\fP \fIbytes\fP]
.br
[\fB-M\fP, \fB--max-bytes\fP \fInum\fP[\fBK\fP|\fBM\fP|\fBG\fP]]
.br
[\fB-s\fP, \fB--starting-file\fP \fIpath\fP]
.br
[\fB-i\fP, \fB--ignore-next-exclude\fP]
.br
[[\fB-i\fP] \fB-X\fP, \fB--exclude\fP \fIpath\fP] [[\fB-i\fP] \fB-X\fP, \fB--exclude\fP \fIpath\fP] ...
.br
[[\fB-i\fP] \fB-F\fP, \fB--exclude-from\fP \fIfile\fP] ...
.br
[[\fB-i\fP] \fB-G\fP, \fB--exclude-glob\fP \fIexpr\fP] [[\fB-i\fP] \fB-G\fP, \fB--exclude-glob\fP \fIexpr\fP] ...
.br
[[\fB-i\fP] \fB-R\fP, \fB--exclude-regexp\fP \fIexpr\fP] [[\fB-i\fP] \fB-R\fP, \fB--exclude-regexp\fP \fIexpr\fP] ...
.br
[\fB-C\fP, \fB--exclude-script\fP [\fIexpr\fP|\fIfile\fP]] [\fB-C\fP, \fB--exclude-script\fP [\fIexpr\fP|\fIfile\fP]] ...
.br
[\fB-h\fP, \fB--help\fP]
.br
[\fB-v\fP, \fB--verbose\fP] [\fB-v\fP, \fB--verbose\fP] ...
.br
[\fB-V\fP, \fB--version\fP]
.br
[\fB-k\fP, \fB--keep-files\fP]
.br
[\fB-l\fP, \fB--no-hard-links\fP]
.br
[\fB--follow-symlinks\fP]
.br
[\fB-L\fP, \fB--strict-locking\fP]
.br
[\fB-p\fP, \fB--password\fP \fIpassword\fP]
.br
[\fB-P\fP, \fB--password-exact\fP \fIpassword\fP]
.br
[\fB--test-login\fP]
.br
[\fB--no-warn-first-login\fP]
.br
[\fB--read-password-from-stdin\fP]
.br
[\fB--allow-empty-ftp-dirs\fP]
.br
[\fB--no-allow-empty-ftp-dirs\fP]
.br
[\fB--netrc\fP]
.br
[\fB--no-netrc\fP]
.br
[\fB--proxy-host\fP \fIhost\fP]
.br
[\fB--secure\fP]
.br
[\fB-z\fP, \fB--gzip\fP]
.br
[\fB--gzip-backups\fP]
.br
[\fB--case-insensitive\fP]
.br
[\fB--to-lower\fP]
.br
[\fB--to-upper\fP]
.br
[\fB--no-use-passive-connections\fP]
.br
[\fB-K\fP, \fB--key-size\fP \fIbits\fP]
.br
[\fB--download-scripts\fP]
.br
[\fB--tar-file\fP \fIfilename\fP]
.br
[\fB--tar-block-size\fP \fIN\fP]
.br
[\fB-t\fP, \fB--dry-run\fP, \fB--test-only\fP]
.br
[\fB--nice\fP \fInum\fP] \fIcontrol mirror\fP
.PP
.B mirrordir
[\fB-c\fP | \fB--copy-mode\fP | \fB--recurs-mode\fP ] 
-[\fBabBCdDFGhklMmNOopRrstvVX\fP] \fIsrc\fP [\fIsrc\fP ...] \fIdest\fP
.PP
.B copydir
-[\fBabBCdeFGhklMmNOopRrstvVX\fP] \fIsrc\fP [\fIsrc\fP ...] \fIdest\fP
.PP
.B recursdir
-[\fBabBCdeFGhklMmNOopRrstvVX\fP] \fIsrc\fP [\fIsrc\fP ...]
.PP
.B pslogin
[\fB--key-size\fP \fIbits\fP]
[\fBmc://\fP][\fIusername\fP\fB@\fP]\fIhostname\fP[\fB:\fP\fIportnumber\fP][\fB/\fP\fIpath\fP]
.PP
.\"O .BR "  " "But usually just"
しかし通常は単に:
.br
.BR mirrordir " [" --exclude " \fIpath\fP] " "\fIcontrol mirror\fP"
.br
.B copydir
\fIsrc\fP [\fIsrc\fP ...] \fIdest\fP
.br
.B recursdir 
\fIsrc\fP [\fIsrc\fP ...] [\fB-C\fP \fIprogram\fP]
.br
.B pslogin
[\fIusername\fP\fB@\fP]\fIhostname\fP[\fB:\fP\fIportnumber\fP]
.\"O .SH DESCRIPTION
.SH 説明
.\"O .PP
.\"O \fBmirrordir\fP is a set of useful utilities for manipulating and
.\"O mirroring directories. Included is also the command \fBpslogin\fP - an
.\"O alternative to \fBssh\fP(1), and \fBforward\fP(1) for forwarding
.\"O arbitrary TCP socket connections over encrypted secure channels.
.B mirrordir
はディレクトリを操作したりミラーする際に便利なユーティリティの集まりである。
.BR ssh (1)
の代替になるコマンド
.B pslogin
や、任意の TCP ソケット接続を暗号化された安全なチャネルにフォワードする
.BR forward (1)
も含まれている。
.PP
.\"O \fBmirrordir\fP copies files that are different between the directories
.\"O \fIcontrol\fP and \fImirror\fP to the directory \fImirror\fP. Files
.\"O whose modification times or sizes differ are copied. File permissions,
.\"O ownerships, modification times, access times (only if --access-times is
.\"O used), sticky bits, and device types are duplicated. Symlinks are
.\"O duplicated without any translation. Symlink modification and access times
.\"O (of the symlink itself, not the file it points to) are \fInot\fP
.\"O preserved. Hard linked files are merely copied. Creation times cannot be
.\"O set with Unix as far as I can see.
.B mirrordir
は 2 つのディレクトリ
.I control
と
.I mirror
との間で異なるファイルを、
.I control
から
.I mirror
へとコピーする。
.\"nakano control は訳者の判断で追加.
修正時刻 (modification time) またはサイズが異なるファイルがコピーされる。
ファイルの許可属性・所有者・修正時刻・アクセス時刻
(--access-time が用いられた場合のみ)・スティッキービット・
デバイスタイプが複製される。
シンボリックリンクはリンク先の解決をされずにそのままコピーされる。
シンボリックリンクの修正・アクセス時刻 (シンボリック自身のもので、
シンボリックが指すファイルのものではないことに注意) は保存\fIされない\fP。
ハードリンクされたファイルは単にコピーされる。
生成時刻は、私の知る限り Unix では設定できない。

.\"O \fBmirrordir\fP is a \fBDANGEROUS\fP command because files or
.\"O directories that exist in \fImirror\fP that don't exist in \fIcontrol\fP
.\"O are deleted. If \fIcontrol\fP is entirely empty, then all files and
.\"O directories in \fImirror\fP will be deleted. If \fImirror\fP is entirely
.\"O empty, then all files and directories in \fIcontrol\fP will be copied.
.B mirrordir
は\fB危険な\fPコマンドである。
.I mirror
にあって
.I control
にないファイルやディレクトリは削除されるからである。もし
.I control
が完全に空の場合には、
.I mirror
のすべてのファイルやディレクトリが削除される。もし
.I mirror
が完全に空の場合には、
.I control
のすべてのファイルやディレクトリがコピーされる。

.\"O In short, \fBmirrordir\fP forces \fImirror\fP to be an exact replica of
.\"O the directory tree \fIcontrol\fP in every possible detail suitable for
.\"O purposes of timed backup. It naturally descends into subdirectories to
.\"O all their depths. \fBmirrordir\fP tries to be as efficient as possible
.\"O by making the minimal set of changes necessary to mirror the directory.
要するに
.B mirrordir
は
.I mirror
をディレクトリツリー
.I control
の完全なレプリカにし、またその際にあらゆるものを
(定期的バックアップという目的に合致するなら)
可能な限り複製しようとする。当然
.B mirrordir
はサブディレクトリの一番深いところまで降りていく。
ディレクトリミラーの際には、それに必要な最小の変更のみを調べ、
可能な限り効率的に動作しようとする。

.\"O Access time duplication is not usually required and creates unnecessary
.\"O load. Hence it is given as an option.
アクセス時刻の複製は通常は必要なく、また不要な負荷を与えることになる。
よってこれはオプションになっている。

.\"O The directory \fIcontrol\fP is left untouched. If --restore-access is
.\"O given then access times are reset to their original with each read.
ディレクトリ
.I control
には、何の変化も与えない。--restore-access
が与えられると、アクセス時刻は読み込みのたびに、
元の時刻に再設定される。

.\"O If the the --strict-locking option is on, files in \fIcontrol\fP that
.\"O are copied are locked for \`shared reading\'. This will ensure, if
.\"O another process is busy writing to that file, that the file is not
.\"O copied in its incomplete or corrupted state.
--strict-locking オプションをオンにすると、
.I control
にあるコピー作業中のファイルは「共有読み込み (shared reading)」
にロックされる。これによって、
他のプロセスがそのファイルに頻繁に書き込みを行っている場合でも、
ファイルが不完全な状態や壊れた状態ではコピーされないことを保証する。

.\"O Usually \fBmirrordir\fP will not exit, but will give error messages to
.\"O stderr to report any problems, and then will continue.
通常
.B mirrordir
は問題があっても中断せず、
問題の報告を stderr へのエラーメッセージとして行い、
動作を継続する。

.\"O The directory \fImirror\fP or \fIdest\fP must exist, even if it is
.\"O empty.
ディレクトリ
.I mirror
や
.I dest
は (たとえ空であっても) 存在していなければならない。

.\"O Before erasing all the files in a directory, \fBmirrordir\fP checks for
.\"O the file \fB*--keep-me\fP (where \fB*\fP is zero or one characters). If
.\"O this file is present it will abort with an error message. Hence such a
.\"O file can be created in all directories that you are fearful of being
.\"O recursively erased.
ディレクトリのすべてのファイルを削除する前に、
.B mirrordir
は \fB*--keep-me\fP というファイル (ここで \fB*\fP は 0 または 1 つの文字)
をチェックする。
このファイルが存在すると、エラーメッセージを出して中断する。
よって再帰的に削除されてはまずいディレクトリがあったら、
それぞれにこのようなファイルを作っておけば良い。
.\"nakano かなり意訳。

.\"O \fBcopydir\fP is equivalent to \fBmirrordir\fP \fI-ck
.\"O --no-erase-directories\fP ...
.\"O .br
.\"O (although -c implies -k anyway), so \fBcopydir\fP is very much like a
.\"O rigorous version of \fBcp\fP(1) where filenames can also be URLs, and
.\"O only outdated files are replaced. Use \fBcopydir\fP instead of
.\"O \fBmirrordir\fP for most file transfers. Only use \fBmirrordir\fP, when
.\"O you really want to delete things.
.B copydir
は \fBmirrordir\fP \fI-ck --no-erase-directories\fP ...
と等価である (-c には -k が含まれるが)。よって
.B copydir
は厳密な意味での
.BR cp (1)
とよく似ているが、ファイル名は URL でも良く、
かつ古いファイルだけが置き換えられる。
ファイル転送には、ほとんどの場合
.B mirrordir
ではなく
.B copydir
を使うほうがよい。本当に消してよい場合に限り、
.B mirrordir
を使うようにすること。

.\"O \fBrecursdir\fP is a further program that does nothing but descend into
.\"O the directories on the command line. It is equivalent to \fBmirrordir\fP
.\"O \fI--recurs-mode\fP ...
.\"O .br
.\"O It was born after the \fB-C\fP option was added, and can be used as a
.\"O more rigorous version of \fBfind\fP(1) and can also pack all the files
.\"O it finds into a tar file.
.B recursdir
はまたもう一つのプログラムで、
コマンドライン上でディレクトリを降りてゆくだけで何も行わない。
これは \fBmirrordir\fP \fI--recures-mode\fP ...
と等価である。これは
.B -C
オプションが追加される前にできたプログラムで、より厳密な
.BR find (1)
として、あるいは見つかったすべてのファイルを
tar ファイルにパックする目的に、それぞれ利用できる。

.\"O \fBpslogin\fP is yet a further program which has almost nothing to
.\"O do with the previous three. It envokes a secure login session
.\"O using \fBsecure-mcserv\fP. It is equivalent to \fBmirrordir\fP
.\"O \fI--login-mode\fP \fI--secure\fP ...
.\"O .br
.\"O \fBpslogin\fP should be called \fBlogindir\fP. See \fB--login-mode\fP
.\"O below.
.\"nakano envoke は evoke の typo かな?
.B pslogin
はさらにもう一つのプログラムで、
これまでに挙げた 3 つとはほとんど関係がない。
.B pslogin
は
.B secure-mcserv
を用いて安全なログインセッションを開始する。
これは \fBmirrordir\fP \fI--login-mode\fP \fI--secure\fP ...
と等価である。
.B pslogin
は
.B logindir
と呼ぶべきかもしれない。後述の
.B --login-mode
を参照のこと。

.\"O \fBforward\fP is yet a further program which has almost nothing to
.\"O do with first three. It can do forwarding of arbitrary services over a
.\"O secure channel. See \fBforward\fP(1) for details.
.B forward
はさらにもう一つのプログラムで、
最初の 3 つとはほとんど関係がない。
これは任意のサービスを安全なチャネルにフォワードできる。
詳細は
.BR forward (1)
を参照のこと。

.\"O The importance of this package is that you can use URL's instead of
.\"O normal filenames, and hence manipulate files over a network. The URL
.\"O types currently supported are \fBftp://\fP and \fBmc://\fP
.\"O (\fBhttp://\fP is not a filesystem and therefore is not supported).
.\"O \fBmc://\fP is the \fBMidnight Commander\fP filesystem and is served by
.\"O the \fBsecure-mcserv\fP daemon. It has the advantage of serving 
.\"O cryptographically strong secure file transfers and logins.
このパッケージの重要な点は、
通常のファイル名に替えて URL を使える点にある。
よってファイルをネットワーク越しに操作できる。
現在サポートされている URL のタイプは、
\fBftp://\fP と \fBmc://\fP である
(\fBhttp://\fP はファイルシステムではないので、サポートされていない)。
\fBmc://\fP は \fBMidnight Commander\fP ファイルシステムで、
.B secure-mcserv
デーモンによってサービスされるものである。
これには、暗号化された、
強く安全なファイル転送およびログインを提供するという長所がある。

.\"O You can also use glob expressions in filenames for the \fBrecursdir\fP
.\"O and \fBcopydir\fP commands. These will be recursively expanded.
.B recursdir
コマンドと
.B copydir
コマンドには glob 表現も利用できる。
これらは再帰的に展開される。
.\"O .PP
.\"O .SH SECURITY AND ENCRYPTION
.SH セキュリティと暗号化
.\"O \fBmirrordir\fP supports strong stream cipher encryption and
.\"O Diffie-Hellman key exchanges with several possible key sizes. Secure
.\"O connections work with \fBmc://\fP type connections. See the options
.\"O \fB--secure\fP, \fB--key-size\fP, \fB--download-scripts\fP. See the
.\"O \fBEXAMPLES\fP section for demo's and the \fBFILES\fP section for where
.\"O public/private keys are stored.
.B mirrordir
は、強力なストリーム cipher 暗号化と、
何種類かの鍵サイズでの Diffie-Hellman 鍵交換をサポートしている。
安全な接続は
.B mc://
の接続で動作する。オプション
.BR --secure ", " --key-size ", " --download-scripts
を参照のこと。
デモは
.B 例
の節を、公開鍵・秘密鍵の置場所については
.B ファイル
の節を参照のこと。
.\"O .PP
.\"O .SH OPTIONS
.SH オプション
.TP 
.B --help
.\"O Print out detailed help, then exit.
詳しいヘルプを出力して終了する。
.IP \fB--verbose\fP
.\"O Specifies verbose output of file modifications made to \fImirror\fP.
.\"O This option can be given multiple times for greater verbosity. Output is
.\"O written to stdout.
.I mirror
に対してなされたファイル修正に関して、
詳しい出力をするよう指定する。
このオプションは複数個指定でき、
たくさん指定するほどより詳しく出力する。
出力は標準出力に書き出される。
.IP \fB--restore-access\fP
.\"O Restore the access times of \fIcontrol\fP with each
.\"O read.
読み込むを行うごとに、
.I control
のアクセス時間を元に戻す。
.IP \fB--access-times\fP
.\"O Duplicate even the access times of \fIcontrol\fP.
.I control
のアクセス時刻も複製する。
.TP 
\fB--always-write\fP
.\"O Force rewrite of every file regardless of whether they appear to
.\"O be identical or not.
同じに見えるかどうかに関らず、
すべてのファイルを書き変えるよう強制する。
.TP
\fB--recurs-mode\fP
.\"O This is set by default with \fBrecursdir\fP. Listed directories are
.\"O read recursively and nothing is done to them. This option is useful with
.\"O \fB-C\fP in order to execute shell commands and search for files. Note
.\"O the \fBsystem()\fP, \fBexec()\fP and \fBpopen()\fP functions available to
.\"O the C interpretor.
これは
.B recursdir
ではデフォルトで有効になる。
指定したディレクトリを再帰的に読み、それらに対しては何も行わない。
このオプションは
ファイルを検索したり、
.B -C
と共に指定してシェルコマンドを実行したりするのに便利である。
なお C インタープリタでは
.BR system() ", " exec() ", " popen
関数が利用できる。
.TP
\fB--login-mode\fP
.\"O This option is set by default with \fBpslogin\fP. This approximates
.\"O \fBrlogin\fP(1) using \fBsecure-mcserv\fP as a server. It is a
.\"O secure encrypted connection intended as a replacement to \fBssh\fP(1).
.\"O \fBpslogin\fP implies \fB--secure\fP as well. When using this option
.\"O or when using \fBpslogin\fP, only one path must be present on the
.\"O command-line. The path is of the form
.\"O [\fBmc://\fP][\fIusername\fP\fB@\fP]\fIhostname\fP[\fB:\fP\fIportnumber\fP][\fB/\fP\fIpath\fP].
.\"O .br
.\"O Immediately after logging in, a \fBcd\fP \fI/path\fP will be
.\"O executed at the shell prompt. To determine if a prompt is
.\"O available, \fBpslogin\fP searches for a \fB#\fP, \fB$\fP or
.\"O \fB>\fP character. Should these not be found, \fBpslogin\fP
.\"O blocks indefinately. To avoid this behaviour, specify \fB/\fP\fIpath\fP
.\"O as exactly \fB/\fP. This will leave you in your login directory.
.\"O Alternatively, change your shell prompt to include one of these
.\"O characters.
このオプションは
.B pslogin
ではデフォルトでセットされる。これは
.B secure-mcserv
をサーバに使う
.B rlogin
とだいたい同じになる。
.BR ssh (1)
の代わりに使えるような、安全な暗号化された接続を提供する。
.B pslogin
は暗黙のうちに
.B --secure
も指定する。このオプションを指定したり、
.B pslogin
を用いた場合は、コマンドラインにはパスを 1 つだけ指定しなければならない。
指定の形式は
[\fBmc://\fP][\fIusername\fP\fB@\fP]\fIhostname\fP[\fB:\fP\fIportnumber\fP][\fB/\fP\fIpath\fP]
である。
.sp
ログイン後直ちに、シェルプロンプトから \fBcd\fP \fI/path\fP
が実行される。
.B pslogin
は文字 \fB#\fP, \fB$\fP, \fB>\fP を調べ、
プロンプトが出たかどうか判断する。
これらが見つからないと、
.B pslogin
はずっと止まったままになる。この動作を避けるには、
.BI / path
を
.B /
とすれば良い。するとログインディレクトリに留まったままになる。
あるいはシェルプロンプトを変更して、これらの文字を含めるようにしてもよい。
.TP
\fB--copy-mode\fP
.\"O This is set by default with \fBcopydir\fP. Approximate the behaviour of
.\"O \fBcp\fP(1) as regards source and destination files. This option implies
.\"O --keep-files. It overwrites any existing file or directory with the same
.\"O name as a source file or directory, but does not delete files or
.\"O directories unnecessarily. Multiple source files or directories may be
.\"O given. The destination path must be a directory.
これは
.B copydir
ではデフォルトでセットされる。
コピー元・コピー先の各ファイルに対して
.BR cp (1)
と同じように振る舞う。このオプションを用いると、暗黙のうちに
.B --keep-files
を指定したことになる。
コピー先の既存のファイル・ディレクトリのうち、
コピー元と同じ名前を持つものはすべて上書きされるが、
これ以外の理由でファイルやディレクトリが削除されることはない。
コピー元には複数のファイルやディレクトリを指定できる。
コピー先のパスはディレクトリでなければならない。
.TP 
\fB--no-erase-directories\fP
.\"O With this option, if a target directory conflicts with a source file,
.\"O and the directory is not empty, then an error message will be printed
.\"O and the program will abort. This is the default behaviour for
.\"O \fBcopydir\fP.
このオプションを指定すると、
コピー先のディレクトリとコピー元のファイルがおなじ名前で、
かつそのディレクトリが空でない場合、
エラーメッセージを表示して終了する。これは
.B copydir
のデフォルトの動作である。
.TP 
\fB--erase-directories\fP
.\"O With this option, if a target directory conflicts with a source file,
.\"O then the target directory will be recursively deleted. This is the
.\"O default behaviour for \fBmirrordir\fP.
このオプションを指定すると、
コピー先のディレクトリとコピー元のファイルがおなじ名前の場合、
コピー先のディレクトリは再帰的に削除される。これは
.B mirrordir
のデフォルトの動作である。
.TP
\fB--allow-empty-ftp-dirs\fP
.\"O Some ftp servers do not produce a . or .. directory. This makes it appear
.\"O as though you did not have permission to read the directory. This
.\"O option overrides this by assuming that such completely empty directories
.\"O are merely empty and do not have errors. If you get
.\"O \fBunable to open directory: *: Permission denied\fP errors, then you can
.\"O use this option. This option is enabled by default (see next).
ftp サーバには、 . とか .. といったディレクトリを生成しないものがある。
そのような場合、ディレクトリへの読み取り許可がないように見えてしまう。
このオプションを用いると、この動作を変更し、
このような完全に空のディレクトリを単に空であるとみなしてエラーにしない。
\fBunable to open directory: *: Permission denied\fP
というエラーになった場合は、このオプションを試してみるとよい。
このオプションはデフォルトでは有効になっている (次項を参照のこと)。
.TP
\fB--no-allow-empty-ftp-dirs\fP
.\"O Because we now cd to the directory to check for permission to access it,
.\"O the default behaviour is to allow empty directories.
現在はディレクトリに cd してアクセス許可を調べるためにようになったので、
デフォルトの動作は空のディレクトリを許可するようにした。
.TP
\fB--only-delete\fP
.\"O Do not make any changes to \fImirror\fP that will cause the total space
.\"O occupied by \fImirror\fP to enlarge. This is a useful option when backing
.\"O up onto a drive that has limited space, where changes have been made to
.\"O \fIcontrol\fP that might cause \fImirror\fP to grow larger during the
.\"O duration of the transfer. Running \fBmirrordir\fP once with this option
.\"O and then once normally will ensure that the available space is not
.\"O overrun.
\fImirror\fP に対して、利用しているディスクスペースを
増加させるような変更は一切行なわない。
これは容量の限られているドライブに対してバックアップを取る場合、
転送の最中に \fIcontrol\fP に \fImirror\fP を増加させてしまうような
変更がなされるときに便利である。
一度このオプションをつけて \fBmirrordir\fP を実行すれば、
次にこのオプションをつけて実行したときには、
利用できる領域を越えないことが通常は保証される。
.TP
\fB-i\fP, \fB--ignore-next-exclude\fP
.\"O This option dictates that the next --exclude- type option must
.\"O completely overlook those files regardless of their existence or
.\"O non-existence in the mirror directory. It has the effect of a
.\"O return value of \fBIGNORE\fP for the \fB--exclude-script\fP
.\"O option below. This can be used to cause certain files to never be
.\"O modified, for example if you would like \fI/etc/named.boot\fP to
.\"O never be modified, use \fBmirrordir /mnt/1 /mnt/2 -i --exclude
.\"O /mnt/1/etc/named.boot\fP. Note that all paths must be specified in
.\"O the control directory and not the mirror directory, hence
.\"O \fB--exclude /mnt/2/etc/named.boot\fP won't work. This has the
.\"O idiotic behaviour that if you want to avoid erasing a file, you
.\"O have to have that file present in the control directory, even if
.\"O it has zero length.
このオプションを指定すると、次の --exclude- タイプのオプションは、
対象ファイルが mirror ディレクトリにあろうと無かろうと、
それらを完全に無視することになる。
これは後述する
.B --exclude-script
オプションで \fBIGNORE\fP が返った場合と同じ効果を持つ。
これは特定のファイルを決して変更しないようにするのに利用できる。
例えば
.I /etc/named.boot
を決して変更したくない場合には、
.B mirrordir /mnt/1 /mnt/2 -i --exclude /mnt/1/etc/named.boot
とすればよい。mirror ディレクトリではなく、
control ディレクトリのフルパスで指定することに注意。
.B --exclude /mnt/2/etc/named.boot
では動作しない。
後者では、ファイルを削除したくない場合には
そのファイルが control ディレクトリに存在しなければならない
(たとえサイズ 0 であっても) という馬鹿げた動作となる。
.TP
\fB--exclude\fP \fIpath\fP
.\"O .RS
.\"O Exclude file or directory \fIpath\fP. A large number of excluded paths
.\"O on the command-line will slow performance. An excluded path will be
.\"O removed from the mirror tree if it already exists, in the same way as
.\"O any absent directory or file. Use  the --ignore option to ignore keep
.\"O rather than delete these files.
ファイルまたはディレクトリ
.I path
を除外する。コマンドラインにたくさんの exclude パスを指定すると、
動作が遅くなってしまう。除外されたパスは、
mirror ツリーに存在する場合は削除される
(そのディレクトリまたはファイルが存在していない場合と同様である)。
これらのファイルを削除せずに無視して保持しておきたい場合は、
--ignore オプションを用いること。

.\"O If you have a long list of files to exclude, use the
.\"O \fB--exclude-from\fP option.
除外するファイルが長いリストになる場合は、
.B --exclude-from
オプションを利用すること。
.\"O .RE
.TP
\fB--exclude-glob\fP \fIglob\fP
.\"O Exclude file or directory names matching glob style expression
.\"O \fIglob\fP. Matches the file without its full path. For shells, the
.\"O expression should be enclosed in appropriate quotes to prevent
.\"O substitutions.
glob 形式の表現
.I glob
にマッチするファイルするディレクトリを除外する。
ファイルへのマッチではフルパスを用いない。
シェルにおいては、glob 表現を適切な引用符で括り、
解釈されないようにする必要がある。
.TP
\fB--exclude-regexp\fP \fIregex\fP
.\"O Exclude full pathnames of files or directories matching \fIregex\fP. For
.\"O shells, the expression should be enclosed in appropriate quotes to
.\"O prevent substitutions.
フルパス名が
.I regex
にマッチするファイルやディレクトリを除外する。
シェルにおいては、正規表現を適切な引用符で括り、
解釈されないようにする必要がある。
.TP
\fB--exclude-script\fP [\fIexpr\fP|\fIfile\fP]
.RS
.\"O Cause execution of the script \fIexpr\fP for each file before
.\"O doing anything with that file. The script is a C style statement
.\"O block, terminating with a \`\fBreturn\fP \fIexpression\fP;\'. The
.\"O value of \fIexpression\fP can be one of \fBINCLUDE\fP,
.\"O \fBEXCLUDE\fP, \fBUNKNOWN\fP or \fBIGNORE\fP (see \fB-i\fP
.\"O above) to explain what is to be done with that file. If
.\"O \fIexpr\fP does not contain a semi-colon (;) then it is assumed
.\"O to be the name of a file - which is then loaded. In either case,
.\"O the text is byte compiled into reverse-polish notation for fast
.\"O execution. This option can be specified multiple times and the
.\"O scripts will be executed in order until a script returns
.\"O something other than \fBUNKNOWN\fP. A return value of
.\"O \fBUNKNOWN\fP allows the remaining \fB--exclude-\fP options on
.\"O the command-line to take effect.
各ファイルに対する処理を行なう前に、スクリプト \fIexpr\fP を実行する。
このスクリプトは
C 言語スタイルの文ブロックからなり、\`\fBreturn\fP \fIexpression\fP;\'
で終了する。
.I expression
の値は
.BR INCLUDE ,
.BR EXCLUDE ,
.BR UNKNOWN
.B IGNORE
(上述の \fB-ifP を見よ)
のいずれかであり、そのファイルに対して成すべき動作を示す。
.I expr
にセミコロン (;) が含まれていない場合は、
これはファイル名とみなされ、そのファイルがロードされる。
それ以外の場合は、テキストは高速化のために
逆ポーランド形式にコンパイルされる。
このオプションは複数指定でき、
その場合スクリプトは
.B UNKNOWN
以外の値が返るまで、順に実行される。
.B UNKNOWN
が返った場合は、コマンドラインにあるその他の
.B --exclude-
形式のオプションが効力を持つ。
.PP
.\"O If you find that the interpretor incorrectly reports errors or
.\"O segfaults, please report the breaking script to me.
インタープリタがおかしなエラーを報告したり、
セグメンテーションフォールトを起こした場合は、
その原因となったスクリプトを私に送ってほしい。
.PP
.\"O The scripting language itself is a subset of the full C
.\"O programming language. For example, the following is a valid
.\"O script:
このスクリプト言語自体は、C プログラミング言語のサブセットである。
例えば以下のようなものは正しいスクリプトである。
.PP
.nf
.\"O /* PATH is the full name of the file including
.\"O    its path, DIR is the directory, excluding
.\"O    the trailing slash (/), CWD is the current
.\"O    directory, and depth() returns the number
.\"O    of forward slashes (/) less one. */
/* PATH はファイルのフルパス名で、DIR は末尾に
   スラッシュ (/) の無いディレクトリ、CWD は
   カレントワーキングディレクトリ、dpath() は
   フォワードスラッシュ (/) の個数-1 を返す。*/
if (depth (DIR) - depth (CWD) > 3) {
    printf ("%s: excluded\\n", PATH);
    return EXCLUDE;
} else
    return INCLUDE;
.fi
.PP
.\"O The scripting language does not support the assignment operator,
.\"O and hence does not support user defined variables.
このスクリプト言語は代入演算子をサポートしない。
したがってユーザ定義変数をサポートしない。
.PP
.\"O The following predefined macros are available. Note that the
.\"O expansion of the macros applies equally well to directories as to
.\"O files.
以下の定義済みマクロを利用できる。
マクロの展開は、ディレクトリにもファイルと等しく同じように適用される。
.TP
\fBFILE\fP
.\"O current file without its path
現在のファイル (パス無し)
.TP
\fBNAME\fP
.\"O file name without its path or extension or trailing dot (.)
パス・拡張子の無いファイル名。末尾にドット (.) は付かない。
.TP
\fBEXTENSION\fP
.\"O file extension without its leading dot (.)
ファイルの拡張子。先頭にドット (.) は付かない。
.TP
\fBDIR\fP
.\"O directory without file-name or trailing slash (/)
ファイル名の無いディレクトリ。末尾にスラッシュ (/) は付かない。
.TP
\fBPATH\fP
.\"O full file name with path
フルパスのファイル名
.TP
\fBCWD\fP
.\"O current working directory
カレントワーキングディレクトリ
.TP
\fBTIME\fP
.\"O current time in seconds
現在時刻 (秒単位)
.PP
.\"O All of the logical, arithmetic and bitwise C operators are
.\"O supported. These are \fB(\fP
C のすべての論理演算子・算術演算子・ビット演算子がサポートされている。
すなわち \fB(\fP
\fB)\fP
\fB>=\fP
\fB<=\fP 
\fB>\fP
\fB<\fP
\fB!=\fP
\fB==\fP
\fB&&\fP
\fB||\fP
\fB!\fP
\fB-\fP
\fB+\fP
\fB*\fP
\fB/\fP
\fB%\fP
\fB&\fP
.\"O \fB^\fP and have the same meanings and precedences as in C.
\fB^\fP で、これらは全て C のものと同じ意味を持つ。
.PP
.\"O The following further predefined macros are available. Each
.\"O returns an integer (type \fBlong int\fP in C). These are based on
.\"O a C \fBlstat\fP (or \fBstat\fP if \fB--follow-symlinks\fP is
.\"O used) on the file. See \fBstat\fP(2) for a detailed explanation.
さらに以下に示すマクロも利用できる。
各々は整数 (C での \fBlong int\fP 型) を返す。
これらはそのファイルに対する \fBlstat\fP
(または \fB--follow-symlinks\fP が用いられている場合は \fBstat\fP)
を基にしている。詳しい説明は
.BR stat (2)
を参照のこと。
.PP
.\"O .br
.\"O \fBstat.st_dev\fP - device
\fBstat.st_dev\fP - デバイス
.br
.\"O \fBstat.st_ino\fP - inode
\fBstat.st_ino\fP - i-ノード
.br
.\"O \fBstat.st_mode \fP - permissions
\fBstat.st_mode \fP - 許可属性 (permission)
.br
.\"O \fBstat.st_nlink\fP - number of hard links
\fBstat.st_nlink\fP - ハードリンクの数
.br
.\"O \fBstat.st_uid\fP - user id of owner
\fBstat.st_uid\fP - 所有者のユーザ id
.br
.\"O \fBstat.st_gid\fP - group id of owner
\fBstat.st_gid\fP - 所有者のグループ id
.br
.\"O \fBstat.st_rdev \fP - device type
\fBstat.st_rdev \fP - デバイスタイプ
.br
.\"O \fBstat.st_size \fP - file size in bytes
\fBstat.st_size \fP - ファイルサイズ (バイト単位)
.br
.\"O \fBstat.st_blksize\fP - block-size for file-system I/O
\fBstat.st_blksize\fP - ファイルシステム I/O のブロックサイズ
.br
.\"O \fBstat.st_blocks\fP - number of blocks allocate
\fBstat.st_blocks\fP - アロケート済みのブロック数
.\"nakaon allocated の typo?
.br
.\"O \fBstat.st_atime\fP - time of last accessed in seconds
\fBstat.st_atime\fP - 最後にアクセスされた時刻 (秒単位)
.br
.\"O \fBstat.st_mtime\fP - time of last modification in seconds
\fBstat.st_mtime\fP - 最後に変更された時刻 (行単位)
.br
.\"O \fBstat.st_ctime\fP - time of creation
\fBstat.st_ctime\fP - 作成された時刻
.\"O .br
.PP
.\"O The following functions return boolean values:
以下の関数はブール値を返す。
.TP
\fBstrncmp\fP(\fIstring1\fP, \fIstring2\fP, \fIinteger\fP);
.\"O returns an integer less than, equal to, or greater than zero
.\"O if string1 is found, respectively, to be less than, to match,
.\"O or be greater than string2.
string1 が string2 より小さい場合は 0 以下の整数を、
マッチする場合は 0 を、
大きい場合は 0 以上の整数を返す。
.TP
\fBglob\fP(\fIglob\fP, \fIstring\fP);
.\"O returns zero if \fIstring\fP matches glob expression \fIglob\fP.
.\"O Try to use only one glob expression in your code for
.\"O efficiency of the underlying implementation.
.I string
が glob 表現
.I glob
にマッチする場合は 0 を返す。
下層の実装における効率を良くしたい場合は、
あなたが書くコードでの glob 表現をひとつに限ってみること。
.TP
\fBregexp\fP(\fIregexp\fP, \fIstring\fP);
.\"O returns zero if \fIstring\fP matches regular expression
.\"O \fIregexp\fP. Try to use only one regular expression in your code
.\"O for efficiency of the underlying implementation.
.I string
が正規表現
.I regexp
にマッチする場合は 0 を返す。
下層の実装における効率を良くしたい場合は、
あなたが書くコードでの正規表現をひとつに限ってみること。
.TP
\fBstrstr\fP(\fIstring1\fP, \fIstring2\fP);
.\"O returns the first occurance of \fIstring2\fP in \fIstring1\fP
.\"O up to the length of \fIstring1\fP, or zero if it did not occur.
.I string1
の長さの範囲に最初に現れる
.I string2
の位置を返す。現れない場合は 0 を返す。
.PP
.\"O The following functions also return a boolean value and are
.\"O analogous to the corresponding macros explained in \fBstat\fP(2).
.\"O They return non-zero if the specified condition is true.
以下の関数もブール値を返す。これらは
.BR stat (2)
で説明されているマクロに対応している。
これらは、指定された条件が真の場合に非ゼロの値を返す。
.PP
.\"O .br
.\"O \fBS_ISLNK\fP(\fIinteger\fP); - file is a sym-link
\fBS_ISLNK\fP(\fIinteger\fP); - ファイルはシンボリックリンク
.br
.\"O \fBS_ISREG\fP(\fIinteger\fP); - file is a regular file
\fBS_ISREG\fP(\fIinteger\fP); - ファイルは通常のファイル
.br
.\"O \fBS_ISDIR\fP(\fIinteger\fP); - file is a directory
\fBS_ISDIR\fP(\fIinteger\fP); - ファイルはディレクトリ
.br
.\"O \fBS_ISCHR\fP(\fIinteger\fP); - file is a character device
\fBS_ISCHR\fP(\fIinteger\fP); - ファイルはキャラクタデバイス
.br
.\"O \fBS_ISBLK\fP(\fIinteger\fP); - file is a block device
\fBS_ISBLK\fP(\fIinteger\fP); - ファイルはブロックデバイス
.br
.\"O \fBS_ISFIFO\fP(\fIinteger\fP); - file is an fifo
\fBS_ISFIFO\fP(\fIinteger\fP); - ファイルは fifo
.br
.\"O \fBS_ISSOCK\fP(\fIinteger\fP); - file is a socket
\fBS_ISSOCK\fP(\fIinteger\fP); - ファイルはソケット
.PP
.\"O The following functions manipulate strings:
以下の関数は文字列を操作する。
.TP
\fBstrcat\fP(\fIstring1\fP, \fIstring2\fP);
.\"O returns the concatenation of \fIstring1\fP with \fIstring2\fP. Note that
.\"O the \fB+\fP operator also concatenates strings.
.I string1
に
.I string2
を連結して返す。
.B +
演算子も文字列を連結することに注意。
.TP
\fBdepth\fP(\fIstring\fP);
.\"O returns one less than the number of forward slashes (/) in
.\"O \fIstring\fP.
.I string
に現れるフォワードスラッシュ (/) の個数から 1 を引いたものを返す。
.TP
\fBprintf\fP(\fIformat\fP, ...);
.\"O behaves like \fBprintf\fP(3) with an important exception: only
.\"O \fBlong int\fP format specifiers should be used. The behaviour
.\"O of anything that results in conversion of other than a \fBlong
.\"O int\fP is undefined. For example, use \fB"%ld"\fP instead of
.\"O \fB"%d"\fP. This function prints to stdout.
.BR printf (3)
のように動作する。ただし重要な例外がある:
.B long int
のフォーマット指定以外は使ってはならない。
これ以外の指定を行なったときの変換結果は未定義である。
例えば、\fB"%d"\fP ではなく \fB"%ld"\fP を用いること。
結果は標準出力に表示される。
.PP
.\"O The following functions do system calls:
以下の関数はシステムコールを実行する。
.TP
\fBsystem\fP(\fIcommand\fP);
.\"O executes \fB/bin/sh -c\fP \fIcommand\fP, but unlike the C version,
.\"O it returns the exit code of the command. I.e. it executes a single
.\"O line of shell script, \fIcommand\fP.
.B /bin/sh -c
.I command
を実行する。しかし C 言語のものとは異なり、
コマンドの終了コードを返す。
つまり、一行だけのシェルスクリプト
.I command
を実行する。
.TP
\fBexec\fP(\fIargv0\fP, \fIargv1\fP, ...);
.\"O executes process \fIargv0\fP with arguments \fIargv1...\fP.
.\"O \fIargv0\fP must be a full path name. This is faster than \fBsystem\fP
.\"O because it need not envoke \fBsh\fP.
プロセス
.I argv0
を引数
.I argv1...
で実行する。
.I argv0
フルパスで指定しなければならない。
これは \fBsh\fP を経由しないので \fBsystem\fP より速い。
.TP
\fBpopen\fP([\fIstring\fP, ] \fIshell_command\fP);
.\"O like system, but returns the output of \fIshell_command\fP as a string.
.\"O If \fIstring\fP is given, this writes string into the standard input
.\"O of \fIshell_command\fP and return zero on success.
.B system
と似ているが、
.I shell_command
の出力を文字列として返す。
.I string
が与えられている場合には、その文字列を
.I shell_command
の標準入力に与え、成功したら 0 を返す。
.PP
.\"O The following further integer constants are available and are
.\"O analogous to the macros defined in stat.h and explained in
.\"O \fBstat\fP(2).
以下の整数定数も利用可能で、stat.h で定義されているマクロ
(説明は
.BR stat (2)
にある) に対応する。
.PP
\fBS_IFMT S_IFSOCK S_IFLNK S_IFREG S_IFBLK S_IFDIR S_IFCHR S_IFIFO
S_ISUID S_ISGID S_ISVTX S_IRWXU S_IRUSR S_IWUSR S_IXUSR S_IRWXG
S_IRGRP S_IWGRP S_IXGRP S_IRWXO S_IROTH S_IWOTH S_IXOTH\fP
.PP
.\"O One of the the following constants should be returned using the
.\"O \fBreturn\fP keyword, and imply to the caller as follows. If
.\"O nothing is returned, the return value is assumed to be
.\"O \fBUNKNOWN\fP.
以下の定数のひとつを
.B return
文を用いて返し、呼出し元に意図を伝える必要がある。
何も返さない場合は、返り値は
.B UNKNOWN
であるとみなされる。
.TP
\fBUNKNOWN\fP
.\"O didn't know what to do, continue with other \fB--exclude-\fP options
どうすべきか分からない。引き続き他の
.B --exclude-
タイプのオプションを実行する。
.TP
\fBINCLUDE\fP
.\"O include the file
そのファイルを処理に含める。
.TP
\fBIGNORE\fP
.\"O do nothing with the file regardless of its existence or
.\"O non-existence in the mirror directory
そのファイルが mirror ディレクトリにあろうと無かろうと、
何も行なわない。
.TP
\fBEXCLUDE\fP
.\"O consider the file to be non-existent in the control directory and
.\"O hence must be removed from the mirror directory (this does not
.\"O override the option \fB--keep-files\fP)
そのファイルが control ディレクトリに存在しないものとみなす。
よって mirror ディレクトリからは削除される
(これは
.B --keep-files
オプションよりも優先される)。
.PP
.\"O The following perform flow control analogous to C:
以下は C のようなフロー制御を行なう。
.PP
.\"O The \fBif\fP clause causes \fIstatement1\fP, \fIstatement2\fP,
.\"O etc. to be executed if \fIinteger\fP is true (i.e. non-zero), or
.\"O otherwise causes \fIstatement1\fP, \fIstatement2\fP, etc. to be
.\"O executed. The \fBelse\fP {...} part is optional.
以下の
.B if
文は
.I integer
が真 (つまり非ゼロ)
ならば
.IR statement1 ,
.I statement2
などを実行し、
それ以外の場合は
.IR statementA ,
.I statementB
などを実行する。
.\"nakano 原文 1,2 は typo。
.B else
{...} の部分は省略可能である。
.PP
.nf
    \fBif\fP (\fIinteger\fP) {
        \fIstatement1\fP;
        \fIstatement2\fP;
        \.
        \.
        \.
    } \fBelse\fP {
        \fIstatementA\fP;
        \fIstatementB\fP;
        \.
        \.
        \.
    }
.fi
.PP
.\"O The \fBreturn\fP clause gives a value back to \fBmirrordir\fP and
.\"O causes the script to exit:
.B return
文は
.B mirrordir
に値を返し、スクリプトを終了させる。
.PP
.nf
    \fBreturn\fP \fIexpression\fP;
.fi
.PP
.\"O The \fBexit\fP function cause \fBmirrordir\fP to exit with the
.\"O specified exit code.
.B exit
関数は、
.B mirrordir
を指定した終了コードで終了させる。
.PP
.nf
    \fBexit\fP(\fIinteger\fP);
.fi
.PP
.\"O C scripts would typically be used to exclude types of files. Note
.\"O that this is an excessive implementation of a scripting language,
.\"O and all the features are not meant for general use. A typical
.\"O script will, for example, do nothing more than cause device files
.\"O to be excluded:
通常 C スクリプトは、特定のファイルを除外するために用いる。
これはスクリプト言語の実装としてはやりすぎで、
機能のすべてを一般用途向けに書いたわけではない。
典型的なスクリプトは、例えばデバイスファイルを除外する、
という程度のことに留まるだろう。
.PP
.nf
if (S_ISSOCK(stat.st_mode) || S_ISFIFO(stat.st_mode)
         || S_ISBLK(stat.st_mode) || S_ISCHR(stat.st_mode)) {
    return EXCLUDE;
} else
    return INCLUDE;
.fi
.PP
.\"O C scripts can also be used to search for files with the
.\"O \fB--recurs-mode\fP option (same as the \fBrecursdir\fP
.\"O command):
.B --recurs-mode
オプションとともに用いれば、
C スクリプトはファイルを検索するためにも利用できる
.RB ( recursdir
コマンドと同じ):
.PP
.nf
.\"O /* removes all core files */
.\"O /* This example has been moved to the \fBEXAMPLES\fP section. */
/* core ファイルを全て削除する */
/* この例は \fB例\fP セクションに移動した。 */
.fi
.RE
.PP
.TP
\fB--exclude-from\fP \fIfile\fP
.\"O Exclude from a list of paths listed in the file \fIfile\fP. Empty lines and
.\"O comment lines (with a # as the first character of the line) are ignored.
.\"O This list of files is sorted and binary searched, so if you have lots of
.\"O filenames to exclude, it is best to include them here for performance.
.\"O This option can be specified multiple times with different files. \fBBUG\fP:
.\"O the last path in \fIfile\fP must end with a newline.
ファイル
.I file
に書かれているリストに含まれるパスを除外する。
空行とコメント行 (行頭の文字が # の行) は無視される。
このファイルのリストはソートされ二分木探索されるので、
たくさんのファイル名を除外したい場合には、
ここにそれらのファイルを書く方が性能は良くなる。
このオプションは複数指定でき、複数個のファイルを指定できる。
.BR バグ:
.I file
の最後に与えたパスは、改行で終らなければならない。
.TP
\fB--backup-extension\fP \fIlevel\fP
.\"O Create backups of files before deleting or replacing them.
.\"O \fIextension\fP is a C style format string e.g. .ORIG.%d (be careful of
.\"O shell substitutions with the %). \fIlevel\fP is the highest number of
.\"O revision to keep. \fIextension\fP is appended to the filename, the
.\"O oldest file having the highest number.
ファイルを削除したり置き換えたりする前に、
それらのファイルのバックアップを作る。
.I extension
は C 形式のフォーマット文字列で、例えば .ORIG.%d
(% へのシェル代入に注意) のようにする。
.I level
は保存しておくリビジョンの最大数。
.I extension
がファイル名に追加され、古いファイルほど大きな番号を持つ。
.TP
\fB--backup-outdate \fIsec\fP
.\"O Delete backup files older than \fIsec\fP seconds.
.I sec
秒よりも古いバックアップファイルを削除する。
.TP
\fB--nice\fP \fInum\fP 
.\"O Be nice to other processes by sleeping occasionally. \fInum\fP is a
.\"O small integer.  --nice causes the process to sleep for as long as it
.\"O is active, times a factor of \fInum\fP. Hence a value of 1 will (very
.\"O roughly) double the time it takes to do a copy, and a value of 3 will
.\"O quadruple the time. This can be used where one would like timed
.\"O backups to place less load on the CPU. --nice may not be available
.\"O on your system.
時々スリープして、他のプロセスに対して行儀良く振る舞う。
--nice を指定すると、プロセスはアクティブであった時間の
.I num
倍の時間スリープする。したがって 1 を指定すると
(非常におおざっぱに言えば) コピーに要する時間は 2 倍になり、
3 を指定すれば 4 倍になる。
これは定期的なバックアップを、
CPU 負荷を小さくして行ないたい場合に利用するとよい。
システムによっては --nice は利用できないかもしれない。
.TP
\fB--no-chmod\fP
.\"O Normally the permissions of files are set. If you have restricted access
.\"O and cannot change permissions, than this can be used to disable setting
.\"O of permissions.
.\"nakano than は then の typo
通常はファイルの許可属性設定が行なわれる。
アクセス権限が制限されていて、許可属性を変更できない場合は、
このオプションを指定すれば許可属性設定を無効にできる。
.TP
\fB--no-chown\fP
.\"O Normally the ownerships of files are set. If you have restricted access
.\"O and cannot change ownerships, than this can be used to disable setting
.\"O of ownerships.
.\"nakano than は then の typo
通常はファイルの所有権設定が行なわれる。
アクセス権限が制限されていて、所有者を変更できない場合は、
このオプションを指定すれば所有権設定を無効にできる。
.TP
\fB--mtime-threshold\fP \fIsec\fP
.\"O This is the deviation in mtime that is allowed for a file before it is
.\"O overwritten. If you have mirrored an ftp site, the mtimes are accurate
.\"O to within a minute only, thereafter an nfs mirror will cause every file
.\"O to be copied: you can then use --mtime-threshold 60 to fix this.
mtime の違いがこの値よりも小さい場合には、
ファイルは上書きされない。ftp サイトをミラーした場合、
そのミラー中の mtime は分の単位の精度しか持たないので、
これを nfs ミラーしようとするとすべてのファイルがコピーされる。
これを直すには --mtime-threshold 60 を用いればよい。
.TP
\fB--time-offset\fP [[\fI+\fP]|\fI-\fP][\fIH\fP]\fIH\fP[\fI:MM\fP]
.\"O This sets the time offset of any vfs (i.e. non-local) directory. For
.\"O instance, I am 8 hours east of New York, so when I mirror from New York,
.\"O I use \fB--time-offset -08:00\fP.
vfs な (つまり ローカルでない) ディレクトリの時刻オフセットを設定する。
例えば私は New York より 8 時間東にいるので、
New York からミラーする場合には
.B --time-offset -8:00
を使っている。
.TP
\fB--test-only, --dry-run\fP
.\"O Do not make any changes. If used with --verbose, this will show what
.\"O changes would be made. This is an effective way of comparing directory
.\"O trees. \fIThis is untested - i.e. I don't know whether this option\fP
.\"O \fBactually\fP \fImakes any changes or not!\fP
実際には変更を行なわない。
--verbose と共に用いると、
どのような変更がなされるかを表示できる。
これはディレクトリ間の比較をするのにも効果的な方法である。
\fIこれはテストされていない。
すなわち、このオプションが\fB本当に\fI変更をしないかどうかは、
私は保証できない。\fP
.TP
\fB--skip-symlinks\fP
.\"O Symlinks are treated as though they were not read - hence if they are
.\"O found in the mirror directory then they are deleted.
シンボリックリンクは、読み込まれなかったかのように扱われる。
よってそれらが mirror ディレクトリにあると、削除される。
.TP
\fB--keep-files\fP
.\"O Don't remove files from \fImirror\fP, even if they don't exist in
.\"O \fIcontrol\fP. This makes \fBmirrordir\fP somewhat like \fBcp\fP(1).
ファイルが
.I control
に無い場合でも、そのファイルを
.I mirror
から削除しない。こうすると
.B mirrordir
はある意味
.BR cp (1)
のようになる。
.TP
\fB--no-hard-links\fP
.\"O \fBmirrordir\fP mirrors hard-links properly unless this option is set, in
.\"O which case hard-links are copied as regular files.
このオプションが指定されない限り、
.B mirrordir
はハードリンク属性を正しくミラーする。
指定されると、ハードリンクは通常ファイルのようにコピーされる。
.TP
\fB--follow-symlinks\fP
.\"O \fBmirrordir\fP mirrors symlinks properly unless this option is set, in
.\"O which case symlinks are copied as regular files. Useful for mirroring
.\"O the Debian tree. Note that this follows symlinks in both the control and
.\"O mirror directories, hence if symlinks already exist in the mirror
.\"O directory, these will be left as symlinks. Note that
.\"O \fB--follow-symlinks\fP implies \fB--no-hard-links\fP also.
このオプションが指定されなければ、
.B mirrordir
はシンボリックリンクを適切にミラーする。
指定されると、シンボリックリンクは通常ファイルとしてコピーされる。
Debian ツリーをミラーするときに便利である。
注意してほしいのは、
シンボリックリンクは control と mirror の両方で解決される、
という点である。
依ってシンボリックリンクが mirror ディレクトリに存在していると、
それらはそのままシンボリックリンクのまま残る。
.B --follow-symlinks
を指定すると、暗黙のうちに
.B --no-hard-links
も指定したことになる。
.TP
\fB--strict-locking\fP
.\"O Create shared read locks on files as they are read. This prevents
.\"O clashes especially when copying files from the mail directory - mail
.\"O programs will be trying to write to those files at the same time as
.\"O \fBmirrordir\fP is trying to to read from them. This option has
.\"O no effect with virtual file systems.
ファイルを読み込むとき、共有読み込みのロックを作成する。
これはファイルコピーの事故を予防する。
特にメールディレクトリに対して有効である
(メールプログラムは
.B mirrordir
がファイルを読み込もうとしているときに、
同時にそれらに書き込みを行なおうとするかもしれない)。
このオプションは仮想ファイルシステムに対しては効力を持たない。
.TP
.BR "--max-bytes " [[ \fInum\fP [  k | M | G ]] "" | \fInum\fP ]
.\"O Maximum number of bytes to write before giving the message, `filled up
.\"O all blocks - first file/dir not mirrored: \fIpath\fP', which is written
.\"O to stdout. The remaining files are deleted from \fImirror\fP, but in
.\"O their listed order - hence it is possible that the archive will grow
.\"O greater than \fInum\fP while \fBmirrordir\fP is still running. You
.\"O should make allowance for this eventuality by making \fInum\fP smaller
.\"O than the maximum available space. Also note that some filesystems will
.\"O give an error message `No space left on device' before the device is
.\"O completely full. You can restart \fBmirrordir\fP with the option
.\"O \fB--starting-file\fP \fIpath\fP and hence continue with this file on
.\"O another volume. This enables \fBmirrordir\fP to back up across different
.\"O devices. \fInum\fP can be appended by \fBk\fP, \fBM\fP or
.\"O \fBG\fP (case insensitive) to specify kilobytes, megabytes or gigabytes
.\"O respectively. If any single file is greater than this number, then an
.\"O error message will be given. See also \fB--block-size\fP.
このバイト数を越えると `filled up all blocks - first file/dir not mirrored:
\fIpath\fP' というメッセージが標準出力に表示される。
残りのファイルは \fImirror\fP から削除されるが、
これはリストされた順序で行なわれる。よって
.B mirrordir
が走り続けていると、アーカイブの大きさが \fInum\fP を越えることがある。
この偶発分のゆとりをとって、
\fInum\fP は利用できるスペースより小さくしておくこと。
またファイルシステムによっては、
完全にいっぱいになる前に `No space left on device'
というメッセージを出すことがある。
.B mirrordir
には \fB--starting-file\fP \fIpath\fP オプションがあり、
これを用いると別のデバイスで作業を継続できる。
こうすれば、複数のデバイスに対して
.B mirrordir
を用いたバックアップができる。
.I num
には
.BR k ,
.BR M ,
.B G
(大文字小文字を区別する) のいずれかを後置でき、
それぞれキロバイト、メガバイト、ギガバイトを指定する。
どれかひとつのファイルがこの数値よりも大きいと、
エラーメッセージが表示される。
.B --block-size
も参照のこと。
.TP
.BR "--password " \fIpassword\fP
.\"O Specify the password for FTP and mc:// connections. The anonymous password
.\"O defaults to your login name @ your local machine name. You will be
.\"O prompted for other login passwords. As usual, you are warned that
.\"O including passwords in scripts is a security risk. It is much better
.\"O to put the password in your
.\"O .B "~/.netrc"
.\"O file and then not use the \fB--no-netrc\fP option; see
.\"O .B "man ftp"
.\"O for details.
FTP 接続・mc:// 接続に対するパスワードを設定する。
匿名接続の場合のパスワードは、
デフォルトで「ログイン名@ローカルマシン名」になっている。
それ以外のログインパスワードは、プロンプトが出て尋ねられる。
いつもの警告だが、
パスワードをスクリプトに含めるのはセキュリティ上のリスクがある。
パスワードは
.B "~/.netrc"
ファイルに入れ、
.B --no-netrc
オプションを指定しないかたちの方がずっと良い。
詳細は
.B man ftp
を見よ。
.TP
\fB--password-exact\fP \fIpassword\fP]
.\"O Don't prepend a \fB-\fP to the anonymous password. With ftp
.\"O anonymous passwords, a \fB-\fP is usually prepended to the
.\"O password string. I don't know why the Midnight Commander vfs did
.\"O this, but one user had problems with it, hence this option is
.\"O given to send the password exactly as specified by
.\"O \fIpassword\fP.
匿名パスワードの前に \fB-\fP を前置しない。
ftp の匿名パスワードでは、通常パスワード文字列の前に
\fB-\fP が置かれる。私は
Midnight Commander vfs がなぜこのようにしていたのか知らないが、
あるユーザがこの問題に突き当たったので、
このオプションを設け、パスワードを
.I password
に指定した通りに送れるようにしている。
.TP
\fB--test-login\fP
.\"O When using \fB--login-mode\fP or \fBpslogin\fP, you may want to
.\"O test access non-interactively (eg. in a shell script). To do
.\"O this you can run \fBpslogin\fP with this option and then check
.\"O its exit status. \fBsecure-mcserv\fP uses this to verify if the
.\"O user can login on the password server.
.B --login-mode
や
.B pslogin
を用いるとき、非対話的なアクセスをテストしてみたいことがあるだろう
(例えばシェルスクリプトで用いたいときなど)。
これを行なうには、
.B pslogin
をこのオプションとともに実行し、終了ステータスを見ればよい。
.B secure-mcserv
は、ユーザがパスワードサーバにログインできるかどうかを調べるために、
これを用いている。
.TP
\fB--no-warn-first-login\fP
.\"O The first time you try a secure connection to a machine, no
.\"O public key exists on the local machine. There is hence no
.\"O security against a man-in-the-middle attack. A warning to this
.\"O effect is printed and the user is prompted if they want to
.\"O continue. This option disables this warning and goes ahead
.\"O regardless.
あるマシンに対して最初に安全な接続を試みた時は、
公開鍵がローカルマシンに存在しない。
よって「間に人」攻撃に対して無防備である。
この内容に関する警告が表示され、
ユーザにプロンプトが出され、継続したいかどうか尋ねられる。
このオプションはこの警告を出さないようにし、
一切を無視して先に進む。
.TP
\fB--read-password-from-stdin\fP
.\"O Instead of specifying the password on the command line, you can
.\"O write it into the command via stdin. This is not the same as
.\"O typing the invisible password as one normally does, because it
.\"O can be used even if there is no terminal. This is useful
.\"O for usage within other programs using, say \fBpopen\fP(3).
.\"O \fBsecure-mcserv\fP uses this to verify if the user can login
.\"O on the password server.
パスワードをコマンドラインから指定するのではなく、
標準入力から与える。
これは見えないパスワードをタイプ入力するのと同じではない。
こちらは端末が無い場合にでも使える。
これは他のプログラムから、例えば
.BR popen (3)
などを用いて利用する場合に都合が良い。
.B secure-mcserv
は、ユーザがパスワードサーバにログインできるかどうかを調べるために、
これを用いている。
.TP
.BR "--netrc"
.\"O Scan the \fB~/.netrc\fP file. By default, this option is on.
.B ~/.netrc
をスキャンする。デフォルトでこのオプションは on になっている。
.TP
.BR "--no-netrc"
.\"O Turn off reading of \fB~/.netrc\fP file.
.B ~/.netrc
ファイルの読み込みを行なわない。
.TP
\fB--proxy-host\fP \fIhost\fP
.\"O Set the proxy for ftp downloads. Don't know how or if this works. Consult the
.\"O \fBmc\fP(1) man page for info in proxy support.
ftp ダウンロードのプロキシを設定する。
これがどのように動作するのか、
あるいは実際に動作するかどうかは私にはわからない。
プロキシのサポートについては
.BR mc (1)
にあたってほしい。
.TP
.BR "--secure"
.\"O (\fIThis feature is BETA\fP) I have implemented a secure socket layer
.\"O for \fBmirrordir\fP. It is enabled with this option and applies to
.\"O connections to \fBsecure-mcserv\fP (i.e. using \fBmc://\fP type URLs).
.\"O The secure socket library consists of \fBlibdiffie.a\fP and a
.\"O header file \fBdiffie-socket.h\fP. If you include \fBdiffie-socket.h\fP
.\"O after you include \fBsys/socket.h\fP you can recompile the resulting
.\"O program with all normal sockets turned into secure sockets. (This
.\"O applies to \fIany\fP program that uses Unix socket calls, but is
.\"O untested). The first service supporting this is \fBsecure-mcserv\fP
.\"O which compiles and installs by default. Hence you can use the
.\"O \fBmc://\fP file system with the \fB--secure\fP option, provided the
.\"O remote host is running \fBsecure-mcserv\fP (try \fBsecure-mcserv -h\fP
.\"O to for help). \fB--secure\fP uses a stream cipher (much more secure and
.\"O faster than block ciphers like DES) with discrete logarithm key
.\"O exchanges with public key server authentication (Diffie-Hellman and
.\"O p-NEW schemes). For the full details, see the file \fBdiffie-socket.h\fP
.\"O in the source distribution. The default key size is 512 bits. Note that
.\"O if you are using \fIgcc\fP you should compile \fBmirrordir\fP with the
.\"O options \fB-O3 -fomit-frame-pointer -s -Wall\fP to speed key generation.
(\fIこの機能はβ段階である\fP) 私は
.B mirrordir
用に安全なソケット層を実装した。これはこのオプションで有効となり、
.B secure-mcserv
の接続 (すなわち \fBmc://\fP 形式の URL) に適用される。
安全なソケットのライブラリは
.B libdiffie.a
とヘッダファイル
.B diffie-socket.h
からなる。
.B sys/socket.h
の後に
.B diffie-socket.h
をインクルードし、そのプログラムを際コンパイルすれば、
通常のソケットが全て安全なソケットになる
(これは Unix のソケットコールを用いる、あらゆるプログラムに当てはまるが、
しかしテストはされていない)。
これをサポートする最初のサービスは
.B secure-mcserv
で、デフォルトでコンパイルされ、インストールされる。
よって、リモートのホストも
.B secure-mcserv
を走らせていれば、
\fBmc://\fP ファイルシステムは
.B --secure
オプションで利用できる (\fBsecure-mcserv -h\fP とすればヘルプが表示される)。
.B --secure
は、DES などのブロック cipher よりずっと安全で高速なストリーム cipher を、
公開鍵サーバ認証 (Diffie-Hellman 及び p-NEW スキーム) の
離散対数鍵交換で用いている。
.\"nakano この辺おかしいかもしれない。
詳細はソース配布の
.B diffie-socket.h
を見てほしい。デフォルトの鍵のサイズは 512 ビットである。
.I gcc
を用いている場合は、
.B mirrordir
のコンパイル時に
.B -O3 -fomit-frame-pointer -s -Wall
オプションをつけると、鍵生成が高速化される。
.TP
.BR "--key-size " \fIbits\fP
.\"O The default key size is 512 bits. Sizes require primes to be
.\"O generated and compiled into the file field.c, hence only those
.\"O primes listed in field.c are supported, which are at the moment
.\"O 512, 768, 1024 and 1536. 768 is the recommended value for medium
.\"O security if you have slow computer. Otherwise 1536 is not an
.\"O unreasonably paranoid size for long term security. 512 can be used
.\"O if you are not worried about large corporations, well connected
.\"O hackers, or governments snooping your connections. Note that the
.\"O the stream cipher has a length of \fBbits\fP/2, which means that
.\"O you have more chance of being hit by a meteor while cashing in at
.\"O the state lottery, than cracking it. Be aware that a person can sniff
.\"O your connection and then keep the output for as long as it takes to
.\"O break it. In twenty years time a 1536 bit key will be considered
.\"O small. Note also that the discrete logarithm problem (used here)
.\"O is considered to be more difficult to solve than the factorisation
.\"O problem, hence the key is effectively a little larger than for RSA.
.\"O This is all my (rather uneducated) opinion.
デフォルトの鍵サイズは 512 ビットである。
サイズを変更するには素数を生成して fileld.c に書き込まなければならないので、
field.c にリストされているサイズだけがサポートされており、
.\"nakano primes はミスだろう。
現時点ではこれは 512, 768, 1024, 1536 である。
遅い計算機を用いている場合には、中程度のセキュリティとなる 768 を奨める。
それ以外なら、長い目で見れば 1536 も非合理で偏執的な値、というわけでもない。
巨大企業・良くつないでくるハッカー・政府などがあなたの接続を
盗聴している心配がなければ、512 でも構わないだろう。
ストリーム cipher は \fBbits\fP/2 の長さを持つので、クラックされる確率は、
宝くじを換金しているあいだに隕石にぶち当たる確率よりは低い。
ただしある人間が接続を盗聴し、長い間出力をとり続ければ、
破ることは不可能ではない。
20 年も経てば、1536 ビットの鍵も小さいと考えられるかもしれない。
また (ここで用いられている) 離散対数問題は、
素因数分解よりも解くのが難しいと考えられているので、
鍵は RSA よりも実効的にやや大きいことになる。
これは私の (どちらかというと無学な) 意見である。
.TP
\fB--download-scripts\fP
.\"O \fBMirrordir\fP comes in two versions, an \fIInternational\fP version and
.\"O a \fIUS\fP version (see \fB--version\fP). The \fIUS\fP version contains
.\"O no encryption code whatsoever. Instead it downloads the needed
.\"O algorithms from \fBencrypt.obsidian.co.za\fP (in \fBSouth Africa\fP).
.\"O These are written in a fast, native, C-style interpreted language. There
.\"O are four scripts: one for the server Diffie-Hellman key exchange, one
.\"O for the client Diffie-Hellman key exchange, one for initialising the
.\"O stream cipher and one for actually performing the encryption using the
.\"O stream cipher. \fBMirrordir\fP automatically downloads these scripts
.\"O when you try to use the security features. The option
.\"O \fB--download-scripts\fP however can be used to force a download at any
.\"O time. The \fIInternational\fP version contains compiled-in versions of
.\"O the stream cipher, hence only two scripts are used, which need never be
.\"O downloaded since they come with the distribution. No speed penalty is
.\"O incurred by having the Diffie-Hellman exchanges in scripts, however, you
.\"O \fIwill\fP notice a significant speed different when using the
.\"O encryption scripts compared to compiled-in encryption.
.B mirrordir
には 2 つの版、\fIInternational\fP 版と \fIUS\fP 版がある
.RB ( --version
を見よ)。\fIUS\fP 版は暗号化に類するコードを一切含んでいない。
その代わり、必要なアルゴリズムを (\fB南アフリカ\fP にある)
.B encrypt.obsidian.co.za
からダウンロードするようになっている。
これらは高速かつネイティブな、C 形式のインタープリタ言語で書かれている。
これらは 4 つのスクリプトからなる。それぞれ、
Diffie-Hellman 鍵交換サーバ、Diffie-Hellman 鍵交換クライアント、
ストリーム cipher の初期化、実際にストリーム cipher を用いた暗号化、
のためのものである。
.B mirrordir
は、あなたがセキュリティ機能を用いようとすると、
自動的にこれらのスクリプトをダウンロードする。しかしこの
.B --download-script
オプションを用いると、いつでもダウンロードを実行できる。
\fIInternational\fP 版にはストリーム cipher が組み込まれていて、
2 つのスクリプトだけを用いるが、
これらは配布に含まれているのでダウンロードの必要はない。
Diffie-Hellman 交換をスクリプトで用いても、速度的な劣化は生じない。
しかし暗号化に関しては、
スクリプトと組み込みの間の違いが結構大きいかもしれない。
.TP
\fB--version\fP
.\"O Prints out the version number as well as whether this is an
.\"O \fIInternational\fP or \fIUS\fP version of \fBmirrordir\fP. See
.\"O \fB--download-scripts\fP.
バージョン番号と、
この
.B mirrordir
が
.I International
版か
.I US
版かを表示する。
.B --download-scripts
を見よ。
.TP
\fB-z\fP, \fB--gzip\fP
.\"O Enable compression for \fBmc://\fP connections. This actually envokes a
.\"O compressed socket layer at a lower level than the encryption.
.\"O Compression uses the \fBlibz\fP library of \fBgzip\fP(1). The degree of
.\"O compression is dynamically set to minimise transfer time. It will drop
.\"O to no compression for fast ethernet connections, and will go to maximum
.\"O compression for slow modem connections. The algorithm adjusts the
.\"O compression level so that the time for a TCP write call is between 2%
.\"O and 5% of the time for the same amount of data to be \fIdeflated\fP
.\"O (i.e. compressed).
.B mc://
接続で圧縮を有効にする。
実際には符号化よりも低いレベルにある圧縮ソケット層を呼出す。
圧縮は
.BR gzip (1)
の
.B libz
ライブラリを用いて行なう。圧縮の程度は、
転送時間を最小化するように動的に設定される。
高速なイーサネット接続なら無圧縮にまで低くなりうるし、
モデム経由の遅い接続では最大圧縮にまで高くなる。
このアルゴリズムは、TCP の write コールが、
同量のデータを
.I deflate
する (つまり圧縮する) 時間の 2〜5 % の範囲になるように、
圧縮レベルを調整する。
.TP
\fB--gzip-backups\fP
.\"O Backups are usually just a copy of the file. With this option they are
.\"O compressed and a \fB.gz\fP is added to the default extension. Note that
.\"O if you specify your own extension using \fB--backup-extension\fP, then
.\"O it must have a \fB.gz\fP at the end for compression to work.
バックアップは通常は単にファイルのコピーである。
このオプションを指定すると各ファイルは圧縮され、
.B .gz
がデフォルトの拡張子として付加される。
バックアップの拡張として、あなたが自分で
.B --backup-extension
の指定を行なった場合は、その末尾が
.B .gz
で終らないと、比較が正しく動作しない。
.TP
\fB--case-insensitive\fP, \fB--for-Robert-Seese\fP
.\"O Ignores case in comparison of filenames and linknames. This option is
.\"O useful when interacting with certain brain-dead operating systems. I am
.\"O not sure if this option behaves correctly under all circumstances.
ファイル名やリンク名の比較に、大文字小文字の違いを無視する。
これは、特定の頭の悪い OS と通信するときに便利だろう。
このオプションがすべての状況で正しく動作するかどうかは、あまり自信が無い。
.TP
\fB--to-lower\fP
.TP
\fB--to-upper\fP
.\"O Convert all new filenames to upper or lower case. When used with
.\"O \fB--case-insensitive\fP, it will apply only when creating new files.
.\"O When used without \fB--case-insensitive\fP, all files, existing or not,
.\"O will be converted to uppercase in the inefficient way of deleting the
.\"O old file and then copying the new file. This option is useful when
.\"O interacting with certain brain-dead operating systems. I am not sure
.\"O if this options behave correctly under all circumstances.
すべての新しいファイル名を大文字または小文字に変換する。
.B --case-insensitive
と共に用いると、新しいファイルを作成する場合にのみ適用される。
.B --case-insensitive
なしで指定すると、既存かどうかに関らす、
すべてのファイルが大文字・小文字に変換される。
このときの方法は非効率的なもので、
古いファイルを一度消してから、新しいファイルを再度コピーする。
これは、特定の頭の悪い OS と通信するときに便利だろう。
このオプションがすべての状況で正しく動作するかどうかは、あまり自信が無い。
.TP
\fB--no-use-passive-connections\fP
.\"O If you get an error message \fBcould not setup passive mode\fP it is likely
.\"O because you need to enable this option. I don't really understand what `passive'
.\"O means, so don't ask me.
.B could not setup passive mode
というエラーメッセージを受け取った場合、
このオプションを有効にする必要があると考えられる。
私は `passive' の意味するところを完全には理解していないので、
私には聞かないでほしい。
.TP
\fB--tar-file\fP \fIfilename\fP
.\"O This is to be used only with \fBrecursdir\fP. It creates a tar archive in
.\"O the same format as GNU \fBtar\fP(1) and stores it in \fIfilename\fP.
.\"O Leading special prefixes and leading slashes are removed, i.e.
.\"O \fIftp://machine/dir/file\fP becomes \fIdir/file\fP. If the first
.\"O character of the filename is a | character, the remaining text is
.\"O considered as a command through which the output is to be piped. Hence
.\"O a gzipped archive can be created for example with
これは
.B recursdir
と共にのみ用いる。tar アーカイブを GNU
.BR tar (1)
と同じフォーマットで作成し、
.I filename
に保存する。先頭の特殊なプレフィックスと末尾のスラッシュは削除される。
すなわち
.I http://machine/dir/file
は
.I dir/file
になる。ファイル名の先頭文字が | の場合、
テキストの残りは出力がパイプされるコマンドとみなされる。
よって gzip 圧縮アーカイブは、例えば以下のようにすれば作成できる。
.br
recursdir ftp://machine/dir --tar-file '| gzip -d > foo.tar.gz'
.TP
\fB--tar-block-size\fP \fIN\fP
.\"O Sets the block size for tar output to 512 * \fIN\fP. These are the units in
.\"O which data is written to the archive. The default is 20. This is
.\"O significant only when writing to block devices. This must not be
.\"O confused with \fB--block-size\fP.
tar 出力のブロックサイズを 512 * \fIN\fP にする。
これはデータをアーカイブに書き込むときの単位である。
デフォルトは 20。
これはブロックデバイスに書き込むときに限って意味を持つ。
これを
.B --block-size
と混同しないこと。
.TP
.BR "--block-size " \fIbytes\fP
.\"O The default block size is 1024 bytes. File sizes are rounded up to the
.\"O nearest block when calculating the total number of blocks consumed. If
.\"O the actual block size is greater than assumed then it is possible for
.\"O fewer blocks to be counted than are actually consumed during writing.
.\"O Hence it is essential to specify a block size greater than or equal to
.\"O the actual block size when using the option \fB--max-bytes\fP.
デフォルトのブロックサイズは 1024 バイトである。
消費されるブロックの総数を計算する際、
ファイルサイズは隣接するブロック末尾に切り上げられる。
実際のブロックサイズがこの値よりも大きいと、
書き込み時に実際に利用されるブロック数よりも、
計算値が小さくなる可能性がある。
よって
.B --max-bytes
オプションを用いるときには、実際のブロックサイズと同じ、
またはより大きな値を指定することがとても大切である。
.TP
.BR --strict-mtimes
.\"O When copying regular files, mirrordir normally only overwrites the
.\"O mirror file if it is \fIolder\fP than the control file. This option forces a
.\"O copy if there is \fIany\fP discrepancy at all in the modified times of
.\"O the files.
通常ファイルをコピーする場合、
.B mirrordir
は通常 mirror のファイルが
control のファイルよりも「古い」場合に限って上書きコピーを行なう。
このオプションを用いると、
ファイル間に修正時刻の「何らかの」差異があれば、コピーを行なう。
.TP
\fB--no-mtimes\fP
.\"O Copy files only if their sizes differ. Ignore the file modification
.\"O time.
サイズが違う場合に限ってコピーする。
ファイルの修正時刻は無視する。
.TP
\fB--ignore-size\fP
.\"O Copy files depending on mtime, but ignore size differences.
ファイルのコピーを mtime に基づいて行ない、
サイズの違いは無視する。
.TP 
.BR "--starting-file " \fIpath\fP
.\"O \fIpath\fP can be a file or directory. Until \fIpath\fP is read, files
.\"O or directories will be processed as though they were excluded files
.\"O (i.e. if they exist in \fImirror\fP they will be deleted). Directories
.\"O that contain \fIpath\fP will be created if they don't exist. After
.\"O \fIpath\fP is read, files are mirrored as usual. \fIpath\fP itself will
.\"O also be mirrored. If \fIpath\fP or any of its subdirectories are not
.\"O present, then \fBmirrordir\fP exits immediately. This is the only  time
.\"O \fBmirrordir\fP exits prematurely. This is to prevent the entire
.\"O filesystem from being erased on account of \fIpath\fP never being found.
.I path
はファイルまたはディレクトリ。
.I path
が読まれるまでは、ファイルやディレクトリは除外ファイル
(つまり
.I mirror
にある場合は削除される) のように扱われる。
.I path
を含むディレクトリは、存在していなければ作成される。
.I path
が読み込まれると、ファイルやディレクトリは通常にミラーされる。
.I path
そのものもミラーされる。
.I path
またはそのサブディレクトリが存在していない場合は、
.\"nakano path がなくてサブディレクトリがある場合ってあるの？
.B mirrordir
は直ちに終了する。
これは
.B mirrordir
が作業前に終了する唯一の場合である。
これは
.I path
が見つからない場合に、ファイルシステム全体が削除されるのを防ぐためである。
.\"O .PP
.\"O .SH "FTP SUPPORT"
.SH FTP のサポート
.\"O Ftp transfers are supported using the Midnight Commander's Virtual
.\"O File System (\fBVFS\fP), see \fBmc\fP(1). In short, this means that full
.\"O URLs as well as local directories are supported. The following example
.\"O demonstrates:
ftp 転送が、
Midnight Commander の仮想ファイルシステム
(Virtual File System: \fBVFS\fP) を利用する形でサポートされている。
要するにつまり、URL もローカルディレクトリと同じようにサポートされている。
以下に例を示そう。
.nf
    mirrordir --verbose \\ 
	ftp://lava.obsidian.co.za/pub/mirrordir \\ 
	    /home/mirrordir
.fi
.\"O or alternatively,
あるいは
.nf
    mirrordir --verbose /home/mirrordir \\ 
	ftp://psheer@lava.obsidian.co.za/home/ftp/pub/mirrordir
.fi
.\"O also works, but will prompt me for a password first. If you are
.\"O \fIuploading\fP to an ftp server, you should not have the 
.\"O --strict-mtimes options on, because modification times cannot 
.\"O be set via ftp, and hence everything will be copied.
も動作する。ただし後者ではまずパスワードを尋ねられる。
ftp サーバに「アップロード」を行う場合は、
--strict-mtimes オプションは on にすべきでない。
ftp では修正時刻の設定はできないので、
すべてがコピーされてしまう。
.PP
.\"O You will notice (with --verbose) that \fBmirrordir\fP repeatedly tries
.\"O to set modification and access times over ftp. I am going to leave these
.\"O messages in to remind users of the limitations of the VFS type in use.
.\"O These attempts do not appreciably detract from performance. You can use
.\"O \fBmc://\fP instead although performance is poor when uploading with
.\"O this protocol. Downloading is always preferable to uploading.
(--verbose を設定すれば)
.B mirrordir
が繰り返し ftp
で修正時刻とアクセス時刻をセットしようとしていることに気づくだろう。
用いている VFS のタイプにおける制限をユーザに知らせるために、
これらのメッセージは残しておくつもりである。
これらの試行は、明らかな性能の劣化としては現われない。
しかしこのプロトコルを用いたアップロードの性能が悪い場合は、代わりに
.B mc://
を用いてみるといいだろう。
なおダウンロードは常にアップロードよりも高速である。
.PP
.\"O In general you should \fBNOT\fP have an ftp upload in your cron jobs
.\"O or use ftp upload to keep directories in sync. Always download from the
.\"O other end when trying to keep directories in sync. Uploading is good
.\"O for once off uploads only.
一般に cron ジョブでは ftp アップロードを用いるべきではない。
またディレクトリの同期を取る目的にも向いていない。
ディレクトリを同期したい場合は、反対側からのダウンロードを用いること。
アップロードは一回きりのアップロードにしか有用でない。
.\"O .SH EXAMPLES
.SH 例
.\"O Here are some nifty things you can do with \fBmirrordir\fP.
ここでは
.B mirrordir
を用いて行える、ちょっと気の効いた作業を紹介する。
.TP
.\"O .B Pedantic minimalist copy
.B ミニマリスト的コピー
.RS
.\"O I have two source trees. I like to keep an old copy before I apply
.\"O a patch. I just do \fBmkdir tree.OLD\fP and then
ソースツリーが 2 つあり、
古い版をパッチを適用するために保管しておきたいとする。
これには
.B mkdir tree.OLD
して、
.PP
.nf
    \fB  mirrordir -v tree tree.OLD\fP
.fi
.PP
するだけでよい。
.\"O If I run \fBmirrordir\fP again, then only a minimal change is
.\"O made, i.e. only the updated files are copied. (\fBcp\fP(1) can in
.\"O fact do this).
もう一度
.B mirrordir
を実行すれば、最小限の変更のみ (つまり更新されたファイルのみ)
がコピーされる (実は
.BR cp (1)
も同じことをする)。
.RE
.TP
.\"O .B System backups
.B システムバックアップ
.RS
.\"O Some systems used timed backups onto tape archives. Others still use RAID
.\"O devices which constantly maintain an identical copy of a partition.
.\"O \fBmirrordir\fP provides a further alternative. You can install two
.\"O drives in a system - one for use and one for backups - and place
.\"O \fBmirrordir\fP in your \fBcron\fP(8) tables. The various backup options
.\"O can be set to make backups of files that have changed. The backup
.\"O directory might also be readable by users so that they can see their
.\"O backed up files. Previous versions of files would also be available for
.\"O users that might like to retrieve any older instances of the file.
.\"O Because \fBmirrordir\fP executes only the absolutely minimal set of
.\"O changes, it is extremely fast. It can be run several times a day or even
.\"O continuously with the --nice option.
システムによっては、
定期的なバックアップをテープアーカイブに行っていることがある。
また RAID デバイスを用いて、
あるパーティションと同一のコピーを恒常的に保持しているシステムもあるだろう。
.B mirrordir
はさらに別の選択肢を提供する。
システムに 2 台のドライブを装備する。ひとつは普段用いるもの、
もう一つはバックアップするためのものである。
そして
.B mirrordir
を
.BR cron (8)
のテーブルに追加するのだ。
変更されたファイルのバックアップには、様々なオプションが利用できる。
バックアップディレクトリはユーザから読み取り可能にしておき、
各人のバックアップファイルを閲覧できるようにしておくといいだろう。
特定のファイルの古いバージョンを取り戻したいユーザは、
バックアップから入手できるようになる。
.B mirrordir
は変更されたファイルの最小限だけを処理するので、非常に高速である。
一日に何回も実行したり、あるいは --nice オプションを付けて
途切れることなく実行させることさえ可能である。

.\"O Backups can also be made by FTP onto a remote machine for additional
.\"O security against the destruction of the machine.
マシンが壊れたときに対する備えをさらに強固にしたければ、
FTP を用いてリモートマシンにバックアップを行うこともできる。
.RE
.TP
.\"O .B Backing up hourly between two machines:
.B 2 台のマシンを毎時バックアップする
.RS
.\"O On one machine called \fBdar2\fP I have a cron job that runs every six hours:
.B dar2
というマシン上で、私は次のような cron ジョブを 6 時間ごとに実行している。
.PP
.nf
#!/bin/sh

# (this is just in case of any bugs I don't know about,
# but I don't think it is necessary)
killall -9 tee
killall mirrordir >& /dev/null
sleep 2
killall -9 mirrordir >& /dev/null

(                                                               \\
date                                                        ;   \\
echo "mirrordir says (if it said nothing it is bad):"       ;   \\
    mirrordir mc://dar1:12346/ -p abcdefg /mnt/dar1/            \\
    -i --exclude-regexp '^mc://dar1:12346/var/lock/subsys/atd'  \\
    --exclude-regexp '^mc://dar1:12346/proc/'                   \\
    --exclude-regexp '^mc://dar1:12346/mnt/[^/]*/.*$'           \\
    -i --exclude-regexp '^mc://dar1:12346/boot/'                \\
    -i --exclude-regexp '^mc://dar1:12346/etc/lilo.conf'        \\
    -C                                                          \\
\'
if (S_ISDIR (stat.st_mode)) {
    if (!regexp ("^mc://dar1:12346/[^/]*$", PATH))
        printf ("Backing up: %s\n", PATH);
}
\'                                                   ;           \\
date                                                ;           \\
echo "Done"                                         ;           \\
) 2>&1                                                          \\
| tee --ignore-interrupts --append /var/log/mirrordir.log       \\
| mail -s 'dar1 backup results' psheer@obsidian.co.za
.fi
.PP
.RE
.\"O 
.TP
.\"O .B Secure transfers and logins
.B 安全な転送とログイン
.RS
.\"O On the machine \fBturing.co.uk\fP execute
.B turing.co.uk
において以下のコマンドを実行しておく
.br
.nf
    \fBsecure-mcserv -p 12345 -d\fP
.fi
.br
.\"O On some foreign machine
どこか外部のマシンから
.br
.nf
    \fBcopydir --secure -K 512 -z \\ 
    mc://alan@turing.co.uk:12345/usr/src/linux/.config .\fP
.fi
.br
.\"O to securely copy a file using a security key of 512 bits and using
.\"O compression, or
とすれば、512 ビットの鍵を用いた安全なファイルコピー (圧縮つき) ができる。
また
.br
.nf
    \fBpslogin mc://alan@turing.co.uk:12345/\fP
.fi
.br
.\"O to login to the machine securely.
とすれば、このマシンに安全にログインできる。
.br
.RE
.TP
.\"O .B Mirroring FTP sites
.B FTP サイトのミラー
.RS
.\"O Ftp sites often disable their -R option on ls so that a  traditional
.\"O \fBmirror\fP(1) will fail (?). \fBmirrordir\fP does not suffer from this
.\"O limitation.
ftp サイトでは ls の -R オプションが禁止されていることが多いので、
従来用いられてきた
.B mirror (1)
は失敗することがあった。
.B mirrordir
にはこの制限はない。
.PP
.nf
    \fBmirrordir -v ftp://metalab.unc.edu/pub /home/ftp/pub\fP
.fi
.PP
.RE
.TP
.\"O .B FTP transfers
.B FTP 転送
.RS
.\"O Typical FTP transfers can be made easily with a single command using the
.\"O --copy-mode option. You can copy multiple files in both directions and
.\"O even between two ftp sites (albeit indirectly), just like with
.\"O \fBcp\fP(1). I use
よくある FTP 転送は、--copy-mode オプションを用いた
一行のコマンドで簡単に実現できる。
複数のファイルをどちら向きにも、
また別々の ftp サイトにすら (間接的にではあるが)、
.BR cp (1)
のようにコピーできる。
.br
.nf
    \fBcopydir -v mirrordir-0.9.15.tar.gz \\ 
    mirrordir.lsm ftp://metalab.unc.edu/incoming/Linux\fP
.fi
.\"O to upload \fBmirrordir\fP to the sunsite.
とすると
.B mirrordir
を sunsite にアップロードする。
.LP
.\"O Passwords for non-anonymous ftp transfers are best placed in the
.\"O .B "~/.netrc"
.\"O file according to standard ftp convention, and the option --netrc used.
.\"O Alternatively use \fBftp://myname@machine/\fP instead.
anonymous でない ftp 転送のパスワードは、標準的な ftp の慣習に従って
.B "~/.netrc"
ファイルに置き、--netrc オプションを用いるのがよい。
あるいは
.B ftp://myname@machine/
を用いてもかまわない。
.RE
.TP
.\"O .B Finding files
.B ファイル探索
\fBrecursdir / -C\fP 
.br
.B 'if (!glob ("*.c", FILE)) printf ("%s\\\\n", PATH);'
.br
.\"O will print out all the C files on your system.
とするとシステムにあるすべての C ファイルを表示する。
.br
\fBrecursdir / -C\fP 
.br
.B 'if (S_ISCHR(stat.st_mode)) printf ("%s\\\\n", PATH);'
.br
.\"O will print out all character devices on your system.
とすればシステムにあるすべてのキャラクタデバイスを表示する。
.TP
.\"O .B Backup FTP sites onto tape
.B FTP サイトをテープにバックアップする
.RS
.\"O Use
リモートサイトをテープにバックアップするには
.br
.nf
    \fBrecursdir ftp://user@remote.machine/ \\ 
    --exclude-regexp '//[^/]*/proc/' --tar-file /dev/mt\fP 
.fi
.\"O to back-up a remote site onto tape.
とすればよい。
.br
.RE
.TP
.\"O .B Removing core files
.B core ファイルの削除
.RS
.\"O This removes all core files from your system:
これはシステムからすべての core ファイルを削除する:
.PP
.nf
recursdir / -C \'
long l;
if (strncmp (PATH, "/proc", 5)) {
    if (S_ISREG (stat.st_mode) && !strcmp ("core", FILE)) {
        if (strstr (popen ("file " + PATH), "ELF 32-bit LSB core")) {
            l = l + stat.st_size;
            printf ("removing: %s, cumu. total = %ldkB\\n", PATH, l >> 10);
            exec ("rm", "-f", PATH);    /* could also use system() */
        }
    }
}
\'
.fi
.PP
.RE
.\"O .SH "ENVIRONMENT VARIABLES"
.SH 環境変数
.TP
.B TMPDIR
.\"O The directory where you would like temporary files to be stored. The ftp
.\"O filesystem downloads files first into the this temporary directory, and
.\"O then copies the file into its correct place. See \fBBUGS\fP below.
一時的なファイルを保管させたいディレクトリ。
ftp ファイルシステムは、
まずファイルをこの一時ディレクトリにダウンロードし、
正しい場所にそのファイルをコピーする。後述の \fBバグ\fP を参照のこと。

.\"O If TMPDIR is not specified, then it defaults to the directory of the
.\"O current file in progress.
TMPDIR が指定されないと、
デフォルトでは現在進行中のファイルがあるディレクトリに保存される。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O \fBmirrordir\fP returns the following:
.B mirrordir
は以下の値を返す:
.TP
.B 0
.\"O Success.
成功。
.TP
.B 1
.\"O Some kind of error occurred like a write error, a permissions error or
.\"O the like. In this case, the precise error would have been written to
.\"O stderr.
何らかのエラー (書き込みエラー、許可属性エラーなど) が起った。
この場合、エラーの詳細は stderr に書き込まれているはずである。
.TP
.B 2
.\"O A file was in use and therefore could not be copied, but otherwise a
.\"O success. In this case the error `unable to open control file for writing'
.\"O would have been written to stderr. If you grep for these in stderr, you
.\"O can then run mirrordir with just these files. See \fBgrep\fP(1).
あるファイルが利用中でコピーできなかったが、それ以外は成功した。
この場合は `unable to open control file for writing'
というエラーが書き込まれているはずである。
標準エラーでこのメッセージを grep し、これらのファイルに対してのみ
もう一度 mirrordir を実行すればよい。
.BR grep (1)
を参照のこと。
.\"O 
.\"O .SH BUGS
.SH バグ
.\"O Some versions of the \fBatd\fP daemon create a lock (or pid?) file with
.\"O a lock on the file that cause \fBsecure-mcserv\fP to block indefinately.
.\"O You will have to kill \fBatd\fP or exclude (?) this file before hand to
.\"O prevent this.
.B atd
デーモンのあるバージョンでは、
ロックファイル (や pid ファイル?) をそのファイルもロック付きで作成するため、
.B secure-mcserv
が永遠にブロックする。
これを防ぐには、
.B atd
を停止させるか、このファイルを対象から除外しなければならない。

.\"O Mirroring over ftp where there is some daylight savings correction, seems
.\"O to produce a one hour time offset. Use --time-offset as a temporary
.\"O work-around. I don't know if this is \fBmirrordir\fP's fault though.
サマータイムの時間補正があるところと ftp でミラーを行うと、
1 時間の時間のオフセットが生じるように見える。
とりあえずの回避策としては --time-offset を用いてほしい。
これが
.B mirrordir
のせいなのかどうかは私にはわからない。

.\"O A bug that caused \fBmirrordir\fP to eat CPU and appear to halt has been
.\"O fixed.
.B mirrordir
のせいで CPU が食い尽くされ、停止してしまうように見えるバグは修正された。

.\"O A large number of command-line --exclude expressions will slow
.\"O performance. This is noted for the purposes of those wanting to
.\"O exclude a large list of files. This list should be placed in a
.\"O text file and excluded with the \fB--exclude-from\fP option.
コマンドラインから多数の --exclude 式を指定すると、
処理が遅くなる。たくさんのファイルのリストを除外対象したい人は、
そのリストをテキストファイルに書いて、
.B --exclude-from
オプションを利用する方がよい。

.\"O Modification and access times of symlinks (not the files they point to)
.\"O are not duplicated.
シンボリックリンク (それが指すファイルではない)
の修正時刻とアクセス時刻は複製されない。

.\"O Note that the previous limitation that hardlinked files are treated as
.\"O regular files has now been alleviated. The option --no-hard-links is
.\"O provided to emulate the behaviour of versions prior to 0.9.8.
以前にあった、ハードリンクファイルが通常ファイルとして扱われてしまうという
制限は解決された。--no-hard-links オプションを指定すれば、
0.9.8 以前の動作をエミュレート可能である。

.\"O No check is made to see if a hard-link would be created across devices,
.\"O in which case an appropriate error will be reported.
ハードリンクがデバイスをまたいで作成されているかどうかはチェックしていない。
この場合はそれに見合ったエラーが報告されることになろう。

.\"O The ftp file-system downloads files first into the temporary directory,
.\"O as a file with the name \fB*ftpfs*\fP. This is a waste of space but is
.\"O the default behavior of the vfs library. If there is not enough space in
.\"O this directory, then \fBmirrordir\fP will probably hang. See
.\"O \fBENVIRONMENT VARIABLES\fP above.
ftp ファイルシステムは、まずファイルを一時ディレクトリに
\fB*ftpfs*\fP という名前でダウンロードする。
これはスペースの無駄だが、vfs ライブラリのデフォルトの動作なのだ。
このディレクトリに十分な容量がないと、おそらく
.B mirrordir
はハングする。
上述の \fB環境変数\fP を参照のこと。

.\"O The C scripting language used to exclude files is an excessive
.\"O implementation.
ファイル除外に用いる C スクリプト言語は、
実装のやりすぎである。
.\"O .SH FILES
.SH ファイル
.TP
.B "~/.netrc"
.\"O List of machines and corresponding passwords. See the option \fB--netrc\fP.
マシンとそのパスワードのリスト。
オプション
.B --netrc
を参照のこと。
.TP
.B /etc/ssocket/accept.cs
.\"O This script performs the key exchange and signature generation on the
.\"O server side of the connection.
このスクリプトは、接続のサーバ側で、鍵交換と署名生成を行う。
.TP
.B /etc/ssocket/connect.cs
.\"O This script performs the key exchange and signature authentication on the
.\"O client side of the connection.
このスクリプトは、接続のクライアント側で、鍵交換と署名生成を行う。
.TP
.B /etc/ssocket/arcinit.cs
.\"O This initialises the stream cipher encryption. (Not present in International versions.)
ストリーム cipher 暗号化を初期化する
(国際版では存在しない)。
.TP
.B /etc/ssocket/arcencrypt.cs
.\"O This performs the stream cipher encryption. (Not present in International versions.)
ストリーム cipher 暗号化を行う
(国際版では存在しない)。
.TP
.B /etc/ssocket/private/
.\"O This directory contains private keys for the host. Each key will be held
.\"O in a file: filenames are 512, 1024 etc. This is a preferable alternative to
.\"O databases of keys as it obviates the need for a key management utility. Soon
.\"O the Reiser (spelling) filesystem will be standard and database files will
.\"O become obsolete anyway.
このディレクトリには、ホストの秘密鍵が置かれる。
鍵はそれぞれ別々のファイルに保存される。
ファイル名は 512, 1024 などである。
鍵のデータベースを使うようにすると、
鍵管理用のユーティリティが必要になるので、
こちらのほうがよい。
すぐに Reiser ファイルシステムが標準的になるだろうから、
データベースファイルはいずれにしても不要になるだろう。
.TP
.B /etc/ssocket/public/
.\"O Analogous to \fB/etc/ssocket/private/\fP for public keys.
こちらは公開鍵のもの。後は \fB/etc/ssocket/private/\fP と同様。
.\"O .PP
.\"O .SH STANDARDS
.SH 準拠
.\"O mirrordir is an invention of its author and does not belong to any
.\"O operating system standard (although it should!).
mirrordir は作成者の発明であり、
いかなる OS の標準にも従っていない (そうするべきではあるが!)
.\"O .SH AVAILABILITY
.SH 入手方法
.\"O The latest version of the program can be found at either
.\"O \fBftp://metalab.unc.edu/pub/Linux/system/backup\fP, or
.\"O \fBftp://lava.obsidian.co.za/pub/linux/mirrordir\fP.
このプログラムの最新版は、
\fBftp://metalab.unc.edu/pub/Linux/system/backup\fP または
\fBftp://lava.obsidian.co.za/pub/linux/mirrordir\fP
から入手できる。
.\"O .SH AUTHOR
.SH 著者
Paul Sheer  <psheer@obsidian.co.za>  <psheer@icon.co.za>
.\" man page by Jim Van Zandt <jrv@vanzandt.mv.com>
.\"O .SH "SEE ALSO"
.SH 関連項目
\fBmirror\fP(1), \fBpavuk\fP(1), \fBcp\fP(1), \fBscp\fP(1),
\fBfind\fP(1), \fBmc\fP(1), \fBftp\fP(1), \fBssh\fP(1),
.\"O \fBtar\fP(1), \fBrlogin\fP(1), \fBrlogind\fP(8), \fBforward\fP
\fBtar\fP(1), \fBrlogin\fP(1), \fBrlogind\fP(8), \fBforward\fP(1)
