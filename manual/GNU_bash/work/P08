.\"O .SH READLINE
.SH "READLINE ライブラリ"
.\"O This is the library that handles reading input when using an interactive
.\"O shell, unless the
.\"O .B \-\-noediting
.\"O option is given at shell invocation.
Readline は対話シェルを使うときに入力の読み込みを処理するライブラリで
す。ただし、シェルの起動時に
.B \-\-noediting
オプションが指定された場合には使われません。
.\"O By default, the line editing commands are similar to those of emacs.
.\"O A vi-style line editing interface is also available.
.\"O To turn off line editing after the shell is running, use the
.\"O .B +o emacs
.\"O or
.\"O .B +o vi
.\"O options to the
.\"O .B set
.\"O builtin (see
.\"O .SM
.\"O .B SHELL BUILTIN COMMANDS
.\"O below).
デフォルトでは、行編集に使うコマンドは emacs のコマンドに似ています。
vi 形式の行編集インタフェースを使うこともできます。シェルを起動した後
に行編集機能を無効にするには、組み込みコマンド
.B set
(後述の
.SM
.B シェルの組み込みコマンド
を参照) に対して
.B +o emacs
オプションまたは
.B +o vi
オプションを設定してください。
.\"O .SS "Readline Notation"
.SS "Readline セクションにおける記法"
.PP
.\"O In this section, the emacs-style notation is used to denote
.\"O keystrokes.  Control keys are denoted by C\-\fIkey\fR, e.g., C\-n
.\"O means Control\-N.  Similarly, 
.\"O .I meta
.\"O keys are denoted by M\-\fIkey\fR, so M\-x means Meta\-X.  (On keyboards
.\"O without a 
.\"O .I meta
.\"O key, M\-\fIx\fP means ESC \fIx\fP, i.e., press the Escape key
.\"O then the
.\"O .I x
.\"O key.  This makes ESC the \fImeta prefix\fP.
.\"O The combination M\-C\-\fIx\fP means ESC\-Control\-\fIx\fP,
.\"O or press the Escape key
.\"O then hold the Control key while pressing the
.\"O .I x
.\"O key.)
このセクションでは、emacs 形式の記法を使ってキーストロークを表します。
コントロールキーは C\-\fIkey\fR で表します (例: C\-n は Control\-N の意
味です)。同様に
.I メタ
キーは M\-\fIkey\fR で表すので、M\-x は Meta\-X を表すことになります。(
.I メタ
キーが無いキーボードでは、M\-\fIx\fP は ESC \fIx\fP を表します。つまり、
エスケープキーを押した後に
.I x
キーを押します。これは ESC を \fIメタプレフィックス (meta prefix)\fP に
する操作です。M\-C\-\fIx\fP の組み合わせは、ESC\-Control\-\fIx\fP ある
いはエスケープキーを押した後に、コントロールキーを押したまま
.I x
を押すことを示します。)
.PP
.\"O Readline commands may be given numeric
.\"O .IR arguments ,
.\"O which normally act as a repeat count.
.\"O Sometimes, however, it is the sign of the argument that is significant.
.\"O Passing a negative argument to a command that acts in the forward
.\"O direction (e.g., \fBkill\-line\fP) causes that command to act in a
.\"O backward direction. 
.\"O Commands whose behavior with arguments deviates from this are noted
.\"O below.
Readline のコマンドには数値の
.I 引き数
を与えることができます。通常、これは繰り返しの回数として作用します。た
だし、場合によっては、引き数の符号が意味を持つこともあります。前方に作
用するコマンド (例: \fBkill\-line\fP) に負の引き数を渡すと、コマンドは後
方に作用します。引き数に対する動作がこの説明と異なるコマンドについては
後で説明します。
.PP
.\"O When a command is described as \fIkilling\fP text, the text
.\"O deleted is saved for possible future retrieval
.\"O (\fIyanking\fP).  The killed text is saved in a
.\"O \fIkill ring\fP.  Consecutive kills cause the text to be
.\"O accumulated into one unit, which can be yanked all at once. 
.\"O Commands which do not kill text separate the chunks of text
.\"O on the kill ring.
コマンドがテキストを\fIキル (kill)\fP するものと説明されている時は、削除
されたテキストは、後で取り出せる (\fIヤンク (yank)\fP できる) ように保存さ
れます。キルされたテキストは、\fIキルリング (kill ring)\fP に保存されま
す。連続してキルを行うと、テキストは 1 つのまとまりとして保存されるの
で、全部を一度にヤンクすることができます。テキストをキルしないコマンド
は、テキストがキルリング上で別々になるようにします。
.\"O .SS "Readline Initialization"
.SS "Readline の初期化"
.PP
.\"O Readline is customized by putting commands in an initialization
.\"O file (the \fIinputrc\fP file).
.\"O The name of this file is taken from the value of the
.\"O .SM
.\"O .B INPUTRC
.\"O variable.  If that variable is unset, the default is
.\"O .IR ~/.inputrc .
コマンドを初期化ファイル (\fIinputrc\fP ファイル) に追加することにより、
readline をカスタマイズすることができます。このファイルの名前は、変数
.SM
.B INPUTRC
の値から決まります。この変数が設定されていない場合のデフォルト値は
.I ~/.inputrc
です。
.\"O When a program which uses the readline library starts up, the
.\"O initialization file is read, and the key bindings and variables
.\"O are set.
.\"O There are only a few basic constructs allowed in the
.\"O readline initialization file.
.\"O Blank lines are ignored.
.\"O Lines beginning with a \fB#\fP are comments.
.\"O Lines beginning with a \fB$\fP indicate conditional constructs.
.\"O Other lines denote key bindings and variable settings.
readline ライブラリを使うプログラムが起動する際には、この初期化ファイ
ルが読み込まれ、キー割り当てと変数が設定されます。readline の初期化ファ
イル中で使用できる基本的構文は、以下のように少ししかありません。
空行は無視されます。
\fB#\fP で始まる行はコメントです。
\fB$\fP で始まる行は条件文です。
それ以外の行はキー割り当てと変数の設定です。
.PP
.\"O The default key-bindings may be changed with an
.\"O .I inputrc 
.\"O file.
.\"O Other programs that use this library may add their own commands
.\"O and bindings.
デフォルトのキー割り当ては
.I inputrc 
ファイルで変更することができます。このライブラリを使う他のプログラムでも、独自
のコマンドとキー割り当てを追加することができます。
.PP
.\"O For example, placing
例えば、
.RS
.PP
M\-Control\-u: universal\-argument
.RE
.\"O or
や
.RS
C\-Meta\-u: universal\-argument
.RE
.\"O into the 
.\"O .I inputrc
.\"O would make M\-C\-u execute the readline command
.\"O .IR universal\-argument .
を
.I inputrc
ファイルに書くと、M\-C\-u で readline の
.I universal\-argument
コマンドが実行されるようになります。
.PP
.\"O The following symbolic character names are recognized:
認識されるシンボリックな文字名を以下に示します:
.\"O .IR RUBOUT ,
.\"O .IR DEL ,
.\"O .IR ESC ,
.\"O .IR LFD ,
.\"O .IR NEWLINE ,
.\"O .IR RET ,
.\"O .IR RETURN ,
.\"O .IR SPC ,
.\"O .IR SPACE ,
.\"O and
.\"O .IR TAB .
.IR RUBOUT ,
.IR DEL ,
.IR ESC ,
.IR LFD ,
.IR NEWLINE ,
.IR RET ,
.IR RETURN ,
.IR SPC ,
.IR SPACE ,
.IR TAB 。
.PP
.\"O In addition to command names, readline allows keys to be bound
.\"O to a string that is inserted when the key is pressed (a \fImacro\fP).
readline では、コマンド名だけでなくキーにも文字列を割り当てることがで
きます。つまり、そのキーが押されると文字列が挿入されます
(\fIマクロ\fP, \fImacro\fP)。
.\"O .SS "Readline Key Bindings"
.SS "Readline のキー割り当て"
.PP
.\"O The syntax for controlling key bindings in the
.\"O .I inputrc
.\"O file is simple.  All that is required is the name of the
.\"O command or the text of a macro and a key sequence to which
.\"O it should be bound. The name may be specified in one of two ways:
.\"O as a symbolic key name, possibly with \fIMeta\-\fP or \fIControl\-\fP
.\"O prefixes, or as a key sequence.
.\"O When using the form \fBkeyname\fP:\^\fIfunction\-name\fP or \fImacro\fP,
.\"O .I keyname
.\"O is the name of a key spelled out in English.  For example:
.I inputrc
ファイルにおける制御キーの割り当て方は単純です。必要なものは、コマンド
の名前あるいはマクロのテキストと、これらが割り当てられるキーシーケンス
だけです。名前は 2 通りの方法で指定することができます。つまり、シンボ
リックなキーの名前 (たぶん、これに \fIMeta\-\fP や \fIControl\-\fP プレ
フィックスが付いたもの) による指定と、キーシーケンスによる指定です。
「\fBkeyname\fP:\^\fIfunction\-name\fP」あるいは
「\fBkeyname\fP:\^\fImacro\fP」の形式を使うときには、
.I keyname
は英語で書き下したキーの名前となります。例を以下に示します:
.sp
.RS
Control-u: universal\-argument
.br
Meta-Rubout: backward-kill-word
.br
Control-o: "> output"
.RE
.LP
.\"O In the above example,
.\"O .I C\-u
.\"O is bound to the function
.\"O .BR universal\-argument ,
.\"O .I M\-DEL
.\"O is bound to the function
.\"O .BR backward\-kill\-word ,
.\"O and
.\"O .I C\-o
.\"O is bound to run the macro
.\"O expressed on the right hand side (that is, to insert the text
.\"O .I "> output"
.\"O into the line).
この例では、
.I C\-u
が
.B universal\-argument
に、
.I M\-DEL
が
.B backward\-kill\-word
に割り当てられます。
また、
.I C\-o
はマクロの実行に割り当てられ、右辺値に展開されます(つまり、テキスト
.I "> output"
が編集行に挿入されます)。
.PP
.\"O In the second form, \fB"keyseq"\fP:\^\fIfunction\-name\fP or \fImacro\fP,
.\"O .B keyseq
.\"O differs from
.\"O .B keyname
.\"O above in that strings denoting
.\"O an entire key sequence may be specified by placing the sequence
.\"O within double quotes.  Some GNU Emacs style key escapes can be
.\"O used, as in the following example.
後者の形式である「\fB"keyseq"\fP:\^\fIfunction\-name\fP」または
「\fB"keyseq"\fP:\^\fImacro\fP」においては、
.B keyseq
は先程の
.B keyname
とは異なります。異なるのは、ダブルクォートで括ってキーシーケンス全体を
書くことにより、シーケンスを表す文字列を指定できる点です。以下の例で示
すように、GNU Emacs 形式のキーエスケープの一部を使うことができます。
.sp
.RS
"\eC\-u": universal\-argument
.br
"\eC\-x\eC\-r": re\-read\-init\-file
.br
"\ee[11~": "Function Key 1"
.RE
.PP
.\"O In this example,
.\"O .I C\-u
.\"O is again bound to the function
.\"O .BR universal\-argument .
この例でも、
.I C\-u
が
.B universal\-argument
機能に割り当てられています。
.\"O .I "C\-x C\-r"
.\"O is bound to the function
.\"O .BR re\-read\-init\-file ,
.\"O and 
.\"O .I "ESC [ 1 1 ~"
.\"O is bound to insert the text
.\"O .BR "Function Key 1" .
.I "C\-x C\-r"
は
.B re\-read\-init\-file
機能に割り当てられ、
.I "ESC [ 1 1 ~"
は
.B "Function Key 1"
という文字列の挿入に割り当てられています。
.\"O The full set of GNU Emacs style escape sequences is
GNU Emacs 形式のエスケープシーケンスを以下に全て示します:
.RS
.PD 0
.TP
.B \eC\-
.\"O control prefix
コントロールプレフィックス
.TP
.B \eM\-
.\"O meta prefix
メタプレフィックス
.TP
.B \ee
.\"O an escape character
エスケープ文字
.TP
.B \e\e
.\"O backslash
バックスラッシュ
.TP
.B \e"
.\"O literal "
" という文字
.TP
.B \e'
.\"O literal '
\' という文字
.RE
.PD
.PP
.\"O In addition to the GNU Emacs style escape sequences, a second
.\"O set of backslash escapes is available:
GNU Emacs 形式のエスケープシーケンスに加えて、別の形のバックスラッシュ
のエスケープを使うことができます:
.RS
.PD 0
.TP
.B \ea
.\"O alert (bell)
警告 (ベル)
.TP
.B \eb
.\"O backspace
バックスペース
.TP
.B \ed
.\"O delete
削除(delete)
.TP
.B \ef
.\"O form feed
フォームフィード
.TP
.B \en
.\"O newline
改行
.TP
.B \er
.\"O carriage return
復帰
.TP
.B \et
.\"O horizontal tab
水平タブ
.TP
.B \ev
.\"O vertical tab
垂直タブ
.TP
.B \e\fInnn\fP
.\"O the character whose ASCII code is the octal value \fInnn\fP
.\"O (one to three digits)
ASCII コードの 8 進値が \fInnn\fP である文字 (3 桁で 1 文字)
.TP
.B \ex\fInnn\fP
.\"O the character whose ASCII code is the hexadecimal value \fInnn\fP
.\"O (one to three digits)
ASCII コードの 16 進値が \fInnn\fP である文字 (3 桁で 1 文字)
.RE
.PD
.PP
.\"O When entering the text of a macro, single or double quotes must
.\"O be used to indicate a macro definition.
.\"O Unquoted text is assumed to be a function name.
.\"O In the macro body, the backslash escapes described above are expanded.
.\"O Backslash will quote any other character in the macro text,
.\"O including " and '.
マクロのテキストを入力する際には、マクロ定義を示すために
シングルクォートやダブルクォートを使わなければなりません。クォートされ
ていないテキストは関数名と見なされます。マクロ本体では、前述のバックス
ラッシュによるエスケープは展開されます。バックスラッシュはマクロのテキ
スト内の他の文字を全てエスケープします。これには " や ' も含まれます。
.PP
.\"O .B Bash
.\"O allows the current readline key bindings to be displayed or modified
.\"O with the
.\"O .B bind
.\"O builtin command.  The editing mode may be switched during interactive
.\"O use by using the
.\"O .B \-o
.\"O option to the
.\"O .B set
.\"O builtin command (see
.\"O .SM
.\"O .B SHELL BUILTIN COMMANDS
.\"O below).
.B bash
では、組み込みコマンドの
.B bind
を使って、readline の現在の キー割り当ての表示と変更を行うことができま
す。また、組み込みコマンド
.B set
に対して
.B \-o
オプションを使うことで、編集モードを対話的利用の途中に切替えることができま
す (後述の
.SM
.B シェルの組み込みコマンド
を参照)。
.\"O .SS "Readline Variables"
.SS "Readline の変数"
.PP
.\"O Readline has variables that can be used to further customize its
.\"O behavior.  A variable may be set in the
.\"O .I inputrc
.\"O file with a statement of the form
Readline の動作をカスタマイズすることができる変数が他にもあります。変
数は
.I inputrc
ファイル中に
.RS
.PP
\fBset\fP \fIvariable\-name\fP \fIvalue\fP
.RE
.PP
という形式の文で設定することができます。
.\"O Except where noted, readline variables can take the values
.\"O .B On
.\"O or
.\"O .BR Off .
特に断らない限り、readline の変数は
.B On
または
.B Off
のいずれかです。
.\"O The variables and their default values are:
変数とそのデフォルト値を以下に示します:
.PP
.PD 0
.TP
.B bell\-style (audible)
.\"O Controls what happens when readline wants to ring the terminal bell.
.\"O If set to \fBnone\fP, readline never rings the bell.  If set to
.\"O \fBvisible\fP, readline uses a visible bell if one is available.
.\"O If set to \fBaudible\fP, readline attempts to ring the terminal's bell.
readline が端末のベルを鳴らそうとしたときの動作を制御します。
\fBnone\fP が設定されている場合は、readline はベルを鳴らしません。
\fBvisible\fP が設定されている場合には、可能であれば可視ベル
(visible bell) が用いられます。\fBaudible\fP が設定されている場合には、
readline は端末のベルを鳴らそうとします。
.TP
.B comment\-begin (``#'')
.\"O The string that is inserted when the readline
.\"O .B insert\-comment
.\"O command is executed.
.\"O This command is bound to
.\"O .B M\-#
.\"O in emacs mode and to
.\"O .B #
.\"O in vi command mode.
readline の
.B insert\-comment
コマンドが実行されたときに挿入される文字列です。このコマンドは、emacs
モードでは
.B M\-#
に割り当てられ、vi コマンドモードでは
.B #
に割り当てられます。
.TP
.B completion\-ignore\-case (Off)
.\"O If set to \fBOn\fP, readline performs filename matching and completion
.\"O in a case\-insensitive fashion.
\fBOn\fP が設定されていると、readline がファイル名のマッチングと補完を
行う際に大文字と小文字が区別されません。
.TP
.B completion\-query\-items (100)
.\"O This determines when the user is queried about viewing
.\"O the number of possible completions
.\"O generated by the \fBpossible\-completions\fP command.
.\"O It may be set to any integer value greater than or equal to
.\"O zero.  If the number of possible completions is greater than
.\"O or equal to the value of this variable, the user is asked whether
.\"O or not he wishes to view them; otherwise they are simply listed
.\"O on the terminal.
\fBpossible\-completions\fP コマンドが生成した補完候補の数が、いくつを
越えると表示の可否をユーザに問い合わせるのかを決めます。この変数には 0
以上の任意の整数を設定することができます。補完の候補数がこの変数の値以
上の場合には、ユーザに対して候補を表示するかどうかの問い合わせがなされ
ます。そうでない場合には、単に端末に補完の候補がリスト表示されるだけで
す。
.TP
.B convert\-meta (On)
.\"O If set to \fBOn\fP, readline will convert characters with the
.\"O eighth bit set to an ASCII key sequence
.\"O by stripping the eighth bit and prefixing an
.\"O escape character (in effect, using escape as the \fImeta prefix\fP).
\fBOn\fP を設定すると、readline は 8 番目のビットがセットされている文
字を ASCII のキーシーケンスに変換します。変換は、8 番目のビットを落と
して、エスケープ文字を前に追加することによって行います(実際には、エス
ケープ文字を\fIメタプレフィックス\fPとして用います)。
.TP
.B disable\-completion (Off)
.\"O If set to \fBOn\fP, readline will inhibit word completion.  Completion
.\"O characters will be inserted into the line as if they had been
.\"O mapped to \fBself-insert\fP.
\fBOn\fP を設定すると、readline は単語の補完を行わなくなります。補完さ
れる文字の編集行への挿入は、その文字を \fBself-insert\fP に割り当てた
かのように行われます。
.TP
.B editing\-mode (emacs)
.\"O Controls whether readline begins with a set of key bindings similar
.\"O to \fIemacs\fP or \fIvi\fP.
.\"O .B editing\-mode
.\"O can be set to either
.\"O .B emacs
.\"O or
.\"O .BR vi .
readline の起動時に \fIemacs\fP と \fIvi\fP のどちらに似たキー割り当
てを使うのかを制御します。
.B editing\-mode
には
.B emacs
と
.BR vi
のいずれかを指定することができます。
.TP
.B enable\-keypad (Off)
.\"O When set to \fBOn\fP, readline will try to enable the application
.\"O keypad when it is called.  Some systems need this to enable the
.\"O arrow keys.
\fBOn\fP を設定すると、readline はアプリケーションキーパッドが呼び出さ
れた時に、これを有効にしようとします。一部のシステムでは、矢印キーを使
うためにこれを有効にする必要があります。
.TP
.B expand\-tilde (Off)
.\"O If set to \fBon\fP, tilde expansion is performed when readline
.\"O attempts word completion.
\fBon\fP を設定すると、readline が単語の補完を試みるときにチルダ展開が
行われます。
.TP
.B horizontal\-scroll\-mode (Off)
.\"O When set to \fBOn\fP, makes readline use a single line for display,
.\"O scrolling the input horizontally on a single screen line when it
.\"O becomes longer than the screen width rather than wrapping to a new line.
\fBon\fP が設定されている時、readline は表示の際に行を 1 つしか使わな
いようになります。つまり、行がスクリーンの幅より長くなると、新しい行に
折り返すのではなく、1 つの入力行の中で縦にスクロールします。
.TP
.B input\-meta (Off)
.\"O If set to \fBOn\fP, readline will enable eight-bit input (that is,
.\"O it will not strip the high bit from the characters it reads),
.\"O regardless of what the terminal claims it can support.  The name
.\"O .B meta\-flag
.\"O is a synonym for this variable.
\fBOn\fP が設定されていると、readline は 8 ビットの入力が可能になりま
す(つまり、読み込んだ文字の再上位ビットを落としません)。この動作は、端
末のサポートとは無関係に行われます。
.B meta\-flag
という名前は、この変数の別名です。
.TP
.B isearch\-terminators (``C\-[C\-J'')
.\"O The string of characters that should terminate an incremental
.\"O search without subsequently executing the character as a command.
.\"O If this variable has not been given a value, the characters
.\"O \fIESC\fP and \fIC\-J\fP will terminate an incremental search.
以降に文字をコマンドとして実行すること無くインクリメンタルサーチを終え
る文字を集めた文字列です。この変数に値が設定されていなければ、
\fIESC\fP と \fIC\-J\fP でインクリメンタルサーチが終わります。
.TP
.B keymap (emacs)
.\"O Set the current readline keymap.  The set of valid keymap names is
.\"O \fIemacs, emacs\-standard, emacs\-meta, emacs\-ctlx, vi,
.\"O vi\-command\fP, and
.\"O .IR vi\-insert .
.\"O \fIvi\fP is equivalent to \fIvi\-command\fP; \fIemacs\fP is
.\"O equivalent to \fIemacs\-standard\fP.  The default value is
.\"O .IR emacs ;
.\"O the value of
.\"O .B editing\-mode
.\"O also affects the default keymap.
現在の readline のキーマップを設定します。正しいキーマップ名を全て挙げ
ると、\fIemacs, emacs\-standard, emacs\-meta, emacs\-ctlx, vi,
vi\-command, vi\-insert\fP となります。\fIvi\fP は \fIvi\-command\fP
と同等で、\fIemacs\fP は \fIemacs\-standard\fP と同等です。デフォルト
値は
.IR emacs
です。
.B editing\-mode
の値もデフォルトキーマップに影響を与えます。
.TP
.B mark\-directories (On)
.\"O If set to \fBOn\fP, completed directory names have a slash
.\"O appended.
\fBOn\fP が設定されていると、補完されたディレクトリ名の末尾にスラッシュ
が追加されます。
.TP
.B mark\-modified\-lines (Off)
.\"O If set to \fBOn\fP, history lines that have been modified are displayed
.\"O with a preceding asterisk (\fB*\fP).
\fBOn\fP が設定されていると、履歴行を表示する際に、以前に変更されたも
のの先頭にアスタリスク (\fB*\fP) を付けて表示します。
.TP
.B output\-meta (Off)
.\"O If set to \fBOn\fP, readline will display characters with the
.\"O eighth bit set directly rather than as a meta-prefixed escape
.\"O sequence.
\fBOn\fP が設定されていると、readline は 8 番目のビットが立っている文
字を直接表示します。メタ文字を前置したエスケープシーケンスでの表示は行
いません。
.TP
.B print\-completions\-horizontally (Off)
.\"O If set to \fBOn\fP, readline will display completions with matches
.\"O sorted horizontally in alphabetical order, rather than down the screen.
\fBOn\fP が設定されていると、readline は補完でマッチするものをアルファ
ベット順に横に並べて表示します。画面上では縦には並べません。
.TP
.B show\-all\-if\-ambiguous (Off)
.\"O This alters the default behavior of the completion functions.  If
.\"O set to
.\"O .BR on ,
.\"O words which have more than one possible completion cause the
.\"O matches to be listed immediately instead of ringing the bell.
これは補完機能のデフォルトの挙動を変えます。
.B On
が設定されている場合、単語に対する補完候補が複数個あると、マッチするも
のが即座にリスト表示されます。ベルは鳴らされません。
.TP
.B visible\-stats (Off)
.\"O If set to \fBOn\fP, a character denoting a file's type as reported
.\"O by \fIstat\fP(2) is appended to the filename when listing possible
.\"O completions.
\fBOn\fP が設定されていると、\fIstat\fP(2) で得られるファイルの種類を
表す文字が、補完候補のリスト表示の際に追加されます。
.PD
.\"O .SS "Readline Conditional Constructs"
.SS Readline の条件構文
.PP
.\"O Readline implements a facility similar in spirit to the conditional
.\"O compilation features of the C preprocessor which allows key
.\"O bindings and variable settings to be performed as the result
.\"O of tests.  There are four parser directives used.
Readline には、C 言語のプリプロセッサの条件付きコンパイル機能と似た考
えの機能が実装されています。これを使うとキー割り当てや変数の設定を評価
の結果として実行することができます。パーザディレクティブは 4 つありま
す。
.IP \fB$if\fP
.\"O The 
.\"O .B $if
.\"O construct allows bindings to be made based on the
.\"O editing mode, the terminal being used, or the application using
.\"O readline.  The text of the test extends to the end of the line;
.\"O no characters are required to isolate it.
.B $if
構文を使うと、編集モードや使っている端末、readline を使っているアプリ
ケーションに基づいた割り当てを行うことができます。評価文のテキストは行
の最後まで拡張されます。これを分離するには文字は必要ありません。
.RS
.IP \fBmode\fP
.\"O The \fBmode=\fP form of the \fB$if\fP directive is used to test
.\"O whether readline is in emacs or vi mode.
.\"O This may be used in conjunction
.\"O with the \fBset keymap\fP command, for instance, to set bindings in
.\"O the \fIemacs\-standard\fP and \fIemacs\-ctlx\fP keymaps only if
.\"O readline is starting out in emacs mode.
\fB$if\fP ディレクティブの \fBmode=\fP 形式は、readline が emacs モー
ドか vi モードのどちらになっているかを調べるために使います。例えばこれ
を \fBset keymap\fP コマンドと一緒に使い、readline が emacs モードで始
まった時だけキーの割り当てを \fIemacs\-standard\fP や 
\fIemacs\-ctlx\fP キーマップに設定することができます。
.IP \fBterm\fP
.\"O The \fBterm=\fP form may be used to include terminal-specific
.\"O key bindings, perhaps to bind the key sequences output by the
.\"O terminal's function keys.  The word on the right side of the
.\"O .B =
.\"O is tested against the both full name of the terminal and the portion
.\"O of the terminal name before the first \fB\-\fP.  This allows
.\"O .I sun
.\"O to match both
.\"O .I sun
.\"O and
.\"O .IR sun\-cmd ,
.\"O for instance.
\fBterm=\fP フォームを使って、端末固有のキー割り当てを入れることができ
ます。これは端末のファンクションキーが出力するキーシーケンスを割り当て
る場合などに使うことができます。
.B =
の右辺の単語は、端末の完全な名前および最初の \fB\-\fP の前まで部分的な
名前の両方に対して評価されます。これにより例えば、
.I sun
は
.I sun
と
.I sun\-cmd
の両方にマッチすることができます。
.IP \fBapplication\fP
.\"O The \fBapplication\fP construct is used to include
.\"O application-specific settings.  Each program using the readline
.\"O library sets the \fIapplication name\fP, and an initialization
.\"O file can test for a particular value.
\fBapplication\fP はアプリケーション固有の設定を入れるために使います。
readline ライブラリを使っているプログラムはそれぞれ
\fIアプリケーション名 (application name)\fP を設定し、初期化ファイルは特
定の値を調べることができます。
.\"O This could be used to bind key sequences to functions useful for
.\"O a specific program.  For instance, the following command adds a
.\"O key sequence that quotes the current or previous word in Bash:
これを使って、キーシーケンスを特定のプログラム用の便利な機能に割り当て
ることができます。例えば以下のコマンドは、bash 内で現在または 1 つ前の
単語をクォートするキーシーケンスを追加します:
.sp 1
.RS
.nf
\fB$if\fP Bash
# Quote the current or previous word
"\eC\-xq": "\eeb\e"\eef\e""
\fB$endif\fP
.fi
.RE
.RE
.IP \fB$endif\fP
.\"O This command, as seen in the previous example, terminates an
.\"O \fB$if\fP command.
このコマンドは上の例で見たように、\fB$if\fP コマンドを終了させます。
.IP \fB$else\fP
.\"O Commands in this branch of the \fB$if\fP directive are executed if
.\"O the test fails.
\fB$if\fP ディレクティブのこの分岐内におけるコマンドは、評価が失敗し
た時に実行されます。
.IP \fB$include\fP
.\"O This directive takes a single filename as an argument and reads commands
.\"O and bindings from that file.  For example, the following directive
.\"O would read \fI/etc/inputrc\fP:
このディレクティブはファイル名 1 つを引き数に取り、そのファイルからコ
マンドとキー割り当てを読み込みます。例えば、以下のディレクティブを使う
と \fI/etc/inputrc\fP が読み込まれます:
.sp 1
.RS
.nf
\fB$include\fP \^ \fI/etc/inputrc\fP
.fi
.RE
.\"O .SS Searching
.SS 検索
.PP
.\"O Readline provides commands for searching through the command history
.\"O (see
.\"O .SM
.\"O .B HISTORY
.\"O below) for lines containing a specified string.
.\"O There are two search modes:
.\"O .I incremental
.\"O and
.\"O .IR non-incremental .
readline には、指定した文字列を含む行をコマンド履歴内から探すコマンド
が用意されています (後述の
.SM
.B 履歴
を参照)。検索のモードには、
.I インクリメンタル (incremental)
モードと
.I 非インクリメンタル (non-incremental)
モードの 2 つがあります。
.PP
.\"O Incremental searches begin before the user has finished typing the
.\"O search string.
.\"O As each character of the search string is typed, readline displays
.\"O the next entry from the history matching the string typed so far.
.\"O An incremental search requires only as many characters as needed to
.\"O find the desired history entry.
インクリメンタルサーチは、ユーザが検索文字列の入力を終えるより前に検索
を開始します。検索文字列に文字が追加されるたびに、readline は現在まで
入力した文字列にマッチする履歴から次のエントリを表示します。インクリメ
ンタルサーチで必要なのは、探している履歴エントリを見つけるために必要な
数の文字だけです。
.\"O The characters present in the value of the \fBisearch-terminators\fP
.\"O variable are used to terminate an incremental search.
インクリメンタルサーチを終了させるには、\fBisearch-terminators\fP の値
で現わされる文字を使います。
.\"O If that variable has not been assigned a value the Escape and
.\"O Control-J characters will terminate an incremental search.
この変数に値が代入されていない場合には、エスケープ文字または
Control-J でインクリメンタルサーチが終了します。
.\"O Control-G will abort an incremental search and restore the original
.\"O line.
Control-G はインクリメンタルサーチを異常終了させ、元の行を復元します。
.\"O When the search is terminated, the history entry containing the
.\"O search string becomes the current line.
検索が終了すると、検索文字列を含む履歴エントリが現在の行になります。
.PP
.\"O To find other matching entries in the history list, type Control-S or
.\"O Control-R as appropriate.
.\"O This will search backward or forward in the history for the next
.\"O entry matching the search string typed so far.
.\"O Any other key sequence bound to a readline command will terminate
.\"O the search and execute that command.
.\"O For instance, a \fInewline\fP will terminate the search and accept
.\"O the line, thereby executing the command from the history list.
マッチした他の履歴リストのエントリを見つけるには、Control-S または
Control-R を適宜入力します。これにより、今まで入力した検索文字列にマッ
チする次のエントリを履歴の前方または後方に向かって探します。readline 
に割り当てられた他のキーシーケンスを入力すると検索が終わり、そのコマン
ドが実行されます。例えば、\fI改行\fPは検索を終了させて、その行を入力し
ます。これにより、履歴リスト中のコマンドが実行されます。
.PP
.\"O Non-incremental searches read the entire search string before starting
.\"O to search for matching history lines.  The search string may be
.\"O typed by the user or be part of the contents of the current line.
インクリメンタルでない検索の場合には、履歴行にマッチするものの検索を始
める前に検索する文字列全体を読み込みます。検索文字列には、ユーザが入力
したものか、現在の行の内容の一部を使うことができます。
.\"O .SS "Readline Command Names"
.SS "Readline のコマンド名"
.PP
.\"O The following is a list of the names of the commands and the default
.\"O key sequences to which they are bound.
.\"O Command names without an accompanying key sequence are unbound by default.
以下に示すのは、コマンドの名前およびそれらが割り当てられているデフォル
トのキーシーケンスの一覧です。対応するキーシーケンスが無いコマンド名に
は、デフォルトではキーは割り当てられていません。
.\"O In the following descriptions, \fIpoint\fP refers to the current cursor
.\"O position, and \fImark\fP refers to a cursor position saved by the
.\"O \fBset\-mark\fP command.
.\"O The text between the point and mark is referred to as the \fIregion\fP.
以下の説明では、\fIポイント (point)\fP は現在のカーソルの位置を表し、
\fIマーク (mark)\fP は \fBset\-mark\fP コマンドによって保存されたカーソル位置を
表します。
ポイントとマークの間のテキストは、\fIリージョン (region)\fP で表します。
.\"O .SS Commands for Moving
.SS 移動コマンド
.PP
.PD 0
.TP
.B beginning\-of\-line (C\-a)
.\"O Move to the start of the current line.
現在の行の先頭に移動します。
.TP
.B end\-of\-line (C\-e)
.\"O Move to the end of the line.
行の末尾に移動します。
.TP
.B forward\-char (C\-f)
.\"O Move forward a character.
1 文字進みます。
.TP
.B backward\-char (C\-b)
.\"O Move back a character.
1 文字戻ります。
.TP
.B forward\-word (M\-f)
.\"O Move forward to the end of the next word.  Words are composed of
.\"O alphanumeric characters (letters and digits).
次の単語の最後に進みます。単語は英数字 (文字と数字) からなります。
.TP
.B backward\-word (M\-b)
.\"O Move back to the start of the current or previous word.  Words are
.\"O composed of alphanumeric characters (letters and digits).
現在、あるいは前の単語の先頭に戻ります。単語は英数字 (文字と数字) からな
ります。
.TP
.B clear\-screen (C\-l)
.\"O Clear the screen leaving the current line at the top of the screen.
.\"O With an argument, refresh the current line without clearing the
.\"O screen.
現在の行を画面の一番上の行に残したまま、画面をクリアします。引き数を付
けると、画面をクリアせずに現在の行を再描画します。
.TP
.B redraw\-current\-line
.\"O Refresh the current line.
現在の行を再描画します。
.PD
.\"O .SS Commands for Manipulating the History
.SS 履歴操作のためのコマンド
.PP
.PD 0
.TP
.B accept\-line (Newline, Return)
.\"O Accept the line regardless of where the cursor is.  If this line is
.\"O non-empty, add it to the history list according to the state of the
.\"O .SM
.\"O .B HISTCONTROL
.\"O variable.  If the line is a modified history
.\"O line, then restore the history line to its original state.
カーソルの位置に関わらず、行を入力します。この行が空でなければ、変数
.SM
.B HISTCONTROL
の状態に従って、これが履歴リストに追加されます。行が履歴リストを変更し
たものならば、履歴行は元の状態に戻されます。
.TP
.B previous\-history (C\-p)
.\"O Fetch the previous command from the history list, moving back in
.\"O the list.
履歴リストを戻り、履歴リストから前の行を取り出します。
.TP
.B next\-history (C\-n)
.\"O Fetch the next command from the history list, moving forward in the
.\"O list.
履歴リストを進み、履歴リストから次の行を取り出します。
.TP
.B beginning\-of\-history (M\-<)
.\"O Move to the first line in the history.
履歴の最初の行に移動します。
.TP
.B end\-of\-history (M\->)
.\"O Move to the end of the input history, i.e., the line currently being
.\"O entered.
入力履歴の最後に移動します。つまり、現在入力中の行に移動します。
.TP
.B reverse\-search\-history (C\-r)
.\"O Search backward starting at the current line and moving `up' through
.\"O the history as necessary.  This is an incremental search.
現在の行を開始点にして後方に向かって検索を行い、必要に応じて履歴を「遡っ
て」いきます。これはインクリメンタル検索です。
.TP
.B forward\-search\-history (C\-s)
.\"O Search forward starting at the current line and moving `down' through
.\"O the history as necessary.  This is an incremental search.
現在の行を開始点にして前方に向かって検索を行い、必要に応じて履歴を「下っ
て」いきます。これはインクリメンタル検索です。
.TP
.B non\-incremental\-reverse\-search\-history (M\-p)
.\"O Search backward through the history starting at the current line
.\"O using a non-incremental search for a string supplied by the user.
現在の行を開始点にして、履歴リストを後方に向かって検索を行います。この
際には、ユーザが入力した文字列を探す、インクリメンタルでない検索を用い
ます。
.TP
.B non\-incremental\-forward\-search\-history (M\-n)
.\"O Search forward through the history using a non-incremental search for
.\"O a string supplied by the user.
現在の行を開始点にして、履歴リストを前方に向かって検索を行います。この
際には、ユーザが入力した文字列を探す、インクリメンタルでない検索を用い
ます。
.TP
.B history\-search\-forward
.\"O Search forward through the history for the string of characters
.\"O between the start of the current line and the point.
.\"O This is a non-incremental search.
履歴を前方に向かって検索し、現在の行の先頭とポイントの間の文字列を探します。
これはインクリメンタル検索ではありません。
.TP
.B history\-search\-backward
.\"O Search backward through the history for the string of characters
.\"O between the start of the current line and the point.
.\"O This is a non-incremental search.
履歴を後方に向かって検索し、現在の行の先頭およびポイントの間の文字列を
探します。これはインクリメンタル検索ではありません。
.TP
.B yank\-nth\-arg (M\-C\-y)
.\"O Insert the first argument to the previous command (usually
.\"O the second word on the previous line) at point (the current
.\"O cursor position).  With an argument
.\"O .IR n ,
.\"O insert the \fIn\fPth word from the previous command (the words
.\"O in the previous command begin with word 0).  A negative argument
.\"O inserts the \fIn\fPth word from the end of the previous command.
前のコマンドに対する最初の引き数 (通常は前の行の 2 番目の単語) をポイン
ト (現在のカーソル位置) に挿入します。引き数
.I n
が付いていると、前のコマンドの \fIn\fP 番目の単語 (前のコマンドの単語は 
0 から数えます)。引き数が負ならば、前のコマンドの最後から \fIn\fP 番目
の単語が挿入されます。
.TP
.B
yank\-last\-arg (M\-.\^, M\-_\^)
.\"O Insert the last argument to the previous command (the last word of
.\"O the previous history entry).  With an argument,
.\"O behave exactly like \fByank\-nth\-arg\fP.
.\"O Successive calls to \fByank\-last\-arg\fP move back through the history
.\"O list, inserting the last argument of each line in turn.
前のコマンドの最後の引き数 (一つ前の履歴エントリの最後の単語) を挿入しま
す。引き数があると、\fByank\-nth\-arg\fP と全く同じように動作します。
\fByank\-last\-arg\fP を繰り返して呼び出すと、履歴リストを遡って参照が
行われ、それぞれの行の最後の引き数が順番に挿入されます。
.TP
.B shell\-expand\-line (M\-C\-e)
.\"O Expand the line as the shell does.  This
.\"O performs alias and history expansion as well as all of the shell
.\"O word expansions.  See
.\"O .SM
.\"O .B HISTORY EXPANSION
.\"O below for a description of history expansion.
シェルが行うように行を展開します。これは、シェルが行う他の単語展開に加
えてエイリアスや履歴の展開も行います。履歴の展開の説明については、後述の
.SM
.B 履歴の展開
を参照してください。
.TP
.B history\-expand\-line (M\-^)
.\"O Perform history expansion on the current line.
.\"O See
.\"O .SM
.\"O .B HISTORY EXPANSION
.\"O below for a description of history expansion.
現在の行で履歴の展開を行います。履歴の展開の説明については、後述の
.SM
.B 履歴の展開
を参照してください。
.TP
.B magic\-space
.\"O Perform history expansion on the current line and insert a space.
.\"O See
.\"O .SM
.\"O .B HISTORY EXPANSION
.\"O below for a description of history expansion.
現在の行で履歴の展開を行い、空白を挿入します。履歴の展開の説明について
は、後述の
.SM
.B 履歴の展開
を参照してください。
.TP
.B alias\-expand\-line
.\"O Perform alias expansion on the current line.
.\"O See
.\"O .SM
.\"O .B ALIASES
.\"O above for a description of alias expansion.
現在の行でエイリアスの展開を行います。エイリアスの展開の説明については、
前述の
.SM
.B エイリアス
を参照してください。
.TP
.B history\-and\-alias\-expand\-line
.\"O Perform history and alias expansion on the current line.
現在の行で履歴とエイリアスの展開を行います。
.TP
.B insert\-last\-argument (M\-.\^, M\-_\^)
.\"O A synonym for \fByank\-last\-arg\fP.
\fByank\-last\-arg\fP と同じものです。
.TP
.B operate\-and\-get\-next (C\-o)
.\"O Accept the current line for execution and fetch the next line
.\"O relative to the current line from the history for editing.  Any
.\"O argument is ignored.
現在の行を実行のために入力し、現在の行の次の行を編集するために履歴から
取得します。引き数は全て無視されます。
.PD
.\"O .SS Commands for Changing Text
.SS テキスト編集のためのコマンド
.PP
.PD 0
.TP
.B delete\-char (C\-d)
.\"O Delete the character under the cursor.  If point is at the
.\"O beginning of the line, there are no characters in the line, and
.\"O the last character typed was not bound to \fBdelete\-char\fP,
.\"O then return
.\"O .SM
.\"O .BR EOF .
カーソルがある位置の文字を削除します。ポイントが行の先頭であり、その行
に文字が無く、さらに打ち込んだ最後の文字が \fBdelete\-char\fP に割り当
てられていなければ、
.SM
.B EOF
が返されます。
.TP
.B backward\-delete\-char (Rubout)
.\"O Delete the character behind the cursor.  When given a numeric argument,
.\"O save the deleted text on the kill ring.
カーソルの前の文字を削除します。数値の引き数を与えると、削除したテキス
トをキルリング (kill ring) に保存します。
.TP
.B forward\-backward\-delete\-char
.\"O Delete the character under the cursor, unless the cursor is at the
.\"O end of the line, in which case the character behind the cursor is
.\"O deleted.  By default, this is not bound to a key.
カーソルが行末になければカーソルがある位置の文字を削除します。カーソルが行末に
ある場合には、カーソルの前の文字を削除します。デフォルトでは、これは
キーに割り当てられていません。
.TP
.B quoted\-insert (C\-q, C\-v)
.\"O Add the next character typed to the line verbatim.  This is
.\"O how to insert characters like \fBC\-q\fP, for example.
次に打ち込んだ文字をそのまま行に追加します。これは \fBC\-q\fP 等の文字
を挿入するために使います。
.TP
.B tab\-insert (C\-v TAB)
.\"O Insert a tab character.
タブ文字を挿入します。
.TP
.B self\-insert (a,\ b,\ A,\ 1,\ !,\ ...)
.\"O Insert the character typed.
打ち込んだ文字を挿入します。
.TP
.B transpose\-chars (C\-t)
.\"O Drag the character before point forward over the character at point.
.\"O Point moves forward as well.
.\"O If point is at the end of the line, then transpose the two characters
.\"O before point.
.\"O Negative arguments have no effect.
ポイントの前にある文字を動かし、現在ポイントがある文字より手前に持って
きます。ポイントも前に進みます。ポイントが行の最後にある場合は、ポイン
トの前の 2 文字が交換されます。負の引き数を指定すると、何も起こりません。
.TP
.B transpose\-words (M\-t)
.\"O Drag the word before point past the word after point,
.\"O moving the point over that word as well.
ポイントの前にある単語を動かし、ポイントの後ろにある単語より後ろに持って
いきます。この際には、ポイントも始めに前にあった単語の後ろまで移動します。
.TP
.B upcase\-word (M\-u)
.\"O Uppercase the current (or following) word.  With a negative argument,
.\"O uppercase the previous word, but do not move point.
現在の (または後ろの) 単語を大文字にします。負の引き数を指定すると、前の
単語を大文字にしますが、ポイントは動きません。
.TP
.B downcase\-word (M\-l)
.\"O Lowercase the current (or following) word.  With a negative argument,
.\"O lowercase the previous word, but do not move point.
現在の (または後ろの) 単語を小文字にします。負の引き数を指定すると、前の
単語を小文字にしますが、ポイントは動きません。
.TP
.B capitalize\-word (M\-c)
.\"O Capitalize the current (or following) word.  With a negative argument,
.\"O capitalize the previous word, but do not move point.
現在の (または後ろの) 単語をキャピタライズします。負の引き数を指定すると、
前の単語をキャピタライズしますが、ポイントは動きません。
.PD
.\"O .SS Killing and Yanking
.SS キルとヤンク
.PP
.PD 0
.TP
.B kill\-line (C\-k)
.\"O Kill the text from point to the end of the line.
ポイントから行末までのテキストをキルします。
.TP
.B backward\-kill\-line (C\-x Rubout)
.\"O Kill backward to the beginning of the line.
現在のカーソル位置から行頭までをキルします。
.TP
.B unix\-line\-discard (C\-u)
.\"O Kill backward from point to the beginning of the line.
.\"O The killed text is saved on the kill-ring.
.\"O .\" There is no real difference between this and backward-kill-line
ポイントから行頭までをキルします。キルされたテキストはキルリング
(kill-ring) に入ります。
.\" このコマンドと backward-kill-line は実際には相違点はありません。
.TP
.B kill\-whole\-line
.\"O Kill all characters on the current line, no matter where point is.
現在の行の文字を全てキルします。ポイントの位置は関係ありません。
.TP
.B kill\-word  (M\-d)
.\"O Kill from point to the end of the current word, or if between
.\"O words, to the end of the next word.
.\"O Word boundaries are the same as those used by \fBforward\-word\fP.
ポイントから現在の単語の終わりまでをキルします。ポイントが単語と単
語の間であれば、後ろの単語の終わりまでをキルします。
単語の境界は \fBforward\-word\fP で使われているものと同じです。
.TP
.B backward\-kill\-word (M\-Rubout)
.\"O Kill the word behind point.
.\"O Word boundaries are the same as those used by \fBbackward\-word\fP.
ポイントの下にある単語をキルします。
単語の境界は \fBbackward\-word\fP で使われているものと同じです。
.TP
.B unix\-word\-rubout (C\-w)
.\"O Kill the word behind point, using white space as a word boundary.
.\"O The word boundaries are different from \fBbackward\-kill\-word\fP.
ポイントの下にある単語をキルします。その際には空白を単語の境界として用
います。つまり、単語の境界は \fBbackward\-kill\-word\fP と異なります。
.\"O The killed text is saved on the kill-ring.
キルされたテキストはキルリング (kill-ring) に入ります。
.TP
.B delete\-horizontal\-space (M\-\e)
.\"O Delete all spaces and tabs around point.
ポイントの周りの空白とタブを全て削除します。
.TP
.B kill\-region
.\"O Kill the text in the current region.
現在のリージョン中のテキストをキルします。
.TP
.B copy\-region\-as\-kill
.\"O Copy the text in the region to the kill buffer.
リージョン中のテキストをキルバッファにコピーします。
.TP
.B copy\-backward\-word
.\"O Copy the word before point to the kill buffer.
.\"O The word boundaries are the same as \fBbackward\-word\fP.
ポイントの前の単語をキルバッファにコピーします。単語の境界は
\fBbackward\-word\fP と同じです。
.TP
.B copy\-forward\-word
.\"O Copy the word following point to the kill buffer.
.\"O The word boundaries are the same as \fBforward\-word\fP.
ポイントの後ろの単語をキルバッファにコピーします。単語の境界は
\fBforward\-word\fP と同じです。
.TP
.B yank (C\-y)
.\"O Yank the top of the kill ring into the buffer at the cursor.
キルリングの先頭のテキストをカーソル位置にあるバッファにヤンクします。
.TP
.B yank\-pop (M\-y)
.\"O Rotate the kill ring, and yank the new top.  Only works following
.\"O .B yank
.\"O or
.\"O .BR yank\-pop .
キルリングをローテートし、新たに先頭になったテキストをヤンクします。
.B yank
または
.B yank\-pop
の後にしか使えません。
.PD
.\"O .SS Numeric Arguments
.SS 数値の引き数
.PP
.PD 0
.TP
.B digit\-argument (M\-0, M\-1, ..., M\-\-)
.\"O Add this digit to the argument already accumulating, or start a new
.\"O argument.  M\-\- starts a negative argument.
既に蓄積されている引き数にこの数値を追加します。または、新しい引き数を
始めます。M\-\- を使って、負の値の引き数を始めることができます。
.TP
.B universal\-argument
.\"O This is another way to specify an argument.
.\"O If this command is followed by one or more digits, optionally with a
.\"O leading minus sign, those digits define the argument.
この方法を使っても引き数を指定することができます。このコマンドの後に 1 
つ以上の数字がある場合 (頭にマイナス記号を付けることもできます)、これら
の数字で引き数が定義されます。
.\"O If the command is followed by digits, executing
.\"O .B universal\-argument
.\"O again ends the numeric argument, but is otherwise ignored.
コマンドの後に数字がある場合に、
.B universal\-argument
を再び実行すると数値の引き数を終えることができますが、そうでない場合は
無視されます。
.\"O As a special case, if this command is immediately followed by a
.\"O character that is neither a digit or minus sign, the argument count
.\"O for the next command is multiplied by four.
特別な場合ですが、このコマンドの直後に数字でもマイナス記号でもない文字
がある場合には、次のコマンドの引き数カウントは 4 倍にされます。
.\"O The argument count is initially one, so executing this function the
.\"O first time makes the argument count four, a second time makes the
.\"O argument count sixteen, and so on.
最初は引き数カウントは 1 なので、この機能を一度実行すると引き数カウン
トは 4 になり、次に実行すると引き数カウントは 16 になります。それ以降
も同様です。
.PD
.\"O .SS Completing
.SS 補完
.PP
.PD 0
.TP
.B complete (TAB)
.\"O Attempt to perform completion on the text before point.
.\"O .B Bash
.\"O attempts completion treating the text as a variable (if the
.\"O text begins with \fB$\fP), username (if the text begins with
.\"O \fB~\fP), hostname (if the text begins with \fB@\fP), or
.\"O command (including aliases and functions) in turn.  If none
.\"O of these produces a match, filename completion is attempted.
ポイントの前のテキストについて補完を試みます。
.B bash
が補完を行う際にはテキストの扱いの種類を順に試しますが、その順序は、変
数 (テキストが \fB$\fP で始まる場合)、ユーザ名 (テキストが \fB~\fP で始
まる場合)、ホスト名 (テキストが \fB@\fP で始まる場合)、コマンド (エイリ
アスや関数も含みます) です。これらのうちいずれにもマッチしない場合には、
ファイル名補完を試みます。
.TP
.B possible\-completions (M\-?)
.\"O List the possible completions of the text before point.
ポイントの前のテキストを補完して得られるものの候補を列挙します。
.TP
.B insert\-completions (M\-*)
.\"O Insert all completions of the text before point
.\"O that would have been generated by
.\"O \fBpossible\-completions\fP.
ポイントの前のテキストを補完して得られるものを全て挿入します。挿入され
るものは、\fBpossible\-completions\fP で列挙されるものと同じです。
.TP
.B menu\-complete
.\"O Similar to \fBcomplete\fP, but replaces the word to be completed
.\"O with a single match from the list of possible completions.
.\"O Repeated execution of \fBmenu\-complete\fP steps through the list
.\"O of possible completions, inserting each match in turn.
\fBcomplete\fP コマンドに似ていますが、補完される単語を、補完の候補リ
ストのうちの 1 つと置換します。
\fBmenu\-complete\fP を繰り返して実行すると、補完の候補リストがそれぞ
れ順番に挿入されます。
.\"O At the end of the list of completions, the bell is rung and the
.\"O original text is restored.
補完リストの最後まで来るとベルが鳴らされ、最終的には元のテキストに戻り
ます。
.\"O An argument of \fIn\fP moves \fIn\fP positions forward in the list
.\"O of matches; a negative argument may be used to move backward
.\"O through the list.
.\"O This command is intended to be bound to \fBTAB\fP, but is unbound
.\"O by default.
引き数 \fIn\fP を指定すると、リスト中の位置が \fIn\fP 個進みます。負の
引き数を指定すると、リスト中を逆向きに戻ることができます。このコマンド
は \fBTAB\fP に割り当てることを意図して用意されたものですが、デフォル
トでは割り当ては行われていません。
.TP
.B delete\-char\-or\-list
.\"O Deletes the character under the cursor if not at the beginning or
.\"O end of the line (like \fBdelete\-char\fP).
.\"O If at the end of the line, behaves identically to
.\"O \fBpossible\-completions\fP.
.\"O This command is unbound by default.
カーソルが行頭や行末に無ければ、カーソルの下の文字を削除します
(\fBdelete\-char\fP と同様です)。カーソルが行末にある場合は、
\fBpossible\-completions\fP と同じ動作をします。このコマンドはデフォル
トではキーに割り当てられていません。
.TP
.B complete\-filename (M\-/)
.\"O Attempt filename completion on the text before point.
ポイントの前のテキストについて、ファイル名の補完を試みます。
.TP
.B possible\-filename\-completions (C\-x /)
.\"O List the possible completions of the text before point,
.\"O treating it as a filename.
ポイントの前のテキストについて、補完の候補を列挙します。テキストはファ
イル名として扱います。
.TP
.B complete\-username (M\-~)
.\"O Attempt completion on the text before point, treating
.\"O it as a username.
ポイントの前のテキストについて補完を試みます。テキストはユーザ名として
扱います。
.TP
.B possible\-username\-completions (C\-x ~)
.\"O List the possible completions of the text before point,
.\"O treating it as a username.
ポイントの前のテキストについて補完の候補を列挙します。テキストはユーザ
名として扱います。
.TP
.B complete\-variable (M\-$)
.\"O Attempt completion on the text before point, treating
.\"O it as a shell variable.
ポイントの前のテキストについて補完を試みます。テキストはシェル変数とし
て扱います。
.TP
.B possible\-variable\-completions (C\-x $)
.\"O List the possible completions of the text before point,
.\"O treating it as a shell variable.
ポイントの前のテキストについて補完の候補を列挙します。テキストはシェル
変数として扱います。
.TP
.B complete\-hostname (M\-@)
.\"O Attempt completion on the text before point, treating
.\"O it as a hostname.
ポイントの前のテキストについて補完を試みます。テキストはホスト名として
扱います。
.TP
.B possible\-hostname\-completions (C\-x @)
.\"O List the possible completions of the text before point,
.\"O treating it as a hostname.
ポイントの前のテキストについて補完の候補を列挙します。テキストはホスト
名として扱います。
.TP
.B complete\-command (M\-!)
.\"O Attempt completion on the text before point, treating
.\"O it as a command name.  Command completion attempts to
.\"O match the text against aliases, reserved words, shell
.\"O functions, shell builtins, and finally executable filenames,
.\"O in that order.
ポイントの前のテキストについて補完を試みます。テキストはコマンド名とし
て扱います。コマンド補完の際にマッチングを試みる順序は、エイリアス、予
約語、シェル関数、シェルの組み込みコマンド、実行ファイルです。
.TP
.B possible\-command\-completions (C\-x !)
.\"O List the possible completions of the text before point,
.\"O treating it as a command name.
ポイントの前のテキストについて補完の候補を列挙します。テキストはコマン
ド名として扱います。
.TP
.B dynamic\-complete\-history (M\-TAB)
.\"O Attempt completion on the text before point, comparing
.\"O the text against lines from the history list for possible
.\"O completion matches.
ポイントの前のテキストについて補完を試みます。テキストの比較が行われる
のは、履歴リスト中の行のうち補完の候補となるものです。
.TP
.B complete\-into\-braces (M\-{)
.\"O Perform filename completion and insert the list of possible completions
.\"O enclosed within braces so the list is available to the shell (see
.\"O .B Brace Expansion
.\"O above).
ファイル名補完を実行し、補完の候補リストを挿入します。シェルが利用可能な
リストとなるように、返される候補はブレースで括られます (前述の
.B ブレース展開
を参照してください)。
.PD
.\"O .SS Keyboard Macros
.SS キーボードマクロ
.PP
.PD 0
.TP
.B start\-kbd\-macro (C\-x (\^)
.\"O Begin saving the characters typed into the current keyboard macro.
現在のキーボードマクロに対して入力された文字列の保存を開始します。
.TP
.B end\-kbd\-macro (C\-x )\^)
.\"O Stop saving the characters typed into the current keyboard macro
.\"O and store the definition.
現在のキーボードマクロに対して入力された文字列の保存を終了し、この定義を格納
します。
.TP
.B call\-last\-kbd\-macro (C\-x e)
.\"O Re-execute the last keyboard macro defined, by making the characters
.\"O in the macro appear as if typed at the keyboard.
最後に定義されたキーボードマクロを再実行します。再実行は、マクロ中の文
字列をキーボードでの入力と同様に出力することによって行います。
.PD
.\"O .SS Miscellaneous
.SS その他
.PP
.PD 0
.TP
.B re\-read\-init\-file (C\-x C\-r)
.\"O Read in the contents of the \fIinputrc\fP file, and incorporate
.\"O any bindings or variable assignments found there.
\fIinputrc\fP ファイルの内容を読み込み、このファイル中の割り当てや変数
設定を取り込みます。
.TP
.B abort (C\-g)
.\"O Abort the current editing command and
.\"O ring the terminal's bell (subject to the setting of
.\"O .BR bell\-style ).
現在の編集行を捨て、端末のベルを鳴らします (この動作は
.B bell\-style
の設定に従って行います)。
.TP
.B do\-uppercase\-version (M\-a, M\-b, M\-\fIx\fP, ...)
.\"O If the metafied character \fIx\fP is lowercase, run the command
.\"O that is bound to the corresponding uppercase character.
メタ文字の入力に使う文字 \fIx\fP が小文字であれば、これに対応する大文
字に割り当てられているコマンドを実行します。
.TP
.B prefix\-meta (ESC)
.\"O Metafy the next character typed.
.\"O .SM
.\"O .B ESC
.\"O .B f
.\"O is equivalent to
.\"O .BR Meta\-f .
次に入力した文字を、メタ文字の入力に使う文字にします。
.SM
.B ESC
.B f
は
.B Meta\-f
と同じ意味です。
.TP
.B undo (C\-_, C\-x C\-u)
.\"O Incremental undo, separately remembered for each line.
インクリメンタルアンドゥを行います。これは行ごとに別々に記憶されていま
す。
.TP
.B revert\-line (M\-r)
.\"O Undo all changes made to this line.  This is like executing the
.\"O .B undo
.\"O command enough times to return the line to its initial state.
この行に対して行った変更を全て取り消します。このコマンドは、行が初期状
態に戻るまで
.B undo
コマンドを実行するようなものです。
.TP
.B tilde\-expand (M\-&)
.\"O Perform tilde expansion on the current word.
現在の単語についてチルダ展開を実行します。
.TP
.B set\-mark (C\-@, M\-<space>)
.\"O Set the mark to the current point.  If a
.\"O numeric argument is supplied, the mark is set to that position.
現在のポイントをマークに設定します。数字の引き数が与えられた場合には、
マークにはその位置が設定されます。
.TP
.B exchange\-point\-and\-mark (C\-x C\-x)
.\"O Swap the point with the mark.  The current cursor position is set to
.\"O the saved position, and the old cursor position is saved as the mark.
ポイントをマークと入れ換えます。現在のカーソル位置は保存されている位置
となり、古いカーソル位置がマークとして保存されます。
.TP
.B character\-search (C\-])
.\"O A character is read and point is moved to the next occurrence of that
.\"O character.  A negative count searches for previous occurrences.
文字を 1 つ読み込み、その文字が次に現われる場所にポイントを移動させま
す。負のカウントを与えると、その文字が前に現われた場所を探します。
.TP
.B character\-search\-backward (M\-C\-])
.\"O A character is read and point is moved to the previous occurrence of that
.\"O character.  A negative count searches for subsequent occurrences.
文字を 1 つ読み込み、その文字が前に現われた場所にポイントを移動させま
す。負のカウントを与えると、その文字が次に現われる場所を探します。
.TP
.B insert\-comment (M\-#)
.\"O The value of the readline
.\"O .B comment\-begin
.\"O variable is inserted at the beginning of the current line, and the line
.\"O is accepted as if a newline had been typed.  The default value of
.\"O \fBcomment\-begin\fP causes this command to make the current line
.\"O a shell comment.
まず readline の
.B comment\-begin
変数の値が現在の行の先頭に挿入され、次に改行が打ち込まれたのと同じよう
に行の入力が行われます。
\fBcomment\-begin\fP のデフォルト値によって、このコマンドは現在の行を
シェルのコメントとします。
.TP
.B glob\-expand\-word (C\-x *)
.\"O The word before point is treated as a pattern for pathname expansion,
.\"O and the list of matching file names is inserted, replacing the word.
ポイントの前の単語がパス名展開のパターンとして扱われ、この単語と置き換
えられる形でマッチするファイル名のリストが挿入されます。
.TP
.B glob\-list\-expansions (C\-x g)
.\"O The list of expansions that would have been generated by
.\"O .B glob\-expand\-word
.\"O is displayed, and the line is redrawn.
.B glob\-expand\-word
で生成されるのと同じ展開結果のリストが表示され、行が再描画されます。
.TP
.B dump\-functions
.\"O Print all of the functions and their key bindings to the
.\"O readline output stream.  If a numeric argument is supplied,
.\"O the output is formatted in such a way that it can be made part
.\"O of an \fIinputrc\fP file.
機能とそのキー割り当てを全て、readline の出力ストリームに出力します。
数値の引き数を与えると、出力は \fIinputrc\fP に書き込める形に整形され
ます。
.TP
.B dump\-variables
.\"O Print all of the settable readline variables and their values to the
.\"O readline output stream.  If a numeric argument is supplied,
.\"O the output is formatted in such a way that it can be made part
.\"O of an \fIinputrc\fP file.
設定可能な readline の変数とその値を全て readline の出力ストリームに出
力します。数値の引き数を与えると、出力は \fIinputrc\fP に書き込める形
に整形されます。
.TP
.B dump\-macros
.\"O Print all of the readline key sequences bound to macros and the
.\"O strings they ouput.  If a numeric argument is supplied,
.\"O the output is formatted in such a way that it can be made part
.\"O of an \fIinputrc\fP file.
マクロとマクロが出力する文字列に割り当てられた readline のキーシーケン
スを全て出力します。数値の引き数を与えると、出力は \fIinputrc\fP に書
き込める形に整形されます。
.\"O fujiwara: ouput は output の typo でしょ?
.TP
.B display\-shell\-version (C\-x C\-v)
.\"O Display version information about the current instance of
.\"O .BR bash .
現在実行している
.B bash
のバージョン情報を表示します。
.PD
.\"O .SS Programmable Completion
.SS "プログラム補完"
.PP
.\"O When word completion is attempted for an argument to a command for
.\"O which a completion specification (a \fIcompspec\fP) has been defined
.\"O using the \fBcomplete\fP builtin (see
.\"O .SM
.\"O .B "SHELL BUILTIN COMMANDS"
.\"O below), the programmable completion facilities are invoked.
\fBcomplete\fP 組み込みコマンドによって補完仕様 (\fIcompspec\fP) が定義
されているコマンドに対して引き数の単語補完が試みられると、
プログラム可能な補完の機能が呼び出されます
(\fBcomplete\fP 組み込みコマンドについては、後述する
.SM
.B "シェルの組み込みコマンド"
を参照)。
.PP
.\"O First, the command name is identified.
.\"O If a compspec has been defined for that command, the
.\"O compspec is used to generate the list of possible completions for the word.
.\"O If the command word is a full pathname, a compspec for the full
.\"O pathname is searched for first.
.\"O If no compspec is found for the full pathname, an attempt is made to
.\"O find a compspec for the portion following the final slash.
まず、コマンド名が特定されます。
そのコマンドに対して補完仕様が定義されていれば、補完仕様は単語の補完候補の
リストを作成するために使用されます。
コマンドの単語がフルパス名であれば、最初にフルパス名の補完仕様が検索されます。
フルパス名の補完仕様が見つからなかった場合は、最後のスラッシュ以降の部分に
該当する補完仕様を見つけようします。
.PP
.\"O Once a compspec has been found, it is used to generate the list of
.\"O matching words.
.\"O If a compspec is not found, the default \fBbash\fP completion as
.\"O described above under \fBCompleting\fP is performed.
補完仕様が見つかると、マッチする単語のリストを作成するために使用されます。
補完仕様が見つからなかった場合は、前述の \fB補完\fP で説明したような
デフォルトの \fBbash\fP の補完が行われます。
.PP
.\"O First, the actions specified by the compspec are used.
.\"O Only matches which are prefixed by the word being completed are
.\"O returned.
.\"O When the
.\"O .B \-f
.\"O or
.\"O .B \-d
.\"O option is used for filename or directory name completion, the shell
.\"O variable
.\"O .SM
.\"O .B FIGNORE
.\"O is used to filter the matches.
まず、補完仕様で指定された動作が用いられます。
補完される単語の前置部分にマッチするものだけが返されます。
ファイル名やディレクトリ名の補完に
.B \-f
や
.B \-d
オプションが使用された場合は、シェル変数
.SM
.B FIGNORE
がマッチのフィルタとして使用されます。
.PP
.\"O Any completions specified by a filename expansion pattern to the
.\"O \fB\-G\fP option are generated next.
.\"O The words generated by the pattern need not match the word
.\"O being completed.
.\"O The
.\"O .SM
.\"O .B GLOBIGNORE
.\"O shell variable is not used to filter the matches, but the
.\"O .SM
.\"O .B FIGNORE
.\"O variable is used.
\fB\-G\fP オプションによって指定されたファイル名展開パターンの補完が
続いて生成されます。
パターンによって生成された単語は、補完される単語とマッチする必要は
ありません。
.SM
.B GLOBIGNORE
シェル変数はマッチのフィルタとしては使われませんが、
.SM
.B FIGNORE
変数は使用されます。
.PP
.\"O Next, the string specified as the argument to the \fB\-W\fP option
.\"O is considered.
.\"O The string is first split using the characters in the
.\"O .SM
.\"O .B IFS
.\"O special variable as delimiters.
.\"O Shell quoting is honored.
.\"O Each word is then expanded using
.\"O brace expansion, tilde expansion, parameter and variable expansion,
.\"O command substitution, arithmetic expansion, and pathname expansion,
.\"O as described above under 
.\"O .SM
.\"O .BR EXPANSION .
.\"O The results are split using the rules described above under
.\"O \fBWord Splitting\fP.
.\"O The results of the expansion are prefix-matched against the word being
.\"O completed, and the matching words become the possible completions.
続いて、\fB\-W\fP オプションで指定された引き数の文字列が考慮されます。
文字列は、最初に
.SM
.B IFS
特殊変数の文字を区切り文字として分割されます。
シェルのクォート処理は考慮されます。
それぞれの単語は、前述の
.SM
.B 展開
で示したように、ブレース展開、チルダ展開、パラメータと変数の展開、
コマンド置換、算術式展開、パス名展開が行われます。
結果は、前述の \fB単語の分割\fP で示した規則によって分割されます。
展開の結果は補完される単語の前置部分とマッチが行われ、
マッチした単語が補完候補となります。
.PP
.\"O After these matches have been generated, any shell function or command
.\"O specified with the \fB\-F\fP and \fB\-C\fP options is invoked.
.\"O When the command or function is invoked, the
.\"O .SM
.\"O .B COMP_LINE
.\"O and
.\"O .SM
.\"O .B COMP_POINT
.\"O variables are assigned values as described above under
.\"O \fBShell Variables\fP.
.\"O If a shell function is being invoked, the 
.\"O .SM
.\"O .B COMP_WORDS
.\"O and
.\"O .SM
.\"O .B COMP_CWORD
.\"O variables are also set.
.\"O When the function or command is invoked, the first argument is the
.\"O name of the command whose arguments are being completed, the
.\"O second argument is the word being completed, and the third argument
.\"O is the word preceding the word being completed on the current command line.
.\"O No filtering of the generated completions against the word being completed
.\"O is performed; the function or command has complete freedom in generating
.\"O the matches.
これらのマッチが生成された後、シェル関数や \fB\-F\fP や \fB\-C\fP オプション
で指定されたコマンドが呼び出されます。
コマンドや関数が呼び出されるときは、
.SM
.B COMP_LINE
と
.SM
.B COMP_POINT
変数に後段の \fBシェル変数\fP で示すように値が設定されます。
シェル関数が呼び出される場合は、
.SM
.B COMP_WORDS
と
.SM
.B COMP_CWORD
変数も設定されます。
関数やコマンドが呼び出されるときは、第一引き数は引き数が補完されるコマンドの
名前、第二引き数は補完される単語、第三引き数は現在のコマンドラインで
補完される単語に先行する単語となります。
補完される単語に対して生成された補完の候補はフィルタリングされません。
関数やコマンドは生成されたマッチとは無関係に補完されます。
.PP
.\"O Any function specified with \fB\-F\fP is invoked first.
.\"O The function may use any of the shell facilities, including the
.\"O \fBcompgen\fP builtin described below, to generate the matches.
.\"O It must put the possible completions in the
.\"O .SM
.\"O .B COMPREPLY
.\"O array variable.
\fB\-F\fP で指定された関数がまず呼び出されます。
関数は、後述する \fBcompgen\fP 組み込みコマンドを含めた全てのシェルの
機能を使ってマッチを生成します。
補完候補は
.SM
.B COMPREPLY
配列変数に必ず格納されます。
.PP
.\"O Next, any command specified with the \fB\-C\fP option is invoked
.\"O in an environment equivalent to command substitution.
.\"O It should print a list of completions, one per line, to the
.\"O standard output.
.\"O Backslash may be used to escape a newline, if necessary.
続いて、\fB\-C\fP オプションで指定されたコマンドが呼び出されて、
環境変数をコマンド置換します。
このコマンドは、補完候補を 1 行にひとつずつ標準出力に出力します。
必要があれば、バックスラッシュが改行をエスケープするために使用されます。
.PP
.\"O After all of the possible completions are generated, any filter
.\"O specified with the \fB\-X\fP option is applied to the list.
.\"O The filter is a pattern as used for pathname expansion; a \fB&\fP
.\"O in the pattern is replaced with the text of the word being completed.
.\"O A literal \fB&\fP may be escaped with a backslash; the backslash
.\"O is removed before attempting a match.
.\"O Any completion that matches the pattern will be removed from the list.
.\"O A leading \fB!\fP negates the pattern; in this case any completion
.\"O not matching the pattern will be removed.
全ての補完候補が生成された後で、\fB\-X\fP オプションで指定されたフィルタが
補完候補に作用します。
フィルタは、パス名展開で使用されたようなパターンです。パターン中の
\fB&\fP は補完される単語に置換されます。
文字通りの \fB&\fP はバックスラッシュでエスケープします。バックスラッシュは
マッチを試みる前に削除されます。
パターンにマッチした補完は候補から削除されます。
先行する \fB!\fP はパターンを否定します。この場合、パターンにマッチしなかった
補完が削除されます。
.PP
.\"O Finally, any prefix and suffix specified with the \fB\-P\fP and \fB\-S\fP
.\"O options are added to each member of the completion list, and the result is
.\"O returned to the readline completion code as the list of possible
.\"O completions.
最後に、\fB\-P\fP と \fB\-S\fP オプションで指定された前置部分と後置部分が
補完候補のそれぞれに加えられます。そして、結果が readline 補完コードに
補完候補のリストとして返されます。
.PP
.\"O If a compspec is found, whatever it generates is returned to the completion
.\"O code as the full set of possible completions.
.\"O The default \fBbash\fP completions are not attempted, and the readline
.\"O default of filename completion is disabled.
補完仕様が見つかった場合は、作成されたものは完全な補完候補として補完コードに
返されます。
デフォルトの \fBbash\fP 補完は試みられず、readline のデフォルトのファイル名補完
は無効になります。
