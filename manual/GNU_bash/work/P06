.\"O .SH FUNCTIONS
.SH 関数
.\"O A shell function, defined as described above under
.\"O .SM
.\"O .BR "SHELL GRAMMAR" ,
.\"O stores a series of commands for later execution.
シェル関数は、後で使うために一連のコマンドを保存するものです。シェル関
数の定義は既に
.SM
.BR シェルの文法
で説明しています。
.\"O When the name of a shell function is used as a simple command name,
.\"O the list of commands associated with that function name is executed.
シェル関数名が単純なコマンド名として使われた場合、関数名に対応するコマ
ンド群が実行されます。
.\"O Functions are executed in the context of the
.\"O current shell; no new process is created to interpret
.\"O them (contrast this with the execution of a shell script).
関数は現在のシェルのコンテキスト内で実行されます。つまり、新しいプロセ
スを生成して関数を処理することはありません(これはシェルスクリプトと対
照的な点です)。
.\"O When a function is executed, the arguments to the
.\"O function become the positional parameters
.\"O during its execution.
関数の実行中には、関数に与えた引き数が位置付きパラメータとなります。
.\"O The special parameter
.\"O .B #
.\"O is updated to reflect the change.  Positional parameter 0
.\"O is unchanged.
特殊パラメータ
.B #
は更新され、この変更が反映されます。位置付きパラメータ 0 は変わりません。
.\"O The
.\"O .SM
.\"O .B FUNCNAME
.\"O variable is set to the name of the function while the function
.\"O is executing.
関数の実行中は
.SM
.B FUNCNAME
変数に関数の名前が設定されます。
.\"O All other aspects of the shell execution
.\"O environment are identical between a function and its caller
.\"O with the exception that the
.\"O .SM
.\"O .B DEBUG
.\"O trap (see the description of the
.\"O .B trap
.\"O builtin under
.\"O .SM
.\"O .B SHELL BUILTIN COMMANDS
.\"O below) is not inherited.
シェル実行環境の状態は全て、関数とその呼び出し側で同じになりますが、
例外として
.SM
.B DEBUG
トラップ(後述の
.SM
.B シェルの組み込みコマンド
の項で、組み込みコマンド
.B trap
の説明を参照してください)は継承されません。
.PP
.\"O Variables local to the function may be declared with the
.\"O .B local
.\"O builtin command.  Ordinarily, variables and their values
.\"O are shared between the function and its caller.
関数ローカルの変数は、組み込みコマンド
.B local
で宣言することができます。普通は、変数とその値は関数とその呼び出し側で
共有されます。
.PP
.\"O If the builtin command
.\"O .B return
.\"O is executed in a function, the function completes and
.\"O execution resumes with the next command after the function
.\"O call.  When a function completes, the values of the
.\"O positional parameters and the special parameter
.\"O .B #
.\"O are restored to the values they had prior to the function's
.\"O execution.
組み込みコマンド
.B return
が関数中で実行された場合、関数は終了し、関数呼び出しの次のコマンドから
実行が再開されます。関数の終了時には、位置付きパラメータの値と特殊パラ
メータ
.B #
の値は、関数の実行前の値に戻ります。
.PP
.\"O Function names and definitions may be listed with the
.\"O .B \-f
.\"O option to the
.\"O .B declare
.\"O or
.\"O .B typeset
.\"O builtin commands.  The
.\"O .B \-F
.\"O option to
.\"O .B declare
.\"O or
.\"O .B typeset
.\"O will list the function names only.
関数の名前と定義をリスト表示するには、組み込みコマンドの
.B declare
や
.B typeset
にオプション
.B \-f
を付けて実行します。
.B declare
や
.B typeset
にオプション
.B \-F
を付けると、関数名だけがリスト表示されます。
.\"O Functions may be exported so that subshells
.\"O automatically have them defined with the
.\"O .B \-f
.\"O option to the 
.\"O .B export
.\"O builtin.
関数をエクスポートして、サブシェルでその関数が自動的に定義されている状
態にすることができます。これを行うには、組み込みコマンドの
.B export
に
.B \-f
オプションを付けて実行します。
.PP
.\"O Functions may be recursive.  No limit is imposed on the number
.\"O of recursive calls.
関数は再帰させることができます。再帰呼び出しの回数には制限はありません。
.\"O .SH "ARITHMETIC EVALUATION"
.SH 算術式評価
.\"O The shell allows arithmetic expressions to be evaluated, under
.\"O certain circumstances (see the \fBlet\fP builtin command and
.\"O \fBArithmetic Expansion\fP).
.\"O Evaluation is done in long integers with no check for overflow,
.\"O though division by 0 is trapped and flagged as an error.
.\"O The operators and their precedence and associativity are the same
.\"O as in the C language.
.\"O The following list of operators is grouped into levels of
.\"O equal-precedence operators.
.\"O The levels are listed in order of decreasing precedence.
シェルにおいては、特定の状況下で算術式を評価させることができます(組み
込みコマンドの \fBlet\fP と\fB算術式展開\fPを参照してください)。評価は 
long 型の整数として行われ、オーバーフローのチェックは行われません。た
だし、0 での除算はトラップされ、エラーとしてのフラグが立てられます。
演算子とその優先度、結合規則はC言語と同じです。
以下のリストは、同じ優先度を持つ演算子をグループとしてまとめて列挙した
ものです。優先度の高いものから順に列挙しています。
.PP
.PD 0
.TP
.B \fIid\fP++ \fIid\fP\-\-
.\"O variable post-increment and post-decrement
.\" motoki: !!!
変数の評価後のincrement(加算)/decrement(減算)
.TP
.B ++\fIid\fP \-\-\fIid\fP
.\"O variable pre-increment and pre-decrement
.\" motoki: !!!
変数の評価前のincrement(加算)/decrement(減算)
.TP
.B \- +
.\"O unary minus and plus
単項式の負と正
.TP
.B ! ~
.\"O logical and bitwise negation
論理的否定とビット単位の否定
.TP
.B **
.\"O exponentiation
指数
.TP
.B * / %
.\"O multiplication, division, remainder
乗算、除算、剰余
.TP
.B + \-
.\"O addition, subtraction
加算と減算
.TP
.B << >>
.\"O left and right bitwise shifts
左ビットシフトと右ビットシフト
.TP
.B <= >= < >
.\"O comparison
比較
.TP
.B == !=
.\"O equality and inequality
等値と非等値
.TP
.B &
.\"O bitwise AND
ビット単位の AND
.TP
.B ^
.\"O bitwise exclusive OR
ビット単位の排他的 OR
.TP
.B |
.\"O bitwise OR
ビット単位の OR
.TP
.B &&
.\"O logical AND
論理的 AND
.TP
.B ||
.\"O logical OR
論理的 OR
.TP
.B \fIexpr\fP?\fIexpr\fP:\fIexpr\fP
.\"O conditional evaluation
条件付き実行
.TP
.B = *= /= %= += \-= <<= >>= &= ^= |=
.\"O assignment
代入
.TP
.B \fIexpr1\fP , \fIexpr2\fP
.\"O comma
コンマ
.PD
.PP
.\"O Shell variables are allowed as operands; parameter expansion is
.\"O performed before the expression is evaluated.
.\"O The value of a parameter is coerced to a long integer within
.\"O an expression.
シェル変数はオペランドにすることができます。パラメータ展開は式の評価よ
り前に行われます。式の中では、パラメータの値は long 型の整数に強制的に
変換されます。
.\"O Within an expression, shell variables may also be referenced by name
.\"O without using the parameter expansion syntax.
.\"O The value of a variable is evaluated as an arithmetic expression
.\"O when it is referenced.
式の中では、シェル変数は、パラメータ展開規則を用いず、変数名で参照することが
できます。変数の値は変数が参照された際に算術式として評価されます。
.\"O A shell variable need not have its integer attribute
.\"O turned on to be used in an expression.
式で用いるためにシェル変数の整数属性を有効にする必要はありません。
.PP
.\"O Constants with a leading 0 are interpreted as octal numbers.
.\"O A leading 0x or 0X denotes hexadecimal.
.\"O Otherwise, numbers take the form [\fIbase#\fP]n, where \fIbase\fP
.\"O is a decimal number between 2 and 64 representing the arithmetic
.\"O base, and \fIn\fP is a number in that base.
.\"O If \fIbase#\fP is omitted, then base 10 is used.
先頭が 0 である定数は 8 進数として解釈されます。先頭が 0x または 0X な
らば 16 進数として解釈されます。それ以外の場合には、数値は
[\fIbase#\fP]n の形式で表します。ここで \fIbase\fP は 2 から 64 の間の
10 進数であり、算術的な意味での基数を表します。\fIn\fP はその基数にお
ける数を表します。
.\"O The digits greater than 9 are represented by the lowercase letters,
.\"O the uppercase letters, _, and @, in that order.
.\"O If \fIbase\fP is less than or equal to 36, lowercase and uppercase
.\"O letters may be used interchangably to represent numbers between 10
.\"O and 35.
ある桁において 9 より大きい数字を表すには文字を使います。文字を使う場
合には、アルファベット小文字、大文字、_, @ をこの順番で使います。
\fIbase\fP は 36 以下の場合には、大文字と小文字は区別されず、大文字と小文字
のどちらを使っても 10 から 35 までの数字を表現することができます。
.PP
.\"O Operators are evaluated in order of precedence.  Sub-expressions in
.\"O parentheses are evaluated first and may override the precedence
.\"O rules above.
演算子は優先度の順に評価されます。括弧内にある部分式は最初に評価され、
前述の優先規則よりも優先させることができます。
.\"O .SH "CONDITIONAL EXPRESSIONS"
.SH 条件式
.\"O Conditional expressions are used by the \fB[[\fP compound command and
.\"O the \fBtest\fP and \fB[\fP builtin commands to test file attributes
.\"O and perform string and arithmetic comparisons.
.\"O Expressions are formed from the following unary or binary primaries.
.\"O If any \fIfile\fP argument to one of the primaries is of the form
.\"O \fI/dev/fd/n\fP, then file descriptor \fIn\fP is checked.
条件式は複合コマンド \fB[[\fP と組み込みコマンドの \fBtest\fP および
\fB[\fP によって使うことができ、ファイルの属性を調べたり、文字列比較や
算術式比較を行ったりすることができます。式は以下に示す単項のプライマリ
や二値のプライマリから構成されます。プライマリのいずれかに対する
\fIfile\fP 引き数が \fI/dev/fd/n\fP という形式ならば、ファイルデスクリ
プタ \fIn\fP が調べられます。
.\"O If the \fIfile\fP argument to one of the primaries is one of
.\"O \fI/dev/stdin\fP, \fI/dev/stdout\fP, or \fI/dev/stderr\fP, file
.\"O descriptor 0, 1, or 2, respectively, is checked.
プライマリのいずれかに対する \fIfile\fP 引き数が
\fI/dev/stdin\fP、\fI/dev/stdout\fP、\fI/dev/stderr\fP のいずれかで
あれば、 対応するファイルデスクリプタが調べられます。
( \fI/dev/stdin\fP、\fI/dev/stdout\fP、\fI/dev/stderr\fP に対応する
ファイルデスクリプタはそれぞれ 0、1、2 です。)
.sp 1
.PD 0
.TP
.B \-a \fIfile\fP
.\"O True if \fIfile\fP exists.
\fIfile\fP が存在するならば真となります。
.TP
.B \-b \fIfile\fP
.\"O True if \fIfile\fP exists and is a block special file.
\fIfile\fP が存在し、かつブロック特殊ファイルならば真となります。
.TP
.B \-c \fIfile\fP
.\"O True if \fIfile\fP exists and is a character special file.
\fIfile\fP が存在し、かつキャラクタ特殊ファイルならば真となります。
.TP
.B \-d \fIfile\fP
.\"O True if \fIfile\fP exists and is a directory.
\fIfile\fP が存在し、かつディレクトリならば真となります。
.TP
.B \-e \fIfile\fP
.\"O True if \fIfile\fP exists.
\fIfile\fP が存在すれば真となります。
.TP
.B \-f \fIfile\fP
.\"O True if \fIfile\fP exists and is a regular file.
\fIfile\fP が存在し、かつ通常ファイルならば真となります。
.TP
.B \-g \fIfile\fP
.\"O True if \fIfile\fP exists and is set-group-id.
\fIfile\fP が存在し、かつ set-group-id されていれば真となります。
.TP
.B \-h \fIfile\fP
.\"O True if \fIfile\fP exists and is a symbolic link.
\fIfile\fP が存在し、かつシンボリックリンクならば真となります。
.TP
.B \-k \fIfile\fP
.\"O True if \fIfile\fP exists and its ``sticky'' bit is set.
\fIfile\fP が存在し、かつ ``sticky'' ビットが設定されていれば真となり
ます。
.TP
.B \-p \fIfile\fP
.\"O True if \fIfile\fP exists and is a named pipe (FIFO).
\fIfile\fP が存在し、かつ名前付きパイプ(FIFO)ならば真となります。
.TP
.B \-r \fIfile\fP
.\"O True if \fIfile\fP exists and is readable.
\fIfile\fP が存在し、かつ読み込み可能ならば真となります。
.TP
.B \-s \fIfile\fP
.\"O True if \fIfile\fP exists and has a size greater than zero.
\fIfile\fP が存在し、かつそのサイズが 0 より大きければ真となります。
.TP
.B \-t \fIfd\fP
.\"O True if file descriptor
.\"O .I fd
.\"O is open and refers to a terminal.
ファイルデスクリプタ
.I fd
がオープンされており、かつ端末を参照していれば真となります。
.TP
.B \-u \fIfile\fP
.\"O True if \fIfile\fP exists and its set-user-id bit is set.
\fIfile\fP が存在し、かつ set-user-id ビットが設定されていれば真となり
ます。
.TP
.B \-w \fIfile\fP
.\"O True if \fIfile\fP exists and is writable.
\fIfile\fP が存在し、かつ書き込み可能ならば真となります。
.TP
.B \-x \fIfile\fP
.\"O True if \fIfile\fP exists and is executable.
\fIfile\fP が存在し、かつ実行可能ならば真となります。
.TP
.B \-O \fIfile\fP
.\"O True if \fIfile\fP exists and is owned by the effective user id.
\fIfile\fP が存在し、かつ実効ユーザIDに所有されていれば真となります。
.TP
.B \-G \fIfile\fP
.\"O True if \fIfile\fP exists and is owned by the effective group id.
\fIfile\fP が存在し、かつ実効グループIDに所有されていれば真となります。
.TP
.B \-L \fIfile\fP
.\"O True if \fIfile\fP exists and is a symbolic link.
\fIfile\fP が存在し、かつシンボリックリンクならば真となります。
.TP
.B \-S \fIfile\fP
.\"O True if \fIfile\fP exists and is a socket.
\fIfile\fP が存在し、かつソケットならば真となります。
.TP
.B \-N \fIfile\fP
.\"O True if \fIfile\fP exists and has been modified since it was last read.
\fIfile\fP が存在し、かつ前回読み込まれた後に修正されていれば真となり
ます。
.TP
\fIfile1\fP \-\fBnt\fP \fIfile2\fP
.\"O True if \fIfile1\fP is newer (according to
.\"O modification date) than \fIfile2\fP.
\fIfile1\fP が(変更日時に関して)\fIfile2\fP より新しければ真となります。
.TP
\fIfile1\fP \-\fBot\fP \fIfile2\fP
.\"O True if \fIfile1\fP is older than \fIfile2\fP.
\fIfile1\fP が \fIfile2\fP より古ければ真となります。
.TP
\fIfile1\fP \fB\-ef\fP \fIfile2\fP
.\"O True if \fIfile1\fP and \fIfile2\fP have the same device and
.\"O inode numbers.
\fIfile1\fP と \fIfile2\fP が同じデバイスと i-ノード番号を持っていれば
真となります。
.TP
.B \-o \fIoptname\fP
.\"O True if shell option
.\"O .I optname
.\"O is enabled.
.\"O See the list of options under the description of the
.\"O .B \-o
.\"O option to the
.\"O .B set
.\"O builtin below.
シェルオプション
.I optname
が有効ならば真となります。後述する組み込みコマンド
.B set
に対するオプションの説明中にあるオプション一覧を参照してください。
.TP
.B \-z \fIstring\fP
.\"O True if the length of \fIstring\fP is zero.
\fIstring\fP の長さが 0 ならば真となります。
.TP
.B \-n \fIstring\fP
.TP
\fIstring\fP
.\"O True if the length of
.\"O .I string
.\"O is non-zero.
.I string
の長さが 0 でなければ真となります。
.TP
\fIstring1\fP \fB==\fP \fIstring2\fP
.\"O True if the strings are equal.  \fB=\fP may be used in place of
.\"O \fB==\fP.
文字列が同じならば真となります。\fB==\fP の代わりに \fB=\fP も使えます。
.TP
\fIstring1\fP \fB!=\fP \fIstring2\fP
.\"O True if the strings are not equal.
2 つの文字列が異なるならば真となります。
.TP
\fIstring1\fP \fB<\fP \fIstring2\fP
.\"O True if \fIstring1\fP sorts before \fIstring2\fP lexicographically
.\"O in the current locale.
現在のロケールにおいて、\fIstring1\fP が \fIstring2\fP よりも辞書順で
前にある場合に真となります。
.TP
\fIstring1\fP \fB>\fP \fIstring2\fP
.\"O True if \fIstring1\fP sorts after \fIstring2\fP lexicographically
.\"O in the current locale.
現在のロケールにおいて、\fIstring1\fP が \fIstring2\fP よりも辞書順で
後にある場合に真となります。
.TP
.I \fIarg1\fP \fBOP\fP \fIarg2\fP
.SM
.\"O .B OP
.\"O is one of
.\"O .BR \-eq ,
.\"O .BR \-ne ,
.\"O .BR \-lt ,
.\"O .BR \-le ,
.\"O .BR \-gt ,
.\"O or
.\"O .BR \-ge .
.B OP
は
.BR \-eq ,
.BR \-ne ,
.BR \-lt ,
.BR \-le ,
.BR \-gt ,
.BR \-ge
のいずれかです。
.\"O These arithmetic binary operators return true if \fIarg1\fP
.\"O is equal to, not equal to, less than, less than or equal to,
.\"O greater than, or greater than or equal to \fIarg2\fP, respectively.
.\"O .I Arg1
.\"O and
.\"O .I arg2
.\"O may be positive or negative integers.
これらの二値演算子が真を返すのはそれぞれ、\fIarg1\fP が \fIarg2\fP に
対して等しい場合、等しくない場合、小さい場合、小さいか等しい場合、大き
い場合、大きいか等しい場合です。
.I arg1
や
.I arg2
には、正または負の整数を用いることができます。
.PD
.\"O .SH "SIMPLE COMMAND EXPANSION"
.SH 単純なコマンドの展開
.\"O When a simple command is executed, the shell performs the following
.\"O expansions, assignments, and redirections, from left to right.
単純なコマンドを実行すると、シェルは以下に示す展開、代入、リダイレクショ
ンを左から右の順で実行します。
.IP 1.
.\"O The words that the parser has marked as variable assignments (those
.\"O preceding the command name) and redirections are saved for later
.\"O processing.
パーザが変数代入(コマンド名の前にあるもの)またはリダイレクションと判断
した単語は、後で処理するために保存されます。
.IP 2.
.\"O The words that are not variable assignments or redirections are
.\"O expanded.  If any words remain after expansion, the first word
.\"O is taken to be the name of the command and the remaining words are
.\"O the arguments.
変数代入でもリダイレクションでもない単語が展開されます。もし展開の後に
残っている単語があれば、その最初の単語がコマンド名となり、残りが引き数
となります。
.IP 3.
.\"O Redirections are performed as described above under
.\"O .SM
.\"O .BR REDIRECTION .
リダイレクションが前述の
.SM
.BR リダイレクション
で説明したように実行されます。
.IP 4.
.\"O The text after the \fB=\fP in each variable assignment undergoes tilde
.\"O expansion, parameter expansion, command substitution, arithmetic expansion,
.\"O and quote removal before being assigned to the variable.
変数代入の \fB=\fP の後にあるテキストに対して、チルダ展開、パラメータ
展開、コマンド置換、算術式展開、クォート削除が行われます。この処理は変
数を代入する前に行われます。
.PP
.\"O If no command name results, the variable assignments affect the current
.\"O shell environment.  Otherwise, the variables are added to the environment
.\"O of the executed command and do not affect the current shell environment.
.\"O If any of the assignments attempts to assign a value to a readonly variable,
.\"O an error occurs, and the command exits with a non-zero status.
コマンド名が残らなかった場合には、変数を代入した結果が現在のシェル環境
に効果を及ぼします。そうでない場合、変数は実行されるコマンドの環境に追
加されるだけで、現在のシェル環境には影響を与えません。読み込み専用の変
数に対して代入をしようとするとエラーが発生し、そのコマンドは 0 でない
ステータスで終了します。
.PP
.\"O If no command name results, redirections are performed, but do not
.\"O affect the current shell environment.  A redirection error causes the
.\"O command to exit with a non-zero status.
コマンド名が残らなかった場合、リダイレクションは行われますが、現在のシェ
ル環境は影響を受けません。リダイレクションのエラーが起きると、コマンド
は 0 でないステータスで終了します。
.PP
.\"O If there is a command name left after expansion, execution proceeds as
.\"O described below.  Otherwise, the command exits.  If one of the expansions
.\"O contained a command substitution, the exit status of the command is
.\"O the exit status of the last command substitution performed.  If there
.\"O were no command substitutions, the command exits with a status of zero.
展開の後にコマンド名が残っている場合、後述するように実行が進行します。
そうでない場合はコマンドは終了します。展開のいずれかがコマンド置換であ
る場合には、コマンドの終了ステータスは、最後に実行されたコマンド置換の
終了ステータスになります。コマンド置換が行われなかった場合には、コマン
ドはステータス 0 で終了します。
.\"O .SH "COMMAND EXECUTION"
.SH コマンドの実行
.\"O After a command has been split into words, if it results in a
.\"O simple command and an optional list of arguments, the following
.\"O actions are taken.
コマンドが単語に分割された後に、単純なコマンドとそれに対する引き数リス
ト(引き数リストは省略可能)となった場合、以下の動作が行われます。
.PP
.\"O If the command name contains no slashes, the shell attempts to
.\"O locate it.  If there exists a shell function by that name, that
.\"O function is invoked as described above in
.\"O .SM
.\"O .BR FUNCTIONS .
コマンド名にスラッシュが含まれない場合、シェルはコマンドの位置を特定し
ようとします。その名前のシェル関数が存在すれば、前に
.SM
.BR 関数
で説明したようにその関数が呼び出されます。
.\"O If the name does not match a function, the shell searches for
.\"O it in the list of shell builtins.  If a match is found, that
.\"O builtin is invoked.
名前が関数にマッチしない場合には、シェルはシェルの組み込みコマンドのリ
ストを探します。マッチするものがあった場合、その組み込みコマンドが呼び
出されます。
.PP
.\"O If the name is neither a shell function nor a builtin,
.\"O and contains no slashes,
.\"O .B bash
.\"O searches each element of the
.\"O .SM
.\"O .B PATH
.\"O for a directory containing an executable file by that name.
名前がシェル関数も組み込みコマンドでなく、かつスラッシュを含まない場合
には、
.B bash
は
.SM
.B PATH
の各要素を検索し、その名前の実行ファイルを含むディレクトリを探します。
.\"O .B Bash
.\"O uses a hash table to remember the full pathnames of executable
.\"O files (see
.\"O .B hash
.\"O under
.\"O .SM
.\"O .B "SHELL BUILTIN COMMANDS"
.\"O below).
.B bash
はハッシュ表を使って実行ファイルの完全なパス名を記憶します(後述の
.SM
.B シェルの組み込みコマンド
の
.B hash
の項を参照してください)。
.\"O A full search of the directories in
.\"O .SM
.\"O .B PATH
.\"O is performed only if the command is not found in the hash table.
.\"O If the search is unsuccessful, the shell prints an error
.\"O message and returns an exit status of 127.
.SM
.B PATH
に含まれるディレクトリの完全な探索は、そのコマンドがハッシュ表の中に無
い場合にのみ行われます。検索にも失敗すると、シェルはエラーメッセージを
出力し、終了ステータス 127 を返します。
.PP
.\"O If the search is successful, or if the command name contains
.\"O one or more slashes, the shell executes the named program in a
.\"O separate execution environment.
.\"O Argument 0 is set to the name given, and the remaining arguments
.\"O to the command are set to the arguments given, if any.
検索に成功したか、コマンド名に 1 つ以上のスラッシュが含まれる場合には、
シェルは指定されたプログラムを独立した実行環境で実行します。引き数 0
には指定された名前が設定され、コマンドに対する残りの引き数には指定され
た引き数が(もしあれば)設定されます。
.PP
.\"O If this execution fails because the file is not in executable
.\"O format, and the file is not a directory, it is assumed to be
.\"O a \fIshell script\fP, a file
.\"O containing shell commands.  A subshell is spawned to execute
.\"O it.  This subshell reinitializes itself, so
.\"O that the effect is as if a new shell had been invoked
.\"O to handle the script, with the exception that the locations of
.\"O commands remembered by the parent (see
.\"O .B hash
.\"O below under
.\"O .SM
.\"O \fBSHELL BUILTIN COMMANDS\fP)
.\"O are retained by the child.
このファイルが実行可能フォーマットでないために実行が失敗し、かつディレ
クトリでもない場合には、このファイルは \fIシェルスクリプト(shell script)\fP
であると見なされます。シェルスクリプトとは、シェルのコマンドが書かれて
いるファイルのことです。シェルスクリプトを実行するためにサブシェルが呼
び出されます。このサブシェルは自分自身を再初期化し、シェルスクリプトを
処理するために新しいシェルが起動されたかのような結果になります。ただし、
親が記憶しているコマンドの位置(後述の
.SM
\fBシェルの組み込みコマンド\fP)
における
.B hash
の項を参照)は子にも引き継がれます。
.PP
.\"O If the program is a file beginning with
.\"O .BR #! ,
.\"O the remainder of the first line specifies an interpreter
.\"O for the program.  The shell executes the
.\"O specified interpreter on operating systems that do not
.\"O handle this executable format themselves.  The arguments to the 
.\"O interpreter consist of a single optional argument following the
.\"O interpreter name on the first line of the program, followed
.\"O by the name of the program, followed by the command
.\"O arguments, if any.
プログラムが
.BR #!
で始まるファイルである場合、最初の行の残りの部分はこのプログラムのイン
タプリタを指定します。シェルは指定されたインタプリタをオペレーティング
システム上で実行します。オペレーティングシステムは、この実行可能フォー
マットを直接処理しません。インタプリタに対する引き数は、プログラムの先
頭の行のインタプリタ名の後の省略可能な引き数 1 つと、その後のプログラ
ム名、さらに(もしあれば)その後のコマンドへの引き数から構成されます。
.\"O .SH COMMAND EXECUTION ENVIRONMENT
.SH コマンド実行環境
.\"O The shell has an \fIexecution environment\fP, which consists of the
.\"O following:
シェルは以下の要素からなる\fI実行環境(execution environment)\fPを持っ
ています:
.sp 1
.IP \(bu
.\"O open files inherited by the shell at invocation, as modified by
.\"O redirections supplied to the \fBexec\fP builtin
起動時にそのシェルが継承したオープンされているファイル。これは組み込み
コマンド \fBexec\fP に与えられているリダイレクション機能で変更されます。
.IP \(bu
.\"O the current working directory as set by \fBcd\fP, \fBpushd\fP, or
.\"O \fBpopd\fP, or inherited by the shell at invocation
現在の作業ディレクトリ(working directory)。これは \fBcd\fP,
\fBpushd\fP, \fBpopd\fP で設定するか、あるいは起動時にそのシェルが継承
します。
.IP \(bu
.\"O the file creation mode mask as set by \fBumask\fP or inherited from
.\"O the shell's parent
ファイル作成モードのマスク。これは \fBumask\fP で設定するか、あるいは
そのシェルの親から継承します。
.IP \(bu
.\"O current traps set by \fBtrap\fP
\fBtrap\fP で設定された現在のトラップ。
.IP \(bu
.\"O shell parameters that are set by variable assignment or with \fBset\fP
.\"O or inherited from the shell's parent in the environment
シェルのパラメータ。これは変数の代入か \fBset\fP で設定されるか、ある
いはその環境内にある親シェルから継承します。
.IP \(bu
.\"O shell functions defined during execution or inherited from the shell's
.\"O parent in the environment
実行中に定義されるか、その環境内にある親シェルから継承したシェル関数。
.IP \(bu
.\"O options enabled at invocation (either by default or with command-line
.\"O arguments) or by \fBset\fP
起動時に有効にしたか(デフォルト値あるいはコマンドライン引き数で設定し
た値)、\fBset\fP で有効にしたオプション。
.IP \(bu
.\"O options enabled by \fBshopt\fP
\fBshopt\fP で有効にしたオプション。
.IP \(bu
.\"O shell aliases defined with \fBalias\fP
\fBalias\fP で定義したシェルエイリアス。
.IP \(bu
.\"O various process IDs, including those of background jobs, the value
.\"O of \fB$$\fP, and the value of \fB$PPID\fP
各種プロセスID。これにはバックグラウンドジョブや \fB$$\fP の値、
\fB$PPID\fP の値が含まれます。
.PP
.\"O When a simple command other than a builtin or shell function
.\"O is to be executed, it
.\"O is invoked in a separate execution environment that consists of
.\"O the following.  Unless otherwise noted, the values are inherited
.\"O from the shell.
組み込みコマンドやシェル関数を除く単純なコマンドを実行するとき、このコ
マンドは独立した実行環境内で呼び出されます。この環境は以下の要素から成
り立っています。特に断らない限り、この値はシェルから引き継がれます。
.sp 1
.IP \(bu
.\"O the shell's open files, plus any modifications and additions specified
.\"O by redirections to the command
シェルのオープンしているファイルと、コマンドに対するリダイレクションで
指定した変更と追加をこれに加えたもの。
.IP \(bu
.\"O the current working directory
現在の作業ディレクトリ
.IP \(bu
.\"O the file creation mode mask
ファイル作成モードのマスク
.IP \(bu
.\"O shell variables marked for export, along with variables exported for
.\"O the command, passed in the environment
エクスポートするシェル変数と、そのコマンドに対してエクスポートされた変
数。これらは環境内で渡されます。
.IP \(bu
.\"O traps caught by the shell are reset to the values the inherited
.\"O from the shell's parent, and traps ignored by the shell are ignored
シェルが捕捉したトラップは、そのシェルの親から継承された値に再設定され
ます。そのシェルが無視したトラップは無視されます。
.PP
.\"O A command invoked in this separate environment cannot affect the
.\"O shell's execution environment. 
この独立の環境内で呼び出されたコマンドは、シェルの実行環境に影響を及ぼ
すことはできません。
.PP
.\"O Command substitution and asynchronous commands are invoked in a
.\"O subshell environment that is a duplicate of the shell environment,
.\"O except that traps caught by the shell are reset to the values
.\"O that the shell inherited from its parent at invocation.  Builtin
.\"O commands that are invoked as part of a pipeline are also executed in a
.\"O subshell environment.  Changes made to the subshell environment
.\"O cannot affect the shell's execution environment.
コマンド置換と非同期コマンドは、サブシェル環境内で呼び出されます。
このサブシェル環境はシェル環境を複製したものです。ただし、
シェルが捕捉したトラップは、そのシェルの起動時に親から継承した値に再設
定されます。パイプラインの一部として起動された組み込みコマンドは、サブ
シェル環境で実行されます。サブシェル環境に対して行われた変更は、元のシェ
ル実行環境に影響を及ぼすことはできません。
.\"O .SH ENVIRONMENT
.SH 環境変数
.\"O When a program is invoked it is given an array of strings
.\"O called the
.\"O .IR environment .
.\"O This is a list of 
.\"O \fIname\fP\-\fIvalue\fP pairs, of the form
.\"O .IR "name\fR=\fPvalue" .
プログラムの起動時には、
.IR 環境変数(environment)
と呼ばれる文字列の配列が渡されます。これは \fI変数名\fP\-\fI値\fP の組
のリストであり、
.IR "変数名\fR=\fP値"
という形になります。
.PP
.\"O The shell provides several ways to manipulate the environment.
シェルは、環境変数を操作する様々な方法を提供しています。
.\"O On invocation, the shell scans its own environment and
.\"O creates a parameter for each name found, automatically marking
.\"O it for
.\"O .I export
.\"O to child processes.  Executed commands inherit the environment.
起動時には、シェルは自分自身の環境変数を調べ、見つかった名前それぞれに対して
パラメータを生成し、それに自動的に印を付けて子プロセスに
.I エクスポート(export)
します。実行されたコマンドは環境変数を継承します。
.\"O The
.\"O .B export
.\"O and
.\"O .B declare \-x
.\"O commands allow parameters and functions to be added to and
.\"O deleted from the environment.  If the value of a parameter
.\"O in the environment is modified, the new value becomes part
.\"O of the environment, replacing the old.  The environment
.\"O inherited by any executed command consists of the shell's
.\"O initial environment, whose values may be modified in the shell,
.\"O less any pairs removed by the
.\"O .B unset
.\"O command, plus any additions via the
.\"O .B export
.\"O and
.\"O .B declare \-x
.\"O commands.
.B export
コマンドまたは
.B declare \-x
コマンドを用いると、パラメータや関数の追加と削除を環境変数に対して行う
ことができます。環境変数内のパラメータの値が変更されると、新しい値は環
境変数の一部となり、古い値と置き換わります。実行されたコマンドが継承す
る環境変数は、シェルの環境変数の初期値で作られます。この値はシェル内で
変更することができますし、変数と値の組は
.B unset
コマンドで削除することや
.B export
コマンドや
.B declare \-x
コマンドで追加することができます。
.PP
.\"O The environment for any
.\"O .I simple command
.\"O or function may be augmented temporarily by prefixing it with
.\"O parameter assignments, as described above in
.\"O .SM
.\"O .BR PARAMETERS .
.\"O These assignment statements affect only the environment seen
.\"O by that command.
.I 単純なコマンド
や関数に対する環境変数は、一時的に増やすことができます。
これは、既に
.SM
.BR パラメータ
の項で説明した、パラメータ代入を前に置くことで行います。このような代入
が影響を与えるのは、そのコマンドから参照できる環境変数だけです。
.PP
.\"O If the 
.\"O .B \-k
.\"O option is set (see the
.\"O .B set
.\"O builtin command below), then
.\"O .I all
.\"O parameter assignments are placed in the environment for a command,
.\"O not just those that precede the command name.
.B \-k
オプションを設定(後述の組み込みコマンド
.B set
を参照)すると、コマンド名の前に置いたものだけではなく、
.I 全ての
パラメータ代入がそのコマンドに対する環境変数に影響を与えます。
.PP
.\"O When
.\"O .B bash
.\"O invokes an external command, the variable
.\"O .B _
.\"O is set to the full file name of the command and passed to that
.\"O command in its environment.
.B bash
が外部コマンドを起動したときには、変数
.B _
にはコマンドの完全なファイル名が設定され、環境変数としてそのコマンドに
渡されます。
.\"O .SH "EXIT STATUS"
.SH 終了ステータス
.\"O For the shell's purposes, a command which exits with a 
.\"O zero exit status has succeeded.  An exit status of zero
.\"O indicates success.  A non-zero exit status indicates failure.
.\"O When a command terminates on a fatal signal \fIN\fP, \fBbash\fP uses
.\"O the value of 128+\fIN\fP as the exit status.
シェルの意図としては、終了コード 0 で終了したコマンドは正常終了したこ
とになります。終了コード 0 は成功を示します。0 以外の終了コードは失敗
を示します。コマンドが致命的なシグナル　\fIN\fP　で終了したときには、
\fBbash\fP は「128+\fIN\fP」の値を使います。
.PP
.\"O If a command is not found, the child process created to
.\"O execute it returns a status of 127.  If a command is found
.\"O but is not executable, the return status is 126.
コマンドが見つからなかった場合には、そのコマンドを実行するために生成さ
れた子プロセスがステータス 127 を返します。コマンドが見つかったけれど
実行できなかった場合には、返却ステータスは 126 です。
.PP
.\"O If a command fails because of an error during expansion or redirection,
.\"O the exit status is greater than zero.
展開やリダイレクションの際のエラーのためにコマンドが失敗した場合には、
0 より大きい終了ステータスが返されます。
.PP
.\"O Shell builtin commands return a status of 0 (\fItrue\fP) if
.\"O successful, and non-zero (\fIfalse\fP) if an error occurs
.\"O while they execute. 
.\"O All builtins return an exit status of 2 to indicate incorrect usage.
シェルの組み込みコマンドは、成功した場合にはステータス 0 (\fI真\fP)
を返し、実行中にエラーが起こった場合には 0 でない値(\fI偽\fP)を返しま
す。
.PP
.\"O \fBBash\fP itself returns the exit status of the last command
.\"O executed, unless a syntax error occurs, in which case it exits
.\"O with a non-zero value.  See also the \fBexit\fP builtin
.\"O command below.
\fBbash\fP 自身が返す終了ステータスは、文法エラーが起きなければ、実行
した最後のコマンドの終了ステータスです。文法エラーの場合には、0 でない
値が終了ステータスとなります。後述の組み込みコマンド \fBexit\fP も参照
してください。
.\"O .SH SIGNALS
.SH シグナル
.\"O When \fBbash\fP is interactive, in the absence of any traps, it ignores
.\"O .SM
.\"O .B SIGTERM
.\"O (so that \fBkill 0\fP does not kill an interactive shell),
.\"O and
.\"O .SM
.\"O .B SIGINT
.\"O is caught and handled (so that the \fBwait\fP builtin is interruptible).
.\"O In all cases, \fBbash\fP ignores
.\"O .SM
.\"O .BR SIGQUIT .
\fBbash\fP が対話的であり、トラップが全く無いとき、\fBbash\fP は
.SM
.B SIGTERM
を無視し(したがって、\fBkill 0\fP では対話シェルは kill されません)、
.SM
.B SIGINT
(したがって、組み込みコマンド \fBwait\fP は割り込み可能です)を捕捉、処
理します。どんな場合でも、\fBbash\fP は
.SM
.BR SIGQUIT
を無視します。
.\"O If job control is in effect,
.\"O .B bash
.\"O ignores
.\"O .SM
.\"O .BR SIGTTIN ,
.\"O .SM
.\"O .BR SIGTTOU ,
.\"O and
.\"O .SM
.\"O .BR SIGTSTP .
ジョブ制御が有効な状態ならば、
.B bash
は
.SM
.BR SIGTTIN ,
.SM
.BR SIGTTOU ,
.SM
.BR SIGTSTP
を無視します。
.PP
.\"O Synchronous jobs started by \fBbash\fP have signal handlers
.\"O set to the values inherited by the shell from its parent.
.\"O When job control is not in effect, asynchronous commands
.\"O ignore
.\"O .SM
.\"O .B SIGINT
.\"O and
.\"O .SM
.\"O .B SIGQUIT
.\"O as well.
\fBbash\fP が起動した同期ジョブは、シェルが自分の親から継承した値をシ
グナルハンドラに設定します。ジョブ制御が有効でないときには、非同期コマ
ンドは
.SM
.B SIGINT
と
.SM
.B SIGQUIT
も無視します。
.\"O Commands run as a result of command substitution ignore the
.\"O keyboard-generated job control signals
.\"O .SM
.\"O .BR SIGTTIN ,
.\"O .SM
.\"O .BR SIGTTOU ,
.\"O and
.\"O .SM
.\"O .BR SIGTSTP .
コマンド置換の結果として実行されたコマンドは、キーボードで生成されたジョ
ブ制御シグナルを無視します。無視されるシグナルは
.SM
.BR SIGTTIN ,
.SM
.BR SIGTTOU ,
.SM
.BR SIGTSTP
です。
.PP
.\"O The shell exits by default upon receipt of a
.\"O .SM
.\"O .BR SIGHUP .
.\"O Before exiting, it resends the
.\"O .SM
.\"O .B SIGHUP
.\"O to all jobs, running or stopped.
.\"O Stopped jobs are sent
.\"O .SM
.\"O .B SIGCONT
.\"O to ensure that they receive the
.\"O .SM
.\"O .BR SIGHUP .
デフォルトでは、シェルは
.SM
.BR SIGHUP
を受け取ると終了します。終了する前には、シェルは実行中・停止中の全ての
ジョブに対して
.B SIGHUP
を再送信します。停止しているジョブには
.SM
.B SIGCONT
が送られ、このジョブが
.SM
.BR SIGHUP
を受け取ったことが確認されます。
.\"O To prevent the shell from
.\"O sending the signal to a particular job, it should be removed from the
.\"O jobs table with the 
.\"O .B disown
.\"O builtin (see
.\"O .SM
.\"O .B "SHELL BUILTIN COMMANDS"
.\"O below) or marked 
.\"O to not receive
.\"O .SM
.\"O .B SIGHUP
.\"O using
.\"O .BR "disown \-h" .
特定のジョブに対してシェルからシグナルが送られないようにするためには、
組み込みコマンド
.B disown
(後述の
.SM
.B シェルの組み込みコマンド
を参照)を使って、そのジョブをジョブテーブルから削除するか、あるいは
.BR "disown \-h"
を使って、
.SM
.B SIGHUP
を受け取らないようにマークを付けます。
.PP
.\"O If the
.\"O .B huponexit
.\"O shell option has been set with
.\"O .BR shopt ,
.\"O .B bash
.\"O sends a 
.\"O .SM
.\"O .B SIGHUP
.\"O to all jobs when an interactive login shell exits.
シェルオプションの
.B huponexit
が
.BR shopt
を使って設定されて場合、対話的なログインシェルが終了するときに、
.B bash
は
.SM
.B SIGHUP
を全てのジョブに送ります。
.PP
.\"O When \fBbash\fP receives a signal for which a trap has been set while
.\"O waiting for a command to complete, the trap will not be executed until
.\"O the command completes.
.\"O When \fBbash\fP is waiting for an asynchronous command via the \fBwait\fP
.\"O builtin, the reception of a signal for which a trap has been set will
.\"O cause the \fBwait\fP builtin to return immediately with an exit status
.\"O greater than 128, immediately after which the trap is executed.
コマンドの完了を待っている間に、トラップが設定されたシグナルを
\fBbash\fP が受け取ったとき、そのトラップはコマンドが完了するまで実行
されません。\fBbash\fP が組み込みコマンドの \fBwait\fP を使って非同期
コマンドを待っている時に、トラップが設定されているシグナルを受け取ると、
組み込みコマンド \fBwait\fP は即座に復帰させられます。この際の終了ステー
タスは 128 より大きい値になります。また、復帰するのはトラップが実行さ
れた直後です。
