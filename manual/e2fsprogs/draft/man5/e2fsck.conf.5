.\" -*- nroff -*-
.\" Copyright 2006 by Theodore Ts'o.  All Rights Reserved.
.\" This file may be copied under the terms of the GNU Public License.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2008 Yuichi SATO
.\"         all rights reserved.
.\" Translated 2008-11-01 by Yuichi SATO <ysato444@yahoo.co.jp>, v1.39
.\"
.TH e2fsck.conf 5 "February 2012" "E2fsprogs version 1.42.1" 
.SH 名前
e2fsck.conf \- e2fsck の設定ファイル
.SH 説明
\fIe2fsck.conf\fP は \fBe2fsck\fP(8) の設定ファイルである。 このファイルにより \fBe2fsck\fP(8) が ext2,
ext3, ext4 ファイルシステムを チェックする際のデフォルトの動作を制御できる。
.PP
.\" Tags can be assigned multiple values
\fIe2fsck.conf\fP ファイルでは INI 形式のフォーマットが使用される。 節 (stanza) または最上位のセクションは、角括弧: [ ]
で区切られる。 各セクション内では、各行でリレーションが定義され、 タグに値を割り当てたり、タグにサブセクションを割り当てたりする。
サブセクションには、更にリレーションとサブセクションが含まれる。 この設定ファイルで使用される INI 方式のフォーマットの例は、以下の通り:
.P
  [section1]
.br
  tag1 = value_a
.br
  tag1 = value_b
.br
  tag2 = value_c
.P
  [section 2]
.br
  tag3 = {
.br
  subtag1 = subtag_value_a
.br
  subtag1 = subtag_value_b
.br
  subtag2 = subtag_value_c
.br
  }
.br
  tag1 = value_d
.br
  tag2 = value_e
.br
  }
.P
コメントは、先頭のセミコロン (';') または ハッシュ ('#') 文字で区切られ、行末文字で終わる。
.P
タグと値にスペースが含まれる場合は、ダブルクォートで括らなければならない。
ダブルクォートで括った文字列内では、標準的なバックスラッシュの解釈が適用される:
"\en" (改行文字), "\et" (タブ文字), "\eb" (バックスペース文字),
"\e\e" (バックスラッシュ文字)。
.P
以下の節が \fIe2fsck.conf\fP ファイルで使用されている。 これらの節は、このドキュメントの後のセクションでより詳しく説明される。
.TP  
\fI[options]\fP
この節には \fBe2fsck\fP の動作についての一般的な設定パラメータが含まれる。
.TP 
\fI[problems]\fP
この節では、e2fsck が様々なファイルシステムの 不整合をどのように扱うかを、管理者が再設定できる。
.TP 
\fI[scratch_files]\fP
この節では e2fsck が必要なメモリ量を減らすためにスクラッチファイル (scratch file) を使う場合の設定を行う。
.SH "[options] 節"
以下のリレーションが \fI[options]\fP 節で定義できる。
.TP 
\fIallow_cancellation\fP
このリレーションにブール値 true を設定すると、 ユーザーは ^C で e2fsck を停止することができる。
ファイルシステムには、エラーが含まれていることを示す フラグが明示的に設定されず、e2fsck は終了する。 終了ステータスは 32 ではなく 0
となる。 この設定はデフォルトでは false である。
.TP 
\fIaccept_time_fudge\fP
Unfortunately, due to Windows' unfortunate design decision to configure the
hardware clock to tick localtime, instead of the more proper and less
error\-prone UTC time, many users end up in the situation where the system
clock is incorrectly set at the time when e2fsck is run.
.IP
Historically this was usually due to some distributions having buggy init
scripts and/or installers that didn't correctly detect this case and take
appropriate countermeasures.  However, it's still possible, despite the best
efforts of init script and installer authors to not be able to detect this
misconfiguration, usually due to a buggy or misconfigured virtualization
manager or the installer not having access to a network time server during
the installation process.  So by default, we allow the superblock times to
be fudged by up to 24 hours.  This can be disabled by setting
\fIaccept_time_fudge\fP to the boolean value of false.  This setting defaults
to true.
.TP 
\fIbroken_system_clock\fP
The \fBe2fsck\fP(8)  program has some heuristics that assume that the system
clock is correct.  In addition, many system programs make similar
assumptions.  For example, the UUID library depends on time not going
backwards in order for it to be able to make its guarantees about issuing
universally unique ID's.  Systems with broken system clocks, are well,
broken.  However, broken system clocks, particularly in embedded systems, do
exist.  E2fsck will attempt to use heuristics to determine if the time can
not be trusted; and to skip time\-based checks if this is true.  If this
boolean is set to true, then e2fsck will always assume that the system clock
can not be trusted.
.TP 
\fIclear_test_fs_flag\fP
This boolean relation controls whether or not \fBe2fsck\fP(8)  will offer to
clear the test_fs flag if the ext4 filesystem is available on the system.
It defaults to true.
.TP  
\fIdefer_check_on_battery\fP
このブール値のリレーションにより、システムがバッテリーで動作している時に、 (時間またはマウント回数に基づいた) ファイルシステムの検査の周期を 2
倍にするか否かを設定できる。 デフォルトは true である。
.TP 
\fIindexed_dir_slack_percentage\fP
When \fBe2fsck\fP(8)  repacks a indexed directory, reserve the specified
percentage of empty space in each leaf nodes so that a few new entries can
be added to the directory without splitting leaf nodes, so that the average
fill ratio of directories can be maintained at a higher, more efficient
level.  This relation defaults to 20 percent.
.SH "[problems] 節"
\fI[problems]\fP 節の各タグには、先頭に "0x" を付けた 6 個の 16 進数で、問題コードを指定する。 タグの値はサブセクションである。
そのサブセクションにおけるリレーションは、 指定した問題コードのデフォルトの処理を上書きする。
.P
この節の設定が不適切であると、 \fBe2fsck\fP の動作が不正になったり、クラッシュすることもある。
大部分の管理者は、ソースコードを参照せずに、この節を変更すべきではない。
.P
問題コードのサブセクションでは、以下のタグが使用される:
.TP 
\fIdescription\fP
このリレーションは、ファイルシステムの不整合が 検出された時に表示されるメッセージを上書きする。
.TP 
\fIpreen_ok\fP
このブール値のリレーションは、 \fBe2fsck\fP を修復 (preen) モードで動作させているときに、
ファイルシステムの問題を自動的に修復するかについての デフォルトの動作を上書きする。
.TP 
\fIno_ok\fP
このブール値のリレーションは、 報告された問題の修正をユーザーが拒否した場合に、 ファイルシステムに不整合のマークを付けるかについての
デフォルトの動作を上書きする。
.TP 
\fIno_default\fP
このブール値のリレーションは、 問題 (または質問) のデフォルトの答えを "no" に上書きする。
.TP  
\fIpreen_nomessage\fP
このブール値のリレーションは、 \fBe2fsck\fP を修復 (preen) モードで動作させているときに、
ファイルシステムの問題の説明を非表示にするかについての デフォルトの動作を上書きする。
.TP 
\fIno_nomsg\fP
このブール値のリレーションは、問題の修正を行わないようになっている場合に、 ファイルシステムの問題の説明を非表示にするかのデフォルトの動作を上書きする。
問題の修正を行わないようになるのは、 \fBe2fsck\fP が \fB\-n\fP オプション付きで実行された場合か、 \fIforce_no\fP
フラグがセットされている場合のいずれかである。
.TP 
\fIforce_no\fP
このブール値のオプションを true に設定すると、問題の修正を全く行わないようになる。 つまり、この問題を修正するかという質問に対してユーザが
\&'no' と答えた場合と同じになる。 コマンドラインで指定された \fB\-y\fP よりも \fIforce_no\fP オプションが優先される場合もある
(もちろん、特定の問題の場合だけだが)。
.SH "[scratch_files] 節"
\fI[scratch_files]\fP 節では以下のリレーションが定義されている。
.TP 
\fIdirectory\fP
このリレーションで指定された名前のディレクトリが存在し、かつ書き込み可能な場合、 e2fsck
はメモリ上のデータ構造を使う代わりにスクラッチファイルを格納するのにこのディレクトリを使おうとする。
.TP 
\fInumdirs_threshold\fP
このリレーションが設定された場合、ファイルシステムのディレクトリ数が指定された値よりも少ない場合、メモリ上のデータ構造が使用される。
.TP 
\fIdirinfo\fP
このリレーションは、 ディレクトリ情報を保持するのに、 メモリ上のデータ構造ではなくスクラッチファイルディレクトリを使用するかどうかを制御する。
デフォルトは true である。
.TP 
\fIicount\fP
このリレーションは、inode 数を追跡するのに、 メモリ上のデータ構造ではなくスクラッチファイルディレクトリを使用するかを制御する。 デフォルトは
true である。
.SH 例
以下の例では、ファイルシステムに孤立したファイルがある場合に、 ブートプロセスで e2fsck がアボートしないようにする。
(もちろん、これが常に良い考えという訳ではない。 システムのセキュリティに必要で非常に重要なファイルが、 lost+found
に置かれているような場合に、 システム管理者が初めにチェックせずにシステムを開始してしまうのは、 危険だろう。)
.P
.br
  [problems]
.br
  0x040002 = {
.br
  preen_ok = true
.br
  description = "@u @i %i.  "
.br
  }
.SH ファイル
.TP 
\fI/etc/e2fsck.conf\fP
\fBe2fsck\fP(8)  の設定ファイル。
.SH 関連項目
\fBe2fsck\fP(8)
