.\" -*- nroff -*-
.\" Copyright 1993, 1994, 1995 by Theodore Ts'o.  All Rights Reserved.
.\" This file may be copied under the terms of the GNU Public License.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\" 
.\" Japanese Version Copyright 1998 by MATSUMOTO Shoji. All Rights Reserved.
.\" Translated Fri Mar 13 03:10:18 JST 1998 by MATSUMOTO Shoji.
.\" Updated Sat 23 Oct 1999 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated Tue 16 Nov 1999 by NAKANO Takeo
.\" Updated & Modified Thu Aug 16 00:10:30 JST 2001
.\"         by Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated Thu 3 Oct 2002 by NAKANO Takeo
.\" Updated & Modified Sat Apr 17 13:18:42 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Tue May  3 03:13:30 JST 2005 by Yuichi SATO
.\" Updated & Modified Sat Oct 28 04:28:52 JST 2006 by Yuichi SATO
.\"
.TH DEBUGFS 8 "February 2012" "E2fsprogs version 1.42.1" 
.SH 名前
debugfs \- ext2/ext3/ext4 ファイルシステムデバッガ
.SH 書式
\fBdebugfs\fP [ \fB\-DVwci\fP ] [ \fB\-b\fP blocksize ] [ \fB\-s\fP superblock ] [ \fB\-f\fP
cmd_file ] [ \fB\-R\fP request ] [ \fB\-d\fP data_source_device ] [ device ]
.SH 説明
\fBdebugfs\fP は対話的なファイルシステムのデバッガである。 ext2/ext3/ext4 ファイルシステムの状態の調査・変更に利用できる。
.br
\fIdevice\fP は、ファイルシステムを含むデバイスに対応する スペシャルファイルである。(例: /dev/hdXX)
.SH オプション
.TP 
\fI\-w\fP
ファイルシステムを read/write モードでオープンする。 このオプションを指定しない場合は、 ファイルシステムは read\-only
モードでオープンされる。
.TP 
\fI\-c\fP
ファイルシステムを catastrophic (甚大な破損が起こった場合の) モードでオープンする。 このモードでは inode
とグループビットを最初に読み込まない。 これは重度に破損したファイルシステムに対しては有効なことがあるが、 一方このため catastrophic
モードではファイルシステムを read\-only でしかオープンできない。
.TP 
\fI\-i\fP
\fIdevice\fP が \fBe2image\fP プログラムによって作成された ext2 イメージファイルであることを指定する。 ext2
イメージファイルは、スーパーブロック・ ブロックグループディスクリプタ・ブロックアロケーションビットマップ・ inode
アローケションビットマップ・inode テーブルしか持たないので、 \fBdebugfs\fP の多くのコマンドが正しく機能しない。 \fB警告:\fP
安全性のチェックは行わない。 また、 \fI\-d\fP オプションによって \fIdata_source_device\fP を指定せずに、 \fIls\fP,
\fIdump\fP などのコマンドを実行した場合には \fBdebugfs\fP は変な風に失敗するかもしれない。 \fBdebugfs\fP
はデバッグ用のツールなので、洗練された部分のみであるとは限らない!
.TP 
\fI\-d data_source_device\fP
\fI\-i\fP オプションと共に使用され、 読み込みブロックが ext2 イメージファイルに見つからない場合には、 指定された
\fIdata_source_device\fP が使用される。 このデバイスにはデータ・ディレクトリ・間接 (indirect) ブロックが含まれる。
.TP 
\fI\-b blocksize\fP
通常のように正しいブロックサイズを検出する動作を行わず、 指定したブロックサイズをそのファイルシステムに用いる。
.TP 
\fI\-s superblock\fP
Causes the file system superblock to be read from the given block number,
instead of using the primary superblock (located at an offset of 1024 bytes
from the beginning of the filesystem).  If you specify the \fI\-s\fP option, you
must also provide the blocksize of the filesystem via the \fI\-b\fP option.
.TP 
\fI\-f cmd_file\fP
\fBdebugfs\fP に、 \fIcmd_file\fP からコマンドを読み込ませ、実行させる。 コマンドの実行を終了すると、 \fBdebugfs\fP
は終了する。
.TP 
\fI\-D\fP
Causes \fBdebugfs\fP to open the device using Direct I/O, bypassing the buffer
cache.  Note that some Linux devices, notably device mapper as of this
writing, do not support Direct I/O.
.TP 
\fI\-R request\fP
\fIrequest\fP というひとつのコマンドを実行し、終了する。
.TP 
\fI\-V\fP
\fBdebugfs\fP のバージョンを表示して終了する。
.SH ファイル指定
.\"
.\"
\fBdebugfs\fP のコマンドの多くは、 debugfs が現在オープンしているファイルシステムにおける inode (パス名ではない) を示す
\fIfilespec\fP という引数を取る。 \fIfilespec\fP には 2 種類の表記法がある。ひとつは、inode 番号を <>
で囲む方法である (例: \fI<2>\fP)。 もうひとつはパス名で指定する方法である。 パス名が「/ (スラッシュ)」ではじまる場合、
\fBdebugfs\fP が現在オープンしているファイルシステムのルートからの相対パスを表す。
「/」で始まらない場合、カレントワーキングディレクトリからの相対パスを表す。 カレントワーキングディレクトリは \fBdebugfs\fP の \fIcd\fP
コマンドによって変更できる。
.SH コマンド
\fBdebugfs\fP がサポートするコマンドの一覧を以下に示す。
.TP 
\fIblocks filespace\fP
Print the blocks used by the inode \fIfilespec\fP to stdout.
.TP 
\fIbmap filespec logical_block\fP
\fIfilespec\fP で指定した inode における論理ブロック番号 \fIlogical_block\fP に対応する物理ブロック番号を表示する。
.TP 
\fIcat filespec\fP
\fIfilespec\fP で指定した inode の内容を標準出力へダンプする。
.TP 
\fIcd filespec\fP
カレントワーキングディレクトリを \fIfilespec\fP で指定したディレクトリに変更する。
.TP 
\fIchroot filespec\fP
ルートディレクトリを \fIfilespec\fP で指定したディレクトリに変更する。
.TP 
\fIclose [\-a]\fP
Close the currently open file system.  If the \fI\-a\fP option is specified,
write out any changes to the superblock and block group descriptors to all
of the backup superblocks, not just to the master superblock.
.TP 
\fIclri file\fP
\fIfile\fP で指定した inode の内容をクリアする。
.TP 
\fIdirsearch filespec filename\fP
Search the directory \fIfilespec\fP for \fIfilename\fP.
.TP 
\fIdump [\-p] filespec out_file\fP
\fIfilespec\fP で指定した inode の内容を \fIout_file\fP で指定したファイルにダンプする。 \fI\-p\fP オプションを与えると、
\fIout_file\fP の所有者 (owner)、所有グループ (group)、パーミッション (permission) を \fIfilespec\fP
と同じにする。
.TP 
\fIdump_mmp\fP
Display the multiple\-mount protection (mmp) field values.
.TP 
\fIdx_hash [\-h hash_alg] [\-s hash_seed] filename\fP
Calculate the directory hash of \fIfilename\fP.  The hash algorithm specified
with \fI\-h\fP may be "legacy" "half_md4" or "tea".  The hash seed specified
with \fI\-s\fP must be in UUID format.
.TP 
\fIdump_extents [\-n] [\-l] filespec\fP
Dump the the extent tree of the inode \fIfilespec\fP.  The \fI\-n\fP flag will
cause \fIdump_extents\fP to only display the interior nodes in the extent
tree.  The \fI\-l\fP flag cause \fIdump_extents\fP to only display the leaf nodes
in the extent tree.
.IP
(Please note that the length and range of blocks for the last extent in an
interior node is an estimate by the extents library functions, and is not
stored in filesystem data structures.  Hence, the values displayed may not
necessarily by accurate and does not indicate a problem or corruption in the
file system.)
.TP 
\fIexpand_dir filespec\fP
\fIfilespec\fP で指定したディレクトリを展開する。
.TP 
\fIfeature [fs_feature] [\-fs_feature] ...\fP
スーパーブロックの様々なファイルシステム属性をセット/クリアする。 要求のあった属性をセット/クリアした後は、
ファイルシステム属性の現在状態の一覧を表示する。
.TP 
\fIfilefrag [\-dvr] filespec\fP
Print the number of contiguous extents in \fIfilespec\fP.  If \fIfilespec\fP is a
directory and the \fI\-d\fP option is not specified, \fIfilefrag\fP will print the
number of contiguous extents for each file in the directory.  The \fI\-v\fP
option will cause \fIfilefrag\fP print a tabular listing of the contiguous
extents in the file.  The \fI\-r\fP option will cause \fIfilefrag\fP to do a
recursive listing of the directory.
.TP 
\fIfind_free_block [count [goal]]\fP
\fIgoal\fP から始まる最初の \fIcount\fP 分の空きブロックを探し、その空きブロックをアロケート (allocate) する。
.TP 
\fIfind_free_inode [dir [mode]]\fP
空き inode を探し、その inode をアロケートする。 \fIdir\fP を指定すると、 これはその inode を置くべきディレクトリの
inode と解釈される。 さらに \fImode\fP を指定すると、 これは新しい inode のパーミッションと解釈される。 (\fImode\fP
にディレクトリであることを指定するビットが立っている場合、 アロケートルーチンの挙動は異なるものになる。)
.TP 
\fIfreeb block [count]\fP
ブロック番号 \fIblock\fP をアロケートされていないものとしてマークする。 省略可能な引数 \fIcount\fP を指定すると、ブロック番号
\fIblock\fP から始まる \fIcount\fP 分のブロックをアロケートされていないものとしてマークする。
.TP 
\fIfreefrag [\-c chunk_kb ]\fP
Report free space fragmentation on the currently open file system.  If the
\fI\-c\fP option is specified then the filefrag command will print how many free
chunks of size \fIchunk_kb\fP can be found in the file system.  The chunk size
must be a power of two and be larger than the file system block size.
.TP 
\fIfreei filespec\fP
\fIfilespec\fP で指定した inode を解放する。
.TP 
\fIhelp\fP
\fBdebugfs\fP で利用できるコマンドのリストを表示する。
.TP 
\fIhtree_dump filespec\fP
Dump the hash\-indexed directory \fIfilespec\fP, showing its tree structure.
.TP 
\fIicheck block ...\fP
コマンドラインに与えたブロック (複数指定可)  を利用している inode のリストを表示する。
.TP 
\fIimap filespec\fP
\fIfilespec\fP で指定された inode の (inode テーブルにおける)  inode データ構造の場所を表示する。
.TP 
\fIinit_filesys device blocksize\fP
\fIdevice\fP 上に、デバイスサイズ \fIblocksize\fP の ext2 ファイルシステムを作成する。
このコマンドは、すべてのデータ構造を完全に初期化するわけではない。 これをしたい場合は \fBmke2fs\fP(8)  プログラムを用いること。
このコマンドは、単にスーパーブロックとブロックディスクリプタを設定する 低レベルライブラリを呼び出すだけである。
.TP 
\fIkill_file filespec\fP
\fIfilespec\fP で指定した inode と、 その inode が使用しているブロックをアロケートから外す (deallocate)。
なお、その inode に対応するディレクトリエントリは削除しないことに注意。 ファイルを unlink したい場合は \fIrm\fP
コマンドを参照のこと。
.TP 
\fIlcd directory\fP
\fBdebugfs\fP プロセスのカレントワーキングディレクトリを ネイティブファイルシステム (訳註: 作業対象のものではなく、 debugfs
が呼び出され、稼働しているファイルシステム) 上の \fIdirectory\fP に変更する。
.TP 
\fIln filespec dest_file\fP
\fIfilespec\fP を指すリンク \fIdest_file\fP を作成する。 この際 inode の参照数 (reference counts)
は変更しないことに注意。
.TP 
\fIlogdump [\-acs] [\-b<block>] [\-i<filespec>] [\-f<journal_file>] [output_file]\fP
ext3 ジャーナルの内容をダンプする。 デフォルトではジャーナル inode はスーパーブロックで指定される。 しかし \fI\-i\fP
オプションで上書きすることも可能である。 \fI\-i\fP オプションは使用されるジャーナルを指定する inode 指定子を使う。
ジャーナルデータが書かれたファイルは、 \fI\-f\fP オプションを使って指定することができる。 そして \fI\-s\fP
オプションはスーパーブロックにあるバックアップ情報を使って、 ジャーナルをアロケートする。
.IP
\fI\-a\fP オプションを指定すると、 \fIlogdump\fP プログラムは全てのディスクリプタブロックの内容を表示する。 \fI\-b\fP
オプションを指定すると、 \fIlogdump\fP プログラムは指定されたブロックを参照する全てのジャーナルレコードを表示する。 \fI\-c\fP
オプションを指定すると、 \fI\-a\fP と \fI\-b\fP オプションで選択された全てのデータブロックの内容を表示する。
.TP 
\fIls [\-l] [\-d] [\-p] filespec\fP
Print a listing of the files in the directory \fIfilespec\fP.  The \fI\-l\fP flag
will list files using a more verbose format.  The \fI\-d\fP flag will list
deleted entries in the directory.  The \fI\-p\fP flag will list the files in a
format which is more easily parsable by scripts, as well as making it more
clear when there are spaces or other non\-printing characters at the end of
filenames.
.TP 
\fImodify_inode filespec\fP
\fIfilespec\fP で指定した inode にある inode 構造体の内容を変更する。
.TP 
\fImkdir filespec\fP
ディレクトリを作成する。
.TP 
\fImknod filespec [p|[[c|b] major minor]]\fP
スペシャルデバイスファイル (名前付きパイプ、キャラクタデバイス、ブロックデバイス)  を作成する。
キャラクタデバイスおよびブロックデバイスを作成する場合は、 デバイス番号として \fImajor\fP および \fIminor\fP を指定しなければならない。
.TP 
\fIncheck [\-c] inode_num ...\fP
Take the requested list of inode numbers, and print a listing of pathnames
to those inodes.  The \fI\-c\fP flag will enable checking the file type
information in the directory entry to make sure it matches the inode's type.
.TP 
\fIopen [\-w] [\-e] [\-f] [\-i] [\-c] [\-D] [\-b blocksize] [\-s superblock] device\fP
編集の対象とするファイルシステムをオープンする。 \fI\-f\fP フラグをつけると、通 常ではオープンできないような、
不明なファイルシステムや非互換なファイルシス テムでも 強制的にオープンする。 \fI\-e\fP フラグをつけるとファイルシステムを排他
モードでオープンする。 \fI\-b\fP, \fI\-c\fP, \fI\-i\fP, \fI\-s\fP, \fI\-w\fP, \fI\-D\fP オプションを 指定した場合の動作は、
\fBdebugfs\fP に同名のコマンドラインオプションを指定した 場合と同じである。
.TP 
\fIpunch filespec start_blk [end_blk]\fP
Delete the blocks in the inode ranging from \fIstart_blk\fP to \fIend_blk\fP.  If
\fIend_blk\fP is omitted then this command will function as a truncate command;
that is, all of the blocks starting at \fIstart_blk\fP through to the end of
the file will be deallocated.
.TP 
\fIpwd\fP
カレントワーキングディレクトリを表示する。
.TP 
\fIquit\fP
\fBdebugfs\fP を終了する。
.TP 
\fIrdump directory destination\fP
\fIdirectory\fP と (通常のファイル・シンボリックリンク・ その他のディレクトリを含む) そのディレクトリの全ての内容を、
\fIdestination\fP という名前のディレクトリに再帰的にダンプする。 \fIdestination\fP
はネイティブファイルシステム上に存在するディレクトリでなければならない。
.TP 
\fIrm pathname\fP
\fIpathname\fP で指定したパス名を unlink する。 \fIpathname\fP の示す inode が何も参照しなくなった場合には、
ファイルのアロケートを外す。 このコマンドは unlink() システムコールのように動作する。
.TP 
\fIrmdir filespec\fP
\fIfilespec\fP で指定したディレクトリを消去する。
.TP 
\fIsetb block [count]\fP
ブロック番号 \fIblock\fP をアロケートされているものとしてマークする。 省略可能な引数 \fIcount\fP を指定すると、ブロック番号
\fIblock\fP から始まる \fIcount\fP 分のブロックをアロケートされているものとしてマークする。
.TP 
\fIset_block_group bgnum field value\fP
Modify the block group descriptor specified by \fIbgnum\fP so that the block
group descriptor field \fIfield\fP has value \fIvalue.\fP
.TP 
\fIseti filespec\fP
inode ビットマップに、 \fIfilespec\fP で指定した inode が使用中であるとマークする。
.TP 
\fIset_inode_field filespec field value\fP
\fIfilespec\fP で指定された inode を変更し、inode フィールド \fIfield\fP が値 \fIvalue\fP を持つようにする。
このコマンドで設定が可能な、正しい inode フィールドのリストは、 \fBset_inode_field \-l\fP コマンドによって表示できる。
.TP 
\fIset_mmp_value field value\fP
Modify the multiple\-mount protection (mmp) data so that the mmp field
\fIfield\fP has value \fIvalue.\fP The list of valid mmp fields which can be set
via this command can be displayed by using the command: \fBset_mmp_value \-l\fP
.TP 
\fIset_super_value field value\fP
スーパーブロックフィールド \fIfield\fP を \fIvalue\fP にする。このコマンドで設定が可能な、 正しいスーパーブロックフィールドのリストは、
\fBset_super_value \-l\fP コマンドによって表示できる。
.TP 
\fIshow_super_stats [\-h]\fP
スーパーブロックとブロックグループディスクリプタの内容を表示する。 \fI\-h\fP フラグが与えられると、 スーパーブロックの内容だけを表示する。
.TP 
\fIstat filespec\fP
\fIfilespec\fP で指定した inode の inode 構造体の内容を表示する。
.TP 
\fItestb block [count]\fP
ブロック番号 \fIblock\fP がブロックビットマップにおいてアロケートになっているかどうか調べる。 省略可能な引数 \fIcount\fP
を指定すると、ブロック番号 \fIblock\fP から始まる \fIcount\fP 分のブロックを検査する。
.TP 
\fItesti filespec\fP
\fIfilespec\fP で指定した inode が inode ビットマップにおいてアロケートになっているかどうか調べる。
.TP 
\fIundel <inode num> [pathname]\fP
Undelete the specified inode number (which must be surrounded by angle
brackets) so that it and its blocks are marked in use, and optionally link
the recovered inode to the specified pathname.  The \fBe2fsck\fP command should
always be run after using the \fBundel\fP command to recover deleted files.
.IP
Note that if you are recovering a large number of deleted files, linking the
inode to a directory may require the directory to be expanded, which could
allocate a block that had been used by one of the yet\-to\-be\-undeleted
files.  So it is safer to undelete all of the inodes without specifying a
destination pathname, and then in a separate pass, use the debugfs \fBlink\fP
command to link the inode to the destination pathname, or use \fBe2fsck\fP to
check the filesystem and link all of the recovered inodes to the lost+found
directory.
.TP 
\fIunlink pathname\fP
\fIpathname\fP で指定した、ある inode を指すリンクを削除する。 なおこの際、inode 参照数は変更しないことに注意。
.TP 
\fIwrite source_file out_file\fP
ファイルシステム内に \fIout_file\fP で指定したファイルを作成し、 \fIsource_file\fP の内容をそのファイルにコピーする。
.SH 環境変数
.TP 
\fBDEBUGFS_PAGER, PAGER\fP
\fBdebugfs\fP はいくつかのコマンドの出力を常にページャプログラムにパイプする。 そのようなコマンドとしては、
\fIshow_super_stats\fP, \fIlist_directory\fP, \fIshow_inode_info\fP,
\fIlist_deleted_inodes\fP, \fIhtree_dump\fP がある。 特定のページャを環境変数 \fBDEBUGFS_PAGER\fP
で明示的に指定することができる。 この環境変数が設定されていない場合は、環境変数 \fBPAGER\fP で指定される。
.IP
1 つのページャが常に使われるので、 \fBless\fP(1)  ページャは特に適さない点に注意すること。 \fBless\fP(1)
はコマンドの表示を表示する前にスクリーンをクリアしたり、 ページャが終了するときにスクリーンへの出力をクリアしてしまうからである。 多くのユーザは
\fBless\fP(1)  ページャをいろいろな目的に使うのを好んでいる。 これが環境変数 \fBDEBUGFS_PAGER\fP で、より一般的な環境変数
\fBPAGER\fP を上書きできる理由である。
.SH 作者
\fBdebugfs\fP は Theodore Ts'o <tytso@mit.edu> が作成した。
.SH 関連項目
\fBdumpe2fs\fP(8), \fBtune2fs\fP(8), \fBe2fsck\fP(8), \fBmke2fs\fP(8)
