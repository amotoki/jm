.\" Copyright 1992, 1993 Rickard E. Faith (faith@cs.unc.edu)
.\" Copyright 1998 Andries E. Brouwer (aeb@cwi.nl)
.\" May be distributed under the GNU General Public License
.\"
.\" Japanese Version Copyright (c) 1997-1998 NAKANO Takeo all rights reserved.
.\" Translated Thu Sep 11 1997 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated & Modified Fri 3 Jul 1998 by NAKANO Takeo
.\" Updated & Modified Thu 7 Oct 1999 by NAKANO Takeo 
.\" Updated & Modified Sat 18 Mar 2000 by NAKANO Takeo 
.\" Updated & Modified Jun 14 May 2000 by NAKANO Takeo 
.\" Updated & Modified Tue May  4 23:47:43 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.TH FDISK 8 "11 June 1998" "Linux 2.0" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O fdisk \- Partition table manipulator for Linux
fdisk \- Linux 用のパーティションテーブル操作ツール
.\"O .SH SYNOPSIS
.SH 書式
.BI "fdisk [\-u] [\-b " sectorsize ]
.BI "[\-C " cyls "] [\-H " heads "] [\-S " sects "] " device
.sp
.BI "fdisk \-l [\-u] [" "device ..." ]
.sp
.BI "fdisk \-s " "partition ..."
.sp
.BI "fdisk \-v
.\"O .SH DESCRIPTION
.SH 説明
.\"O Hard disks can be divided into one or more logical disks called
.\"O .IR partitions .
.\"O This division is described in the
.\"O .I "partition table"
.\"O found in sector 0 of the disk.
ハードディスクは、一つ以上の論理的なディスクに分割することができる。
これは
.I
パーティション (partition)
と呼ばれる。この分割に関する情報は、ディスクのセクタ 0 に置かれる
.I
パーティションテーブル
に保存される。

.\"O In the BSD world one talks about `disk slices' and a `disklabel'.
BSD の世界では、それぞれ「ディスクスライス (disk slice)」、
「ディスクラベル (disklabel)」といった用語が用いられる。

.\"O Linux needs at least one partition, namely for its root file system.
.\"O It can use swap files and/or swap partitions, but the latter are more
.\"O efficient. So, usually one will want a second Linux partition
.\"O dedicated as swap partition.
.\"O On Intel compatible hardware, the BIOS that boots the system
.\"O can often only access the first 1024 cylinders of the disk.
.\"O For this reason people with large disks often create a third partition,
.\"O just a few MB large, typically mounted on
.\"O .IR /boot ,
.\"O to store the kernel image and a few auxiliary files needed at boot time,
.\"O so as to make sure that this stuff is accessible to the BIOS.
.\"O There may be reasons of security, ease of administration and backup,
.\"O or testing, to use more than the minimum number of partitions.
Linux は少なくとも一つのパーティションを必要とする。
すなわちルートファイルシステムとするパーティションである。
また Linux ではスワップファルやスワップパーティションを
利用することができるが、後者の方が効率が良い。
したがって、通常は二つめのパーティションを
スワップ用に利用したくなる場合が多いだろう。
Intel 互換のハードウェアでは、システムをブートさせる BIOS はディスクの
先頭 1024 シリンダにしかアクセスできない場合が多い。
したがって大きなディスクを使っているユーザーは、
数メガバイト程度の第三のパーティションを追加することになる。
これは典型的には
.IR /boot
にマウントされ、カーネルイメージと、
ブートに必要ないくつかの外部ファイルを保存する。
このようにして、ブートに必要なファイルが BIOS によって
アクセス可能であることを保証するのである。
またセキュリティ、保守の都合、バックアップ、テストなど、
より多くのパーティションを使う理由は他にも存在する。

.\"O .B fdisk
.\"O (in the first form of invocation)
.\"O is a menu driven program for creation and manipulation of
.\"O partition tables.
.\"O It understands DOS type partition tables and BSD or SUN type disklabels.
(最初の形式で起動された場合には)
.B fdisk
はメニュー駆動型のプログラムであり、
パーティションテーブルの作成と操作を行う。
DOS 形式のパーティションや、BSD, 
SUN 形式のディスクラベルを扱うこともできる。

.\"O The
.\"O .I device
.\"O is usually one of the following:
.I device
に指定するのは通常以下のうちのどれかである。
.br
.nf
.RS
/dev/hda
/dev/hdb
/dev/sda
/dev/sdb
.RE
.fi
.\"O (/dev/hd[a-h] for IDE disks, /dev/sd[a-p] for SCSI disks,
.\"O /dev/ed[a-d] for ESDI disks, /dev/xd[ab] for XT disks).
.\"O A device name refers to the entire disk.
(/dev/hd[a\-h] は IDE ディスク、/dev/sd[a\-p] は SCSI ディスク、
/dev/ed[a\-d] は ESDI ディスク、/dev/xd[ab] は XT ディスクである)
デバイス名はディスク全体を参照する。

.\"O The
.\"O .I partition
.\"O is a
.\"O .I device
.\"O name followed by a partition number.  For example,
.\"O .B /dev/hda1
.\"O is the first partition on the first IDE hard disk in the system.
.\"O IDE disks can have up to 63 partitions, SCSI disks up to 15.
.\"O See also
.\"O .IR /usr/src/linux/Documentation/devices.txt .
.I partition
は
.I device
名にパーティション番号を付加したものである。例えば
.B /dev/hda1
はシステムの第一 IDE ハードディスクの第一パーティションを指す。
IDE ディスクは 63 個までのパーティションを保持することができる。
SCSI ディスクは 15 までである。
.I /usr/src/linux/Documentation/devices.txt
も参考にすると良い。

.\"O A BSD/SUN type disklabel can describe 8 partitions,
.\"O the third of which should be a `whole disk' partition.
.\"O Do not start a partition that actually uses its first sector
.\"O (like a swap partition) at cylinder 0, since that will
.\"O destroy the disklabel.
BSD/SUN 形式のディスクラベルは 8 パーティションを扱うことができる。
そのうち 3 番目は「ディスク全体」を表すパーティションとなる。
先頭セクタを実際に利用するパーティション (スワップなど) を
シリンダ 0 から割り当ててはならない。ディスクラベルを破壊してしまう。

.\"O An IRIX/SGI type disklabel can describe 16 partitions,
.\"O the eleventh of which should be an entire `volume' partition,
.\"O while the ninth should be labeled `volume header'.
.\"O The volume header will also cover the partition table, i.e.,
.\"O it starts at block zero and extends by default over five cylinders.
.\"O The remaining space in the volume header may be used by header
.\"O directory entries.  No partitions may overlap with the volume header.
.\"O Also do not change its type and make some file system on it, since
.\"O you will lose the partition table.  Use this type of label only when
.\"O working with Linux on IRIX/SGI machines or IRIX/SGI disks under Linux.
IRIX/SGI 形式のディスクラベルは、16 パーティションを記述できる。
そのうちの第 11 番目は `volume' 全体に対応するパーティションであり、
第 9 番目は `volume header' とラベル付けされる。
volume header はパーティションテーブルの領域もカバーする。
つまり volume header はブロック 0 から始まり、デフォルトでは
シリンダ 5 までの部分を占める。volume header の残りの部分は
ヘッダディレクトリエントリに用いられる。
volume header は他のパーティションと重なってはならない。
またパーティションテーブルが含まれているので、形式を変更したり、
ファイルシステムを作ったりもできない。
このラベル形式は、IRIX/SGI マシンで動作している Linux か、
IRIX/SGI ディスクを Linux で使う場合に限って用いること。

.\"O A DOS type partition table can describe an unlimited number
.\"O of partitions. In sector 0 there is room for the description
.\"O of 4 partitions (called `primary'). One of these may be an
.\"O extended partition; this is a box holding logical partitions,
.\"O with descriptors found in a linked list of sectors, each
.\"O preceding the corresponding logical partitions.
.\"O The four primary partitions, present or not, get numbers 1-4.
.\"O Logical partitions start numbering from 5.
DOS 形式のパーティションテーブルは、パーティションの数に制限がない。
セクタ 0 には、4 つのパーティション
(「基本 (primary) パーティション」と呼ばれる) に関する情報が記述されている。
これら基本パーティションは、拡張 (extended) パーティションにすることもできる。
これは論理 (logical) パーティションの入れ物となる。
拡張パーティションにはディスクリプターが
セクタのリンクリストの形式で置かれ、
それぞれ対応する論理パーティションの情報を保持する。
四つの基本パーティションには (存在していなくても)
番号 1\-4 が割り当てられる。論理パーティションの番号は 5 から始まる。

.\"O In a DOS type partition table the starting offset and the size
.\"O of each partition is stored in two ways: as an absolute number
.\"O of sectors (given in 32 bits) and as a Cylinders/Heads/Sectors
.\"O triple (given in 10+8+6 bits). The former is OK - with 512-byte
.\"O sectors this will work up to 2 TB. The latter has two different
.\"O problems. First of all, these C/H/S fields can be filled only
.\"O when the number of heads and the number of sectors per track
.\"O are known. Secondly, even if we know what these numbers should be,
.\"O the 24 bits that are available do not suffice.
.\"O DOS uses C/H/S only, Windows uses both, Linux never uses C/H/S.
DOS 形式のパーティションテーブルでは、それぞれのパーティションの
スタートオフセットとサイズは、二種類の方法で保存される。
一つはセクタの絶対数 (32 ビット) であり、
もう一つは「シリンダ数/ヘッド数/セクタ数 
(C/H/S)」の三つの組み合わせである (それぞれ 10, 8, 6 ビット)。
前者には問題は特になく、512 バイトのセクタで 2 TB を扱うことができる。
後者には二種類の問題がある。まず第一に、この C/H/S を与えるためには、
ヘッド数とトラックあたりのセクタ数を知っていなければならない。
第二に、これらの数値がわかったとしても、24 ビットでは足りないかもしれない。
DOS は C/H/S だけを用いる。Windows は両方を用いる。
Linux では C/H/S は使わない。

.\"O If possible,
.\"O .B fdisk
.\"O will obtain the disk geometry automatically.  This is not
.\"O necessarily the physical disk geometry (indeed, modern disks do not
.\"O really have anything like a physical geometry, certainly not something
.\"O that can be described in simplistic Cylinders/Heads/Sectors form),
.\"O but is the disk geometry that MS-DOS uses for the partition table.
.B fdisk
は、
可能な場合にはディスクのジオメトリを自動的に取得する。
これはディスクの物理的なジオメトリであるとは限らない
(実際、最近のディスクでは、本当に物理的な \- 単純な
C/H/S 形式で記述できるような \- ジオメトリを持っていないものもある)。
しかしいずれにせよ、
MS-DOS はこのジオメトリをパーティションテーブルで利用する。

.\"O Usually all goes well by default, and there are no problems if
.\"O Linux is the only system on the disk. However, if the disk has
.\"O to be shared with other operating systems, it is often a good idea
.\"O to let an fdisk from another operating system make at least one
.\"O partition. When Linux boots it looks at the partition table, and
.\"O tries to deduce what (fake) geometry is required for good
.\"O cooperation with other systems.
Linux しか置かないディスクなら、通常はデフォルトで問題なくすべてうまくいく。
しかし他の OS とディスクを共有しなければならない場合には、
まず他の OS 上で、その OS 付属の fdisk を先に実行し、
少なくとも一つのパーティションを作っておくと良い場合が多い。
Linux は、他の OS とうまく付き合うために、
ブート時にパーティションテーブルを参照し、
どんなジオメトリが要求されているのかを判断・決定しようとする
(要求されているジオメトリは、
物理的なものとは異なっているかもしれないから)。

.\"O Whenever a partition table is printed out, a consistency check is performed
.\"O on the partition table entries.  This check verifies that the physical and
.\"O logical start and end points are identical, and that the partition starts
.\"O and ends on a cylinder boundary (except for the first partition).
パーティションテーブルが表示されるときには、パーティションテーブルの
エントリに対して整合性チェックが行われる。このチェックは、パーティション
の開始と終了に関する、物理的な情報と論理的なそれとが同一であるか、また
パーティションの開始／終了点がシリンダ境界にあるかを調べる (ただし後者
のチェックでは、最初のパーティションは例外である)。

.\"O Some versions of MS-DOS create a first partition which does not begin
.\"O on a cylinder boundary, but on sector 2 of the first cylinder.
.\"O Partitions beginning in cylinder 1 cannot begin on a cylinder boundary, but
.\"O this is unlikely to cause difficulty unless you have OS/2 on your machine.
MS-DOS のバージョンによっては、最初のパーティションの開始点をシリンダ
境界ではなく先頭シリンダの第 2 セクタにするものがある。
シリンダ 1 から始まるパーティションの開始点はシリンダ境界にならないが、
これは問題になることはあまりないだろう。
ただし OS/2 を同じマシンで使っていなければ、であるが。

.\"O A sync() and a BLKRRPART ioctl() (reread partition table from disk)
.\"O are performed before exiting when the partition table has been updated.
.\"O Long ago it used to be necessary to reboot after the use of fdisk.
.\"O I do not think this is the case anymore - indeed, rebooting too quickly
.\"O might cause loss of not-yet-written data. Note that both the kernel
.\"O and the disk hardware may buffer data.
パーティションテーブルが更新されると、終了する前に sync() と BLKRRPART
ioctl() (ディスクからパーティションテーブルを読み込みなおす) が
実行される。とても昔には、fdisk を利用した後にはリブートが
必須だったこともあった。
多分これは現在では直っていると思う \- むしろ、あまりに急いで
リブートすると、まだ書き込まれていないデータを失うかもしれない。
カーネルとディスクハードウェアの両方にバッファーデータが存在することに
注意すること。

.\"O .SH "DOS 6.x WARNING"
.SH "DOS 6.x 向けの警告"

.\"O The DOS 6.x FORMAT command looks for some information in the first
.\"O sector of the data area of the partition, and treats this information
.\"O as more reliable than the information in the partition table.  DOS
.\"O FORMAT expects DOS FDISK to clear the first 512 bytes of the data area
.\"O of a partition whenever a size change occurs.  DOS FORMAT will look at
.\"O this extra information even if the /U flag is given -- we consider
.\"O this a bug in DOS FORMAT and DOS FDISK.
DOS 6.x の FORMAT コマンドはパーティションのデータエリアの
第一セクタからある種の情報を検索し、
これをパーティションテーブルにある情報より信頼できるものとして扱う。
DOS の FORMAT は、容量が変更されたときには最初の 512 バイト分の
データ領域が DOS 版 FDISK によってクリアされていることを仮定している。
DOS の FORMAT はこの拡張情報を /U フラグを指定した場合でも見ようとする
\- これは DOS FORMAT と DOS FDISK のバグであると我々は考える。

.\"O The bottom line is that if you use cfdisk or fdisk to change the size of a
.\"O DOS partition table entry, then you must also use
.\"O .B dd
.\"O to zero the first 512 bytes of that partition before using DOS FORMAT to
.\"O format the partition.  For example, if you were using cfdisk to make a DOS
.\"O partition table entry for /dev/hda1, then (after exiting fdisk or cfdisk
.\"O and rebooting Linux so that the partition table information is valid) you
.\"O would use the command "dd if=/dev/zero of=/dev/hda1 bs=512 count=1" to zero
.\"O the first 512 bytes of the partition.
結局のところ、cfdisk や fdisk を用いて DOS パーティションの容量を
変更したときは、DOS FORMAT を使ってパーティションをフォーマットする前に
.B dd
を使って先頭の 512 バイトを 0 で埋めなければならない、というわけである。
例えば cfdisk を用いて /dev/hda1 の DOS パーティションの
テーブルエントリを作成した場合には、(fdisk または cfdisk を終了し、
Linux をリブートしてパーティションテーブルの情報を有効にしたあとで)
先頭の 512 バイトをゼロにするために
"dd if=/dev/zero of=/dev/hda1 bs=512 count=1"
などと実行する必要がある。

.\"O .B BE EXTREMELY CAREFUL
.\"O if you use the
.\"O .B dd
.\"O command, since a small typo can make all of the data on your disk useless.
.B dd
コマンドを使う場合には\fB特に注意すること\fP。ちょっとしたタイプミスで、
ディスク上のすべてのデータがパーになる可能性もある。

.\"O For best results, you should always use an OS-specific partition table
.\"O program.  For example, you should make DOS partitions with the DOS FDISK
.\"O program and Linux partitions with the Linux fdisk or Linux cfdisk program.
できるだけ問題を起こしたくなければ、常に OS 固有のパーティション
テーブル用プログラムを用いることである。
例えば DOS パーティションは DOS FDISK プログラムで作り、
Linux のパーティションは Linux の fdisk または cfdisk で作るべきなのである。

.\"O .SH OPTIONS
.SH オプション
.TP
.BI "\-b " sectorsize
.\"O Specify the sector size of the disk. Valid values are 512, 1024, or 2048.
.\"O (Recent kernels know the sector size. Use this only on old kernels or
.\"O to override the kernel's ideas.)
ディスクのセクタサイズを指定する。
指定できる値は 512, 1024, 2048 のいずれかである。
(最近のカーネルはセクタサイズをうまく扱える。
このオプションを用いるのは、カーネルが古い場合や、
カーネルの考えを上書きする場合だけにすること。)
.TP
.BI "\-C " cyls
.\"O Specify the number of cylinders of the disk.
ディスクのシリンダ数を指定する。
.\"O I have no idea why anybody would want to do so.
なぜこれを指定したいと思うのかは分からない。
.TP
.BI "\-H " heads
.\"O Specify the number of heads of the disk. (Not the physical number,
.\"O of course, but the number used for partition tables.)
.\"O Reasonable values are 255 and 16.
ディスクのヘッダ数を指定する
(もちろん物理的なヘッダ数ではなく、
パーティションテーブルに使われるヘッダ数である)。
適切な値は 255 または 16 である。
.TP
.BI "\-S " sects
.\"O Specify the number of sectors per track of the disk.
.\"O (Not the physical number, of course, but the number used for
.\"O partition tables.)
.\"O A reasonable value is 63.
ディスクの 1 トラック当りのセクタ数を指定する
(もちろん物理的なセクタ数ではなく、
パーティションテーブルに使われるセクタ数である)。
適切な値は 63 である。
.TP
.B \-l
.\"O List the partition tables for the specified devices and then exit.
.\"O If no devices are given, those mentioned in
.\"O .I /proc/partitions
.\"O (if that exists) are used.
指定したデバイスのパーティションテーブルをリストして終了する。
デバイスを何も指定しないと、
.I /proc/partitions
があれば、そこにあるデバイスを対象にする。
.TP
.B \-u
.\"O When listing partition tables, give sizes in sectors instead
.\"O of cylinders.
パーティションテーブルをリストするときに、サイズをシリンダ単位ではなく
セクタ単位で表示する。
.TP
.BI "\-s " partition
.\"O The
.\"O .I size
.\"O of the partition (in blocks) is printed on the standard output.
パーティションのサイズを (ブロック単位で) 標準出力に表示する。
.TP
.B \-v
.\"O Print version number of
.\"O .B fdisk
.\"O program and exit.
.B fdisk
プログラムのバージョン番号を表示して終了する。
.\"O .SH BUGS
.SH バグ
.\"O There are several *fdisk programs around.
.\"O Each has its problems and strengths.
.\"O Try them in the order
.\"O .BR cfdisk ,
.\"O .BR fdisk ,
.\"O .BR sfdisk .
この種の *fdisk プログラムには、同じ機能を持ったものが複数存在する。
それぞれ長所短所がある。
.BR cfdisk ,
.BR fdisk ,
.B sfdisk
の順に試してみると良いだろう。
.\"O (Indeed,
.\"O .B cfdisk
.\"O is a beautiful program that has strict requirements on
.\"O the partition tables it accepts, and produces high quality partition
.\"O tables. Use it if you can.
.\"O .B fdisk
.\"O is a buggy program that does fuzzy things - usually it happens to
.\"O produce reasonable results. Its single advantage is that it has
.\"O some support for BSD disk labels and other non-DOS partition tables.
.\"O Avoid it if you can.
.\"O .B sfdisk
.\"O is for hackers only - the user interface is terrible, but it is
.\"O more correct than fdisk and more powerful than both fdisk and cfdisk.
.\"O Moreover, it can be used noninteractively.)
(実際のところ、
.B cfdisk
は美しいプログラムであり、受付けるパーティションテーブルに
厳しい条件を課し、品質の高いパーティションテーブルを生成する。
可能な場合はこれを用いること。
.B fdisk
はバグっぽいプログラムで、やることもややあやふやである -
通常は真っ当な結果を出力するけれど。一つ利点があるとすると、
.B fdisk
は BSD のディスクラベルや、その他の非 DOS パーティションテーブルを
多少サポートしている点である。
.B sfdisk
はハッカー専用である。ユーザーインターフェースはひどいが、
fdisk よりも正しく、また fdisk, cfdisk のどちらよりもパワフルだ。
それに、インタラクティブでない使い方もできる)
.PP
.\"O These days there also is
.\"O .BR parted .
最近は
.B parted
というツールもある。
.\"O The cfdisk interface is nicer, but parted does much more: it not only
.\"O resizes partitions, but also the filesystems that live in them.
cfdisk のインタフェースは優れているが、parted はより優れている。
parted はパーティションのサイズを変更するだけではなく、
パーティションにあるファイルシステムのサイズも変更する。
.PP
.\"O The IRIX/SGI type disklabel is currently not supported by the kernel.
.\"O Moreover, IRIX/SGI header directories are not fully supported yet.
IRIX/SGI 形式のディスクラベルは、現時点ではカーネルでサポートされていない。
また IRIX/SGI ヘッダディレクトリはまだ完全にはサポートできていない。
.PP
.\"O The option `dump partition table to file' is missing.
「パーティションテーブルをファイルにダンプする」
オプションは存在しない。
.\" .SH AUTHORS
.\" A. V. Le Blanc (LeBlanc@mcc.ac.uk)
.\" Bernhard Fastenrath (fasten@informatik.uni-bonn.de)
.\" Jakub Jelinek (jj@sunsite.mff.cuni.cz)
.\" Andreas Neuper (ANeuper@GUUG.de)
.\" and many others.
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR cfdisk (8),
.BR mkfs (8),
.BR parted (8),
.BR sfdisk (8)
