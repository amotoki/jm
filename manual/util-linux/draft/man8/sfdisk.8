.\" Copyright 1995 Andries E. Brouwer (aeb@cwi.nl)
.\" May be distributed under the GNU General Public License
.\" The `DOS 6.x Warning' was taken from the old fdisk.8, which says
.\" -- Copyright 1992, 1993 Rickard E. Faith (faith@cs.unc.edu)
.\" -- May be distributed under the GNU General Public License
.\" The `DRDOS Warning' was taken from a net post by Stephen Tweedie.
.\"
.\"
.\" Japanese Version Copyright (c) 2001-2005 Yuichi SATO
.\"         all rights reserved.
.\" Translated Sun Mar  4 15:57:26 JST 2001
.\"         by Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified Fri Jan 25 05:42:49 JST 2002 by Yuichi SATO
.\" Updated & Modified Mon Mar 10 04:26:24 JST 2003
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Sun May  2 12:41:19 JST 2004 by Yuichi SATO
.\" Updated & Modified Mon May  9 03:21:52 JST 2005 by Yuichi SATO
.\"
.TH SFDISK 8 "1 September 1995" "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O sfdisk \- Partition table manipulator for Linux
sfdisk \- Linux 用のパーティションテーブル操作ツール
.\"O .SH SYNOPSIS
.SH 書式
.BR sfdisk " [options] device"
.br
.BR "sfdisk \-s " [partition]
.\"O .SH DESCRIPTION
.SH 説明
.\"O .B sfdisk
.\"O has four (main) uses: list the size of a partition, list the partitions
.\"O on a device, check the partitions on a device, and - very dangerous -
.\"O repartition a device.
.B sfdisk
には (主に) 4 つの使用法があり、
パーティションサイズの一覧・
デバイス上のパーティションの一覧・
デバイス上のパーティションのチェック・
デバイスのパーティション再分割 (これは非常に危険)
ができる。

.\"O .SS "List Sizes"
.SS サイズの一覧
.\"O .BI "sfdisk \-s " partition
.\"O gives the size of
.\"O .I partition
.\"O in blocks. This may be useful in connection with programs like
.\"O .B mkswap
.\"O or so. Here
.\"O .I partition
.\"O is usually something like
.\"O .I /dev/hda1
.\"O or
.\"O .IR /dev/sdb12 ,
.\"O but may also be an entire disk, like
.\"O .IR /dev/xda .
.BI "sfdisk \-s " partition
とすると
.I partition
のサイズをブロック単位で表示する。
この使用法は
.B mkswap
のようなプログラムと共に使う場合に便利である。
ここで、
.I partition
は、普通
.I /dev/hda1
や
.I /dev/sdb12
のようにするが、
.I /dev/xda
のようにディスク全体でもよい。
.br
.RS
.nf
.if t .ft CW
% sfdisk \-s /dev/hda9
81599
%
.if t .ft R
.fi
.RE
.\"O If the partition argument is omitted,
.\"O .B sfdisk
.\"O will list the sizes of all disks, and the total:
パーティション引き数が省略された場合、
.B sfdisk
は全てのディスクのサイズと合計をリストする:
.br
.RS
.nf
.if t .ft CW
% sfdisk \-s
/dev/hda: 208896
/dev/hdb: 1025136
/dev/hdc: 1031063
/dev/sda: 8877895
/dev/sdb: 1758927
.\"O total: 12901917 blocks
合計: 12901917 ブロック
%
.if t .ft R
.fi
.RE

.\"O .SS "List Partitions"
.SS パーティションの一覧
.\"O The second type of invocation:
.\"O .BI "sfdisk \-l " "[options] device"
.\"O will list the partitions on this device.
.\"O If the device argument is omitted, the partitions on all hard disks
.\"O are listed.
第 2 の呼び出し形式:
.BI "sfdisk \-l " "[options] device"
はデバイス上のパーティションをリストする。
デバイス引き数が省略された場合、
全てのハードディスク上のパーティションがリストされる。
.br
.nf
.if t .ft CW
% sfdisk \-l /dev/hdc

.\"O Disk /dev/hdc: 16 heads, 63 sectors, 2045 cylinders
.\"O Units = cylinders of 516096 bytes, blocks of 1024 bytes, counting from 0
.\"Osato: util-linux-2.10s では以下のように表示される。
.\"Osato: ディスク /dev/hdc: シリンダ数 2045、ヘッド数 16、63 セクタ/トラック
ディスク /dev/hdc: ヘッド数 16、セクタ数 63、シリンダ数 2045
ユニット = 516096 バイトのシリンダ、1024 バイトのブロック、0 から数えます

.\"O   Device Boot Start     End   #cyls   #blocks   Id  System
デバイス ブート 始点   終点   #シリンダ #ブロック ID   システム
/dev/hdc1          0+    406     407\-   205096+  83  Linux native
/dev/hdc2        407     813     407    205128   83  Linux native
/dev/hdc3        814    2044    1231    620424   83  Linux native
.\"O /dev/hdc4          0       \-       0         0    0  Empty
/dev/hdc4          0       \-       0         0    0  空
%
.if t .ft R
.fi
.\"O The trailing \- and + signs indicate that rounding has taken place,
.\"O and that the actual value is slightly less (more).
.\"O To see the exact values, ask for a listing with sectors as unit.
数字の後ろに付いた \- と + 符号は、
丸めが行われており、本当の値は多少小さい (大きい) ことを示す。
正確な値を知るためには、セクタを単位としてリストすればよい。

.\"O .SS "Check partitions"
.SS パーティションのチェック
.\"O The third type of invocation:
.\"O .BI "sfdisk \-V " device
.\"O will apply various consistency checks to the partition tables on
.\"O .IR device .
.\"O It prints `OK' or complains. The \-V option can be used together
.\"O with \-l. In a shell script one might use
.\"O .BI "sfdisk \-V \-q " device
.\"O which only returns a status.
第 3 の呼び出し形式:
.BI "sfdisk \-V " device
は
.I device
上のパーティションテーブルに対していろいろな整合性チェックを適用する。
`OK' または問題点が表示される。
\-V オプションは \-l と一緒に使うことができる。
シェルスクリプトから使う場合は
.BI "sfdisk \-V \-q " device
とすればステータスのみを返すこともできる。

.\"O .SS "Create partitions"
.SS パーティションの作成
.\"O The fourth type of invocation:
.\"O .BI "sfdisk " device
.\"O will cause
.\"O .B sfdisk
.\"O to read the specification for the desired partitioning of
.\"O .I device
.\"O from its standard input, and then to change the partition tables
.\"O on that disk. Thus, it is possible to use
.\"O .B sfdisk
.\"O from a shell script. When
.\"O .B sfdisk
.\"O determines that its standard input is a terminal, it will be
.\"O conversational; otherwise it will abort on any error.
第 4 の呼び出し形式:
.BI "sfdisk " device
を用いると、
.B sfdisk
は
.I device
用のパーティション分割指定を標準入力から読み込み、
そのディスクのパーティションテーブルを変更する。
よって、
.B sfdisk
をシェルスクリプトから使うことができる。
.B sfdisk
が標準入力を端末と認識した場合は、対話的な動作に入る。
それ以外の場合は、何らかのエラーでアボート (abort) する。
.LP
.\"O BE EXTREMELY CAREFUL - ONE TYPING MISTAKE AND ALL YOUR DATA IS LOST
.B 特に注意 - 1 つ打ち間違えるだけで全てのデータが失われる
.LP
.\"O As a precaution, one can save the sectors changed by
.\"O .BR sfdisk :
予防措置として、
.B sfdisk
で変更されるセクタを保存することができる:
.RS
.nf
.if t .ft CW
% sfdisk /dev/hdd \-O hdd-partition-sectors.save
\&...
%
.if t .ft R
.fi
.RE
.LP
.\"O Then, if you discover that you did something stupid before anything
.\"O else has been written to disk, it may be possible to recover
.\"O the old situation with
こうすれば、(ディスクに何かを書き込む前なら)
何か馬鹿な間違いに気付いた場合に、
以下のようにして以前の状態に戻すことができる。
.RS
.nf
.if t .ft CW
% sfdisk /dev/hdd \-I hdd-partition-sectors.save
%
.if t .ft R
.fi
.RE
.LP
.\"O (This is not the same as saving the old partition table:
.\"O a readable version of the old partition table can be saved
.\"O using the \-d option. However, if you create logical partitions,
.\"O the sectors describing them are located somewhere on disk,
.\"O possibly on sectors that were not part of the partition table
.\"O before. Thus, the information the \-O option saves is not a binary
.\"O version of the output of \-d.)
(これは以前のパーティションテーブルを保存するのとは異なる:
以前のパーティションテーブルは \-d オプションを使えば可読な形式で保存できる。
しかし、論理パーティションを作成した場合、
それを記述するセクタはディスクのどこかにあり、
以前のパーティションテーブルの一部ではないセクタに置かれる可能性もある。
よって、\-O オプションで保存される情報は、
\-d の出力のバイナリ版ではない。)

.\"O There are many options.
多くのオプションがある。

.\"O .SH OPTIONS
.SH オプション
.TP
.\"O .BR \-v " or " \-\-version
.\"O Print version number of
.\"O .B sfdisk
.\"O and exit immediately.
.BR \-v " または " \-\-version
.B sfdisk
のバージョン番号を表示して、すぐに終了する。
.TP
.\"O .BR \-? " or " \-\-help
.\"O Print a usage message and exit immediately.
.BR \-? " または " \-\-help
使用法のメッセージを表示して、すぐに終了する。
.TP
.\"O .BR \-T " or " \-\-list\-types
.\"O Print the recognized types (system Id's).
.BR \-T " または " \-\-list\-types
認識されたタイプ (システム ID) を表示する。
.TP
.\"O .BR \-s " or " \-\-show\-size
.\"O List the size of a partition.
.BR \-s " または " \-\-show\-size
パーティションのサイズをリストする。
.TP
.\"O .BR \-g " or " \-\-show\-geometry
.\"O List the kernel's idea of the geometry of the indicated disk(s).
.BR \-g " または " \-\-show\-geometry
指定されたディスクに関するカーネルのジオメトリ情報をリストする。
.TP
.\"O .BR \-G " or " \-\-show\-pt\-geometry
.\"O List the geometry of the indicated disks guessed by looking at
.\"O the partition table.
.BR \-G " または " \-\-show\-pt\-geometry
指定されたディスクに関するカーネルのジオメトリ情報を、
パーティションテーブルを見て推測し、リストする。
.TP
.\"O .BR \-l " or " \-\-list
.\"O List the partitions of a device.
.BR \-l " または " \-\-list
デバイスのパーティションをリストする。
.TP
.BR \-d
.\"O Dump the partitions of a device in a format useful as input
.\"O to sfdisk. For example,
sfdisk の入力として使えるフォーマットで、
デバイスのパーティションをダンプする。
例えば、
.br
.nf
.if t .ft CW
    % sfdisk -d /dev/hda > hda.out
    % sfdisk /dev/hda < hda.out
.if t .ft R
.fi
.\"O will correct the bad last extended partition that the OS/2
.\"O fdisk creates.
は (OS/2 の fdisk が作った) 不正な最後の拡張パーティションを修正する。
.TP
.\"O .BR \-V " or " \-\-verify
.\"O Test whether partitions seem correct. (See above.)
.BR \-V " または " \-\-verify
パーティションが正しいかをテストする (上記を参照)。
.TP
.\"O .BR \-i " or " \-\-increment
.\"O Number cylinders etc. starting from 1 instead of 0.
.BR \-i " または " \-\-increment
シリンダ数を 0 ではなく 1 から数える。
.TP
.BI \-N " number"
.\"O Change only the single partition indicated. For example:
指定された 1 つのパーティションだけを変更する。
例えば、
.br
.nf
.if t .ft CW
    % sfdisk /dev/hdb \-N5
    ,,,*
    %
.if t .ft R
.fi
.\"O will make the fifth partition on /dev/hdb bootable (`active')
.\"O and change nothing else. (Probably this fifth partition
.\"O is called /dev/hdb5, but you are free to call it something else,
.\"O like `/my_equipment/disks/2/5' or so).
は /dev/hdb の第 5 パーティションをブート可能 (`アクティブ') にして、
他は変更しない
(多分、この第 5 パーティションは /dev/hdb5 と呼ばれるが、
`/my_equipment/disks/2/5' のような別の名前で呼ぶのも自由である)。
.TP
.BI \-A "number"
.\"O Make the indicated partition(s) active, and all others inactive.
指定したパーティション (複数でもよい) をアクティブにして、
他のパーティションを非アクティブにする。
.TP
.\"O .BI \-c "\fR or " \-\-id " number [Id]"
.\"O If no Id argument given: print the partition Id of the indicated
.\"O partition. If an Id argument is present: change the type (Id) of
.\"O the indicated partition to the given value.
.\"O This option has the two very long forms \-\-print\-id and \-\-change\-id.
.\"O For example:
.BI \-c "\fR または " \-\-id " number [Id]"
引き数 Id が指定されない場合:
指定されたパーティションの ID を表示する。
引き数 Id が指定されている場合:
指定されたパーティションのタイプ (ID) を与えられた値に変更する。
このオプションには \-\-print\-id と \-\-change\-id という
非常に長い形式がある。
例を示す:
.br
.nf
.if t .ft CW
    % sfdisk --print-id /dev/hdb 5
    6
    % sfdisk --change-id /dev/hdb 5 83
    OK
.if t .ft R
.fi
.\"O first reports that /dev/hdb5 has Id 6, and then changes that into 83.
最初に /dev/hdb5 が ID 6 であることを表示させ、
次に ID を 83 に変更している。
.TP
.\"O .BR \-uS " or " \-uB " or " \-uC " or " \-uM
.\"O Accept or report in units of sectors (blocks, cylinders, megabytes,
.\"O respectively). The default is cylinders, at least when the geometry
.\"O is known.
.BR \-uS " または " \-uB " または " \-uC " または " \-uM
セクタ単位 (ブロック単位・シリンダ単位・メガバイト単位) の
数値を受け付け・表示する。
少なくともジオメトリが分かる場合、デフォルトはシリンダ単位である。
.TP
.\"O .BR \-x " or " \-\-show\-extended
.\"O Also list non-primary extended partitions on output,
.\"O and expect descriptors for them on input.
.BR \-x " または " \-\-show\-extended
基本パーティションでない拡張パーティションも出力にリストする。
またそれらに対するパーティション設定を入力で受け付ける。
.TP
.BI \-C " cylinders"
.\"O Specify the number of cylinders, possibly overriding what the kernel thinks.
シリンダ数を指定する。カーネルが想定している値を上書きできる。
.TP
.BI \-H " heads"
.\"O Specify the number of heads, possibly overriding what the kernel thinks.
ヘッド数を指定する。カーネルが想定している値を上書きできる。
.TP
.BI \-S " sectors"
.\"O Specify the number of sectors, possibly overriding what the kernel thinks.
セクタ数を指定する。カーネルが想定している値を上書きできる。
.TP
.\"O .BR \-f " or " \-\-force
.\"O Do what I say, even if it is stupid.
.BR \-f " または " \-\-force
たとえ馬鹿げたことであっても、指示したことを行わせる。
.TP
.\"O .BR \-q " or " \-\-quiet
.\"O Suppress warning messages.
.BR \-q " または " \-\-quiet
警告メッセージを表示しない。
.TP
.\"O .BR \-L " or " \-\-Linux
.\"O Do not complain about things irrelevant for Linux.
.BR \-L " または " \-\-Linux
Linux に関連しない警告を出さない。
.TP
.\"O .BR \-D " or " \-\-DOS
.\"O For DOS-compatibility: waste a little space.
.\"O (More precisely: if a partition cannot contain sector 0,
.\"O e.g. because that is the MBR of the device, or contains
.\"O the partition table of an extended partition, then
.\"O .B sfdisk
.\"O would make it start the next sector. However, when this
.\"O option is given it skips to the start of the next track,
.\"O wasting for example 33 sectors (in case of 34 sectors/track),
.\"O just like certain versions of DOS do.)
.\"O Certain Disk Managers and boot loaders (such as OSBS, but not
.\"O LILO or the OS/2 Boot Manager) also live in this empty space,
.\"O so maybe you want this option if you use one.
.BR \-D " または " \-\-DOS
DOS との互換性のために、いくらかの領域を無駄にする
(より正確には: 
あるパーティションがデバイスの MBR だったり、
拡張パーティション用のパーティションテーブルを含んでいたりして
セクタ 0 を持つことができない場合、通常
.B sfdisk
は次のセクタからパーティションを開始する。
しかしこのオプションを指定すると、
デフォルトで次のトラックにスキップしてからパーティションを開始する。
例えば 34 セクタ/トラックの場合なら、 33 セクタが無駄になる。
これは、あるバージョンの DOS が行う動作と同じである)。
ある種のディスクマネージャとブートローダ 
(OSBS などのことで、LILO や OS/2 ブートマネージャは含まれない) は
この空き領域に置かれるので、
これらを使う場合には、このオプションが必要かもしれない。
.TP
.\"O .BR \-E " or " \-\-DOS\-extended
.\"O Take the starting sector numbers of "inner" extended partitions
.\"O to be relative to the starting cylinder boundary of the outer one,
.\"O (like some versions of DOS do) rather than to the starting sector
.\"O (like Linux does).
.\"O (The fact that there is a difference here means that one should
.\"O always let extended partitions start at cylinder boundaries if
.\"O DOS and Linux should interpret the partition table in the same way.
.\"O Of course one can only know where cylinder boundaries are when
.\"O one knows what geometry DOS will use for this disk.)
.BR \-E " または " \-\-DOS\-extended
「内側」の拡張パーティションの開始セクタ番号を、
(Linux のように)
「外側」の拡張パーティションの開始セクタからの相対位置として取得せず、
(DOS のあるバージョンのように)
開始シリンタ境界からの相対位置として取得する。
(ここに違いがあるということは、
もし DOS と Linux がパーティションテーブルを同じ方法で解釈していれば、
拡張パーティションを常にシリンダ境界から始めなければならない、
ということを意味する。
もちろん、どこにシリンダ境界があるかは、
DOS がディスクに対してどのようなジオメトリを使うかを
知っていなければわからない。)
.TP
.\"O .BR \-\-IBM " or " \-\-leave\-last
.\"O Certain IBM diagnostic programs assume that they can use the
.\"O last cylinder on a disk for disk-testing purposes. If you think
.\"O you might ever run such programs, use this option to tell
.\"O .B sfdisk
.\"O that it should not allocate the last cylinder.
.\"O Sometimes the last cylinder contains a bad sector table.
.BR \-\-IBM " または " \-\-leave\-last
IBM のある診断プログラムは、
最後のシリンダをディスクチェックの目的で使用する。
もし、このようなプログラムを実行することがあるなら、
.B sfdisk
に対して最後のシリンダを割り当てさせないように、このオプションを使うこと。
最後のシリンダに不正なセクタテーブルが含まれていることが時々ある。
.TP
.B \-n
.\"O Go through all the motions, but do not actually write to disk.
全ての動作を通して実行するが、実際にはディスクに書き込まない。
.TP
.B \-R
.\"O Only execute the BLKRRPART ioctl (to make the kernel re-read
.\"O the partition table). This can be useful for checking in advance
.\"O that the final BLKRRPART will be successful, and also when you
.\"O changed the partition table `by hand' (e.g., using dd from a backup).
.\"O If the kernel complains (`device busy for revalidation (usage = 2)')
.\"O then something still uses the device, and you still have to unmount
.\"O some file system, or say swapoff to some swap partition.
(カーネルにパーティションテーブルを再び読み込ませるために)
BLKRRPART ioctl のみを実行する。
最後の BLKRRPART が成功するかを前もってチェックするのに役立つ。
また (例えばバックアップから dd を使って)
「手動で」パーティションテーブルを変更した場合などにも役立つ。
カーネルが (`device busy for revalidation (usage = 2)') という
警告を出した場合は、デバイスがまだ使われており、
ファイルシステムをアンマウントすべきである。
あるいはスワップパーティションなら swapoff を実行すべきである。
.TP
.B \-\-no\-reread
.\"O When starting a repartitioning of a disk, sfdisk checks that this disk
.\"O is not mounted, or in use as a swap device, and refuses to continue
.\"O if it is. This option suppresses the test. (On the other hand, the \-f
.\"O option would force sfdisk to continue even when this test fails.)
ディスクのパーティション再分割を始めると、
sfdisk はディスクがマウントされていないか、
またはスワップデバイスとして使われていないかをチェックする。
使われている場合には、続行を拒否する。
このオプションを指定すると、このチェックを行わない。
(一方で、\-f オプションは sfdisk に対してテストが失敗した場合でも
強制的に続行させる。)
.TP
.BI \-O " file"
.\"O Just before writing the new partition, output the sectors
.\"O that are going to be overwritten to
.\"O .I file
.\"O (where hopefully
.\"O .I file
.\"O resides on another disk, or on a floppy).
新しいパーティションを書き込む直前に、上書きされるセクタを
.I file
に出力する
.RI ( file
は、他のディスクやフロッピーにある方が良い)。
.TP
.BI \-I " file"
.\"O After destroying your filesystems with an unfortunate
.\"O .B sfdisk
.\"O command, you would have been able to restore the old situation
.\"O if only you had preserved it using the \-O flag.
不適切な
.B sfdisk
コマンドでファイルシステムを壊してしまった後でも以前の状態に回復できる。
これは \-O フラグを使って以前の状態を保存してある場合にのみ可能である。

.\"O .SH THEORY
.SH 理論
.\"O Block 0 of a disk (the Master Boot Record) contains among
.\"O other things four partition descriptors. The partitions
.\"O described here are called
.\"O .I primary
.\"O partitions.
ディスクのブロック 0 (マスターブートレコード) には、
他に 4 つのパーティションディスクリプタがある。
ここで説明するパーティションは
.I 基本
パーティションと呼ばれる。
.LP
.\"O A partition descriptor has 6 fields:
パーティションディスクリプタには 6 つのフィールドがある:
.br
.nf
.RS
struct partition {
.\"O     unsigned char bootable;		/* 0 or 0x80 */
    unsigned char bootable;		/* 0 または 0x80 */
    hsc begin_hsc;
    unsigned char id;
    hsc end_hsc;
    unsigned int starting_sector;
    unsigned int nr_of_sectors;
}
.RE
.fi
.LP
.\"O The two hsc fields indicate head, sector and cylinder of the
.\"O begin and the end of the partition. Since each hsc field only
.\"O takes 3 bytes, only 24 bits are available, which does not
.\"O suffice for big disks (say > 8GB). In fact, due to the wasteful
.\"O representation (that uses a byte for the number of heads, which
.\"O is typically 16), problems already start with 0.5GB.
.\"O However Linux does not use these fields, and problems can arise
.\"O only at boot time, before Linux has been started. For more
.\"O details, see the
.\"O .B lilo
.\"O documentation.
2 つの hsc フィールドは、最初と最後のパーティションの
ヘッド・セクタ・シリンダを示す。
各 hsc フィールドは 3 バイトしかないので、
24 ビットしか使用できず、
大きなディスク (つまり 8GB より大きいディスク) には十分でない。
実際には、(通常は 16 であるヘッド数のために 1 バイトを使う) 
無駄の多い表現のために、0.5GB から既に問題が起こる。
しかし、Linux はこのフィールドを使わず、
Linux が起動する前のブート時にのみ問題が生じる可能性がある。
詳しくは、
.B lilo
のドキュメントを参照すること。
.LP
.\"O Each partition has a type, its `Id', and if this type is 5 or f
.\"O .IR "" "(`" "extended partition" "')"
.\"O the starting sector of the partition
.\"O again contains 4 partition descriptors. MSDOS only uses the
.\"O first two of these: the first one an actual data partition,
.\"O and the second one again an extended partition (or empty).
.\"O In this way one gets a chain of extended partitions.
.\"O Other operating systems have slightly different conventions.
.\"O Linux also accepts type 85 as equivalent to 5 and f - this can be
.\"O useful if one wants to have extended partitions under Linux past
.\"O the 1024 cylinder boundary, without DOS FDISK hanging.
.\"O (If there is no good reason, you should just use 5, which is
.\"O understood by other systems.)
各パーティションにはタイプ `ID' がある。
ID が 5 または f 
.RI "(`" "拡張パーティション" "')"
の場合、
このパーティションの開始セクタにも
4 つのパーティションディスクリプタがある。
MSDOS は最初の 2 つしか使わない:
最初の 1 つは実際のデータパーティションで
2 つめは、次の拡張パーティション (または空) である。
このようにして、拡張パーティションの連鎖をつくる。
他の OS は少し異なる方法を使う。
Linux は 85 を 5 や f と同じものとして受け付ける
- DOS FDISK をハングさせることなく
1024 シリンダを越えたところに Linux の拡張パーティションを作りたい場合に、
これが役立つ。
(正当な理由がない場合は、他の OS にも認識される 5 のみを使うべきである。)
.LP
.\"O Partitions that are not primary or extended are called
.\"O .IR logical .
.\"O Often, one cannot boot from logical partitions (because the
.\"O process of finding them is more involved than just looking
.\"O at the MBR).
.\"O Note that of an extended partition only the Id and the start
.\"O are used. There are various conventions about what to write
.\"O in the other fields. One should not try to use extended partitions
.\"O for data storage or swap.
基本や拡張でないパーティションは、
.I 論理
パーティションと呼ばれる。
大抵、論理パーティションからはブートできない
(なぜなら、論理パーティションを見付けるプロセスは、
ただ MBR を探すのにくらべて更に複雑なためである)。
拡張パーティションでは、ID と開始点しか使われない点に注意すること。
他のフィールドに何を書くのかには、いろいろな習慣がある。
データの保管やスワップには、拡張パーティションは使うべきではない。

.\"O .SH "INPUT FORMAT"
.SH 入力フォーマット
.\"O .B sfdisk
.\"O reads lines of the form
.B sfdisk
は、以下の形式の行を読み込む。
.br
.RS
<start> <size> <id> <bootable> <c,h,s> <c,h,s>
.RE
.\"O where each line fills one partition descriptor.
ここで各行は 1 つのパーティションディスクリプタに対応する。
.LP
.\"O Fields are separated by whitespace, or comma or semicolon possibly
.\"O followed by whitespace; initial and trailing whitespace is ignored.
.\"O Numbers can be octal, decimal or hexadecimal, decimal is default.
.\"O When a field is absent or empty, a default value is used.
フィールドは空白・コンマ・セミコロンで区切られる
(これらの後に空白を置いてもよい)。
先頭と末尾の空白は無視される。
数字は 8 進・10 進・16 進を使うことができて、10 進がデフォルトである。
フィールドがない場合、または空白の場合、デフォルトの値が使われる。
.LP
.\"O The <c,h,s> parts can (and probably should) be omitted -
.\"O .B sfdisk
.\"O computes them from <start> and <size> and the disk geometry
.\"O as given by the kernel or specified using the \-H, \-S, \-C flags.
<c,h,s> の部分は省略できる (たぶん省略すべきである) - 
これらは、
.B sfdisk
が <start>, <size>, カーネルから与えられる
ディスクジオメトリを使って計算するか、
\-H, \-S, \-C フラグで指定される。
.LP
.\"O Bootable is specified as [*|\-], with as default not-bootable.
.\"O (The value of this field is irrelevant for Linux - when Linux
.\"O runs it has been booted already - but might play a role for
.\"O certain boot loaders and for other operating systems.
.\"O For example, when there are several primary DOS partitions,
.\"O DOS assigns C: to the first among these that is bootable.)
ブート可能とするかどうかは [*|\-] で指定する。
デフォルトではブート可能でない。
(このフィールドの値は Linux とは関係ない。
- Linux が稼働しているなら、既にブート済みである -
しかし、このフィールドはある種のブートローダや他の OS で用いられる。
例えば、複数の DOS パーティションがある場合、
DOS はブート可能なものの中から最初のものを C: に割り当てる。)
.LP
.\"O Id is given in hex, without the 0x prefix, or is [E|S|L|X], where
.\"O L (LINUX_NATIVE (83)) is the default, S is LINUX_SWAP (82), E
.\"O is EXTENDED_PARTITION (5), and X is LINUX_EXTENDED (85).
ID は、プレフィックス 0x を付けない 16 進数か、[E|S|L|X] で指定される。
ここで L (LINUX_NATIVE (83)) はデフォルトであり、
S は LINUX_SWAP (82), E は EXTENDED_PARTITION (5),
X は LINUX_EXTENDED (85) である。
.LP
.\"O The default value of start is the first nonassigned sector/cylinder/...
start のデフォルト値は、割り当てられていない最初のセクタ/シリンダ/... である。
.LP
.\"O The default value of size is as much as possible (until next
.\"O partition or end-of-disk).
size のデフォルト値は、(次のパーティションまたはディスクの終りまでの)
可能な限り大きな値である。
.LP
.\"O However, for the four partitions inside an extended partition,
.\"O the defaults are: Linux partition, Extended partition, Empty, Empty.
しかし、拡張パーティションの内側の 4 つのパーティションのデフォルトは、
Linux パーティション・拡張パーティション・空・空である。
.LP
.\"O But when the \-N option (change a single partition only) is given,
.\"O the default for each field is its previous value.
ただし、(1 つのパーティションだけを変更する) \-N オプションが指定された場合、
各フィールドのデフォルトは前の値になる。

.\"O .SH EXAMPLE
.SH 例
.\"O The command
コマンド
.RS
.nf
.if t .ft CW
sfdisk /dev/hdc << EOF
0,407
,407
;
;
EOF
.if t .ft R
.fi
.RE
.\"O will partition /dev/hdc just as indicated above.
は、先に説明したように /dev/hdc を分割する。

.\"O The command
コマンド
.RS
.nf
.if t .ft CW
sfdisk /dev/hdb << EOF
,3,L
,60,L
,19,S
,,E
,130,L
,130,L
,130,L
,,L
EOF
.if t .ft R
.fi
.RE
.\"O will partition /dev/hdb into two Linux partitions of 3 and 60
.\"O cylinders, a swap space of 19 cylinders, and an extended partition
.\"O covering the rest. Inside the extended partition there are four
.\"O Linux logical partitions, three of 130 cylinders and one
.\"O covering the rest.
は、/dev/hdb を、3 シリンダと 60 シリンダの 2 つの Linux パーティション、
19 シリンダのスワップスペース、残りの拡張パーティションに分割する。
拡張パーティションの内部は 4 つの Linux 論理パーティションがあり、
3 つは 130 シリンダで、1 つはその残りの部分である。

.\"O With the \-x option, the number of input lines must be a multiple of 4:
.\"O you have to list the two empty partitions that you never want
.\"O using two blank lines. Without the \-x option, you give one line
.\"O for the partitions inside a extended partition, instead of four,
.\"O and terminate with end-of-file (^D).
.\"O (And
.\"O .B sfdisk
.\"O will assume that your input line represents the first of four,
.\"O that the second one is extended, and the 3rd and 4th are empty.)
\-x オプションを使った場合、入力行数は 4 の倍数でなければならない:
使用しない 2 つの空パーティションを
2 つの空行を使ってリストしなければならない。
\-x オプションを使わない場合、
拡張パーティションの内部のパーティションに対して
4 行ではなく 1 行で指定し、
end-of-file (^D) で終了しなければならない。
(さらに
.B sfdisk
は、入力行が 4 つのパーティション中の
第 1 パーティションを表しているものと仮定する。
第 2 パーティションは拡張パーティションで、
第 3,4 は空である。)

.\"O .SH "DOS 6.x WARNING"
.SH "DOS 6.x 向けの警告"

.\"O The DOS 6.x FORMAT command looks for some information in the first
.\"O sector of the data area of the partition, and treats this information
.\"O as more reliable than the information in the partition table.  DOS
.\"O FORMAT expects DOS FDISK to clear the first 512 bytes of the data area
.\"O of a partition whenever a size change occurs.  DOS FORMAT will look at
.\"O this extra information even if the /U flag is given -- we consider
.\"O this a bug in DOS FORMAT and DOS FDISK.
DOS 6.x の FORMAT コマンドはパーティションのデータエリアの
第一セクタからある種の情報を検索し、
これをパーティションテーブルにある情報より信頼できるものとして扱う。
DOS の FORMAT は、容量が変更されたときには
最初の 512 バイト分のデータ領域が
DOS 版 FDISK によってクリアされていることを仮定している。
DOS の FORMAT はこの拡張情報を /U フラグを指定した場合でも見ようとする 
\- これは DOS FORMAT と DOS FDISK のバグであると我々は考える。
.LP
.\"O The bottom line is that if you use sfdisk to change the size of a
.\"O DOS partition table entry, then you must also use
.\"O .B dd
.\"O to zero the first 512 bytes of that partition before using DOS FORMAT to
.\"O format the partition.  For example, if you were using sfdisk to make a DOS
.\"O partition table entry for /dev/hda1, then (after exiting sfdisk and
.\"O rebooting Linux so that the partition table information is valid) you
.\"O would use the command "dd if=/dev/zero of=/dev/hda1 bs=512 count=1" to zero
.\"O the first 512 bytes of the partition.
.\"O .B BE EXTREMELY CAREFUL
.\"O if you use the
.\"O .B dd
.\"O command, since a small typo can make all of the data on your disk useless.
結局のところ、 sfdisk を用いて
DOS パーティションの容量を変更したときは、
DOS FORMAT を使ってパーティションをフォーマットする前に
.B dd
を使って先頭の 512 バイトを 0 で埋めなければならない、というわけである。
例えば sfdisk を用いて /dev/hda1 の DOS パーティションの
テーブルエントリを作成した場合には、(sfdisk を終了し、
Linux をリブートしてパーティションテーブルの情報を有効にしたあとで)
先頭の 512 バイトを 0 にするために
"dd if=/dev/zero of=/dev/hda1 bs=512 count=1"
などと実行する必要がある。
注意点:
.B dd
コマンドを使う場合には\fB特に注意すること\fP。
ちょっとしたタイプミスで、
ディスク上のすべてのデータが使えなくなる可能性もある。

.\"O For best results, you should always use an OS-specific partition table
.\"O program.  For example, you should make DOS partitions with the DOS FDISK
.\"O program and Linux partitions with the Linux sfdisk program.
できるだけ問題を起こしたくなければ、
常に OS 固有のパーティションテーブル用プログラムを用いることである。
例えば DOS パーティションは DOS FDISK プログラムで作り、
Linux のパーティションは Linux の sfdisk で作るべきなのである。

.\"O .SH "DRDOS WARNINGS"
.SH DRDOS 向けの警告

.\"O Stephen Tweedie reported (930515): `Most reports of superblock
.\"O corruption turn out to be due to bad partitioning, with one filesystem
.\"O overrunning the start of the next and corrupting its superblock.
.\"O I have even had this problem with the supposedly-reliable DRDOS.  This
.\"O was quite possibly due to DRDOS-6.0's FDISK command.  Unless I created
.\"O a blank track or cylinder between the DRDOS partition and the
.\"O immediately following one, DRDOS would happily stamp all over the
.\"O start of the next partition.  Mind you, as long as I keep a little
.\"O free disk space after any DRDOS partition, I don't have any other
.\"O problems with the two coexisting on the one drive.'
Stephen Tweedie は次のように報告している (930515): 
「スーパーブロックの破損に関する報告の大部分は、
1 つのファイルシステムが次のファイルシステムの最初にはみ出して
スーパーブロックを壊している、
といった不正なパーティション分割によるものである。
私は、信頼できると思っていた DRDOS でも、この問題に出会った。
これは多分 DRDOS-6.0 の FDISK コマンドによるものだろう。
DRDOS パーティションと直後のパーティションの間に
空白のトラックやシリンダを作成しない限り、
DRDOS は能天気にも次のパーティションの最初の部分を全て壊してしまった。
DRDOS パーティションの後に小さな空きディスク領域を置く限り、
1 つのドライブに 2 つのパーティションが存在しても
他に何も問題は起きない点に気を付けること。」

.\"O A. V. Le Blanc writes in README.efdisk: `Dr. DOS 5.0 and 6.0 has been
.\"O reported to have problems cooperating with Linux, and with this version
.\"O of efdisk in particular.  This efdisk sets the system type
.\"O to hexadecimal 81.  Dr. DOS seems to confuse
.\"O this with hexadecimal 1, a DOS code.  If you use Dr. DOS, use the
.\"O efdisk command 't' to change the system code of any Linux partitions
.\"O to some number less than hexadecimal 80; I suggest 41 and 42 for
.\"O the moment.'
A. V. Le Blanc は README.efdisk で次のように書いている:
「Dr. DOS 5.0 と 6.0 は Linux と一緒に使うと問題があると報告されている。
このバージョンの efdisk には特に問題がある。
この efdisk はファイルシステムタイプを 16 進数の 81 に設定する。
Dr. DOS は、これを DOS コードである 16 進数の 1 と勘違いするようだ。
Dr. DOS を使う場合は、efdisk のコマンド 't' を使って
Linux パーティションのシステムコードを変更し、
16 進数の 80 より小さい値にすること。
さしあたりは、41 と 42 が良いかと思う。」

.\"O A. V. Le Blanc writes in his README.fdisk: `DR-DOS 5.0 and 6.0
.\"O are reported to have difficulties with partition ID codes of 80 or more.
.\"O The Linux `fdisk' used to set the system type
.\"O of new partitions to hexadecimal 81.  DR-DOS seems to confuse this with
.\"O hexadecimal 1, a DOS code.  The values 82 for swap and 83 for file
.\"O systems should not cause problems with DR-DOS.  If they do, you may use
.\"O the `fdisk' command `t' to change the system code of any Linux
.\"O partitions to some number less than hexadecimal 80; I suggest 42 and 43
.\"O for the moment.'
A. V. Le Blanc は彼の README.fdisk で次のように書いている: 
「DR-DOS 5.0 と 6.0 には 80 以上のパーティション ID コードに
問題があるとの報告がある。
Linux `fdisk' は新しいパーティションのシステムタイプを
16 進数の 81 に設定する。
DR-DOS は、これを DOS コードである 16 進数の 1 と勘違いするようだ。
スワップを表す値 82 とファイルシステムを表す値 83 については、
DR-DOS では問題は起きないはずだ。
しかし、もし問題が起こるようならば、
fdisk のコマンド 't' を使って
Linux パーティションのシステムコードを変更し、
16 進数の 80 より小さい値にすること。
さしあたりは、42 と 43 が良いかと思う。」

.\"O In fact, it seems that only 4 bits are significant for the DRDOS FDISK,
.\"O so that for example 11 and 21 are listed as DOS 2.0. However, DRDOS
.\"O itself seems to use the full byte. I have not been able to reproduce
.\"O any corruption with DRDOS or its fdisk.
実のところは、DRDOS FDISK は 4 ビットしか見ていないのだろう。
そのため、例えば 11 と 21 が DOS 2.0 としてリストされている。
しかし、DRDOS 自身は 1 バイト全てを使っているように思われる。
私自身は、DRDOS とその fdisk による破壊を再現できていない。

.\"O .SH BUGS
.SH バグ
.\"O A corresponding interactive
.\"O .B cfdisk
.\"O (with curses interface) is still lacking.
.\"O .LP
.\"O There are too many options.
今のところ、対応する対話的な (curses インターフェースの)
.B cfdisk
がない。
.LP
オプションが多すぎる。
.LP
.\"O There is no support for non-DOS partition types.
non-DOS パーティションタイプがサポートされていない。

.\"O .\" .SH AUTHOR
.\" .SH 著者
.\" A. E. Brouwer (aeb@cwi.nl)
.\"
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR cfdisk (8),
.BR fdisk (8),
.BR mkfs (8),
.BR parted (8)
