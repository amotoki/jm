.\"
.\" Japanese Version Copyright (c) 1997 NAKANO Takeo all rights reserved.
.\" Translated Mon Dec 8 1997 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated & Modified Fri 3 Jul 1998 by NAKANO Takeo
.\" Updated & Modified Thu 14 Oct 1999 by NAKANO Takeo 
.\" Updated & Modified Sat 18 Mar 2000 by NAKANO Takeo
.\" Updated & Modified Wed 14 Jun 2000 by NAKANO Takeo 
.\" Updated & Modified Sun Jan  7 22:17:11 JST 2001
.\"         by Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified Mon Apr  9 20:47:39 JST 2001 by Yuichi SATO
.\" Updated & Modified Mon Jun 25 22:38:36 JST 2001 by Yuichi SATO
.\" Updated & Modified Sat Jul  6 03:56:54 JST 2002 by Yuichi SATO
.\"
.\"WORD:	epoch		紀元(年)
.\"
.TH HWCLOCK 8 "02 March 1998"
.\"O .SH NAME
.\"O hwclock \- query and set the hardware clock (RTC)
.SH 名前
hwclock \- ハードウェア・クロック (RTC) の読み取りと設定を行う
.\"O .SH SYNOPSIS
.SH 書式
.BR "hwclock \-r" " or " "hwclock \-\-show"
.br
.BR "hwclock \-w" " or " "hwclock \-\-systohc"
.br
.BR "hwclock \-s" " or " "hwclock \-\-hctosys" 
.br
.BR "hwclock \-a" " or " "hwclock \-\-adjust"
.br
.BR "hwclock \-v" " or " "hwclock \-\-version"
.br
.B "hwclock \-\-set \-\-date=newdate"
.br
.B "hwclock \-\-getepoch"
.br
.B "hwclock \-\-setepoch \-\-epoch=year"
.PP
.\"O other options:
その他のオプション:
.PP
.B "[\-u|\-\-utc]  \-\-localtime  \-\-noadjfile \-\-directisa"
.B "\-\-test [\-D|\-\-debug]"
.PP
.\"O and arcane options for DEC Alpha:
DEC Alpha 用の知る人ぞ知るオプション:
.PP
.B "[\-A|\-\-arc] [\-J|\-\-jensen] [\-S|\-\-srm] [\-F|\-\-funky-toy]"
.PP
.\"O Minimum unique abbreviations of all options are acceptable.
すべてのオプションは他と区別がつく範囲において短縮することができる。
.PP
.\"O Also, \-h asks for a help message.
また \-h はヘルプメッセージを表示する。

.\"O .SH DESCRIPTION
.SH 説明
.\"O .B hwclock
.\"O is a tool for accessing the Hardware Clock.  You can display the
.\"O current time, set the Hardware Clock to a specified time, set the
.\"O Hardware Clock to the System Time, and set the System Time from the
.\"O Hardware Clock.
.B hwclock
はハードウェア・クロックにアクセスするためのツールである。
現在の時刻の表示、指定した時刻へのハードウェア・クロックの設定、
ハードウェア・クロックをシステム時刻に合わせる (およびその逆)、
といった機能を持つ。
.PP
.\"O You can also run 
.\"O .B hwclock 
.\"O periodically to insert or remove time from the Hardware Clock to
.\"O compensate for systematic drift (where the clock consistently gains or
.\"O loses time at a certain rate if left to run).
.B hwclock
を定期的に実行し、ハードウェア・クロックの時間を増減して、
時計の規則的なずれ (systematic drift) を補償することもできる
(systematic drift とは、クロックが放っておかれたとき、
経過時間に比例して時刻がずれる現象のこと)。

.\"O .SH OPTIONS
.SH オプション
.\"O You need exactly one of the following options to tell 
.\"O .B hwclock 
.\"O what function to perform:
以下のオプションは
.B hwclock
にどの機能を実行するかを伝えるもので、必ず一つだけを指定する。
.PP
.TP
.B \-\-show
.\"O Read the Hardware Clock and print the time on Standard Output.
.\"O The time shown is always in local time, even if you keep your Hardware Clock
.\"O in Coordinated Universal Time.  See the
.\"O .B \-\-utc
.\"O option.
ハードウェア・クロックを読んで時刻を標準出力に表示する。
ここで表示される時刻は常にローカル・タイムである。
ハードウェア・クロックを協定世界時にしていても表示はローカル・タイムである。
.B \-\-utc
オプションの部分を参照すること。

.TP
.B \-\-set
.\"O Set the Hardware Clock to the time given by the 
.\"O .B \-\-date
.\"O option.
ハードウェア・クロックを
.B \-\-date
オプションによって指定した時刻に設定する。
.TP
.B \-\-hctosys
.\"O Set the System Time from the Hardware Clock.  
システム・クロックをハードウェア・クロックに合わせる。

.\"O Also set the kernel's timezone value to the local timezone
.\"O as indicated by the TZ environment variable and/or
.\"O .IR /usr/share/zoneinfo ,
.\"O as 
.\"O .BR tzset (3)
.\"O would interpret them.
.\"O The obsolete tz_dsttime field of the kernel's timezone value is set
.\"O to DST_NONE. (For details on what this field used to mean, see
.\"O .BR settimeofday (2).)
同時にカーネルが持つタイムゾーンの値も
ローカルのタイムゾーンにセットする。
このとき TZ 環境変数や
.I /usr/share/zoneinfo
の内容を
.BR tzset (3)
と同じように解釈して参照する。
カーネルのタイムゾーンの obsolete なフィールドである
tz_dsttime は DST_NONE に設定される。
(このフィールドがかつて意味していた内容に関しては
.BR settimeofday (2)
を参照のこと。)

.\"O This is a good option to use in one of the system startup scripts.
このオプションはシステムの起動スクリプトの一部で用いるとよい。
.TP
.B \-\-systohc
.\"O Set the Hardware Clock to the current System Time.
ハードウェア・クロックを現在のシステム・クロックに合わせる。
.TP
.B \-\-adjust
.\"O Add or subtract time from the Hardware Clock to account for systematic
.\"O drift since the last time the clock was set or adjusted.  See discussion
.\"O below.
最後にハードウェア・クロックを合わせた時点からの経過時間に対して生じる、
時計の規則的なずれを補償するために、
一定の時間をハードウェア・クロックの時刻から増減する。
詳細は以下の議論を参照のこと。
.TP
.B \-\-getepoch
.\"O Print the kernel's Hardware Clock epoch value to standard output.
.\"O This is the number of years into AD to which a zero year value in the
.\"O Hardware Clock refers.  For example, if you are using the convention
.\"O that the year counter in your Hardware Clock contains the number of
.\"O full years since 1952, then the kernel's Hardware Counter epoch value
.\"O must be 1952.
標準出力に、カーネルが保持しているハードウェア・クロックの紀元年
(epoch value) を表示する。
これは西暦の何年が、ハードウェア・クロックの
0 年として参照されるかを示す数値である。
例えば、ハードウェアクロックの年カウンタに
1952 年以降の経過年数を用いている場合には、
カーネルでのハードウェア・クロック紀元年は 1952 でなければならない。

.\"O This epoch value is used whenever hwclock reads or sets the Hardware Clock.
この紀元年の値は、
hwclock がハードウェア・クロックを読み書きするとき常に用いられる。
.TP
.B \-\-setepoch
.\"O Set the kernel's Hardware Clock epoch value to the value specified by the
.\"O .B \-\-epoch
.\"O option.  See the
.\"O .B \-\-getepoch
.\"O option for details.
カーネルのハードウェア・クロック紀元年の値を
.B \-\-epoch
オプションで指定した値に設定する。
詳細は
.B \-\-getepoch
オプションの説明を見よ。
.TP
.B \-\-version
.\"O Print the version of 
.\"O .B hwclock 
.\"O on Standard Output.
.B hwclock
のバージョンを標準出力に表示する。
.TP
.B \-\-date=date_string
.\"O You need this option if you specify the
.\"O .B \-\-set
.\"O option.  Otherwise, it is ignored.
.B \-\-set
オプションを指定した場合は、このオプションも指定しなければならない。
.B \-\-set
オプションが指定されていなければ、このオプションは無視される。
.\"O This specifies the time to which to set the Hardware Clock.
.\"O The value of this option is an argument to the
.\"O .BR date (1)
.\"O program.
.\"O For example,
ハードウェア・クロックを合わせる時刻を指定する。
このオプションに与える値は
.BR date (1)
プログラムの引数と同じである。例えば以下のようにする。
.sp
.I hwclock \-\-set \-\-date="9/22/96 16:45:05"
.sp
.\"O The argument is in local time, even if you keep your Hardware Clock in 
.\"O Coordinated Universal time.  See the 
.\"O .B \-\-utc
.\"O option.
引数はローカルタイムで与える。
ハードウェア・クロックを協定世界時にしている場合でも、である。
.B \-\-utc
オプションの部分を見よ。

.\" 訳注 :-p
.B \-\-setepoch
オプションを指定した場合は次のオプションも必要である。
.TP
.B \-\-epoch=year
.\"O Specifies the year which is the beginning of the Hardware Clock's
.\"O epoch.  I.e. the number of years into AD to which a zero value in the
.\"O Hardware Clock's year counter refers. It is used together with
.\"O the \-\-setepoch option to set the kernel's idea of the epoch of the
.\"O Hardware Clock, or otherwise to specify the epoch for use with
.\"O direct ISA access.
ハードウェア・クロックの紀元年を指定する。
すなわち西暦年のいつが、
ハードウェア・クロックの年カウンタの 0 に対応するかを指定する。
このオプションは、--setepoch オプションとともに使った場合、
カーネルの概念であるハードウェア・クロックの紀元年を設定する。
--setepoch オプションとともに使わない場合は、
直接 ISA アクセスに用いられる紀元年を指定する。

.\"O For example, on a Digital Unix machine:
例えば、Digital Unix マシンでは以下のようにする。
.sp
.I hwclock \-\-setepoch \-\-epoch=1952

.PP
.\"O The following options apply to most functions.
次のオプションはほとんどの機能と同時に用いることができる。
.TP
.B \-\-utc
.TP
.B \-\-localtime
.\"O Indicates that the Hardware Clock is kept in Coordinated Universal
.\"O Time or local time, respectively.  It is your choice whether to keep
.\"O your clock in UTC or local time, but nothing in the clock tells which
.\"O you've chosen.  So this option is how you give that information to
.\"O .BR hwclock .
ハードウェア・クロックを協定世界時 (Universal Coordinated Time: UTC) と
ローカルタイムのどちらにするか (しているか) を指定する。
UTC にするかローカルタイムにするかはユーザの選択しだいだが、
時計の内部にはどちらを選択したかを記録する場所はない。
したがって、ユーザーはこのオプションで自分の選択を
.B hwclock
に伝えなければならない。

.\"O If you specify the wrong one of these options (or specify neither and
.\"O take a wrong default), both setting and querying of the Hardware Clock
.\"O will be messed up.
これらの指定を間違ったほうにしたり (あるいはデフォルトを勘違いして
両方とも指定しなかったり) すると、ハードウェア・クロックの設定や
クロックへの問い合わせの結果はめちゃめちゃになってしまうだろう。

.\"O If you specify neither
.\"O .B \-\-utc
.\"O nor
.\"O .B \-\-localtime
.\"O , the default is whichever was specified the last time
.\"O .B hwclock
.\"O was used to set the clock (i.e. hwclock was successfully run with the
.\"O .B \-\-set
.\"O , 
.\"O .B \-\-systohc
.\"O ,
.\"O or
.\"O .B \-\-adjust
.\"O options), as recorded in the adjtime file.  If the adjtime file doesn't
.\"O exist, the default is local time.
.BR \-\-utc " も " \-\-localtime
も指定しなかった場合のデフォルトは、最後に
.B hwclock
を使って時計を合わせたとき
(つまり
.BR \-\-set ", " \-\-systohc ", " \-\-adjust
オプションを指定しての実行が成功したとき)
に指定していた方になる。
このときの選択は adjtime ファイルに記録されている。
adjtime ファイルがなかったときのデフォルトはローカルタイムになる。

.TP
.B \-\-noadjfile
.\"O disables the facilities provided by
.\"O .IR /etc/adjtime .
.I /etc/adjtime
によって提供される機能を無効にする。
.\"O .B hwclock
.\"O will not read nor write to that file with this option. 
このオプションを使うと、
.B hwclock
は
.I /etc/adjtime
の読み込みも書き込みもしない。
.\"O Either
.\"O .B \-\-utc
.\"O or
.\"O .B \-\-localtime
.\"O must be specified when using this option.
このオプションを使うときは、
.B \-\-utc
または
.B \-\-localtime
を指定しなければならない。

.TP
.B \-\-directisa
.\"O is meaningful only on an ISA machine or an Alpha (which implements enough
.\"O of ISA to be, roughly speaking, an ISA machine for 
.\"O .BR hwclock 's
.\"O purposes).  For other machines, it has no effect.  This option tells
.\"O .B hwclock
.\"O to use explicit I/O instructions to access the Hardware Clock.
.\"O Without this option, 
.\"O .B hwclock
.\"O will try to use the /dev/rtc device (which it assumes to be driven by the
.\"O rtc device driver).  If it is unable to open the device (for read), it will
.\"O use the explicit I/O instructions anyway.
このオプションは、ISA マシンまたは
.RB ( hwclock
から充分 ISA マシンに見える程度 ISA の仕様を実装した)
Alpha マシンでのみ意味を持つ。
他のマシンでは効果がない。
このオプションは
.B hwclock
に指令して、ハードウェア・クロックへのアクセスに
直接 I/O 命令を用いるようにさせる。このオプションを指定しないと、
.B hwclock
は /dev/rtc デバイスを用いようとする (/dev/rtc が rtc デバイスドライバ
で駆動されていることを仮定する)。デバイスを読み込みオープンできない場
合は、いずれにせよ直接 I/O 命令を用いる。

.\"O The rtc device driver was new in Linux Release 2.
rtc デバイスドライバは Linux リリース 2 から現れた。
.TP
.B \-\-badyear
.\"O Indicates that the Hardware Clock is incapable of storing years outside
.\"O the range 1994-1999.  There is a problem in some BIOSes (almost all 
.\"O Award BIOSes made between 4/26/94 and 5/31/95) wherein they are unable
.\"O to deal with years after 1999.  If one attempts to set the year-of-century
.\"O value to something less than 94 (or 95 in some cases), the value that
.\"O actually gets set is 94 (or 95).  Thus, if you have one of these machines,
.\"O .B hwclock
.\"O cannot set the year after 1999 and cannot use the value of the clock as
.\"O the true time in the normal way.
ハードウェア・クロックが、1994-1999 年の外側の年を保持できないことを示す。
ある種の BIOS には問題があり (4/26/94 から 5/31/95
の間に生産されたほとんどの Award BIOS がそうである)、
1999 年以降の年を扱うことができないのである。世紀内の年の部分を
94 未満 (場合によっては 95 未満) に設定しようとすると、
実際には 94 (または 95) が設定されてしまう。
このようなマシンでは、
.B hwclock
は年を 1999 以降に設定できず、またクロックの値を
通常のように正しい値としては用いることができない。

.\"O To compensate for this (without your getting a BIOS update, which would
.\"O definitely be preferable), always use 
.\"O .B \-\-badyear
.\"O if you have one of these machines.  When  
.\"O .B hwclock
.\"O knows it's working with a brain-damaged clock, it ignores the year part of
.\"O the Hardware Clock value and instead tries to guess the year based on the 
.\"O last calibrated date in the adjtime file, by assuming that that date is
.\"O within the past year.  For this to work, you had better do a 
.\"O .I hwclock \-\-set
.\"O or
.\"O .I hwclock \-\-systohc
.\"O at least once a year!
本当は BIOS を更新するのが絶対に良いが、そうできない場合に
この問題を補償するには、これらのマシンを用いるとき、常に
.B \-\-badyear
オプションを指定すること。
.B hwclock
は、自分が頭のイカれたクロックを扱っていることを知ると、
ハードウェア・クロックの年の部分を無視し、
adjtime ファイルの「最終時計合わせ日付」から
現在の年を推定しようとする。この動作を行わせたい場合には、
.I hwclock \-\-set
または
.I hwclock \-\-systohc
を少なくとも年に一回は実行するほうが良いだろう!

.\"O Though 
.\"O .B hwclock
.\"O ignores the year value when it reads the Hardware Clock, it sets the
.\"O year value when it sets the clock.  It sets it to 1995, 1996, 1997, or
.\"O 1998, whichever one has the same position in the leap year cycle as
.\"O the true year.  That way, the Hardware Clock inserts leap days where
.\"O they belong.  Again, if you let the Hardware Clock run for more than a
.\"O year without setting it, this scheme could be defeated and you could
.\"O end up losing a day.
.B hwclock
は、ハードウェア・クロックの読み込み時には年の値を無視するが、
設定時には年も設定する。これは 1995, 1996, 1997, 1998 の
いずれかとなり、閏年のサイクルに合う年が選択される。
このようにして、ハードウェア・クロックに閏日を挿入させるのである。
繰り返すが、ハードウェア・クロックを設定せずに一年以上
動作させつづけると、この機能が動作せず、一日を失うことになる。

.\"O .B hwclock
.\"O warns you that you probably need 
.\"O .B \-\-badyear
.\"O whenever it finds your Hardware Clock set to 1994 or 1995.  
ハードウェア・クロックが 1994 または 1995 になっていると、
.B hwclock
は
.B \-\-badyear
が必要ではないか、という警告を発する。

.TP
.B \-\-srm
.\"O This option is equivalent to
.\"O .B \-\-epoch=1900
.\"O and is used to specify the most common epoch on Alphas
.\"O with SRM console.
このオプションは
.B \-\-epoch=1900
と等しく、
SRM コンソールの Alpha で最も一般的な紀元年を指定するのに使われる。
.TP
.B \-\-arc
.\"O This option is equivalent to
.\"O .B \-\-epoch=1980
.\"O and is used to specify the most common epoch on Alphas
.\"O with ARC console (but Ruffians have epoch 1900).
このオプションは
.B \-\-epoch=1980
と等しく、
ARC コンソールの Alpha で最も一般的な紀元年を指定するのに使われる
(ただし Ruffians では 1900 を紀元年にしている)。
.TP
.B \-\-jensen
.TP
.B \-\-funky\-toy
.\"O These two options specify what kind of Alpha machine you have.  They
.\"O are invalid if you don't have an Alpha and are usually unnecessary
.\"O if you do, because 
.\"O .B hwclock 
.\"O should be able to determine by itself what it's 
.\"O running on, at least when
.\"O .I /proc
.\"O is mounted.
.\"O (If you find you need one of these options to make
.\"O .B hwclock 
.\"O work, contact the maintainer to see if the program can be improved
.\"O to detect your system automatically. Output of `hwclock --debug'
.\"O and `cat /proc/cpuinfo' may be of interest.)
これら 2 つのオプションは、
使っている Alpha マシンがどのような種類のものであるか指定する。
Alpha 以外では無効だし、Alpha でも
実際には指定しなくても良いだろう。
.B hwclock
は自分が動作しているマシンの種類を自分で決定できるはずである
(最低でも
.I /proc
がマウントされていれば)。
.RB ( hwclock
が正しく動作しないことがわかった場合には、
メンテナに連絡して、あなたのシステムを自動検知できるように
プログラムを改良できないか相談してみてほしい。
`hwclock --debug' と `cat /proc/cpuinfo' の出力が役立つかもしれない。)

.B \-\-jensen 
.\"O means you are running on a Jensen model.
は、Jensen モデルを動作させていることを意味する。

.B \-\-funky\-toy 
.\"O means that on your machine, one has to use the UF bit instead
.\"O of the UIP bit in the Hardware Clock to detect a time transition.  "Toy"
.\"O in the option name refers to the Time Of Year facility of the machine. 
は、そのマシンでは時間の遷移の検知にハードウェア・クロックの
UIP ビットではなく UF ビットが使われていることを意味する。
オプション名の "Toy" は、マシンの "Time Of Year" 機能からとったものである。

.TP
.B \-\-test
.\"O Do everything except actually updating the Hardware Clock or anything
.\"O else.  This is useful, especially in conjunction with
.\"O .B \-\-debug,
.\"O in learning about 
.\"O .B hwclock.
実際のハードウェア・クロックの更新 (およびそれに類する) 作業をのぞき、
すべての動作を行う。
このオプションは
.B \-\-debug
と組み合わせると
.B hwclock
の動作を理解する上で有用であろう。
.TP
.B \-\-debug
.\"O Display a lot of information about what 
.\"O .B hwclock 
.\"O is doing internally.  Some of its function is complex and this output
.\"O can help you understand how the program works.
.B hwclock
が内部で行っている動作に関して大量の情報を表示する。
一部の機能は複雑であるが、この出力はプログラムの動作を
理解する上で助けになるだろう。


.\"O .SH NOTES
.SH 注意


.\"O .SH Clocks in a Linux System
.SH Linux システムにおける時計
.PP
.\"O There are two main clocks in a Linux system:
Linux システムには主要な時計が 2 つ存在する。
.PP
.\"O .B The Hardware Clock: 
.B ハードウェア・クロック: 
.\"O This is a clock that runs independently of any control program running
.\"O in the CPU and even when the machine is powered off.
これは CPU 内部で動作しているすべてのコントロールプログラムから
独立しており、マシンの電源が OFF のときにも動作している。

.\"O On an ISA system, this clock is specified as part of the ISA standard.
.\"O The control program can read or set this clock to a whole second, but
.\"O the control program can also detect the edges of the 1 second clock
.\"O ticks, so the clock actually has virtually infinite precision.
ISA システムでは、このクロックは ISA 規格の一部として定義されている。
コントロールプログラムはこの時計に対して 1 秒単位で読み書きできるが、
秒針の変化を検出することもできるので、
実際には仮想的に無限大の精度を持っていることになる。
.PP
.\"O This clock is commonly called the hardware clock, the real time clock,
.\"O the RTC, the BIOS clock, and the CMOS clock.  Hardware Clock, in its
.\"O capitalized form, was coined for use by 
.\"O .B hwclock 
.\"O because all of the other names are inappropriate to the point of being
.\"O misleading.
この時計は一般にハードウェア・クロック、リアルタイム・クロック、RTC、
BIOS クロック、CMOS クロックなどと呼ばれる。
.B hwclock
では「ハードウェア・クロック (原文では Hardware Clock)」を用いる。
他の名前は不正確だったり誤解のもとになるからである。
.PP
.\"O .B The System Time: 
.B システム・クロック: 
.\"O This is the time kept by a clock inside the Linux kernel and driven by
.\"O a timer interrupt.  (On an ISA machine, the timer interrupt is part of
.\"O the ISA standard).  It has meaning only while Linux is running on the
.\"O machine.  The System Time is the number of seconds since 00:00:00
.\"O January 1, 1970 UTC (or more succinctly, the number of seconds since
.\"O 1969).  The System Time is not an integer, though.  It has virtually
.\"O infinite precision.
これは Linux カーネルの内部に存在している時計で、
タイマ割り込みによって駆動されている
(ISA システムでは、タイマ割り込みは ISA 標準の一部である)。
すなわち Linux が起動している間しか動作しない。
システム時刻は UTC 1970/01/01 00:00:00 からの経過秒数である
(より簡単に言えば 1969 年終了後の経過秒数である)。
しかしシステム時刻は整数ではなく、仮想的に無限大の精度を持っている。
.PP
.\"O The System Time is the time that matters.  The Hardware Clock's basic
.\"O purpose in a Linux system is to keep time when Linux is not running.  You
.\"O initialize the System Time to the time from the Hardware Clock when Linux
.\"O starts up, and then never use the Hardware Clock again.  Note that in DOS,
.\"O for which ISA was designed, the Hardware Clock is the only real time clock.
Linux ではシステム・クロックがすべての基準となる時計である。
ハードウェア・クロックの基本的な役割は、システムが動いていない間にも
時計を動かしつづけることである。
Linux システムは起動時に一度だけハードウェア・クロックを参照し、
システム・クロックを設定する。
その後はハードウェア・クロックは用いない。
ISA システムの設計対象であった DOS においては、
ハードウェア・クロックがただ一つの実時間時計であることに注意すること。
.PP
.\"O It is important that the System Time not have any discontinuities such as
.\"O would happen if you used the 
.\"O .BR date (1L)
.\"O program to set it while the system is running.  You can, however, do whatever
.\"O you want to the Hardware Clock while the system is running, and the next
.\"O time Linux starts up, it will do so with the adjusted time from the Hardware
.\"O Clock.  You can also use the program 
.\"O .BR adjtimex (8)
.\"O to smoothly adjust the System Time while the system runs.
システム・クロックには不連続が存在してはならない。
これはシステムが走っている間に
.I date(1L)
プログラムを実行して時計を合わせるような場合でも同様である。
一方ハードウェア・クロックには、システムの実行中にでも何を行ってもよい。
次回 Linux が起動したときに、
ハードウェア・クロックからこの調整された時間が使用される。
システムが走っている間にシステム・クロックをスムースに修正するには
.I adjtimex(8)
を用いることもできる。
.PP
.\"O A Linux kernel maintains a concept of a local timezone for the system.
.\"O But don't be misled -- almost nobody cares what timezone the kernel
.\"O thinks it is in.  Instead, programs that care about the timezone
.\"O (perhaps because they want to display a local time for you) almost
.\"O always use a more traditional method of determining the timezone: They
.\"O use the TZ environment variable and/or the
.\"O .I /usr/share/zoneinfo
.\"O directory, as explained in the man page for
.\"O .BR tzset (3).
.\"O However, some
.\"O programs and fringe parts of the Linux kernel such as filesystems use
.\"O the kernel timezone value.  An example is the vfat filesystem.  If the
.\"O kernel timezone value is wrong, the vfat filesystem will report and
.\"O set the wrong timestamps on files.
Linux カーネルは、システムのローカルなタイムゾーンという概念を持っている。
しかし注意してほしい \-\- 
「カーネルが自分をどのタイムゾーンにいると思っているか」など、
誰も気にしていないのである。代わりに、タイムゾーンに関るプログラム
(おそらくローカルな時間を表示しようとしているもの) は、
ほぼ間違いなく従来用いられてきた方法でタイムゾーンを決定する。
つまり TZ 環境変数や
.I /usr/share/zoneinfo
ディレクトリを、
.BR tzset (3)
で説明されているようなやり方で参照するのである。
しかしカーネルのタイムゾーンの値を見るプログラムも存在するし、
カーネルの周辺部分 (ファイルシステムなど) もこちらを参照する。
vfat ファイルシステムなどがそうである。カーネルのタイムゾーンの
値が間違っていると、vfat ファイルシステムはファイルのタイムスタンプの
設定・取得を間違ってしまう。
.PP
.\"O .B hwclock
.\"O sets the kernel timezone to the value indicated by TZ and/or
.\"O .I /usr/share/zoneinfo
.\"O when you set the System Time using the 
.\"O .B \-\-hctosys
.\"O option.
.B hwclock
は
.B \-\-hctosys
オプションでシステム・クロックをセットするとき、
カーネルのタイムゾーンも TZ や
.I /usr/share/zoneinfo
の値に設定する。
.PP
.\"O The timezone value actually consists of two parts: 1) a field
.\"O tz_minuteswest indicating how many minutes local time (not adjusted
.\"O for DST) lags behind UTC, and 2) a field tz_dsttime indicating
.\"O the type of Daylight Savings Time (DST) convention that is in effect
.\"O in the locality at the present time.
.\"O This second field is not used under Linux and is always zero.
.\"O (See also
.\"O .BR settimeofday (2).)
タイムゾーンの値は実際には 2 つの部分からなる。
1) tz_minuteswest フィールド: (DST でない)
ローカルタイムが UTC から何分遅れているかを表す。
2) tz_dsttime: 夏時間 (DST) の形式を表し、
現在地の現在時刻に影響する。
この 2 番目のフィールドは Linux では用いられず、常に 0 となる。
.RB ( settimeofday (2)
も参照のこと。)

.\"O .SH How hwclock Accesses the Hardware Clock
.SH hwclock がハードウェア・クロックへアクセスする方法
.PP
.\"O .B hwclock 
.\"O Uses many different ways to get and set Hardware Clock values.
.\"O The most normal way is to do I/O to the device special file /dev/rtc,
.\"O which is presumed to be driven by the rtc device driver.  However,
.\"O this method is not always available.  For one thing, the rtc driver is
.\"O a relatively recent addition to Linux.  Older systems don't have it.
.\"O Also, though there are versions of the rtc driver that work on DEC
.\"O Alphas, there appear to be plenty of Alphas on which the rtc driver
.\"O does not work (a common symptom is hwclock hanging).
.B hwclock
はハードウェア・クロック時刻の取得や設定に、いろいろな方法を用いる。
もっとも普通のやり方は、デバイススペシャルファイル /dev/rtc に対して 
I/O を行う方法である。
しかしこの方法が常に利用できるとは限らない。
そもそも rtc ドライバが Linux へ追加されたのは比較的最近のことである。
古いシステムには存在しない。
DEC Alpha で動作する rtc ドライバもあるが、
このドライバが使えない Alpha マシンもたくさんあるようである
(症状としては hwclock がハングする)。
.PP
.\"O On older systems, the method of accessing the Hardware Clock depends on
.\"O the system hardware. 
古いシステムでは、ハードウェア・クロックへのアクセス方法は
システムのハードウェアに依存している。
.PP
.\"O On an ISA system, 
.\"O .B hwclock 
.\"O can directly access the "CMOS memory" registers that
.\"O constitute the clock, by doing I/O to Ports 0x70 and 0x71.  It does
.\"O this with actual I/O instructions and consequently can only do it if
.\"O running with superuser effective userid.  (In the case of a Jensen
.\"O Alpha, there is no way for
.\"O .B hwclock 
.\"O to execute those I/O instructions, and so it uses instead the
.\"O /dev/port device special file, which provides almost as low-level an
.\"O interface to the I/O subsystem).
ISA システムでは、
.B hwclock
は時計を構成していた「CMOS メモリ」のレジスタに直接アクセスすることができた
(ポート 0x70 と 0x71 に I/O を行う)。
これを行うには
.B hwclock
の実効ユーザー ID がスーパーユーザーでなければならない。
(Jensen Alpha の場合は、このような I/O 命令を
.B hwclock
に実行させることはできない。
したがってこの場合はデバイススペシャルファイル /dev/port が用いられる。
これは I/O サブシステムへの低レベルインターフェースの
ほとんどを与えるものである。)

.\"O This is a really poor method of accessing the clock, for all the
.\"O reasons that user space programs are generally not supposed to do
.\"O direct I/O and disable interrupts.  Hwclock provides it because it is
.\"O the only method available on ISA and Alpha systems which don't have
.\"O working rtc device drivers available.
これは時計にアクセスする方法としては実に情けない方法である。
ユーザー空間のプログラムでは、このように直接 I/O を叩いたり、
割り込みを禁止したりすることは通常想定されていないのだから。
hwclock でこれが使えるようにしてあるのは、
古い Linux カーネルで ISA マシンを使う場合には、
これが唯一の方法だからである。

.PP
.\"O On an m68k system,
.\"O .B hwclock
.\"O can access the clock via the console driver, via the device special
.\"O file /dev/tty1.
m68k システムでは、
.B hwclock
はコンソールドライバとデバイススペシャルファイル
/dev/tty1 を通して時計にアクセスすることができる。
.PP
.\"O .B hwclock 
.\"O tries to use /dev/rtc.  If it is compiled for a kernel that doesn't have
.\"O that function or it is unable to open /dev/rtc, 
.\"O .B hwclock 
.\"O will fall back to another method, if available.  On an ISA or Alpha
.\"O machine, you can force
.\"O .B hwclock
.\"O to use the direct manipulation of the CMOS registers without even trying
.\"O .I /dev/rtc
.\"O by specifying the \-\-directisa option.
.B hwclock
は /dev/rtc を用いようとする。この機能を持たないカーネル向けに
コンパイルされていたり、/dev/rtc をオープンできない場合には、
.B hwclock
は他の方法を (可能であれば) 試そうとする。
ISA や Alpha のマシンでは、
.I /dev/rtc
を試さずに、最初から
.B hwclock
に CMOS レジスタを直接操作するように強制することもできる。
これには \-\-directisa オプションを指定する。

.\"O .SH The Adjust Function
.SH 時刻合わせ機能
.PP
.\"O The Hardware Clock is usually not very accurate.  However, much of its
.\"O inaccuracy is completely predictable - it gains or loses the same amount
.\"O of time every day.  This is called systematic drift.
.\"O .BR hwclock 's 
.\"O "adjust" function lets you make systematic corrections to correct the
.\"O systematic drift.
通常ハードウェア・クロックはそれほど正確なものではない。
しかし、その「不正確さ」は完全に予測できるものである。
すなわち、時計は一日あたり同じ時間だけ進む（あるいは遅れる）のである。
これを規則的なずれ (systematic drift) と呼ぶことにする。
.B hwclock
の時刻合わせの機能は、この規則的なずれに対応する補正量を求め、
適用するものである。
.PP
.\"O It works like this:  
.\"O .B hwclock 
.\"O keeps a file,
.\"O .I /etc/adjtime,
.\"O that keeps some historical information.  This is called the adjtime file.
以下に動作原理を述べる。
.B hwclock
は
.I /etc/adjtime
というファイルを管理し、そこに履歴情報を保管する。
このファイルを adjtime ファイルと呼ぶ。
.PP
.\"O Suppose you start with no adjtime file.  You issue a 
.\"O .I hwclock \-\-set
.\"O command to set the Hardware Clock to the true current time.  
.\"O .B Hwclock 
.\"O creates the adjtime file and records in it the current time as the 
.\"O last time the clock was calibrated.
.\"O 5 days later, the clock has gained 10 seconds, so you issue another
.\"O .I hwclock \-\-set
.\"O command to set it back 10 seconds.  
.\"O .B Hwclock 
.\"O updates the adjtime file to show the current time as the last time the
.\"O clock was calibrated, and records 2 seconds per day as the systematic
.\"O drift rate.  24 hours go by, and then you issue a
.\"O .I hwclock \-\-adjust
.\"O command.  
.\"O .B Hwclock 
.\"O consults the adjtime file and sees that the clock gains 2 seconds per
.\"O day when left alone and that it has been left alone for exactly one
.\"O day.  So it subtracts 2 seconds from the Hardware Clock.  It then
.\"O records the current time as the last time the clock was adjusted.
.\"O Another 24 hours goes by and you issue another
.\"O .I hwclock \-\-adjust.
.\"O .B Hwclock 
.\"O does the same thing: subtracts 2 seconds and updates the adjtime file
.\"O with the current time as the last time the clock was adjusted.
adjtime ファイルがない状態から話をはじめる。
.I hwclock \-\-set
コマンドを用いてハードウェア・クロックを現在の正しい値に合わせたとする。
このとき
.B hwclock
は adjtime ファイルを作成し、そこに現在の時刻を「最後に時計合わせ
(calibration) が行われた時刻」として記録する。
五日後に時計は 10 秒進んだとし、それを修正するために再び
.I hwclock \-\-set
が実行されたとする。
.B hwclock
は adjtime ファイルを更新し、
現在の時刻を最後に時計合わせが行われた時刻として記録、
同時に 2 秒/日という値を規則的なずれの値として記録する。
24 時間が経過したときに
.I hwclock \-\-adjust
コマンドを実行すると、
.B hwclock
は adjtime ファイルを参照し、放っておかれた時計は一日に 2 秒進むこと、
時計はちょうど一日だけ放置されていたことを読みとる。
そこで
.B hwclock
はハードウェア・クロックから 2 秒を差し引き、現在の時刻を時計の補正 
(adjustment) が行われた時刻として記録する。
さらに 24 時間が経過したときに
.I hwclock \-\-adjust
を実行すれば、
.B hwclock
はまた同じことを行う。
つまり 2 秒を差し引き、現在の時刻を adjtime ファイルに書き込む。
.PP
.\"O Every time you calibrate (set) the clock (using 
.\"O .I \-\-set
.\"O or
.\"O .I \-\-systohc
.\"O ),
.\"O .B hwclock 
.\"O recalculates the systematic drift rate based on how long it has been
.\"O since the last calibration, how long it has been since the last
.\"O adjustment, what drift rate was assumed in any intervening
.\"O adjustments, and the amount by which the clock is presently off.
.RI ( \-\-set " または " \-\-systohc
を用いて)
時計を合わせるごとに、
.B hwclock
は規則的なずれを再計算する。
このときには、最後に時計合せが行われた時点からの経過、
途中で行われた補正で用いられていたずれの量、
最後に補正を行った時刻からの経過時間などが参照される。
.PP
.\"O A small amount of error creeps in any time 
.\"O .B hwclock 
.\"O sets the clock, so it refrains from making an adjustment that would be
.\"O less than 1 second.  Later on, when you request an adjustment again,
.\"O the accumulated drift will be more than a second and
.\"O .B hwclock 
.\"O will do the adjustment then.
.B hwclock 
が時計を設定するときには、常に小さなずれが生じる可能性がある。
これが 1 秒に満たない場合には、時計の補正量からは切り捨てられる。
後に再び補正を行う際に、このずれが蓄積して 1 秒を越えていれば、
その分はその時に補正される。
.PP
.\"O It is good to do a 
.\"O .I hwclock \-\-adjust
.\"O just before the 
.\"O .I hwclock \-\-hctosys
.\"O at system startup time, and maybe periodically while the system is
.\"O running via cron.
システムの起動時に (あるいはシステムの動作中に cron で定期的に)
.I hwclock \-\-hctosys
を行う時には、常にその前に
.I hwclock \-\-adjust
を行うと良いだろう。
.PP
.\"O The adjtime file, while named for its historical purpose of controlling
.\"O adjustments only, actually contains other information for use by hwclock
.\"O in remembering information from one invocation to the next.
adjtime ファイルは、当初は修正量 (adjustments) だけを目的と
していたためにこの名前がつけられたが、現在では他の情報も書き込まれており、
hwclock が一度起動され、次に起動されるまでにその情報を保持する。
.PP
.\"O The format of the adjtime file is, in ASCII:
adjtime は ASCII ファイルであり、フォーマットは以下の通り:
.PP
.\"O Line 1: 3 numbers, separated by blanks: 1) systematic drift rate in
.\"O seconds per day, floating point decimal; 2) Resulting number of
.\"O seconds since 1969 UTC of most recent adjustment or calibration,
.\"O decimal integer; 3) zero (for compatibility with
.\"O .BR clock (8))
.\"O as a decimal integer.
一行目は三つの数値からなり、それぞれ空白で区切られる:
1) 一日あたりに生じる時刻ずれを秒で表したもの (浮動小数点型 10 進):
2) 最後に時計合わせあるいは補正を行った時刻を 
1969 UTC からの経過秒数で表したもの (10 進整数):
3) ゼロ
.RB ( clock (8)
との互換性のためのもの)
.PP
.\"O Line 2: 1 number: Resulting number of seconds since 1969 UTC of most
.\"O recent calibration.  Zero if there has been no calibration yet or it
.\"O is known that any previous calibration is moot (for example, because
.\"O the Hardware Clock has been found, since that calibration, not to 
.\"O contain a valid time).  This is a decimal integer.
二行目: 数値が一つ: 最後に時計を合わせた時刻を
1969 UTC からの経過秒数で表したもの。
時計合わせが一度もされていなかったり、以前の時計あわせに問題があった
(例えばその時計あわせ以降にハードウェア・クロックの
時刻が不正なことがわかったとか) 場合には 0 が入る。
これは 10 進の整数である。
.PP
.\"O Line 3: "UTC" or "LOCAL".  Tells whether the Hardware Clock is set to 
.\"O Coordinated Universal Time or local time.  You can always override this
.\"O value with options on the 
.\"O .B hwclock
.\"O command line.
三行目: "UTC" または "LOCAL"。ハードウェア・クロックが
協定世界時かローカルタイム化を示す。
この値は
.B hwclock
にコマンドラインを指定すればいつでも上書き可能である。
.PP
.\"O You can use an adjtime file that was previously used with the 
.\"O .BR clock (8)
.\"O program with 
.\"O .B hwclock.
以前
.BR clock (8)
で使っていた adjtime ファイルは
.B hwclock
でもそのまま使うことができる。


.\"O .SH "Automatic Hardware Clock Synchronization By the Kernel"
.SH カーネルによるハードウェアクロックの自動合わせ

.\"O You should be aware of another way that the Hardware Clock is kept 
.\"O synchronized in some systems.  The Linux kernel has a mode wherein it
.\"O copies the System Time to the Hardware Clock every 11 minutes.  
.\"O This is a good mode to use when you are using something sophisticated
.\"O like ntp to keep your System Time synchronized. (ntp is a way to keep
.\"O your System Time synchronized either to a time server somewhere on the
.\"O network or to a radio clock hooked up to your system.  See RFC 1305).
ハードウェアクロックを正しい値に同期させるのに、
別法が取れるようなシステムもある。
Linux カーネルには、11 分ごとにシステムクロックを
ハードウェアクロックにコピーするようなモードが存在する。
これは、何らかの洗練された方法 (ntp など) でシステムクロックを
同期できている時には、よいモードであろう。
(ntp とは、ネットワークのどこかにあるタイムサーバーか、システムに付属した
電波時計にシステム・クロックを同期させる手法である。RFC 1305 を見よ。)

.\"O This mode (we'll call it "11 minute mode") is off until something
.\"O turns it on.  The ntp daemon xntpd is one thing that turns it on.  You
.\"O can turn it off by running anything, including
.\"O .IR "hwclock \-\-hctosys" ,
.\"O that sets the System Time the old fashioned way.
このモード (「11 分モード」と呼ぶ) は、何かによって有効にされるまでは
オフになっている。
例えば ntp デーモンである xntpd は
このモードを有効にできるもののひとつである。
オフにするのも何かを実行すればよく、例えば
.I hwclock \-\-hctosys
を実行して、システム・クロックを古い方法で設定すれば、11 分モードはオフになる。

.\"O To see if it is on or
.\"O off, use the command 
.\"O .I adjtimex \-\-print
.\"O and look at the value of "status".  If the "64" bit of this number
.\"O (expressed in binary) equal to 0, 11 minute mode is on.  Otherwise, it
.\"O is off.
モードがオンかオフかを調べるには、
.I adjtimex \-\-print
コマンドを実行して "status" の値を見ればよい。
この数値の第 64 ビットが (2 進数表示で) 0 ならば、
11 分モードはオンになっている。
それ以外の場合はオフである。

.\"O If your system runs with 11 minute mode on, don't use 
.\"O .I hwclock \-\-adjust
.\"O or
.\"O .IR "hwclock \-\-hctosys" .
.\"O You'll just make a mess.  It is acceptable to use a
.\"O .I hwclock \-\-hctosys 
.\"O at startup time to get a reasonable System Time until your system is
.\"O able to set the System Time from the external source and start 11
.\"O minute mode.
システムが 11 分モードで動作している場合に
.I hwclock \-\-adjust
や
.I hwclock \-\-hctosys
を実行してはならない。システムをおかしくしてしまう。
.I hwclock \-\-hctosys
を起動時だけに用いるならかまわない。
これを用いれば、システム・クロックが外部の値に同期して
11 分モードが開始されるまで、システムクロックを妥当な値にできる。


.\"O .SH ISA Hardware Clock Century value
.SH ISA ハードウェア・クロックの「世紀値 (Century value)」

.\"O There is some sort of standard that defines CMOS memory Byte 50 on an ISA
.\"O machine as an indicator of what century it is.  
.\"O .B hwclock
.\"O does not use or set that byte because there are some machines that
.\"O don't define the byte that way, and it really isn't necessary anyway,
.\"O since the year-of-century does a good job of implying which century it
.\"O is.
その手の標準の中には、ISA マシンの CMOS 50 バイト目を、
現在の世紀の指標として定義しているものがある。
.B hwclock
は、このバイトの読み書きを行わない。
なぜならこのバイトをそのようには利用していないマシンが存在するし、
いずれにしてもこれは実際には必要ないからである。
年の世紀の部分を使えば、現在の世紀を特定するには充分である。

.\"O If you have a bona fide use for a CMOS century byte, contact the 
.\"O .B hwclock
.\"O maintainer; an option may be appropriate.
もしこの CMOS の世紀バイトの利用ルーチンを開発した (したい) 方がいたら、
.B hwclock
のメンテナに連絡してほしい。
オプションを付加することは望ましいことであるから。

.\"O Note that this section is only relevant when you are using the "direct
.\"O ISA" method of accessing the Hardware Clock.
このセクションが意味を持つのは、ハードウェア・クロックに
"direct ISA" によってアクセスしている場合だけであることに注意。


.\"O .SH "ENVIRONMENT VARIABLES"
.SH 環境変数
.I TZ

.\"O .SH FILES
.SH ファイル
.I /etc/adjtime
.I /usr/share/zoneinfo/
.\"O .RI ( /usr/lib/zoneinfo
.\"O on old systems)
(古いシステムでは
.IR /usr/lib/zoneinfo )
.I /dev/rtc
.I /dev/port
.I /dev/tty1
.I /proc/cpuinfo

.\"O .SH "SEE ALSO"
.SH 関連項目
.BR adjtimex (8),
.BR date (1),
.BR gettimeofday (2),
.BR settimeofday (2),
.BR crontab (1),
.BR tzset (3)

.\"O .SH AUTHORS
.SH 著者
.\"O Written by Bryan Henderson, September 1996 (bryanh@giraffe-data.com),
.\"O based on work done on the
.\"O .I clock
.\"O program by Charles Hedrick, Rob Hooft, and Harald Koenig.  
.\"O See the source code for complete history and credits.
.B hwclock
は 1996 年 9 月に Bryan Henderson (bryanh@giraffe-data.com) が
.I clock
をもとに書いた。
.I clock
は Charles Hendrick, Rob Hooft, Haraid Koenig によって書かれた。
完全な履歴と謝辞はソースに書かれている。
