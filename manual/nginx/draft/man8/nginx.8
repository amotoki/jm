.\"O .Sh NAME
.\"O .Nm nginx
.\"O .Nd "HTTP and reverse proxy server, mail proxy server"
.Sh 名前
.Nm nginx
.Nd "HTTP およびリバースプロキシーサーバー、メールプロキシーサーバー"
.\"O ----------------------------------------
.\"O .Sh SYNOPSIS
.\"O .Nm
.\"O .Op Fl ?hqTtVv
.\"O .Op Fl c Ar file
.\"O .Op Fl e Ar file
.\"O .Op Fl g Ar directives
.\"O .Op Fl p Ar prefix
.\"O .Op Fl s Ar signal
.Sh 書式
.Nm
.Op Fl ?hqTtVv
.Op Fl c Ar file
.Op Fl e Ar file
.Op Fl g Ar directives
.Op Fl p Ar prefix
.Op Fl s Ar signal
.\"O ----------------------------------------
.\"O .Sh DESCRIPTION
.\"O .Nm
.\"O (pronounced
.\"O .Dq engine x )
.\"O is an HTTP and reverse proxy server, a mail proxy server, and a generic
.\"O TCP/UDP proxy server.
.\"O It is known for its high performance, stability, rich feature set, simple
.\"O configuration, and low resource consumption.
.Sh 説明
.Nm
(発音は
.Dq engine x )
は、 HTTP およびリバースプロキシーサーバー、 メールプロキシーサーバー、汎用的な
TCP/UDP プロキシーサーバーです。 高性能、安定性、豊富な機能セット、簡単な設定、リソースの低消費という特徴が知られています。
.\"O ----------------------------------------
.\"O .Pp
.\"O The options are as follows:
.\"O .Bl -tag -width ".Fl d Ar directives"
.\"O .It Fl ?\& , h
.\"O Print help.
.\"O .It Fl c Ar file
.\"O Use an alternative configuration
.\"O .Ar file .
.\"O .It Fl e Ar file
.\"O Use an alternative error log
.\"O .Ar file .
.\"O Special value
.\"O .Cm stderr
.\"O indicates that the standard error output should be used.
.\"O .It Fl g Ar directives
.\"O Set global configuration directives.
.\"O See
.\"O .Sx EXAMPLES
.\"O for details.
.\"O .It Fl p Ar prefix
.\"O Set the prefix path.
.\"O The default value is
.\"O .Pa /usr .
.\"O .It Fl q
.\"O Suppress non-error messages during configuration testing.
.\"O .It Fl s Ar signal
.\"O Send a signal to the master process.
.\"O The argument
.\"O .Ar signal
.\"O can be one of:
.\"O .Cm stop , quit , reopen , reload .
.\"O The following table shows the corresponding system signals:
.Pp
オプションは以下のとおりです。
.Bl -tag -width ".Fl d Ar directives"
.It Fl ?\& , h
ヘルプを表示します。
.It Fl c Ar file
別の設定ファイルとして
.Ar file
を用います。
.It Fl e Ar file
別のエラーログとして
.Ar file
を用います。 特別な設定値
.Cm stderr
があって、 これは標準エラーへの出力が行われます。
.It Fl g Ar directives
グローバル設定ディレクティブを設定します。
.Sx 例
のセクションを参照してください。
.It Fl p Ar prefix
プレフィックスパスを設定します。デフォルトは
.Pa /usr
です。
.It Fl q
設定テストを行う際、 エラーではないメッセージは省略します。
.It Fl s Ar signal
マスタープロセスにシグナルを送信します。 引数
.Ar signal
には、
.Cm stop , quit , reopen , reload
のいずれかを指定します。 以下に示す一覧は、 これに対応するシステムシグナルです。
.\"O ----------------------------------------
.\"O .Pp
.\"O .Bl -tag -width ".Cm reopen" -compact
.\"O .It Cm stop
.\"O .Dv SIGTERM
.\"O .It Cm quit
.\"O .Dv SIGQUIT
.\"O .It Cm reopen
.\"O .Dv SIGUSR1
.\"O .It Cm reload
.\"O .Dv SIGHUP
.\"O .El
.\"O .It Fl T
.\"O Same as
.\"O .Fl t ,
.\"O but additionally dump configuration files to standard output.
.\"O .It Fl t
.\"O Do not run, just test the configuration file.
.\"O .Nm
.\"O checks the configuration file syntax and then tries to open files
.\"O referenced in the configuration file.
.\"O .It Fl V
.\"O Print the
.\"O .Nm
.\"O version, compiler version, and
.\"O .Pa configure
.\"O script parameters.
.\"O .It Fl v
.\"O Print the
.\"O .Nm
.\"O version.
.\"O .El
.Pp
.Bl -tag -width ".Cm reopen" -compact
.It Cm stop
.Dv SIGTERM
.It Cm quit
.Dv SIGQUIT
.It Cm reopen
.Dv SIGUSR1
.It Cm reload
.Dv SIGHUP
.El
.It Fl T
.Fl t
と同様です。 ただしこれに加えて、 設定ファイル内容を標準出力に書き出します。
.It Fl t
実行は行わずに、 設定ファイルのテストだけを行います。
.Nm
は、 設定ファイルの文法チェックを行い、
設定ファイル内から参照されているファイルの読み込みを試します。
.It Fl V
.Nm
のバージョン、 コンパイラーバージョン、
.Pa configure
スクリプトのパラメーターを表示します。
.It Fl v
.Nm
のバージョンを表示します。
.El
.\"O ----------------------------------------
.\"O .Sh SIGNALS
.\"O The master process of
.\"O .Nm
.\"O can handle the following signals:
.Sh シグナル
.Nm
のマスタープロセスは、 以下のシグナルを取り扱います。
.\"O ----------------------------------------
.\"O .Pp
.\"O .Bl -tag -width ".Dv SIGINT , SIGTERM" -compact
.\"O .It Dv SIGINT , SIGTERM
.\"O Shut down quickly.
.\"O .It Dv SIGHUP
.\"O Reload configuration, start the new worker process with a new
.\"O configuration, and gracefully shut down old worker processes.
.\"O .It Dv SIGQUIT
.\"O Shut down gracefully.
.\"O .It Dv SIGUSR1
.\"O Reopen log files.
.\"O .It Dv SIGUSR2
.\"O Upgrade the
.\"O .Nm
.\"O executable on the fly.
.\"O .It Dv SIGWINCH
.\"O Shut down worker processes gracefully.
.\"O .El
.Pp
.Bl -tag -width ".Dv SIGINT , SIGTERM" -compact
.It Dv SIGINT , SIGTERM
すぐに終了します。
.It Dv SIGHUP
設定を再ロードして、 新たな設定を用いた新たなワーカープロセスを起動します。 そして古いワーカープロセスは、 適切にシャットダウンします。
.It Dv SIGQUIT
適切にシャットダウンします。
.It Dv SIGUSR1
ログファイルを開き直します。
.It Dv SIGUSR2
.Nm
実行ファイルをその場でアップグレードします。
.It Dv SIGWINCH
ワーカープロセスを適切にシャットダウンします。
.El
.\"O ----------------------------------------
.\"O .Pp
.\"O While there is no need to explicitly control worker processes normally,
.\"O they support some signals too:
.Pp
ワーカープロセスに対して、 通常の制御を明示的に行う必要がない場合には、 さらに以下のシグナルもサポートしています。
.\"O ----------------------------------------
.\"O .Pp
.\"O .Bl -tag -width ".Dv SIGINT , SIGTERM" -compact
.\"O .It Dv SIGTERM
.\"O Shut down quickly.
.\"O .It Dv SIGQUIT
.\"O Shut down gracefully.
.\"O .It Dv SIGUSR1
.\"O Reopen log files.
.\"O .El
.Pp
.Bl -tag -width ".Dv SIGINT , SIGTERM" -compact
.It Dv SIGTERM
すぐに終了します。
.It Dv SIGQUIT
適切にシャットダウンします。
.It Dv SIGUSR1
ログファイルを開き直します。
.El
.\"O ----------------------------------------
.\"O .Sh DEBUGGING LOG
.\"O To enable a debugging log, reconfigure
.\"O .Nm
.\"O to build with debugging:
.Sh デバッグログ
デバッグログを有効にするために、 デバッグ機能を含めた
.Nm
のビルドの設定を行います。
.\"O ----------------------------------------
.\"O .Pp
.\"O .Dl "./configure --with-debug ..."
.Pp
.Dl "./configure --with-debug ..."
.\"O ----------------------------------------
.\"O .Pp
.\"O and then set the
.\"O .Cm debug
.\"O level of the
.\"O .Va error_log :
.Pp
そして
.Cm debug
レベルを
.Va error_log
に設定します。
.\"O ----------------------------------------
.\"O .Pp
.\"O .Dl "error_log /path/to/log debug;"
.Pp
.Dl "error_log /path/to/log debug;"
.\"O ----------------------------------------
.\"O .Pp
.\"O It is also possible to enable the debugging for a particular IP address:
.\"O .Bd -literal -offset indent
.\"O events {
.\"O 	debug_connection 127.0.0.1;
.\"O }
.\"O .Ed
.Pp
特定の IP アドレスに対して、 デバッグを有効にすることもできます。
.Bd -literal -offset indent
events {
	debug_connection 127.0.0.1;
}
.Ed
.\"O ----------------------------------------
.\"O .Sh ENVIRONMENT
.\"O The
.\"O .Ev NGINX
.\"O environment variable is used internally by
.\"O .Nm
.\"O and should not be set directly by the user.
.Sh 環境変数
環境変数
.Ev NGINX
は、
.Nm
が内部で利用しています。 これはユーザーが直接設定するものではありません。
.\"O ----------------------------------------
.\"O .Sh FILES
.\"O .Bl -tag -width indent
.\"O .It Pa /usr/logs/nginx.pid
.\"O Contains the process ID of
.\"O .Nm .
.\"O The contents of this file are not sensitive, so it can be world-readable.
.\"O .It Pa /etc/nginx/nginx.conf
.\"O The main configuration file.
.\"O .It Pa /var/log/error.log
.\"O Error log file.
.\"O .El
.Sh ファイル
.Bl -tag -width indent
.It Pa /usr/logs/nginx.pid
.Nm
のプロセス ID を保持します。 このファイルの内容は機密情報ではないため、 だれでも見ることができます (world-readable
です)。
.It Pa /etc/nginx/nginx.conf
メインの設定ファイル。
.It Pa /var/log/error.log
エラーログファイル。
.El
.\"O ----------------------------------------
.\"O .Sh EXIT STATUS
.\"O Exit status is 0 on success, or 1 if the command fails.
.Sh 終了ステータス
終了ステータスは、 正常処理時に 0、 処理失敗時に 1 です。
.\"O ----------------------------------------
.\"O .Sh EXAMPLES
.\"O Test configuration file
.\"O .Pa ~/mynginx.conf
.\"O with global directives for PID and quantity of worker processes:
.\"O .Bd -literal -offset indent
.\"O nginx -t -c ~/mynginx.conf \e
.\"O 	-g "pid /var/run/mynginx.pid; worker_processes 2;"
.\"O .Ed
.Sh 例
テストの設定ファイルとして
.Pa ~/mynginx.conf
を指定します。 そして PID に対するグローバルディレクティブを用いて、
ワーカープロセス量を設定します。
.Bd -literal -offset indent
nginx -t -c ~/mynginx.conf \e
	-g "pid /var/run/mynginx.pid; worker_processes 2;"
.Ed
.\"O ----------------------------------------
.\"O .Sh SEE ALSO
.\"O Documentation at
.\"O .Pa http://nginx.org/en/docs/ .
.Sh 関連項目
ドキュメント:
.Pa http://nginx.org/en/docs/
.\"O ----------------------------------------
.\"O .Pp
.\"O For questions and technical support, please refer to
.\"O .Pa http://nginx.org/en/support.html .
.Pp
疑問や技術サポートの必要がある場合は、
.Pa http://nginx.org/en/support.html
に問い合わせてください。
.\"O ----------------------------------------
.\"O .Sh HISTORY
.\"O Development of
.\"O .Nm
.\"O started in 2002, with the first public release on October 4, 2004.
.Sh 開発経緯
.Nm
の開発は 2002 年に開始しました。 初めての公開版は 2004 年 10 月 4 日にリリースしています。
.\"O ----------------------------------------
.\"O .Sh AUTHORS
.\"O .An -nosplit
.\"O .An Igor Sysoev Aq Mt igor@sysoev.ru .
.Sh 著者
.An -nosplit
.An Igor Sysoev Aq Mt igor@sysoev.ru .
.\"O ----------------------------------------
.\"O .Pp
.\"O This manual page was originally written by
.\"O .An Sergey A. Osokin Aq Mt osa@FreeBSD.org.ru
.\"O as a result of compiling many
.\"O .Nm
.\"O documents from all over the world.
.Pp
このマニュアルページは、 もともとは
.An Sergey A. Osokin Aq Mt osa@FreeBSD.org.ru
が、
世界中から寄せられた
.Nm
のドキュメントを取りまとめた結果として記述しました。
.\"O ----------------------------------------
