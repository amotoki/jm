.\" Translated Tue May 11 23:05:28 JST 1999
.\"    by FUJIWARA Teruyoshi <fujiwara@linux.or.jp>
.\" Corrected by
.\"       NOKUBI Takatsugu <knok@isoternet.org>
.\" Revised on Sun 21 Nov 2004 by Takeo Nakano <nakano@apm.seikei.ac.jp>
.\"
.\" vi:set wm=5
.TH SCREEN 1 "Aug 2003"
.if n .ds Q \&"
.if n .ds U \&"
.if t .ds Q ``
.if t .ds U ''
.UC 4
.\"O .SH NAME
.\"O screen \- screen manager with VT100/ANSI terminal emulation
.SH 名前
screen \- VT100/ANSI 端末エミュレーション機能を持つ画面管理ソフトウェア
.\"O 
.\"O 
.\"O .SH SYNOPSIS
.SH 書式
.B screen
[
.B \-\fIoptions\fP
] [
.B \fIcmd\fP
[
.B \fIargs\fP
] ]
.br
.B screen \-r
[[\fIpid\fP\fB.\fP]\fItty\fP[\fB.\fP\fIhost\fP]]
.br
.B screen \-r
\fIsessionowner\fP\fB/\fP[[\fIpid\fP\fB.\fP]\fItty\fP[\fB.\fP\fIhost\fP]]
.ta .5i 1.8i
.\"O 
.\"O 
.\"O .SH DESCRIPTION
.SH 書式
.\"O .I Screen
.\"O is a full-screen window manager that
.\"O multiplexes a physical terminal between several processes (typically
.\"O interactive shells).
.\"O Each virtual terminal provides the functions
.\"O of a DEC VT100 terminal and, in addition, several control functions
.\"O from the ISO 6429 (ECMA 48, ANSI X3.64) and ISO 2022 standards
.\"O (e.\|g. insert/delete line and support for multiple character sets).
.\"O There is a scrollback history buffer for each virtual terminal and a
.\"O copy-and-paste mechanism that allows moving text regions between
.\"O windows.
.I screen
は、ひとつの物理的な端末を複数のプロセス (特に対話シェル)
で共有化できるようにする、フルスクリーンウィンドウ管理ソフトウェアである。
各仮想端末は DEC VT100 端末の機能に加え、ANSI X3.64 (ISO 6429)
や ISO 2022 規格に含まれる制御機能
(例えば行の挿入/削除や複数の文字集合のサポート) のいくつかを備えている。
各仮想端末にはスクロールバック用の履歴バッファがある。
またコピー&ペースト機能もあり、ウィンドウ間でテキスト領域をやりとりできる。
.PP
.\"O When
.\"O .I screen
.\"O is called, it creates a single window with a shell in it (or the specified
.\"O command) and then gets out of your way so that you can use the program as you
.\"O normally would.
.\"O Then, at any time, you can create new (full-screen) windows with other programs
.\"O in them (including more shells), kill existing windows, view a list of
.\"O windows, turn output logging on and off, copy-and-paste text between
.\"O windows, view the scrollback history, switch between windows
.\"O in whatever manner you wish, etc. All windows run their programs completely
.\"O independent of each other. Programs continue to run when their window
.\"O is currently not visible and even when the whole 
.\"O .I screen 
.\"O session is detached from the user's terminal.  When a program terminates,
.\"O .I screen
.\"O (per default) kills the window that contained it.
.\"O If this window was in the foreground, the display switches to the previous
.\"O window; if none are left,
.\"O .I screen
.\"O exits.
.I screen
は呼び出されるとウィンドウを 1 つ生成し、その中でシェル
(または指定されたコマンド) を実行する。そしてユーザからは見えなくなり、
ユーザは通常通りにプログラムを実行できるようになる。
その後はいつでも、
新しい (全画面) ウィンドウの生成およびそこでの他のプログラムの実行
(別のシェルも含む)、いまあるウィンドウの削除、
ウィンドウリストの表示、ログ出力の有効化・無効化、
ウィンドウ間でのテキストのコピー&ペースト、
スクロールバック履歴の閲覧、望む通りのウィンドウ切り替え、等ができる。
各々のウィンドウは、
それぞれ自分のプログラムを他からは完全に独立したかたちで動作させる。
ウィンドウが現在見えなくても、あるいは
.I screen
セッション全体がユーザの端末から切り離された場合でも、
各プログラムは動作を続ける。プログラムが終了すると、
.I screen
は (デフォルトでは) そのプログラムが動作していたウィンドウを削除する。
このウィンドウがフォアグラウンドにあった場合は、
ひとつ前のウィンドウに表示が切り替わる。
ウィンドウが残っていなかった場合には、
.I screen
は終了する。
.PP
.\"O Everything you type is sent to the program running in the current window.
.\"O The only exception to this is the one keystroke that is used to initiate
.\"O a command to the window manager.
.\"O By default, each command begins with a control-a (abbreviated C-a from
.\"O now on), and is followed by one other keystroke.
.\"O The command character and all the key bindings can be fully customized
.\"O to be anything you like, though they are always two characters in length.
ユーザのキー入力はすべて、現在のウィンドウで動作しているプログラムに送られる。
この唯一の例外は、ウィンドウマネージャへ送るコマンドの開始を意味する、
ある 1 つのキーストロークである。デフォルトでは、
各コマンドは Ctrl-a (以降は C-a と省略) で始まり、
その後には別のキーストロークが 1 つ続く。
コマンド文字とすべてのキー割り当ては完全に望みの通りにカスタマイズできる。
ただし長さは必ず 2 文字でなければならない。
.PP
.\"O .I Screen
.\"O does not understand the prefix \*QC-\*U to mean control. 
.\"O Please use the caret notation (\*Q^A\*U instead of \*QC-a\*U) as arguments
.\"O to e.g. the 
.\"O .I escape
.\"O command or the \fI-e\fP option.
.\"O .I Screen
.\"O will also print out control characters in caret notation.
.I screen
はプレフィクス \*QC-\*U をコントロールキーの意味だとは理解しない。
コマンドへの引数にはキャレット表記 (\*QC-a\*U の代わりに \*Q^A\*U)
を用いること (例えば
.I escape
コマンドや \fI-e\fP オプションへの引数など)。
.I screen
自身も制御文字の出力にはキャレット表記を用いる。
.PP
.\"O The standard way to create a new window is to type \*QC-a c\*U.
.\"O This creates a new window running a shell and switches to that
.\"O window immediately, regardless of the state of the process running
.\"O in the current window.
.\"O Similarly, you can create a new window with a custom command in it by
.\"O first binding the command to a keystroke (in your .screenrc file or at the
.\"O \*QC-a :\*U command line) and
.\"O then using it just like the \*QC-a c\*U command.
.\"O In addition, new windows can be created by running a command like:
新しいウィンドウを生成する標準的な方法は、\*QC-a c\*U とタイプすることである。
これにより新しいウィンドウが生成されてシェルが実行され、
現在のウィンドウで動作中のプロセスの状態にかかわらず、
ただちにそのウィンドウへ切り替わる。
同様に、あらかじめコマンドをキー操作に割り当てておき
(割り当ては .screenrc またはコマンドラインから \*QC-a :\*U で行う)、
その後これを \*QC-a c\*U のように用いれば、
特定のコマンドが実行される新たなウィンドウを生成できる。
さらに、既存ウィンドウのプロンプトから
.IP
screen emacs prog.c
.PP
.\"O from a shell prompt within a previously created window.
.\"O This will not run another copy of
.\"O .IR screen ,
.\"O but will instead supply the command name and its arguments to the window
.\"O manager (specified in the $STY environment variable) who will use it to
.\"O create the new window.
.\"O The above example would start the emacs editor (editing prog.c) and switch
.\"O to its window.
のようなコマンドを実行しても、新たなウィンドウを生成できる。
これは別の
.I screen
を起動するのではなく、コマンド名と引き数を
(環境変数 $STY で指定される) ウィンドウマネージャに渡し、
新しいウィンドウを生成させる。
上の例では (prog.c を編集する) emacs エディタが起動し、
そのウィンドウに切り替わる。
.PP
.\"O If \*Q/var/run/utmp\*U is writable by
.\"O .IR screen ,
.\"O an appropriate record will be written to this file for each window, and
.\"O removed when the window is terminated.
.\"O This is useful for working with \*Qtalk\*U, \*Qscript\*U, \*Qshutdown\*U,
.\"O \*Qrsend\*U, \*Qsccs\*U and other similar programs that use the utmp
.\"O file to determine who you are. As long as
.\"O .I screen
.\"O is active on your terminal,
.\"O the terminal's own record is removed from the utmp file. See also \*QC-a L\*U.
.I screen
が \*Q/etc/utmp\*U に書き込み可能な場合は、
各ウィンドウに関する適切な記録がこのファイルに書き込まれ、
そしてウィンドウの終了時に削除される。
これは \*Qtalk\*U, \*Qscript\*U, \*Qshutdown\*U, \*Qrsend\*U,
\*Qsccs\*U  等、utmp ファイルを見てユーザの居場所を調べるプログラムを
使う際に便利である。
.I screen
が端末上でアクティブであるうちは、
その端末自身のレコードは utmp ファイルから削除される。
\*QC-a L\*U も参照すること。
.\"O 
.\"O 
.\"O .SH GETTING STARTED
.SH はじめよう
.\"O Before you begin to use
.\"O .I screen
.\"O you'll need to make sure you have correctly selected your terminal type,
.\"O just as you would for any other termcap/terminfo program.
.\"O (You can do this by using
.\"O .IR tset
.\"O for example.)
他の termcap/terminfo プログラムの場合と同様、
.I screen
を使い始める前には、端末のタイプを正しく選んでいるかを確認すること
.RI ( tset
プログラム等で確認できる)。
.PP
.\"O If you're impatient and want to get started without doing a lot more reading,
.\"O you should remember this one command:  \*QC-a ?\*U.
.\"O Typing these two characters will display a list of the available
.\"O .I screen
.\"O commands and their bindings. Each keystroke is discussed in
.\"O the section \*QDEFAULT KEY BINDINGS\*U. The manual section \*QCUSTOMIZATION\*U
.\"O deals with the contents of your .screenrc.
大量の文書を読まずに使い始めたいせっかちな人も、
\*QC-a ?\*U コマンドだけは覚えておくように。この 2 文字を入力すると
.I screen
で使えるコマンドとキー割り当てのリストが表示される。
それぞれのキー操作については、
『デフォルトのキー割り当て』の節で説明する。
このマニュアルの『カスタマイズ』の節では、.screenrc の内容を扱う。
.PP
.\"O If your terminal is a \*Qtrue\*U auto-margin terminal (it doesn't allow
.\"O the last position on the screen to be updated without scrolling the
.\"O screen) consider using a version of your terminal's termcap that has
.\"O automatic margins turned \fIoff\fP. This will ensure an accurate and
.\"O optimal update of the screen in all circumstances. Most terminals
.\"O nowadays have \*Qmagic\*U margins (automatic margins plus usable last
.\"O column). This is the VT100 style type and perfectly suited for
.\"O .IR screen .
.\"O If all you've got is a \*Qtrue\*U auto-margin terminal 
.\"O .I screen
.\"O will be content to use it, but updating a character put into the last
.\"O position on the screen may not be possible until the screen scrolls or
.\"O the character is moved into a safe position in some other way. This
.\"O delay can be shortened by using a terminal with insert-character
.\"O capability.
使っている端末が「本当の」自動マージン端末
(画面をスクロールさせないと画面の末尾のカラムを更新できない)
の場合、その端末の
termcap には自動マージンが「オフ」であるものを使う方が良い。
これにより、正確かつ最適な画面更新がどんな環境でも保証される。
今日のほとんどの端末は \*Qmagic\*U マージン
(自動マージンで、かつ最後のカラムも利用できる) を備えている。
これは VT100 の形式で、
.I screen
にも完璧に適している。「本当の」自動マージン端末しか使えない場合、
.I screen
はこれを受け入れて使用するが、画面の最後のカラムに置かれた文字は、
画面がスクロールするか、
その文字が何らかの方法で安全な位置に移動するまで更新できない。
文字挿入 (insert-character) の機能を持つ端末を使えば、
この遅れを短くすることができる。

.\"O 
.\"O .SH "COMMAND-LINE OPTIONS"
.SH コマンドラインオプション
.\"O Screen has the following command-line options:
screen では以下のコマンドラインオプションが使用できる:
.TP 5
.B \-a
.\"O include \fIall\fP capabilities (with some minor exceptions) in each
.\"O window's termcap, even if
.\"O .I screen
.\"O must redraw parts of the display in order to implement a function.
temcap の \fIall\fP 機能の実装に、
ディスプレイ各部の再描画が必要とされる場合であっても、
各ウィンドウの termcap に (一部の例外を除いて) \fIall\fP 機能を含める。
.TP 5
.B \-A
.\"O Adapt the sizes of all windows to the size of the current terminal.
.\"O By default,
.\"O .I screen
.\"O tries to restore its old window sizes when attaching to resizable terminals
.\"O (those with \*QWS\*U in its description, e.g. suncmd or some xterm).
すべてのウィンドウの大きさを現在の端末の大きさに合わせる。デフォルトでは
.I screen
はサイズ変更が可能な端末 (記述に \*QWS\*U があるもの。
例としては suncmd や xterm の一部) へアタッチする際には、
古いウィンドウの大きさを復元しようとする。
.TP 5
.BI "\-c " file
.\"O override the default configuration file from \*Q$HOME/.screenrc\*U
.\"O to \fIfile\fP.
設定ファイルをデフォルトの \*Q$HOME/.screenrc\*U ではなく
\fIfile\fP にする。
.TP 5
.BR \-d | \-D " [" \fIpid.tty.host ]
.\"O does not start
.\"O .IR screen ,
.\"O but detaches the elsewhere running
.\"O .I screen
.\"O session. It has the same effect as typing \*QC-a d\*U from
.\"O .IR screen 's
.\"O controlling terminal. \fB\-D\fP is the equivalent to the power detach key.
.\"O If no session can be detached, this option is ignored. In combination with the
.\"O \fB\-r\fP/\fB\-R\fP option more powerful effects can be achieved:
.I screen
を起動せず、他のところで動作している
.I screen
のセッションをデタッチする。これは、
.I screen
の制御端末で \*QC-a d\*U を入力したときの効果と同じである。
\fB\-D\fP は強制デタッチのキーと同じである。
デタッチできるセッションが無いときには、このオプションは無視される。
\fB\-r\fP/\fB\-R\fP オプションと組み合わせれば、
より強力な機能を実現できる。
.TP 8
.B \-d \-r
.\"O Reattach a session and if necessary detach it first.
セッションを再アタッチする。必要ならばまずデタッチする。
.TP 8
.B \-d \-R
.\"O Reattach a session and if necessary detach or even create it first.
セッションを再アタッチする。必要ならばまずデタッチするか、
あるいはセッションを生成する。
.TP 8
.B \-d \-RR
.\"O Reattach a session and if necessary detach or create it. Use the first
.\"O session if more than one session is available.
セッションを再アタッチする。必要ならばまずデタッチするか、
あるいはセッションを生成する。
複数のセッションをアタッチ可能な場合は、最初のセッションを使う。
.TP 8
.B \-D \-r
.\"O Reattach a session. If necessary detach and logout remotely first.
セッションを再アタッチする。
必要ならばリモートのデタッチとログアウトを先に行う。
.TP 8
.B \-D \-R
.\"O Attach here and now. In detail this means: If a session is running, then
.\"O reattach. If necessary detach and logout remotely first.
.\"O If it was not running create it and notify the user. This is the
.\"O author's favorite.
アタッチを今ここで行う。具体的には、
セッションが走っている場合には再アタッチを行い、
必要ならばまずリモートのデタッチとログアウトを行う。
動作中のセッションがなければ生成してユーザに知らせる。
これは筆者の好みである。
.TP 8
.B \-D \-RR
.\"O Attach here and now. Whatever that means, just do it.
アタッチを今ここで行う。詳細はともかく、とにかくこれを使えばよろしい。
.IP "" 5
.\"O Note: It is always a good idea to check the status of your sessions by means of
.\"O \*Qscreen \-list\*U.
参考: ときどき \*Qscreen \-list\*U を使って、
自分のセッションの状態をチェックすると良いだろう。
.TP 5
.BI "\-e " xy
.\"O specifies the command character to be \fIx\fP and the character generating a
.\"O literal command character to \fIy\fP (when typed after the command character).
.\"O The default is \*QC-a\*U and `a', which can be specified as \*Q-e^Aa\*U.
コマンド文字を \fIx\fP にする。またリテラルなコマンド文字を生成する文字を
\fIy\fP にする (これをコマンド文字の後に入力する)。
デフォルトは \*QC-a\*U と `a' であり、
これらは \*Q-e^Aa\*U のように指定できる。
.\"O When creating a
.\"O .I screen
.\"O session, this option sets the default command character. In a multiuser
.\"O session all users added will start off with this command character. But
.\"O when attaching to an already running session, this option changes only
.\"O the command character of the attaching user.
.\"O This option is equivalent to either the commands \*Qdefescape\*U or
.\"O \*Qescape\*U respectively.
.I screen
セッションを生成するとき、
このオプションはデフォルトのコマンド文字を設定する。
マルチユーザセッションでは、追加されたすべてのユーザは、
最初はこのコマンド文字を使うことになる。
しかし、既に動作中のセッションにアタッチする時には、
このオプションはアタッチするユーザのコマンド文字しか変更しない。
.\"nakano ここの動作良くわからない…
このオプションはそれぞれ \*Qdefescape\*U および \*Qescape\*Uと
同じである。
.TP 5
.\"O .BR \-f\fP ", " \-fn ", and " \-fa
.BR \-f\fP ", " \-fn ", " \-fa
.\"O turns flow-control on, off, or \*Qautomatic switching mode\*U.
.\"O This can also be defined through the \*Qdefflow\*U .screenrc command.
フロー制御の有効、無効を切り替える。
また「自動切り替えモード (automatic switching mode)」を設定する。
これは .screenrc の \*Qdefflow\*U コマンドを使っても定義できる。
.TP 5
.BI "\-h " num
.\"O Specifies the history scrollback buffer to be \fInum\fP lines high.
履歴のスクロールバッファの大きさを最大 \fInum\fP 行に設定する。
.TP 5
.B \-i
.\"O will cause the interrupt key (usually C-c) to interrupt the display
.\"O immediately when flow-control is on.
.\"O See the \*Qdefflow\*U .screenrc command for details.
.\"O The use of this option is discouraged.
フロー制御が有効である時に、割り込みキー (通常は C-c)
によって即座にディスプレイに割り込みがかかるようにする。
詳しくは .screenrc のコマンドである \*Qdefflow\*U を参照のこと。
このオプションはあまり使わない方が良い。
.TP 5
.\"O .BR \-l " and " \-ln
.BR \-l " および " \-ln
.\"O turns login mode on or off (for /var/run/utmp updating).
.\"O This can also be defined through the \*Qdeflogin\*U .screenrc command.
(/etc/utmp の更新に関する) ログインモードを有効/無効にする。
これは .screenrc のコマンドの \*Qdeflogin\*U でも指定できる。
.TP 5
.\"O .BR \-ls " and " \-list
.BR \-ls " および " \-list
.\"O does not start
.\"O .IR screen ,
.\"O but prints a list of
.\"O .I pid.tty.host
.\"O strings identifying your
.\"O .I screen
.\"O sessions.
.I screen
を起動せず、ユーザの
.I screen
セッションに対応する
.I pid.tty.host
形式の文字列をリスト表示する。
.\"O Sessions marked `detached' can be resumed with \*Qscreen -r\*U. Those marked
.\"O `attached' are running and have a controlling terminal. If the session runs in 
.\"O multiuser mode, it is marked `multi'. Sessions marked as `unreachable' either
.\"O live on a different host or are `dead'.
.\"O An unreachable session is considered dead, when its name
.\"O matches either the name of the local host, or the specified parameter, if any.
.\"O See the \fB-r\fP flag for a description how to construct matches.
.\"O Sessions marked as `dead' should be thoroughly checked and removed. 
.\"O Ask your system administrator if you are not sure. Remove sessions with the 
.\"O \fB-wipe\fP option. 
`detached' と記されているセッションは \*Qscreen -r\*U で再開できる。
`attached' と記されているセッションは動作中であり、
これを制御している端末がある。
セッションがマルチユーザモードで動作している場合は、`multi' と記される。
`unreachable' と記されているセッションは、
別のホストで動作しているか `dead' の状態にある。
unreachable なセッションのうち、名前がローカルホストや
指定したパラメータがあればそれにマッチするものは、
dead であると思われる。
マッチの作りかたの説明は \fB-r\fP フラグの項目を見てほしい。
`dead' とされたセッションは、厳しくチェックしてから削除すべきである。
よくわからない場合はシステム管理者に相談すること。
セッションは \fB-wipe\fP オプションで削除する。
.TP 5
.B \-L
.\"O tells
.\"O .I screen
.\"O to turn on automatic output logging for the windows.
ウィンドウの自動出力ログを有効にするよう
.I screen
に伝える。
.TP 5
.B \-m
.\"O causes
.\"O .I screen
.\"O to ignore the $STY environment variable. With \*Qscreen -m\*U creation of
.\"O a new session is enforced, regardless whether
.\"O .I screen
.\"O is called from within another
.\"O .I screen
.\"O session or not. This flag has a special meaning in connection
.\"O with the `-d' option:
.I screen
に $STY 環境変数を無視させる。
\*Qscreen -m\*U とすると、この
.I screen
が他の
.I screen
セッションから呼び出されたかどうかに関わらず、
新たなセッションの生成が強制される。
このフラグは、`-d' オプションと組み合わせると特別な意味を持つ。
.TP 8
.B \-d \-m
.\"O Start
.\"O .I screen
.\"O in \*Qdetached\*U mode. This creates a new session but doesn't
.\"O attach to it. This is useful for system startup scripts.
.I screen
を \*Qdetached\*U モードで起動する。新たなセッションが生成されるが、
そのセッションへアタッチしない。
これはシステムのスタートアップスクリプトで便利である。
.TP 8
.B \-D \-m
.\"O This also starts screen in \*Qdetached\*U mode, but doesn't fork
.\"O a new process. The command exits if the session terminates.
これも screen を \*Qdetached\*U モードで起動するが、
新たなプロセスをフォークしない。
このコマンドは、セッションが終わったら終了する。
.TP 5
.B \-O
.\"O selects a more optimal output mode for your terminal rather than true VT100
.\"O emulation (only affects auto-margin terminals without `LP').
.\"O This can also be set in your .screenrc by specifying `OP' in a \*Qtermcap\*U
.\"O command.
完全な VT100 エミュレーションではなく、
使っている端末に対してより最適な出力モードを選択する
(`LP' のない自動マージン端末にのみ影響する)。
これは .screenrc  の \*Qtermcap\*U コマンドに `OP'
を指定することによっても設定できる。
.TP 5
.\"O .BI "\-p " number_or_name
.BI "\-p " (番号または名前)
.\"O Preselect a window. This is usefull when you want to reattach to a
.\"O specific windor or you want to send a command via the \*Q-X\*U
.\"O option to a specific window. As with screen's select commant, \*Q-\*U
.\"O selects the blank window. As a special case for reattach, \*Q=\*U
.\"O brings up the windowlist on the blank window.
.\"nakano typo: windor, commant
あらかじめウィンドウを選択する。これは特定のウィンドウに
アタッチしなおしたいときや、\*Q-X\*U オプションを用いて
特定のウィンドウにコマンドを送りたいときに便利である。
スクリーン選択コマンドと同じく、\*Q-\*U を用いると
ブランクのウィンドウが選択される。再アタッチの場合においては、
\*Q=\*U によってブランクのウィンドウにウィンドウのリストが表示される。
.TP 5
.B \-q
.\"O Suppress printing of error messages. In combination with \*Q-ls\*U the exit 
.\"O value is as follows: 9 indicates a directory without sessions. 10 
.\"O indicates a directory with running but not attachable sessions. 11 (or more) 
.\"O indicates 1 (or more) usable sessions.
.\"O In combination with \*Q-r\*U the exit value is as follows: 10 indicates that 
.\"O there is no session to resume. 12 (or more) indicates that there are 2 (or 
.\"O more) sessions to resume and you should specify which one to choose. 
.\"O In all other cases \*Q-q\*U has no effect.
エラーメッセージを表示しない。\*Q-ls\*U と同時に用いた場合の返り値は次の通り:
9 はセッションのないディレクトリ、
10 は動作中だがアタッチできないセッションのあるディレクトリ、
11 (またはそれ以上) は 1 (以上) の利用できるセッションのあるディレクトリ。
\*Q-r\*U と同時に用いた場合の返り値は次の通り:
10 はレジュームできるセッションがない、12 (またはそれ以上)
は 2 つ (以上) のレジューム可能なセッションがあり、
どちらかを選ばなければならない。
これ以外の場合には、\*Q-q\*U には何の効果もない。
.TP 5
.BR \-r " [" \fIpid.tty.host ]
.PD 0
.TP 5
.BR \-r " \fIsessionowner/[" \fIpid.tty.host ]
.PD
.\"O resumes a detached
.\"O .I screen
.\"O session.  No other options (except combinations with \fB\-d\fP/\fB\-D\fP) may
.\"O be specified, though an optional prefix of [\fIpid.\fP]\fItty.host\fP
.\"O may be needed to distinguish between multiple detached
.\"O .I screen
.\"O sessions.  The second form is used to connect to another user's screen session
.\"O which runs in multiuser mode. This indicates that screen should look for
.\"O sessions in another user's directory. This requires setuid-root.
デタッチされている
.I screen
セッションをレジュームする。他のオプション
(\*Q-d\*U/\*Q-D\*U と同時に用いる場合を除く)
を指定することはできないが、複数の
.I screen
セッションがデタッチされている場合は、
それらを区別するために [\fIpid.\fP]\fItty.host\fP という余分な
プレフィックスが必要かもしれない。
二番目の形式は、マルチユーザモードで動作している他のユーザの
screen セッションに接続する場合に用いる。
この場合 screen は、他のユーザのディレクトリで
セッション探索ができなければならない。これには setuid-root が必要とされる。
.TP 5
.B \-R
.\"O attempts to resume the first detached
.\"O .I screen
.\"O session it finds.  If successful, all other command-line options are ignored.
.\"O If no detached session exists, starts a new session using the specified
.\"O options, just as if
.\"O .B \-R
.\"O had not been specified. The option is set by default if
.\"O .I screen
.\"O is run as a login-shell (actually screen uses \*Q-xRR\*U in that case).
.\"O For combinations with the \fB\-d\fP/\fB\-D\fP option see there.
デタッチされている
.I screen
セッションのうち最初に見つかったものを再開しようと試みる。
成功すれば他のコマンドラインオプションはすべて無視される。
デタッチされているセッションがひとつも無い場合には、
.B \-R
が指定されていなかったかのように、
他のオプションを使って新しいセッションを開始する。このオプションは、
.I screen
がログインシェルとして実行される場合にはデフォルトで設定される
(実際にはこの場合 screen は \*Q-xRR\*U を使う)。
\fB\-d\fP/\fB\-D\fP オプションとの組み合わせについては、
これらのオプションに関する説明の部分を参照すること。
.TP 5
.B \-s
.\"O sets the default shell to the program specified, instead of the value
.\"O in the environment variable $SHELL (or \*Q/bin/sh\*U if not defined).
.\"O This can also be defined through the \*Qshell\*U .screenrc command.
デフォルトのシェルとして、環境変数 $SHELL の値
(これが定義されていなければ \*Q/bin/sh\*U) ではなく、
指定されたプログラムを設定する。
これは .screenrc コマンドの \*Qshell\*U を使っても定義できる。
.TP 5
.\"O .BI "\-S " sessionname
.BI "\-S " セッション名
.\"O When creating a new session, this option can be used to specify a
.\"O meaningful name for the session. This name identifies the session for
.\"O \*Qscreen -list\*U and \*Qscreen -r\*U actions. It substitutes the
.\"O default [\fItty.host\fP] suffix.
新しいセッションを作る際、
このオプションを使えばセッションに意味のある名前を付けることができる。
この名前を使うと、
\*Qscreen -list\*U や \*Qscreen -r\*U の使用時にセッションを識別できる。
これはデフォルトの [\fItty.host\fP] サフィックスに置き換わる。
.TP 5
.\"O .BI "\-t " name
.BI "\-t " 名前
.\"O sets the title (a.\|k.\|a.) for the default shell or specified program.
.\"O See also the \*Qshelltitle\*U .screenrc command.
デフォルトのシェルまたは指定プログラムに対してタイトル (別名)
を設定する。.screenrc コマンド \*Qshelltitle\*U も参照のこと。
.TP 5
.B \-U
.\"O Run screen in UTF-8 mode. This option tells screen that your terminal
.\"O sends and understands UTF-8 encoded characters. It also sets the default
.\"O encoding for new windows to `utf8'.
UTF-8 モードで screen を動作させる。
このオプションは、ユーザの端末が UTF-8 エンコードされた
文字を理解し、また送信してくることを screen に伝える。
また新規ウィンドウのデフォルトエンコーディングが `utf8' になる。
.TP 5
.B \-v
.\"O Print version number.
バージョン番号を表示する。
.TP 5
.\"O .BR \-wipe " [" \fImatch ]
.BR \-wipe " [" \fIマッチ ]
.\"O does the same as \*Qscreen -ls\*U, but removes destroyed sessions instead of
.\"O marking them as `dead'.
.\"O An unreachable session is considered dead, when its name matches either 
.\"O the name of the local host, or the explicitly given parameter, if any.
.\"O See the \fB-r\fP flag for a description how to construct matches.
\*Qscreen -ls\*U とほぼ同じ動作であるが、
破棄されたセッションに `dead' と印を付けるのではなく、これを削除する。
到達できないセッションのうち、
ローカルホストの名前か、パラメータを与えた場合はそれにマッチしたものは、
dead とみなされる。
マッチの作り方については \fB-r\fP フラグの項を参照のこと。
.TP 5
.B \-x
.\"O Attach to a not detached
.\"O .I screen
.\"O session. (Multi display mode).
デタッチされていない
.I screen
セッションへのアタッチを行う (マルチディスプレイモード)。
.TP 5
.B \-X
.\"O Send the specified command to a running screen session. You can use
.\"O the \fB-d\fP or \fB-r\fP option to tell screen to look only for
.\"O attached or detached screen sessions. Note that this command doesn't
.\"O work if the session is password protected.
動作中の screen セッションに特定のコマンドを送る。
\fB-d\fP や \fB-r\fP オプションを用いれば、
アタッチされているセッションやデタッチされているセッション
のみを探すよう、screen に伝えることもできる。ただしこのコマンドは、
セッションがパスワードで保護されている場合には動作しないことに注意。

.\"O .SH "DEFAULT KEY BINDINGS"
.SH デフォルトのキー割り当て
.ta 12n 26n
.\"O As mentioned, each
.\"O .I screen
.\"O command consists of a
.\"O \*QC-a\*U followed by one other character.
.\"O For your convenience, all commands that are bound to lower-case letters are
.\"O also bound to their control character counterparts (with the exception
.\"O of \*QC-a a\*U; see below), thus, \*QC-a c\*U as well as \*QC-a C-c\*U can
.\"O be used to create a window. See section \*QCUSTOMIZATION\*U for a description
.\"O of the command.
既に説明したように、
.I screen
の各コマンドは \*QC-a\*U の後に、もう 1 文字を続けたものである。
ユーザの利便のため、小文字に割り当てられたすべてのコマンドは、
それぞれ対応する制御文字にも割り当てられる
(ただし \*QC-a a\*U は例外である。これについては後述する)。
.\"nakano C-a C-v も例外っぽいが。
したがって、\*QC-a c\*U でも \*QC-a C-c\*U でもウィンドウを生成できる。
コマンドの説明については
『カスタマイズ』のセクションを参照すること。
.PP
.TP 26n
.\"O The following table shows the default key bindings:
以下の表はデフォルトのキー割り当てである:
.IP "\fBC-a '\fP	(select)"
.\"O Prompt for a window name or number to switch to.
切り替え先のウィンドウ名またはウィンドウ番号を問い合わせる。
.IP "\fBC-a \(dq\fP	(windowlist -b)"
.\"O Present a list of all windows for selection.
選択できるウィンドウのリストを表示する。
.IP "\fBC-a 0\fP	(select 0)"
.PD 0
.IP "\fB ... \fP	   ..."
.IP "\fBC-a 9\fP	(select 9)"
.IP "\fBC-a -\fP	(select -)"
.PD
.\"O Switch to window number 0 \- 9, or to the blank window.
番号 0 \- 9 のウィンドウ、またはブランクウィンドウへ切り替える。
.IP "\fBC-a tab\fP	(focus)"
.PD
.\"O Switch the input focus to the next region.
入力フォーカスを次のリージョンに切り替える。
.IP "\fBC-a C-a\fP	(other)"
.\"O Toggle to the window displayed previously.
.\"O Note that this binding defaults to the command character typed twice,
.\"O unless overridden.  For instance, if you use the option \*Q\fB\-e]x\fP\*U,
.\"O this command becomes \*Q]]\*U.
直前に表示していたウィンドウにトグルする。
この割り当ては、変更しない限り、
デフォルトではコマンド文字の 2 回の繰り返しである。
例えば、オプション \*Q\fB\-e]x\fP\*U を使うと、
このコマンドは \*Q]C-a\*U でなく \*Q]]\*Uとなる。
.IP "\fBC-a a\fP	(meta)"
.\"O Send the command character (C-a) to window. See \fIescape\fP command.
コマンド文字(C-a)をウィンドウに送る。\fIescape\fP コマンドを参照のこと。
.IP "\fBC-a A\fP	(title)"
.\"O Allow the user to enter a name for the current window.
現在のウィンドウの名前をユーザに入力させる。
.IP "\fBC-a b\fP"
.PD 0
.IP "\fBC-a C-b\fP	(break)"
.PD
.\"O Send a break to window.
ブレーク信号をウィンドウに送る。
.IP "\fBC-a B\fP	(pow_break)"
.\"O Reopen the terminal line and send a break.
端末ラインを再オープンし、ブレーク信号を送る。
.IP "\fBC-a c\fP"
.PD 0
.IP "\fBC-a C-c\fP	(screen)"
.PD
.\"O Create a new window with a shell and switch to that window.
新しいウィンドウとシェルを生成し、そのウィンドウに切り替える。
.IP "\fBC-a C\fP	(clear)"
.\"O Clear the screen.
画面をクリアする。
.IP "\fBC-a d\fP"
.PD 0
.IP "\fBC-a C-d\fP	(detach)"
.PD
.\"O Detach
.\"O .I screen
.\"O from this terminal.
現在の端末から
.I screen
をデタッチする。
.\"O .IP "\fBC-a D D\fP	(pow_detach)"
.IP "\fBC-a D\fP	(pow_detach)"
.\"nakano D 一個多い?
.\"O Detach and logout.
デタッチとログアウトを行う。
.IP "\fBC-a f\fP"
.PD 0
.IP "\fBC-a C-f\fP	(flow)"
.PD
.\"O Toggle flow \fIon\fP, \fIoff\fP or \fIauto\fP.
フロー制御の \fIon\fP, \fIoff\fP, \fIauto\fP をトグルする。
.IP "\fBC-a F\fP	(fit)"
.\"O Resize the window to the current region size.
ウィンドウを現在のリージョの大きさにリサイズする。
.IP "\fBC-a C-g\fP	(vbell)"
.\"O Toggles
.\"O .I screen's
.\"O visual bell mode.
.I screen
の可視ベルモードをトグルする。
.IP "\fBC-a h\fP	(hardcopy)"
.\"O .PD
.\"O Write a hardcopy of the current window to the file \*Qhardcopy.\fIn\fP\*U.
現在のウィンドウのハードコピーをファイル \*Qhardcopy.\fIn\fP\*U
に書き込む。
.IP "\fBC-a H\fP	(log)"
.\"O Begins/ends logging of the current window to the file \*Qscreenlog.\fIn\fP\*U.
現在のウィンドウのファイル \*Qscreenlog.\fIn\fP\*U
へのログ出力を開始/終了する。
.IP "\fBC-a i\fP"
.PD 0
.IP "\fBC-a C-i\fP	(info)"
.PD
.\"O Show info about this window.
現在のウィンドウに関する情報を表示する。
.IP "\fBC-a k\fP"
.PD 0
.IP "\fBC-a C-k\fP	(kill)"
.PD
.\"O Destroy current window.
現在のウィンドウを破棄する。
.IP "\fBC-a l\fP"
.PD 0
.IP "\fBC-a C-l\fP	(redisplay)"
.PD
.\"O Fully refresh current window.
現在のウィンドウ全体をリフレッシュする。
.IP "\fBC-a L\fP	(login)"
.\"O Toggle this windows login slot. Available only if
.\"O .I screen
.\"O is configured to update the utmp database.
このウィンドウのログインスロットをトグルする。
これが可能なのは、
.I screen
が utmp データベースを更新するよう設定されている場合に限られる。
.IP "\fBC-a m\fP"
.PD 0
.IP "\fBC-a C-m\fP	(lastmsg)"
.PD
.\"O Repeat the last message displayed in the message line.
メッセージ行に表示された直前のメッセージを繰り返す。
.IP "\fBC-a M\fP	(monitor)"
.\"O Toggles monitoring of the current window.
現在のウィンドウの監視をトグルする。
.IP "\fBC-a space\fP"
.PD 0
.IP "\fBC-a n\fP"
.IP "\fBC-a C-n\fP	(next)"
.PD
.\"O Switch to the next window.
次のウィンドウに切り替える。
.IP "\fBC-a N\fP	(number)"
.\"O Show the number (and title) of the current window.
現在のウィンドウの番号(とタイトル)を表示する。
.IP "\fBC-a backspace\fP"
.PD 0
.IP "\fBC-a h\fP"
.IP "\fBC-a p\fP"
.IP "\fBC-a C-p\fP	(prev)"
.PD
.\"O Switch to the previous window (opposite of \fBC-a n\fP).
前のウィンドウに切り替える (\fBC-a n\fP の反対)。
.IP "\fBC-a q\fP"
.PD 0
.IP "\fBC-a C-q\fP	(xon)"
.PD
.\"O Send a control-q to the current window.
現在のウィンドウに Control-q を送る。
.IP "\fBC-a Q\fP	(only)"
.\"O Delele all regions but the current one.
現在のリージョンを残して他はすべて消す。
.IP "\fBC-a r\fP"
.PD 0
.IP "\fBC-a C-r\fP	(wrap)"
.PD
.\"O Toggle the current window's line-wrap setting (turn the current window's
.\"O automatic margins on and off).
現在のウィンドウの行折り返しに関する設定をトグルする
(現在のウィンドウの自動マージンのオン/オフを切り替える)。
.IP "\fBC-a s\fP"
.PD 0
.IP "\fBC-a C-s\fP	(xoff)"
.PD
.\"O Send a control-s to the current window.
現在のウィンドウに Control-s を送る。
.IP "\fBC-a S\fP	(split)"
.\"O Split the current region into two new ones.
現在のリージョンを 2 つに分ける。
.IP "\fBC-a t\fP"
.PD 0
.IP "\fBC-a C-t\fP	(time)"
.PD
.\"O Show system information.
システム情報を表示する。
.IP "\fBC-a v\fP	(version)"
.PD
.\"O Display the version and compilation date.
バージョンとコンパイルされた日時を表示する。
.IP "\fBC-a C-v\fP	(digraph)"
.PD
.\"O Enter digraph.
二重字 (digraph) を入力する。
(訳注: 二重字とはアクセント記号等が付いた文字のこと)
.IP "\fBC-a w\fP"
.PD 0
.IP "\fBC-a C-w\fP	(windows)"
.PD
.\"O Show a list of window.
ウィンドウのリストを表示する。
.IP "\fBC-a W\fP	(width)"
.\"O Toggle 80/132 columns.
80/132 カラムをトグルする。
.IP "\fBC-a x\fP"
.PD 0
.IP "\fBC-a C-x\fP	(lockscreen)"
.PD
.\"O Lock this terminal.
この端末をロックする。
.IP "\fBC-a X\fP 	(remove)"
.\"O Kill the current region.
現在のリージョンを破棄する。
.IP "\fBC-a z\fP"
.PD 0
.IP "\fBC-a C-z\fP	(suspend)"
.PD
.\"O Suspend
.\"O .IR screen .
.\"O Your system must support BSD-style job-control.
.I screen
をサスペンドする。
システムが BSD 形式のジョブ制御をサポートしていなければならない。
.IP "\fBC-a Z\fP	(reset)"
.\"O Reset the virtual terminal to its \*Qpower-on\*U values.
仮想端末を \*Qpower-on\*U の値にリセットする。
.IP "\fBC-a .\fP	(dumptermcap)"
.\"O Write out a \*Q.termcap\*U file.
\*Q.termcap\*U ファイルを出力する。
.IP "\fBC-a ?\fP	(help)"
.\"O Show key bindings.
キー割り当てを表示する。
.IP "\fBC-a C-\e\fP	(quit)"
.\"O Kill all windows and terminate
.\"O .IR screen .
すべてのウィンドウを破棄し、
.I screen
を終了する。
.IP "\fBC-a :\fP	(colon)"
.\"O Enter command line mode.
コマンドラインモードに入る。
.IP "\fBC-a [\fP"
.PD 0
.IP "\fBC-a C-[\fP"
.IP "\fBC-a esc\fP	(copy)"
.PD
.\"O Enter copy/scrollback mode.
コピー/スクロールバックモードに入る。
.IP "\fBC-a ]\fP	(paste .)"
.PD
.\"O Write the contents of the paste buffer to the stdin queue of the
.\"O current window. 
ペーストバッファの内容を現在のウィンドウの標準入力のキューに書き込む。
.IP "\fBC-a {\fP"
.PD 0
.IP "\fBC-a }\fP	(history)"
.PD
.\"O Copy and paste a previous (command) line.
前の (コマンド) 行をコピー&ペーストする。
.IP "\fBC-a >\fP	(writebuf)"
.\"O Write paste buffer to a file.
ペーストバッファをファイルに書き出す。
.IP "\fBC-a <\fP	(readbuf)"
.\"O Reads the screen-exchange file into the paste buffer.
画面交換ファイルをペーストバッファに読み込む。
.IP "\fBC-a =\fP	(removebuf)"
.\"O Removes the file used by \fBC-a <\fP and \fPC-a >\fP.
\fBC-a <\fP と \fPC-a >\fP で使ったファイルを削除する。
.IP "\fBC-a ,\fP	(license)"
.\"O Shows where
.\"O .I screen
.\"O comes from, where it went to and why you can use it.
.I screen
の由来を表示する。これは
.I screen
が来た道であり、あなたが
.I screen
を利用できている理由である。
.IP "\fBC-a _\fP	(silence)"
.\"O Start/stop monitoring the current window for inactivity.
現在のウィンドウが非アクティブかどうかの監視を開始/停止する。
.IP "\fBC-a *\fP	(displays)"
.\"O Show a listing of all currently attached displays.
現在アタッチしているすべての画面のリストを表示する。

.\"O 
.\"O .SH CUSTOMIZATION
.SH カスタマイズ
.\"O The \*Qsocket directory\*U defaults either to $HOME/.screen or simply to
.\"O /tmp/screens or preferably to /var/run/screen chosen at compile-time. If
.\"O .I screen
.\"O is installed setuid-root, then the administrator
.\"O should compile
.\"O .I screen
.\"O with an adequate (not NFS mounted) socket directory. If
.\"O .I screen
.\"O is not running setuid-root, the user can specify any mode 700 directory
.\"O in the environment variable $SCREENDIR.
「ソケットディレクトリ」は、デフォルトでは $HOME/.screen
または単に /tmp/screens だが、
コンパイル時に選択すれば /var/run/screen にもできる。
.I screen
を setuid-root でインストールする場合、
システム管理者は適切な (NFS マウントではない)
ソケットディレクトリを使うよう
.I screen
をコンパイルしなければならない。
.I screen
が setuid-root でない状態で動作する場合なら、
ユーザは環境変数 $SCREENDIR を使って、
モード 700 の任意のディレクトリを指定できる。
.PP
.\"O When
.\"O .I screen
.\"O is invoked, it executes initialization commands from the files
.\"O \*Q/etc/screenrc\*U and
.\"O \*Q.screenrc\*U in the user's home directory. These are the \*Qprogrammer's
.\"O defaults\*U that can be overridden in the following ways: for the
.\"O global screenrc file 
.\"O .I screen
.\"O searches for the environment variable $SYSSCREENRC (this override feature
.\"O may be disabled at compile-time). The user specific
.\"O screenrc file is searched in $SCREENRC, then $HOME/.screenrc.
.\"O The command line option \fB-c\fP takes
.\"O precedence over the above user screenrc files.
.I screen
は起動されると、2 つのファイル (\*Q/etc/screenrc\*U
とそのユーザのホームディレクトリの \*Q.screenrc\*U)
から初期化コマンドを読み込んで実行する。
これらは「プログラマのデフォルト値」であり、
以下のようにすれば変更できる:
システム全体の screenrc として、
.I screen
は環境変数 $SYSSCREENRC を検索する
(この変更機能はコンパイル時に無効にできる)。
ユーザ固有の screenrc ファイルは
$SCREENRC, $HOME/.screenrc の順で検索される。
コマンドラインオプション \fB-c\fP は、
これらのユーザ用 screenrc ファイルよりも優先される。
.PP
.\"O Commands in these files are used to set options, bind functions to
.\"O keys, and to automatically establish one or more windows at the
.\"O beginning of your
.\"O .I screen
.\"O session.
.\"O Commands are listed one per line, with empty lines being ignored.
.\"O A command's arguments are separated by tabs or spaces, and may be
.\"O surrounded by single or double quotes.
.\"O A `#' turns the rest of the line into a comment, except in quotes.
.\"O Unintelligible lines are warned about and ignored.
.\"O Commands may contain references to environment variables. The 
.\"O syntax is the shell-like "$VAR " or "${VAR}". Note that this causes 
.\"O incompatibility with previous 
.\"O .I screen
.\"O versions, as now the '$'-character has to be protected with '\e' if no
.\"O variable substitution shall be performed. A string in single-quotes is also
.\"O protected from variable substitution.
これらのファイルに書かれたコマンドは、オプションの設定や
キーへの機能の割り当て、
.I screen
セッション開始時の自動的なウィンドウ生成 (複数可) に用いられる。
コマンドは 1 行に 1 つ書かれ、空の行は無視される。コマンドの引き数は
タブまたは空白で区切られ、
シングルクォートまたはダブルクォートで括ることができる。
`#' があると、その行の残りの部分はコメントとなる。
ただし `#' がクォートの内部にある場合は除く。
判読できない行には警告が出され、無視される。
コマンドでは環境変数を参照できる。
記法はシェルと同様に "$VAR " または "${VAR}" の形式である。
これは
.I screen
の古いバージョンとの非互換性の原因になっており、
現在は変数代入を行わせない場合 '$' は '\e'
で保護しなければならない。
.PP
.\"O Two configuration files are shipped as examples with your screen distribution:
.\"O \*Qetc/screenrc\*U and \*Qetc/etcscreenrc\*U. They contain a number of
.\"O useful examples for various commands.
screen の配布パッケージには、 2 つの設定ファイル、
\*Qetc/screenrc\*U と \*Qetc/etcscreenrc\*U
とが例として同梱されている。
これらには様々なコマンドの便利な例がたくさん載っている。
.PP
.\"O Customization can also be done 'on-line'. To enter the command mode type
.\"O `C-a :'. Note that commands starting with \*Qdef\*U change default values,
.\"O while others change current settings.
カスタマイズは「オンライン」で行うこともできる。
コマンドモードに入るには `C-a :' を入力する。
\*Qdef\*U で始まるコマンドはデフォルト値を変更し、
他のコマンドは現在の設定を変更する。
.PP
.\"O The following commands are available:
利用できるコマンドを以降に示す:
.sp 
.ne 3
.BI acladd " usernames"
.RI [ crypted-pw ]
.br
.BI addacl " usernames"
.PP
.\"O Enable users to fully access this screen session. \fIUsernames\fP can be one
.\"O user or a comma separated list of users. This command enables to attach to the
.\"O .I screen
.\"O session and performs the equivalent of `aclchg \fIusernames\fP +rwx \&"#?\&"'.
.\"O executed. To add a user with restricted access, use the `aclchg' command below.
.\"O If an optional second parameter is supplied, it should be a crypted password
.\"O for the named user(s). `Addacl' is a synonym to `acladd'.
.\"O Multi user mode only.
ユーザに現在の screen セッションへの完全なアクセスを与える。
\fIusernames\fP は 1 人のユーザ、またはコンマ区切りのユーザリストである。
このコマンドは
.I screen
セッションにアタッチできるようにし、
`aclchg \fIusernames\fP +rwx \&"#?\&"' と同じ内容を実行する。
アクセス権を制限した状態でユーザを追加するには、後述の `aclchg' を用いること。
2 番目のパラメータは省略可能だが、これを与えると、
これは指定したユーザ (ないし複数のユーザ) の暗号化パスワードになる。
`addacl' は `acladd' と同機能の別名である。
このコマンドはマルチユーザモードでのみ使用できる。
.sp 
.ne 3
.BI aclchg " usernames permbits list"
.br
.BI chacl " usernames permbits list"
.PP
.\"O Change permissions for a comma separated list of users. Permission bits are
.\"O represented as `r', `w' and `x'. Prefixing `+' grants the permission, `-' 
.\"O removes it. The third parameter is a comma separated list of commands and/or
.\"O windows (specified either by number or title). The special list `#' refers to 
.\"O all windows, `?' to all commands. if \fIusernames\fP consists of a single `*',
.\"O all known users are affected.
.\"O A command can be executed when the user has the `x' bit for it.
.\"O The user can type input to a window when he has its `w' bit set and no other
.\"O user obtains a writelock for this window. 
.\"O Other bits are currently ignored.  
コンマ区切りのリストで指定したユーザの権限 (permission) を変更する。
permbits は `r', `w', `x' で表し、`+' を前に置くと権限が与えられ、
`-' を置くと権限が取り上げられる。
3 番目のパラメータは、コマンドやウィンドウ (番号またはタイトルで指定)
をコンマで区切って並べたリストである。
特別なリストである `#' はウィンドウすべてを意味し、`?' はコマンドすべてを意味する。
\fIusernames\fP が `*' 1 つだけの場合、
認識されているユーザすべてが影響を受ける。
ユーザがあるコマンドに対する `x' ビットを持っていると、
そのコマンドを実行できる。
あるウィンドウに対して `w' ビットが設定されており、
他のユーザがそのウィンドウの書き込みロックを取得していないとき、
ユーザはそのウィンドウへの入力を行える。
他のビットは現在は無視される。
.\"O To withdraw the writelock from another user in window 2:
.\"O `aclchg \fIusername\fP -w+w 2'.
.\"O To allow read-only access to the session: `aclchg \fIusername\fP
.\"O -w \&"#\&"'. As soon as a user's name is known to 
.\"O .I screen 
.\"O he can attach to the session and (per default) has full permissions for all 
.\"O command and windows. Execution permission for the acl commands, `at' and others
.\"O should also be removed or the user may be able to regain write permission.
.\"O Rights of the special username
.\"O .B nobody
.\"O cannot be changed (see the \*Qsu\*U command).
.\"O `Chacl' is a synonym to `aclchg'.
.\"O Multi user mode only.
ウィンドウ 2 にいる他のユーザの書き込みロックを取り消すには、
`aclchg \fIusername\fP -w+w 2' コマンドを実行する。
セッションに対する読み込み専用のアクセスを許可するには、
`aclchg \fIusername\fP -w \&"#\&"' コマンドを実行する。
ユーザ名が
.I screen
に識別されると、直ちにそのユーザはセッションにアタッチでき、
(デフォルトでは) すべてのコマンドとウィンドウに対する完全な権限を与えられる。
acl コマンドや `at' 等に対する実行許可は削除しておくべきである。
さもないと、そのユーザは書き込み権限を再取得できてしまう。
特殊なユーザ
.B nobody
に対する権限は変更できない (\*Qsu\*U コマンドを見よ)。
`chacl' は `aclchg' と同義の別名である。
マルチユーザモードでのみ使用できる。
.sp
.ne 3
.BI acldel " username"
.PP
.\"O Remove a user from
.\"O .IR screen 's
.\"O access control list. If currently attached, all the
.\"O user's displays are detached from the session. He cannot attach again.
.\"O Multi user mode only.
ユーザを
.I screen
のアクセス制御リストから削除する。
現在アタッチされていれば、そのユーザのすべてのディスプレイは
そのセッションからデタッチされる。
そのユーザは再びアタッチすることはできない。
マルチユーザモードでのみ使用できる。
.sp
.ne 3
.BI aclgrp " username"
.RI [ groupname ]
.PP
.\"O Creates groups of users that share common access rights. The name of the 
.\"O group is the username of the group leader. Each member of the group inherits
.\"O the permissions that are granted to the group leader. That means, if a user
.\"O fails an access check, another check is made for the group leader.
.\"O A user is removed from all groups the special value \*Qnone\*U is used for
.\"O .IR groupname .
.\"O If the second parameter is omitted all groups the user is in are listed.
同じアクセス権限を共有するユーザのグループを作成する。
このグループの名前は、グループのリーダーのユーザ名になる。
グループの各メンバーはグループリーダーに与えられた権限を継承する。
すなわち、あるユーザがあるアクセスのチェックに失敗すると、
続いて別のチェックがグループリーダーに対してなされる。
.I groupname
に特殊な値 \*Qnone\*U が用いられると、ユーザはすべてのグループから削除される。
2 番目のパラメータが省略されると、ユーザのいるすべてのグループがリストされる。
.sp
.ne 3
.B aclumask
.RI [[ users ] +bits 
.RI |[ users ] -bits " .... ]"
.br
.B umask
.RI [[ users ] +bits 
.RI |[ users ] -bits " .... ]"
.PP
.\"O This specifies the access other users have to windows that will be created by
.\"O the caller of the command.
.\"O .I Users
.\"O may be no, one or a comma separated list of known usernames. If no users are
.\"O specified, a list of all currently known users is assumed. 
.\"O .I Bits
.\"O is any combination of access control bits allowed defined with the 
.\"O \*Qaclchg\*U command. The special username \*Q?\*U predefines the access
.\"O that not yet known users will be granted to any window initially.
.\"O The special username \*Q??\*U predefines the access that not yet known 
.\"O users are granted to any command. 
.\"O Rights of the special username
.\"O .B nobody
.\"O cannot be changed (see the \*Qsu\*U command).
.\"O `Umask' is a synonym to `aclumask'.
このコマンドを呼んだ者が生成するウィンドウに対して、
他のユーザが持つアクセス権限を指定する。
.I users 
は、なし、一人、既知のユーザ名のコンマ区切りリスト、のいずれかである。
.I users
を指定しないと、現在わかっているすべてのユーザのリストを指定したことになる。
.I bits
は \*Qaclchg\*U コマンドで定義された
アクセス制御ビットの任意の組み合わせである。
ユーザ名 \*Q?\*U は特殊な意味を持ち、
まだ登場していないユーザに対して、
事前に任意のウィンドウに対するアクセス権限を付与するために用いる。
ユーザ名 \*Q??\*U は特殊な意味を持ち、
まだ登場していないユーザに対して、
任意のコマンドに対するアクセス権限を付与するために用いる。
特殊なユーザ名である
.B nobody
の権限を変更することはできない (\*Qsu\*U コマンドを見よ)。
`umask' は `aclumask' と同義の別名である。
.sp
.ne 3
.BI activity " message"
.PP
.\"O When any activity occurs in a background window that is being monitored,
.\"O .I screen
.\"O displays a notification in the message line.
.\"O The notification message can be re-defined by means of the \*Qactivity\*U
.\"O command.
.\"O Each occurrence of `%' in \fImessage\fP is replaced by
.\"O the number of the window in which activity has occurred,
.\"O and each occurrence of `^G' is replaced by the definition for bell
.\"O in your termcap (usually an audible bell).
.\"O The default message is
監視状態にあるバックグラウンドウィンドウのどれかで
何らかの動作があった場合、
.I screen
はメッセージ行で通知を行う。
この通知メッセージは \*Qactivity\*U コマンドで再定義できる。
\fImessage\fP に含まれる `%' は、
それぞれ動作が起こったウィンドウの番号に置換され、`~' は、
それぞれ termcap に書かれているベルの定義
(通常は音を鳴らすベル文字) に置換される。
デフォルトのメッセージは
.sp
	'Activity in window %n'
.sp
.\"O Note that monitoring is off for all windows by default, but can be altered
.\"O by use of the \*Qmonitor\*U command (C-a M).
である。
デフォルトではすべてのウィンドウに対して監視はオフになっているが、
\*Qmonitor\*U コマンド(C-a M) で変更できる。
.sp
.ne 3
.BR "allpartial on" | off
.PP
.\"O If set to on, only the current cursor line is refreshed on window change.
.\"O This affects all windows and is useful for slow terminal lines. The 
.\"O previous setting of full/partial refresh for each window is restored
.\"O with \*Qallpartial off\*U.  This is a global flag that immediately takes effect
.\"O on all windows overriding the \*Qpartial\*U settings. It does not change the
.\"O default redraw behavior of newly created windows.
on にすると、ウィンドウが変化した時に現在のカーソル行だけがリフレッシュされる。
これはすべてのウィンドウに影響し、端末ラインが遅い場合に役に立つ。
各ウィンドウにおける全体/部分リフレッシュの直前の設定は、
\*Qallpartial off\*U で復元される。
これはグローバルなフラグであり、
即座にすべてのウィンドウに影響を及ぼし、\*Qpartial\*U の設定を変更する。
これ以降に新しく生成されるウィンドウのデフォルトの再描画の動作は、
これによっては変わらない。
.sp
.ne 3
.BR "altscreen on" | off
.PP
.\"O If set to on, "alternate screen" support is enabled in virtual terminals,
.\"O just like in xterm.  Initial setting is `off'.
on にすると仮想端末で「別画面 (alternate screen)」のサポートが有効になる。
これは xterm のと同様のものである。初期設定では off になっている。
.sp
.ne 3
.BR "at " "[\fIidentifier\fP][" "#\fP|\fP*\fP|\fP%\fP] "
.IR "command " [ args " ... ]"
.PP
.\"O Execute a command at other displays or windows as if it had been entered there.
.\"O \*QAt\*U changes the context (the `current window' or `current display'
.\"O setting) of the command. If the first parameter describes a 
.\"O non-unique context, the command will be executed multiple times. If the first 
.\"O parameter is of the form `\fIidentifier\fP*' then identifier is matched against
.\"O user names.  The command is executed once for each display of the selected 
.\"O user(s). If the first parameter is of the form `\fIidentifier\fP%' identifier 
.\"O is matched against displays. Displays are named after the ttys they 
.\"O attach. The prefix `/dev/' or `/dev/tty' may be omitted from the identifier.
.\"O If \fIidentifier\fP has a `#' or nothing appended it is matched against 
.\"O window numbers and titles. Omitting an identifier in front of the `#', `*' or 
.\"O `%'-character selects all users, displays or windows because a prefix-match is
.\"O performed. Note that on the affected display(s) a short message will describe
.\"O what happened. Permission is checked for initiator of the \*Qat\*U command,
.\"O not for the owners of the affected display(s).
.\"O Note that the '#' character works as a comment introducer when it is preceded by
.\"O whitespace. This can be escaped by prefixing a '\e'. 
.\"O Permission is checked for the initiator of the \*Qat\*U command, not for the
.\"O owners of the affected display(s).
.\"nakano double.
他の画面やウィンドウで (あたかもそこで入力したかのように) コマンドを実行する。
\*Qat\*U はコマンドのコンテクスト
(「現在のウィンドウ」や「現在の画面」の設定) を変更する。
最初のパラメータでコンテクストがひとつに定まらない場合には、
そのコマンドは複数回実行される。最初のパラメータが
`\fIidentifier\fP*' の形式ならば、
ユーザ名に対して identifier のマッチを試みる。
指定されたコマンドは、選択されたユーザ (複数可) の画面それぞれにおいて
1 度ずつ実行される。最初のパラメータが `\fIidentifier\fP%' の形式ならば、
画面に対して identifier のマッチを試みる。
画面の名前はアタッチしている tty に基づいて付けられる。
プレフィックス `/dev/' や `/dev/tty' は identifier から省略できる。
\fIidentifier\fP に `#' が付いた (あるいは末尾に何も付いていない) 場合は、
ウィンドウ番号とタイトルにマッチする。`*', `%', `#'
文字の前に置く識別子を省略すると、
すべてのユーザ、画面、ウィンドウが選択される。
.\"nakano order が捩れている？
.\"nakano prefix-match ってなんだ？
.\"nakano なぜならばプレフィックスのマッチが行われるからである。
影響を受ける画面 (複数のこともある) では、
起こったことが短いメッセージで表示される。
\*Qat\*U コマンドの実行者に対しては権限のチェックが行なわれ、
影響される画面の所有者に対しては行なわれない。'#' 文字の後に空白文字が
置かれるとコメントの開始になるが、これは '\e' を前置することでエスケープできる。
.br
.\"O Caveat: 
.\"O When matching against windows, the command is executed at least 
.\"O once per window. Commands that change the internal arrangement of windows
.\"O (like \*Qother\*U) may be called again. In shared windows the command will
.\"O be repeated for each attached display. Beware, when issuing toggle commands
.\"O like \*Qlogin\*U!
.\"O Some commands (e.g. \*Qprocess\*U) require that 
.\"O a display is associated with the target windows.  These commands may not work
.\"O correctly under \*Qat\*U looping over windows.
注意:
ウィンドウに対するマッチでは、コマンドは各ウィンドウで最低 1 回は実行される。
ウィンドウの内部順序を変更するようなコマンド (\*Qother\*U など) は、
複数回呼び出されるかもしれない。
共有ウィンドウでは、コマンドはアタッチしている画面ごとに繰り返される。
\*Qlogin\*U のような、状態をトグルするコマンドを実行するときには注意すること!
コマンドによっては、対象ウィンドウがディスプレイに関連づけられていないと
機能しないものがある (\*Qprocess\*U など)。
これらのコマンドは、\*Qat\*U でウィンドウを巡回させる場合には
機能しないかもしれない。
.sp
.ne 3
.BI "attrcolor " attrib
.RI [ "attribute/color-modifier" ]
.PP
.\"O This command can be used to highlight attributes by changing the color of
.\"O the text. If the attribute
.\"O .I attrib
.\"O is in use, the specified attribute/color modifier is also applied. If no
.\"O modifier is given, the current one is deleted. See the \*QSTRING ESCAPES\*U
.\"O chapter for the syntax of the modifier. Screen understands two
.\"O pseudo-attributes, \*Qi\*U stands for high-intensity foreground
.\"O color and \*QI\*U for high-intensity background color.
このコマンドを用いると、テキストの色を変えて属性をハイライトできる。
属性
.I attrib
がすでに利用中の場合には、指定した属性/色修正が同時に適用される。
.\"nakano 実際の動作を確認のこと。
修正指定を与えないと、現在のものを削除する。
修正指定の文法については『文字エスケープ』を参照のこと。
screen は 2 つの疑似属性を理解する:
\*Qi\*U は高輝度の前景色を意味し、
\*QI\*U は高輝度の背景色を意味する。
.sp
.\"O Examples:
例:
.IP
attrcolor b "R"
.PP
.\"O Change the color to bright red if bold text is to be printed.
ボールドのテキストを表示するとき、色を明るい赤に変更する。
.IP
attrcolor u "-u b"
.PP
.\"O Use blue text instead of underline.
アンダーラインの代わりに青のテキストを用いる。
.IP
attrcolor b ".I"
.PP
.\"O Use bright colors for bold text. Most terminal emulators do this
.\"O already.
ボールドのテキストに明るい色を使う。ほとんどの端末エミュレータでは、
すでにこの指定はなされているだろう。
.IP
attrcolor i "+b"
.PP
.\"O Make bright colored text also bold.
高輝度色のテキストをボールドにもする。
.sp
.ne 3
.BR "autodetach on" | off
.PP
.\"O Sets whether 
.\"O .I screen
.\"O will automatically detach upon hangup, which
.\"O saves all your running programs until they are resumed with a
.\"O .B "screen -r"
.\"O command.
.\"O When turned off, a hangup signal will terminate 
.\"O .I screen
.\"O and all the processes it contains. Autodetach is on by default.
ハングアップの際に、自動的にデタッチを
.I screen
にさせるかどうかを設定する。デタッチを行うと、
実行中のプログラムはすべて保存され、
.B "screen -r"
コマンドで再開できる。このオプションを off にすると、
ハングアップシグナルによって
.I screen
および
.I screen
内で実行されているすべてのプロセスが終了する。
autodetach はデフォルトでは on になっている。
.sp
.ne 3
.BR "autonuke on" | off
.PP
.\"O Sets whether a clear screen sequence should nuke all the output
.\"O that has not been written to the terminal. See also
.\"O \*Qobuflimit\*U.
画面クリアのシーケンスが与えられたとき、
まだ端末に書き出されていない出力すべてを破棄するかどうか指定する。
\*Qobuflimit\*U も参照のこと。
.sp
.ne 3
.BI "backtick " id
.I lifespan
.I autorefresh
.I cmd
.I args...
.br
.BI "backtick " id
.PP
.\"O Program the backtick command with the numerical id \fIid\fP.
.\"O The output of such a command is used for substitution of the
.\"O \*Q%`\*U string escape. The specified \fIlifespan\fP is the number
.\"O of seconds the output is considered valid. After this time, the
.\"O command is run again if a corresponding string escape is encountered.
.\"O The \fIautorefresh\fP parameter triggers an
.\"O automatic refresh for caption and hardstatus strings after the
.\"O specified number of seconds. Only the last line of output is used
.\"O for substitution.
(数値の) ID が \fIid\fP となる backtick コマンドをプログラムする。
このようなコマンドの出力は、文字列エスケープ \*Q%`\*U に代入される。
指定された \fIlifespan\fP は、出力が有効とみなされる期間の秒数である。
この秒数が経過した後に、対応する文字列エスケープが現われた場合には、
このコマンドが再び実行される。
\fIautorefresh\fP パラメータで指定する秒数が過ぎると、
キャプション文字列とハードステータス文字列とが自動的にリフレッシュされる。
出力の最後の行だけが代入に用いられる。
.br
.\"O If both the \fIlifespan\fP and the \fIautorefresh\fP parameters
.\"O are zero, the backtick program is expected to stay in the
.\"O background and generate output once in a while.
.\"O In this case, the command is executed right away and screen stores
.\"O the last line of output. If a new line gets printed screen will
.\"O automatically refresh the hardstatus or the captions.
\fIlifespan\fP と \fIautorefresh\fP の両方のパラメータが 0 だと、
その backtick プログラムはバックグラウンドに留まり、
ときどき出力を生成するものとみなされる。
この場合、そのコマンドは直ちに実行され、
screen はその出力の最後の行を保存する。新しい行が表示されると、
screen はハードステータスまたはキャプションをリフレッシュする。
.br
.\"O The second form of the command deletes the backtick command
.\"O with the numerical id \fIid\fP.
2 番目の書式は、数値 ID が \fIid\fP の backtick コマンドを削除する。
.sp
.ne 3
.BR "bce " [ on | off ]
.PP
.\"O Change background-color-erase setting. If \*Qbce\*U is set to on, all
.\"O characters cleared by an erase/insert/scroll/clear operation
.\"O will be displayed in the current background color. Otherwise
.\"O the default background color is used.
背景色消去 (background-color-erase) の設定を変更する。
\*Qbce\*U を on にすると、
erase/insert/scroll/clear 操作でクリアされるすべての文字は、
現在の背景色で表示されることになる。
off にするとデフォルトの背景色が用いられる。
.\"nakano 後者の意味が不明…
.sp
.ne 3
.B bell_msg
.RI [ message ]
.PP
.\"O When a bell character is sent to a background window,
.\"O .I screen
.\"O displays a notification in the message line.
.\"O The notification message can be re-defined by this command.
.\"O Each occurrence of `%' in \fImessage\fP is replaced by
.\"O the number of the window to which a bell has been sent,
.\"O and each occurrence of `^G' is replaced by the definition for bell
.\"O in your termcap (usually an audible bell).
.\"O The default message is
ベル文字がバックグラウンドのウィンドウに送られると、
.I screen
はメッセージ行に通知を出す。この通知メッセージは、
このコマンドによって再定義できる。\fImessage\fP に `%' があると、
それらはベルを受け取ったウィンドウの番号に置換される。
また `^G' は termcap で定義されているベル文字
(通常は音声ベル) に置換される。デフォルトのメッセージは次の通り：
.sp
	'Bell in window %n'
.sp
.\"O An empty message can be supplied to the \*Qbell_msg\*U command to suppress
.\"O output of a message line (bell_msg "").
.\"O Without parameter, the current message is shown.
\*Qbell_msg\*U コマンドには空のメッセージを与えることもでき、
その場合メッセージ行の出力はされなくなる (bell_msg "")。
パラメータを与えないと、現在のメッセージが表示される。
.sp
.ne 3
.BI "bind "
.RB [ -c
.IR class ]
.I key 
.RI [ command " [" args ]]
.PP
.\"O Bind a command to a key.
.\"O By default, most of the commands provided by
.\"O .I screen
.\"O are bound to one or more keys as indicated in the \*QDEFAULT KEY BINDINGS\*U
.\"O section, e.\|g. the
.\"O command to create a new window is bound to \*QC-c\*U and \*Qc\*U.
.\"O The \*Qbind\*U command can be used to redefine the key bindings and to
.\"O define new bindings.
.\"O The \fIkey\fP argument is either a single character, a two-character sequence
.\"O of the form \*Q^x\*U (meaning \*QC-x\*U), a backslash followed by an octal
.\"O number (specifying the ASCII code of the character), or a backslash followed
.\"O by a second character, such as \*Q\e^\*U or \*Q\e\e\*U.
.\"O The argument can also be quoted, if you like.
.\"O If no further argument is given, any previously established binding
.\"O for this key is removed.
.\"O The \fIcommand\fP argument can be any command listed in this section.
コマンドをキーに割り当てる。
デフォルトでは、
.I screen
に用意されているほとんどのコマンドは
1 つないし複数のキーに割り当てられており、これらは
『デフォルトのキー割り当て』のセクションに示されている。
例えば新しいウィンドウを生成するコマンドは \*QC-c\*U と
\*Qc\*U とに割り当てられている。
\*Qbind\*U コマンドを用いると、キー割り当てを再定義したり、
新しい割り当てを定義したりできる。
引き数 \fIkey\fP には、文字 1 つ、\*Q^x\*U 形式(\*QC-x\*U の意味)の 2 文字
からなるシーケンス、バックスラッシュの後に 8 進数を続けたもの (文字の 
ASCII コードを示す)、バックスラッシュの後に 2 番目の文字を続けたもの
(\*Q\e^\*U や \*Q\e\e\*U 等) のいずれかを与える。
引き数はクォートしてもよい。
\fIkey\fP 以外の引き数が与えられなかった場合は、
以前にこのキーに対して与えられた割り当てが削除される。
\fIcommand\fP 引き数には、このセクションにリストされている
任意のコマンドを指定できる。
.PP
.\"O If a command class is specified via the \*Q-c\*U option, the key
.\"O is bound for the specified class. Use the \*Qcommand\*U command
.\"O to activate a class. Command classes can be used to create multiple
.\"O command keys or multi-character bindings.
\*Q-c\*U オプションによってコマンドクラスが指定された場合には、
そのキーは指定されたクラスに割り当てられる。
クラスを有効にするには \*Qcommand\*U コマンドを用いる。
コマンドクラスは、コマンドキーを複数使いたいときや、
二文字以上のシーケンスを割り当てたい場合に利用できる。
.PP
.\"O Some examples:
指定例をいくつか示す:
.PP
.nf
	bind ' ' windows
	bind ^k
	bind k
	bind K kill
	bind ^f screen telnet foobar
	bind \e033 screen -ln -t root -h 1000 9 su
.fi
.PP
.\"O would bind the space key to the command that displays a list
.\"O of windows (so that the command usually invoked by \*QC-a C-w\*U
.\"O would also be available as \*QC-a space\*U). The next three lines
.\"O remove the default kill binding from \*QC-a C-k\*U and \*QC-a k\*U. 
.\"O \*QC-a K\*U is then bound to the kill command. Then it
.\"O binds \*QC-f\*U to the command \*Qcreate a window with a TELNET
.\"O connection to foobar\*U, and bind \*Qescape\*U to the command
.\"O that creates an non-login window with a.\|k.\|a. \*Qroot\*U in slot #9, with
.\"O a superuser shell and a scrollback buffer of 1000 lines.
これは、まずウィンドウのリスト表示のコマンドをスペースキーに割り当てる
(通常は \*QC-a C-w\*U で呼び出されるコマンドが
\*QC-a スペース\*U でも呼び出せるようになる)。
続く 3 行では、デフォルトで kill が割り当てられている
\*QC-a C-k\*U と \*QC-a k\*U の両方を無効にし、
そして \*QC-a K\*U を kill コマンドに割り当てている。
次の行は、「ウィンドウを生成してホスト foobar への TELNET 接続を行う」
コマンドを \*QC-f\*U に割り当てている。
最後の行は、別名 \*Qroot\*U を持ち、
番号が 9 で、スーパーユーザのシェルを持ち、
スクロールバック用のバッファのサイズが 1000 行であるような、
非ログインウィンドウを生成するコマンドを
エスケープキーに割り当てる。
.PP
.nf
	bind -c demo1 0 select 10
	bind -c demo1 1 select 11
	bind -c demo1 2 select 12
	bindkey "^B" command -c demo1
.fi
.PP
.\"O makes \*QC-b 0\*U select window 10, \*QC-b 1\*U window 11, etc.
\*QC-b 0\*U をウィンドウ 10 の選択、\*QC-b 1\*U をウィンドウ 11 の選択、
のようにする。
.PP
.nf
	bind -c demo2 0 select 10
	bind -c demo2 1 select 11
	bind -c demo2 2 select 12
	bind - command -c demo2
.fi
.PP
.\"O makes \*QC-a - 0\*U select window 10, \*QC-a - 1\*U window 11, etc.
\*QC-a - 0\*U をウィンドウ 10 の選択、\*QC-a - 1\*U をウィンドウ 11 の選択、
のようにする。
.sp
.ne 3
.B bindkey
.RB [ -d ]
.RB [ -m ]
.RB [ -a ]
.RB [[ -k | -t ]
.I string
.RI [ "cmd args" ]]
.PP
.\"O This command manages screen's input translation tables. Every
.\"O entry in one of the tables tells screen how to react if a certain
.\"O sequence of characters is encountered. There are three tables:
.\"O one that should contain actions programmed by the user, one for
.\"O the default actions used for terminal emulation and one for
.\"O screen's copy mode to do cursor movement. See section
.\"O \*QINPUT TRANSLATION\*U for a list of default key bindings.
このコマンドは screen の入力変換テーブルを管理する。
テーブルのどれか 1 つに含まれる各エントリは、
特定の文字シーケンスに出会ったときに行うべき応答を screen に指示する。
このようなテーブルは 3 つ存在する。
ユーザがプログラムした動作を含むテーブル、
端末エミュレーションで使われるデフォルトの動作を含むテーブル、
screen のコピーモードでカーソル移動を行うためのテーブル、
である。デフォルトのキー割り当てのリストは、
『入力の変換』のセクションを参照すること。
.\"O .br
.PP
.\"O If the
.\"O .B -d
.\"O option is given, bindkey modifies the default table,
.\"O .B -m
.\"O changes the copy mode table
.\"O and with neither option the user table is selected.
.\"O The argument
.\"O .I string
.\"O is the sequence of characters to which an action is bound. This
.\"O can either be a fixed string or a termcap keyboard capability
.\"O name (selectable with the
.\"O .B -k
.\"O option).
.B -d
オプションを与えると bindkey はデフォルトのテーブルを変更し、
.B -m
オプションはコピーモードのテーブルを変更し、
どちらのオプションも与えないとユーザテーブルが選択される。
引き数
.I string
は動作を割り当てる文字シーケンスである。これは固定の文字列でもよいし、
termcap のキーボード機能名でもよい
.RB ( -k
オプションで選択できる)。
.\"O .br
.PP
.\"O Some keys on a VT100 terminal can send a different
.\"O string if application mode is turned on (e.g the cursor keys).
.\"O Such keys have two entries in the translation table. You can
.\"O select the application mode entry by specifying the
.\"O .B -a
.\"O option.
VT100 端末でアプリケーションモードが有効であるとき、
一部のキーは異なる文字列を送ってくることがある (例えばカーソルキー)。
このようなキーは変換テーブル中にエントリを 2 つ持つ。
アプリケーションモード時のエントリは
.B -a
オプションの指定によって選択できる。
.\"O .br
.PP
.\"O The
.\"O .B -t
.\"O option tells screen not to do inter-character timing. One cannot
.\"O turn off the timing if a termcap capability is used.
.B -t
オプションを指定すると、screen は文字間タイミング調整を行わない。
termcap の機能を使う場合には、タイミング調整を無効にはできない。
.\"O .br
.PP
.\"O .I Cmd
.\"O can be any of screen's commands with an arbitrary number of
.\"O .IR args .
.\"O If
.\"O .I cmd
.\"O is omitted the key-binding is removed from the table.
.I cmd
には任意の screen のコマンドと、これに対する任意の数の引き数
.I args
を指定できる。
.I cmd
が省略された場合は、そのキー割り当てがテーブルから削除される。
.\"O .br
.PP
.\"O Here are some examples of keyboard bindings:
以下にキーボード割り当ての例をいくつか示す:
.sp
.nf
        bindkey -d
.fi
.\"O Show all of the default key bindings. The application mode entries
.\"O are marked with [A].
.sp
デフォルトのキー割当をすべて表示する。
アプリケーションモードのエントリには [A] が付く。
.sp
.nf
        bindkey -k k1 select 1
.fi
.\"O Make the "F1" key switch to window one.
.sp
"F1" キーでウィンドウ 1 に切り替わるようにする。
.sp
.nf
        bindkey -t foo stuff barfoo
.fi
.\"O Make "foo" an abbreviation of the word "barfoo". Timeout is disabled
.\"O so that users can type slowly.
.sp
"foo" を単語 "barfoo" の省略形とする。
タイムアウトを無効にしてあるので、ユーザがゆっくり入力できる。
.sp
.nf
        bindkey "\e024" mapdefault
.fi
.\"O This key-binding makes \*Q^T\*U an escape character for key-bindings. If
.\"O you did the above \*Qstuff barfoo\*U binding, you can enter the word
.\"O \*Qfoo\*U by typing \*Q^Tfoo\*U. If you want to insert a \*Q^T\*U
.\"O you have to press the key twice (i.e. escape the escape binding).
.sp
このキー割り当ては、\*Q^T\*U をキー割り当て用のエスケープ文字にする。
先程挙げた \*Qstuff barfoo\*U  の設定がされている場合、
\*Q^Tfoo\*U とタイプすれば単語 \*Qfoo\*U が入力できる。
\*Q^T\*U を挿入したい場合には、このキーを 2 回押す必要がある
(つまりエスケープの割り当てをエスケープする)。
.sp
.nf
        bindkey -k F1 command
.fi
.\"O Make the F11 (not F1!) key an alternative screen
.\"O escape (besides ^A).
.sp
F11 (F1 ではない!) キーにも screen のエスケープ機能
(^A と同じもの) を与える。
.sp
.ne 3
.B break
.RI [ duration ]
.PP
.\"O Send a break signal for \fIduration\fP*0.25 seconds to this window.
.\"O For non-Posix systems the time interval may be rounded up to full seconds.
.\"O Most useful if a character device is attached to the window rather than 
.\"O a shell process (See also chapter \*QWINDOW TYPES\*U). The maximum duration of
.\"O a break signal is limited to 15 seconds.
このウィンドウにブレーク信号を \fIduration\fP*0.25 秒間送る。
非 Posix システムでは送信時間は 1 秒単位に丸められる。
シェルプロセスの場合よりは、
キャラクタ型デバイスがウィンドウにアタッチされている場合に非常に役に立つ
(『ウィンドウの種類』の章も参照のこと)。ブレーク信号の最大継続時間は
15 秒に制限されている。
.sp
.ne 3
.B blanker
.PP
.\"O Activate the screen blanker. First the screen is cleared. If no blanker
.\"O program is defined, the cursor is turned off, otherwise, the 
.\"O program is started and it's output is written to the screen.
.\"O The screen blanker is killed with the first keypress, the read key
.\"O is discarded.
画面のブランク機能を有効にする。まず最初に画面はクリアされる。
ブランク用のプログラムが定義されていない場合は、カーソルも消える。
定義されている場合はそのプログラムが起動され、出力が画面に書き出される。
画面ブランク機能は、何かのキーが押された段階で終了し、
そのとき読み込んだキー入力は捨てられる。
.br
.\"O This command is normally used together with the \*Qidle\*U command.
このコマンドは通常 \*Qidle\*U コマンドと共に用いられる。
.sp
.ne 3
.B blankerprg
.RI [ "program args" ]
.PP
.\"O Defines a blanker program. Disables the blanker program if no
.\"O arguments are given.
ブランク機能用のプログラムを定義する。
引き数を与えないと、ブランク用のプログラムを無効にする。
.sp
.ne 3
.B breaktype
.RI [ tcsendbreak | TIOCSBRK
.RI | TCSBRK ]
.PP
.\"O Choose one of the available methods of generating a break signal for
.\"O terminal devices. This command should affect the current window only.
.\"O But it still behaves identical to \*Qdefbreaktype\*U. This will be changed in
.\"O the future.
.\"O Calling \*Qbreaktype\*U with no parameter displays the break method for the
.\"O current window.
端末デバイスに対してブレーク信号を生成する方法を、可能なものの中から選ぶ。
このコマンドは現在のウィンドウにのみ影響するべきだが、
現在は \*Qdefbreaktype\*U と同じように振舞う。
これは将来は変更される予定である。
\*Qbreaktype\*U をパラメータ無しで呼ぶと、現在のウィンドウにおける
ブレーク信号の発生方法を表示する。
.sp
.ne 3
.B bufferfile
.RI [ exchange-file ]
.PP
.\"O Change the filename used for reading and writing with the paste buffer.
.\"O If the optional argument to the \*Qbufferfile\*U command is omitted, 
.\"O the default setting (\*Q/tmp/screen-exchange\*U) is reactivated.
.\"O The following example will paste the system's password file into 
.\"O the
.\"O .I screen
.\"O window (using the paste buffer, where a copy remains):
ペーストバッファを使った読み書きに使うファイル名を変更する。
\*Qbufferfile\*U コマンドへの引き数を省略した場合には、
デフォルトの設定 (\*Q/tmp/screen-exchange\*U) が再び使われるようになる。
以下の例は、システムのパスワードファイルを
.I screen
のウィンドウにペーストするものである
(ペーストバッファを使う。ここにはコピーが残る):
.PP
.nf
	C-a : bufferfile /etc/passwd
	C-a < C-a ]
	C-a : bufferfile
.fi
.sp
.ne 3
.BR "c1 " [ on | off ]
.PP
.\"O Change c1 code processing. \*QC1 on\*U tells screen to treat
.\"O the input characters between 128 and 159 as control functions.
.\"O Such an 8-bit code is normally the same as ESC followed by the
.\"O corresponding 7-bit code. The default setting is to process c1
.\"O codes and can be changed with the \*Qdefc1\*U command. 
.\"O Users with fonts that have usable characters in the
.\"O c1 positions may want to turn this off.
c1 コードの処理を変更する。\*Qc1 on\*U を指定すると、
screen は 128 から 159 までの入力文字を制御機能として扱う。
このような 8 ビットコードは、通常は ESC の後に対応する
7 ビットコードを続けたものと同じ意味になる。
デフォルトの設定では c1 コードを処理する。これは \*Qdefc1\*U
コマンドで変更できる。
c1 領域に利用可能な文字があるフォントを使っているユーザは、
このオプションを off にするとよい。
.sp
.ne 3
.BR "caption always" | splitonly
.RI [ string ]
.br
.B "caption string"
.RI [ string ]
.PP
.\"O This command controls the display of the window captions. Normally
.\"O a caption is only used if more than one window is shown on the
.\"O display (split screen mode). But if the type is set to
.\"O .B always
.\"O screen shows a caption even if only one window is displayed. The default
.\"O is
.\"O .BR splitonly .
このコマンドはウィンドウのキャプションの表示を制御する。
.\"nakano caption にはなにか訳語を当てる？
通常キャプションはディスプレイに複数のウィンドウが現れたときにのみ
用いられるが、ここの属性を
.B always
に設定すると、ひとつしかウィンドウがないときでも
screen はキャプションを表示する。デフォルトの設定は
.B splitonly
である。
.P
.\"O The second form changes the text used for the caption. You can use
.\"O all escapes from the \*QSTRING ESCAPES\*U chapter. Screen uses
.\"O a default of `%3n %t'.
二番目の形式はキャプションに用いられるテキストを変更する。
\*Q文字エスケープ\*U の章にあるすべてのエスケープが利用できる。
screen がデフォルトで用いるのは `%3n %t' である。
.P
.\"O You can mix both forms by providing a string as an additional argument.
文字列を追加引数として、両方の形式を混ぜることもできる。
.sp
.ne 3
.BI "charset " set
.PP
.\"O Change the current character set slot designation and charset
.\"O mapping.  The first four character of
.\"O .I set
.\"O are treated as charset designators while the fifth and sixth
.\"O character must be in range '0' to '3' and set the GL/GR charset
.\"O mapping. On every position a '.' may be used to indicate that
.\"O the corresponding charset/mapping should not be changed
.\"O (\fIset\fP is padded to six characters internally by appending '.'
.\"O chars). New windows have "BBBB02" as default charset, unless a
.\"O \*Qencoding\*U command is active.
文字セットのスロット指定と文字セットのマッピングを変更する。
.\"nakano "slot" には良い訳がないかなあ。
.I set
の先頭 4 文字は、文字セット指定として扱われる。
5-6 番目の文字は 0 から 3 までの値を取り、GL/GR 文字セットの
マッピングを指定する。すべての位置には '.' を置くことができ、
その場合は現在の文字セット/マッピングを変更しない
(\fIset\fP が 6 文字に満たない場合は、内部で '.' を追加する)。
新しいウィンドウのデフォルトの文字セットは、
\*Qencoding\*U コマンドが有効になっていなければ "BBBB02" になる。
.\"O .br
.P
.\"O The current setting can be viewed with the \*Qinfo\*U command.
現在の設定は \*Qinfo\*U コマンドで閲覧できる。
.sp
.ne 3
.B chdir
.RI [ directory ]
.PP
.\"O Change the \fIcurrent directory\fP of
.\"O .I screen
.\"O to the specified directory or, if called without an argument,
.\"O to your home directory (the value of the environment variable $HOME).
.\"O All windows that are created by means of the \*Qscreen\*U command
.\"O from within \*Q.screenrc\*U or by means of \*QC-a : screen ...\*U
.\"O or \*QC-a c\*U use this as their default directory.
.\"O Without a chdir command, this would be the directory from which
.\"O .I screen
.\"O was invoked.
.\"O Hardcopy and log files are always written to the \fIwindow's\fP default
.\"O directory, \fInot\fP the current directory of the process running in the
.\"O window.
.\"O You can use this command multiple times in your .screenrc to start various
.\"O windows in different default directories, but the last chdir value will
.\"O affect all the windows you create interactively.
.I screen
のカレントディレクトリを指定されたディレクトリに変更する。
引き数なしで呼ばれた場合には、カレントディレクトリをホームディレクトリ
(環境変数 $HOME の値) にする。
\*Q.screenrc\*U 内部の \*Qscreen\*U コマンド、
\*QC-a : screen ...\*U、
\*QC-a c\*U のいずれかによって新しく生成されるウィンドウは、
これをデフォルトのディレクトリとして使用する。
chdir コマンドを使わないと、デフォルトのディレクトリは
.I screen
が起動されたディレクトリになる。
ハードコピーとログファイルが書き出されるのは、
常に「そのウィンドウの」デフォルトディレクトリであり、
ウィンドウ内で動作しているプロセスのカレントディレクトリではない。
このコマンドを .screenrc 内で複数回用いれば、
別々のデフォルトディレクトリでウィンドウをいくつも起動することができるが、
ユーザが対話的に生成したすべてのウィンドウは、最後の chdir の値の影響を受ける。
.sp
.ne 3
.B clear
.PP
.\"O Clears the current window and saves its image to the scrollback buffer.
現在のウィンドウをクリアし、そのイメージをスクロールバックバッファに格納する。
.sp
.ne 3
.B colon
.RI [ prefix ]
.PP
.\"O Allows you to enter \*Q.screenrc\*U command lines. Useful 
.\"O for on-the-fly modification of key bindings, 
.\"O specific window creation and changing settings. Note that the \*Qset\*U
.\"O keyword no longer exists! Usually commands affect the current window rather 
.\"O than default settings for future windows. Change defaults with commands
.\"O starting with 'def...'. 
\*Q.screenrc\*U のコマンドラインを入力できるようにする。
screen の動作中にキー割り当てを変えたり、
特定のウィンドウの生成・設定の変更などに便利である。
なお \*Qset\*U キーワードは無くなってしまった。
コマンドは通常現在のウィンドウに影響し、将来生成されるウィンドウの
デフォルト設定にはならない。
デフォルトを変更するには 'def...' で始まるコマンド群を用いること。
.PP
.\"O If you consider this as the `Ex command mode' of 
.\"O .IR screen ,
.\"O you may regard \*QC-a esc\*U (copy mode) as its `Vi command mode'.
これを
.I screen 
の「Ex コマンドモード」とするなら、
\*QC-a esc\*U (コピーモード) は
「Vi コマンドモード」と言えるだろう。
.sp 
.ne 3
.B command
.RB [ -c
.IR class ]
.PP
.\"O This command has the same effect as typing the screen escape
.\"O character (^A). It is probably only useful for key bindings.
.\"O If the \*Q-c\*U option is given, select the specified command
.\"O class.  See also \*Qbind\*U and \*Qbindkey\*U.
このコマンドは screen のエスケープ文字
(^A) を打ち込んだ場合と同じ動作を行う。
これが役に立つのはキー割り当ての場合だけだろう。
\*Q-c\*U オプションが与えられると、指定したコマンドクラスを選択する。
\*Qbind\*U と \*Qbindkey\*U も参照すること。
.sp 
.ne 3
.BR "compacthist " [ on | off ]
.PP
.\"O This tells screen whether to suppress trailing blank lines when
.\"O scrolling up text into the history buffer.
テキストをヒストリバッファの領域へスクロールアップするときに、
末尾の空行の出力を抑制するかどうか指定する。
.sp 
.ne 3
.BR "console " [ on | off ]
.PP
.\"O Grabs or un-grabs the machines console output to a window.
マシンコンソールのウィンドウへの出力をグラブまたはアングラブする。
.\"O .IR Note :
.\"O Only the owner of /dev/console can grab the console output.
.\"O This command is only available if the machine supports the ioctl TIOCCONS.
.IR 注意 :
コンソール出力をグラブできるのは /dev/console の所有者だけである。
このコマンドは、ioctl TIOCCONS をサポートしているマシンでしか使えない。
.sp
.ne 3
.B copy
.PP
.\"O Enter copy/scrollback mode. This allows you to copy text from the current
.\"O window and its history into the paste buffer. In this mode a vi-like
.\"O `full screen editor' is active:
コピー/スクロールバックモードに入る。
ここでは、現在のウィンドウおよびその履歴から、
テキストをペーストバッファへとコピーできる。
このモードでは、vi に似た「フルスクリーンエディタ」がアクティブになる:
.\"O .br
.sp
.\"O .IR "Movement keys" :
.IR 移動キー :
.br
.in +4n
.ti -2n
.\"O \fBh\fP, \fBj\fP, \fBk\fP, \fBl\fP move the cursor line by line or 
.\"O column by column.
\fBh\fP, \fBj\fP, \fBk\fP, \fBl\fP は、
カーソルを上下左右に移動する。
.br
.ti -2n
.\"O \fB0\fP, \fB^\fP and \fB$\fP move to the leftmost column, to the first or last
.\"O non-whitespace character on the line.
\fB0\fP, \fB^\fP, \fB$\fP は、行の内部で、
先頭・空白でない最初の文字・空白でない最後の文字、
へとカーソルを移動する。
.br
.ti -2n
.\"O \fBH\fP, \fBM\fP and \fBL\fP move the cursor to the leftmost column
.\"O of the top, center or bottom line of the window. 
\fBH\fP, \fBM\fP, \fBL\fP は、カーソルをウィンドウの最上行・中央・
最下行の、それぞれ先頭に移動する。
.br
.ti -2n
.\"O \fB+\fP and \fB\-\fP positions one line up and down.
\fB+\fP および \fB\-\fP は、位置を 1 行上・1 行下へ移動する。
.br
.ti -2n
.\"O \fBG\fP moves to the specified absolute line (default: end of buffer).
\fBG\fP は指定された絶対行へ移動する (デフォルト値はバッファの末尾)。
.br 
.ti -2n
.\"O \fB|\fP moves to the specified absolute column.
\fB|\fP は指定された絶対桁へ移動する。
.br
.ti -2n
.\"O \fBw\fP, \fBb\fP, \fBe\fP move the cursor word by word.
\fBw\fP, \fBb\fP, \fBe\fP は、カーソルを単語単位で移動させる。
.br 
.ti -2n
.\"O \fBB\fP, \fBE\fP move the cursor WORD by WORD (as in vi).
\fBB\fP と \fBE\fP は、カーソルを「単語」単位で移動させる (vi と同様)。
.br 
.ti -2n
.\"O \fBC-u\fP and \fBC-d\fP scroll the display up/down by the specified amount of 
.\"O lines while preserving the cursor position. (Default: half screen-full). 
\fBC-u\fP と \fBC-d\fP は、指定された行数だけ画面を上下にスクロールさせる。
この際にカーソル位置は変わらない (デフォルト値は全画面の半分)。
.br
.ti -2n
.\"O \fBC-b\fP and \fBC-f\fP scroll the display up/down a full screen.
\fBC-b\fP と \fBC-f\fP は、画面を 1 画面分スクロールアップ・ダウンさせる。
.br
.ti -2n
.\"O \fBg\fP moves to the beginning of the buffer.
\fBg\fP はバッファの先頭へ移動する。
.br
.ti -2n
.\"O \fB%\fP jumps to the specified percentage of the buffer.
\fB%\fP は、バッファ中の指定したパーセンテージの位置へジャンプする。
.br
.ti -4n

.\"O .IR Note :
.IR 注意 :
.br
.\"O Emacs style movement keys can be customized by a .screenrc command.
.\"O (E.\|g. markkeys "h=^B:l=^F:$=^E") There is no simple method for a full 
.\"O emacs-style keymap, as this involves multi-character codes.
\&.screenrc のコマンドを使って
Emacs 形式の移動をさせるようなカスタマイズも できる
(例: markkeys "h=^B:l=^F:$=^E")。ただし、
完全な Emacs 形式のキーマップには複数個の文字からなるコードが含まれているが、
これを簡単に実現することはできない。
.\"O
.\"O .br
.sp
.ti -4n
.\"O .IR Marking :
.IR マーキング :
.br
.\"O The copy range is specified by setting two marks. The text between these marks 
.\"O will be highlighted. Press 
コピー領域は、2 つのマークを設定することによって指定する。
これらのマークの間のテキストはハイライト表示される。
.br
.ti -2n
.\"O \fBspace\fP to set the first or second mark
.\"O respectively.
\fBスペースキー\fPを押すと、1 番目・2 番目のマークが設定される。
.br
.ti -2n
.\"O \fBY\fP and \fBy\fP used to mark one whole line or to mark from 
.\"O start of line.
\fBY\fP を押すと 1 行全体が、
\fBy\fP を押すと行頭から現在の位置までがマークされる。
.br
.ti -2n
.\"O \fBW\fP marks exactly one word. 
\fBW\fP は 1 単語をマークする。
.\"O .br 
.sp
.ti -4n
.\"O .IR "Repeat count" :
.IR 繰り返し回数 :
.br
.\"O Any of these commands can be prefixed with a repeat count number by pressing 
.\"O digits 
以上のコマンドはすべて、数字キーによって繰り返し回数を指定できる。
.br
.ti -2n
.\"O \fB0\fP..\fB9\fP which
.\"O is taken as a repeat count. 
\fB0\fP..\fB9\fP は繰り返し回数として扱われる。
.br
.\"O Example: \*QC-a C-[ H 10 j 5 Y\*U will copy lines
.\"O 11 to 15 into the paste buffer.
例: \*QC-a C-[ H 10 j 5 Y\*U は、
11 行目から 15 行目までをペーストバッファにコピーする。
.\"O .br
.sp
.ti -4n
.\"O .IR Searching :
.IR 検索 :
.ti -2n
.\"O \fB/\fP \fIVi\fP-like search forward.
\fB/\fP は \fIVi\fP と同様の検索コマンドである。
.ti -2n
.\"O \fB?\fP \fIVi\fP-like search backward.
\fB?\fP は \fIVi\fP と同様の検索コマンドである。
.ti -2n 
.\"O \fBC-a s\fP \fIEmacs\fP style incremental search forward.
\fBC-a s\fP は \fIEmacs\fP 形式の前方へのインクリメンタル検索である。
.\"O .ti -2n
.\"O \fBC-r\fP \fIEmacs\fP style reverse i-search.
\fBC-r\fP は \fIEmacs\fP 形式の後方へのインクリメンタル検索である。
.ti -4n
.sp
.\"O .IR Specials :
.IR 特殊コマンド :
.\"O There are however some keys that act differently than in
.\"O .IR vi .
.\"O .I Vi
.\"O does not allow one to yank rectangular blocks of text, but
.\"O .I screen
.\"O does. Press 
一部のキーは
.I vi
とは異なる動作をする。
.I vi
ではテキストの矩形ブロックのヤンクを行えないが、
.I screen
ではできる。
.sp
.ti -2n
.\"O \fBc\fP or \fBC\fP to set the left or right margin respectively. If no repeat count is
.\"O given, both default to the current cursor position. 
\fBc\fP や \fBC\fP キーを押して、左端と右端をそれぞれ設定する。
繰り返し回数を与えないと、どちらもデフォルトでは現在のカーソル位置となる。
.\"O .br
.sp
.\"O Example: Try this on a rather full text screen: 
.\"O \*QC-a [ M 20 l SPACE c 10 l 5 j C SPACE\*U.
例: 以下のコマンドをテキスト画面全体で試してみよ:
\*QC-a [ M 20 l SPACE c 10 l 5 j C SPACE\*U
.sp
.\"O This moves one to the middle line of the screen, moves in 20 columns left,
.\"O marks the beginning of the paste buffer, sets the left column, moves 5 columns
.\"O down, sets the right column, and then marks the end of
.\"O the paste buffer. Now try:
これにより、カーソルはスクリーンの中央の行に移動し、
そこから 20 桁左に移動し、ペーストバッファの最初のマークを行い、
左端の設定を行い、5 桁右に移動し、右端を設定し、
最後にペーストバッファの終わりのマークを行う。
以下のコマンドを試し、コピーされるテキスト量の違いを見ること:
.\"O .br
.sp
\*QC-a [ M 20 l SPACE 10 l 5 j SPACE\*U
.\"O 
.\"O and notice the difference in the amount of text copied.
.sp
.ti -2n
.\"O \fBJ\fP joins lines. It toggles between 4 modes: lines separated by a
.\"O newline character (012), lines glued seamless, lines separated by a single
.\"O whitespace and comma separated lines. Note that you can prepend the newline
.\"O character with a carriage return character, by issuing a \*Qcrlf on\*U.
\fBJ\fP は行を連結する。これは 4 つのモードのトグルとなる。
それぞれのモードは、改行文字 (012) が行区切り、行区切りなし、
行区切りが空白、行区切りがカンマ、である。
なお \*Qcrlf on\*U を実行すると、改行文字の前に復帰文字を置ける。
.\"O .br
.sp
.ti -2n
.\"O \fBv\fP is for all the
.\"O .I vi 
.\"O users with \*Q:set numbers\*U \- it toggles the left margin between column 9
.\"O and 1. Press 
\fBv\fP は \*Q:set numbers\*U を使っている
.I vi
ユーザ向けのものである。すなわち、左マージンを
9 桁目と 1 桁目との間でトグルする。
.\"O .br
.sp
.ti -2n
.\"O \fBa\fP before the final space key to toggle in append mode. Thus
.\"O the contents of the paste buffer will not be overwritten, but is appended to.
\fBa\fP を二番目のスペースの前に押すと、追加モードに切り替わる。
こうするとペーストバッファの内容を上書きせず、追加する。
.\"O .br
.sp
.ti -2n
.\"O \fBA\fP toggles in append mode and sets a (second) mark.
\fBA\fP は追加モードへの切り替えを行い、(2 番目の) マークを設定する。
.\"O .br
.sp
.ti -2n
.\"O \fB>\fP sets the (second) mark and writes the contents of the paste buffer to
.\"O the screen-exchange file (/tmp/screen-exchange per default) once copy-mode is 
.\"O finished. 
\fB>\fP は (2 番目の) マークをセットし、
コピーモードが終了した時にペーストバッファの内容を画面交換ファイル
(デフォルトでは /tmp/screen-exchange) に書き出す。
.br
.\"O This example demonstrates how to dump the whole scrollback buffer 
.\"O to that file: \*QC-A [ g SPACE G $ >\*U.
次の例は、スクロールバックバッファ全体を
このファイルにダンプする方法を示したものである:
\*QC-A [ g SPACE G $ >\*U
.\"O .br
.sp
.ti -2n
.\"O \fBC-g\fP gives information about the current line and column.
\fBC-g\fP は現在の行と桁に関する情報を与える。
.\"O .br
.sp
.ti -2n
.\"O \fBx\fP exchanges the first mark and the current cursor position. You
.\"O can use this to adjust an already placed mark.
\fBx\fP は最初のマークと現在のカーソル位置を交換する。
これを用いると、既に配置したマークを調整できる。
.\"O .br
.sp
.ti -2n
.\"O \fB@\fP does nothing. Does not even exit copy mode.
\fB@\fP は何もしない。コピーモードの終了も行わない。
.\"O .br
.sp
.ti -2n
.\"O All keys not described here exit copy mode.
ここで説明していないすべてのキーは、コピーモードを終了させる。
.in -4n
.sp
.ne 3
.B copy_reg
.RI [ key ]
.PP
.\"O No longer exists, use \*Qreadreg\*U instead.
もう無い。代わりに \*Qreadreg\*U を使うこと。
.sp
.ne 3
.BR "crlf " [ on | off ]
.PP
.\"O This affects the copying of text regions with the `C-a [' command. If it is set
.\"O to `on', lines will be separated by the two character sequence `CR' - `LF'. 
.\"O Otherwise (default) only `LF' is used.
.\"O When no parameter is given, the state is toggled.
`C-a [' コマンドを用いたテキスト領域のコピーに影響を与える。
これを `on' に設定すると、各行は 2 文字からなるシーケンス `CR' - `LF'
によって分割される。`off' だと `LF' だけが使われる。
.sp
.ne 3
.BR "debug on" | off
.PP
.\"O Turns runtime debugging on or off. If 
.\"O .I screen
.\"O has been compiled with option -DDEBUG debugging available and is turned on per 
.\"O default. Note that this command only affects debugging output from the main 
.\"O \*QSCREEN\*U process correctly. Debug output from attacher processes can only
.\"O be turned off once and forever.
実行時デバッグのオン/オフを行う。
.I screen
にオプション -DDEBUG を付けてコンパイルするとデバッグが使えるようになり、
デフォルトでオンになる。このコマンドが影響を与えるのは、
メインの \*QSCREEN\*U のプロセスからのデバッグ出力だけである。
アタッチしたプロセスのデバッグ出力は、
一度無効にすると再度有効にすることはできない。
.\"nakano attacher process はこれで良いか？
.sp
.ne 3
.BR "defc1 on" | off
.PP
.\"O Same as the \fBc1\fP command except that the default setting for new
.\"O windows is changed. Initial setting is `on'.
\fBc1\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
初期設定は `on' である。
.sp
.ne 3
.BR "defautonuke on" | off
.PP
.\"O Same as the \fBautonuke\fP command except that the default setting for new displays is changed. Initial setting is `off'.
.\"O Note that you can use the special `AN' terminal capability if you
.\"O want to have a dependency on the terminal type.
\fBautonuke\fP コマンドとほぼ同じであるが、
新しいディスプレイに対するデフォルト設定を変える点が異なる。
初期設定は `off' である。
端末のタイプに対する依存性を持たせたい場合は、
特殊な端末機能である `AN' を用いると良い。
.sp
.ne 3
.BR "defbce on" | off
.PP
.\"O Same as the \fBbce\fP command except that the default setting for new
.\"O windows is changed. Initial setting is `off'.
\fBbce\fP コマンドとほぼ同じであるが、
新しいディスプレイに対するデフォルト設定を変える点が異なる。
初期設定は `off' である。
.sp
.ne 3
.B defbreaktype
.\"O .RI [ tcsendbreak | TIOCSBRK
.\"O .RI | TCSBRK ]
..RI [ tcsendbreak | TIOCSBRK | TCSBRK ]
.PP
.\"O Choose one of the available methods of generating a break signal for
.\"O terminal devices. The preferred methods are 
.\"O .IR tcsendbreak " and " TIOCSBRK .
.\"O The third, 
.\"O .IR TCSBRK , 
.\"O blocks the complete 
.\"O .I screen
.\"O session for the duration
.\"O of the break, but it may be the only way to generate long breaks. 
.\"O .IR Tcsendbreak " and " TIOCSBRK
.\"O may or may not produce long breaks with spikes (e.g. 4 per
.\"O second). This is not only system dependant, this also differs between
.\"O serial board drivers.
.\"O Calling \*Qdefbreaktype\*U with no parameter displays the current setting.
端末デバイスに対してブレーク信号を生成する方法を、可能なものの中から選ぶ。
.IR tcsendbreak " および " TIOCSBRK
にすることを勧める。三番目の
.I TCSBRK
は、ブレークの間
.I screen
セッションを完全にブロックしてしまうが、
長いブレークを発生させるにはこれしかないこともある。
.IR tcsendbreak " や " TIOCSBRK
では、長いブレークの際にスパイクが出てしまう (例えば毎秒 4 回など)
ことがある (そうでないこともある)。これはシステムに依存するだけでなく、
シリアルボードドライバによっても異なる。
\*Qdefbreaktype\*U をパラメータ無しで呼ぶと、
現在の設定を表示する。
.sp
.ne 3
.BR "defcharset " [ \fIset ]
.PP
.\"O Like the \fBcharset\fP command except that the default setting for
.\"O new windows is changed. Shows current default if called without
.\"O argument.
\fBcharset\fP コマンドと似ているが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
引き数なしで呼び出された場合には、現在のデフォルト値を表示する。
.sp
.ne 3
.BI "defescape " xy
.PP
.\"O Set the default command characters. This is equivalent to the 
.\"O \*Qescape\*U except that it is useful multiuser sessions only. In a
.\"O multiuser session \*Qescape\*U changes the command character of the
.\"O calling user, where \*Qdefescape\*U changes the default command
.\"O characters for users that will be added later.
デフォルトのコマンド文字を設定する。
これは \*Qescape\*U とほぼ同じであるが、
マルチユーザのセッションでしか役に立たない点が異なる。
マルチユーザセッションでは、\*Qescape\*U
は呼び出したユーザのコマンド文字を変更する。
一方 \*Qdefescape\*U は、
これ以後に追加されるユーザのコマンド文字列のデフォルト値を変更する。
.sp
.ne 3
.BR "defflow on" | off | auto 
.RB [ interrupt ]
.PP
.\"O Same as the \fBflow\fP command except that the default setting for new windows 
.\"O is changed. Initial setting is `auto'.
.\"O Specifying \*Qdefflow auto interrupt\*U is the same as the command-line options
.\"O .B \-fa
.\"O and
.\"O .BR \-i . 
\fBflow\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
初期設定は `auto' である。
\*Qdefflow auto interrupt\*U と指定すると、
コマンドラインオプションに
.BR \-fa " と " \-i
とを与えた場合と同じになる。
.sp
.ne 3
.BR "defgr on" | off
.PP
.\"O Same as the \fBgr\fP command except that the default setting for new
.\"O windows is changed. Initial setting is `off'.
\fBgr\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
初期設定は `off' である。
.sp
.ne 3
.BR "defhstatus " [ \fIstatus ]
.PP
.\"O The hardstatus line that all new windows will get is set to
.\"O .I status\fR.
.\"O This command is useful to make the hardstatus of every window
.\"O display the window number or title or the like.
.\"O .I Status
.\"O may contain the same directives as in the window messages, but
.\"O the directive escape character is '^E' (octal 005) instead of '%'.
.\"O This was done to make a misinterpretation of program generated
.\"O hardstatus lines impossible.
.\"O If the parameter
.\"O .I status
.\"O is omitted, the current default string is displayed.
.\"O Per default the hardstatus line of new windows is empty.
以降作られる新しいウィンドウのハードステータス行を
.I status
にする。このコマンドは、すべてのウィンドウのハードステータス行に、
ウィンドウ番号やタイトル等を表示させるのに便利である。
.I status
にはウィンドウメッセージの場合と同様の指定機能が利用できるが、
このエスケープ文字は '%' ではなく '^E' (8 進値で 005) である。
こうなっているのは、プログラムの生成したハードステータス行を、
間違って解釈しないようにするためである。パラメータ
.I status
を省略すると、現在のデフォルト文字列が表示される。
デフォルトでは、新しいウィンドウのハードステータス行は空である。
.sp
.ne 3
.BI "defencoding " enc
.PP
.\"O Same as the \fBencoding\fP command except that the default setting for new
.\"O windows is changed. Initial setting is the encoding taken from the
.\"O terminal.
\fBencoding\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
初期設定では、エンコーディングは端末から取得する。
.sp
.ne 3
.BR "deflog on" | off
.PP
.\"O Same as the \fBlog\fP command except that the default setting for new windows 
.\"O is changed. Initial setting is `off'.
\fBlog\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
初期設定は `off' である。
.sp
.ne 3
.BR "deflogin on" | off
.PP
.\"O Same as the \fBlogin\fP command except that the default setting for new windows 
.\"O is changed. This is initialized with `on' as distributed (see config.h.in).
\fBlogin\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
配布状態での初期設定は `on' である (config.h.in を見よ)。
.sp
.ne 3
.BI "defmode " mode
.PP
.\"O The mode of each newly allocated pseudo-tty is set to \fImode\fP.
.\"O \fIMode\fP is an octal number.
.\"O When no \*Qdefmode\*U command is given, mode 0622 is used.
新しく割り当てられる仮想 tty のモードを \fImode\fP に設定する。
\fImode\fP は 8 進数の値である。
\*Qdefmode\*U コマンドが与えられていない場合は、モード 0622 が使われる。
.sp
.ne 3
.BR "defmonitor on" | off
.PP
.\"O Same as the \fBmonitor\fP command except that the default setting for new 
.\"O windows is changed. Initial setting is `off'.
\fBmonitor\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルトの設定を変える点が異なる。
初期設定は `off' である。
.sp
.ne 3
.B defnonblock 
.BR on | off | \fInumsecs
.PP
.\"O Same as the \fBnonblock\fP command except that the default setting for
.\"O displays is changed. Initial setting is `off'.
\fBnonblock\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルトの設定を変える点が異なる。
初期設定は `off' である。
.sp
.ne 3
.BI "defobuflimit " limit
.PP
.\"O Same as the \fBobuflimit\fP command except that the default setting for new displays is changed. Initial setting is 256 bytes.
.\"O Note that you can use the special 'OL' terminal capability if you
.\"O want to have a dependency on the terminal type.
\fBobuflimit\fP コマンドとほぼ同じであるが、
新しいディスプレイに対するデフォルト設定を変える点が異なる。
初期設定は 256 バイトである。
端末の種類への依存性を持たせたい場合には、
特殊な端末機能である 'OL' が利用できる。
.sp
.ne 3
.BI "defscrollback " num
.PP
.\"O Same as the \fBscrollback\fP command except that the default setting for new 
.\"O windows is changed. Initial setting is 100.
\fBscrollback\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルトの設定を変える点が異なる。
初期設定値は 100 である。
.sp
.ne 3
.BI "defshell " command
.PP
.\"O Synonym to the \fBshell\fP command. See there.
.B shell
コマンドの同義語である。そちらを参照のこと。
.sp
.ne 3
.BR "defsilence on" | off
.PP
.\"O Same as the \fBsilence\fP command except that the default setting for new
.\"O windows is changed. Initial setting is `off'.
\fBsilence\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルトの設定を変える点が異なる。
初期設定値は `off' である。
.sp
.ne 3
.BI "defslowpaste " msec"
.PP
.\"O Same as the \fBslowpaste\fP command except that the default setting for new
.\"O windows is changed. Initial setting is 0 milliseconds, meaning `off'.
\fBslowpaste\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルトの設定を変える点が異なる。
初期設定値は 0 ミリ秒であり、これは `off' の意味になる。
.sp
.ne 3
.BR "defutf8 on" | off
.PP
.\"O Same as the \fButf8\fP command except that the default setting for new
.\"O windows is changed. Initial setting is `on' if screen was started with
.\"O \*Q-U\*U, otherwise `off'.
\fButf8\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルトの設定を変える点が異なる。
screen の起動時に \*Q-U\*U を指定した場合の初期設定値は `on' になり、
それ以外の場合の初期設定値は `off' になる。
.sp
.ne 3
.BR "defwrap on" | off
.PP
.\"O Same as the \fBwrap\fP command except that the default setting for new 
.\"O windows is changed. Initially line-wrap is on and can be toggled with the 
.\"O \*Qwrap\*U command (\*QC-a r\*U) or by means of "C-a : wrap on|off".
\fBwrap\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
初期設定では行の折り返しは有効であり、\*Qwrap\*U コマンド
(\*QC-a r\*U) や "C-a : wrap on|off" を使うとトグルできる。
.sp
.ne 3
.BR "defwritelock on" | off | auto
.PP
.\"O Same as the \fBwritelock\fP command except that the default setting for new 
.\"O windows is changed. Initially writelocks will off.
\fBwritelock\fP コマンドとほぼ同じであるが、
新しいウィンドウに対するデフォルト設定を変える点が異なる。
初期状態では、書き込みロックは無効になる。
.\"nakano will be off かな？
.sp
.ne 3
.BR "defzombie " [\fIkeys\fP]
.PP
.\"O Synonym to the \fBzombie\fP command. Both currently change the default.
.\"O See there.
\fBzombie\fP コマンドと同じである。
現在はどちらもデフォルト値を変更する。
\fBzombie\fP コマンドの説明を参照すること。
.sp
.ne 3
.B detach
.RB [ -h ]
.PP
.\"O Detach the 
.\"O .I screen
.\"O session (disconnect it from the terminal and put it into the background).
.\"O This returns you to the shell where you invoked
.\"O .IR screen .
.\"O A detached
.\"O .I screen
.\"O can be resumed by invoking
.\"O .I screen
.\"O with the
.\"O .B \-r
.\"O option (see also section \*QCOMMAND-LINE OPTIONS\*U). The
.\"O .B \-h
.\"O option tells screen to immediately close the connection to the
.\"O terminal (\*Qhangup\*U).
.I screen
のセッションをデタッチする
(セッションを端末から切り離し、バックグラウンドに回す)。
これにより、ユーザは
.I screen
を起動したシェルに戻る。デタッチされた
.I screen
は、
.B \-r
オプションを付けて
.I screen
を実行すれば復元できる (『コマンドラインオプション』を参照)。
.B \-h
オプションを指定すると、screen は直ちに端末との接続を閉じる (\*Qhangup\*U)。
.sp
.ne 3
.B dinfo
.PP
.\"O Show what screen thinks about your terminal. Useful if you want to know
.\"O why features like color or the alternate charset don't work.
screen があなたの端末について想定している内容を表示する。
色付けや文字セット指定が効かない原因を調査したい場合に便利。
.sp
.ne 3
.B displays
.PP
.\"O Shows a tabular listing of all currently connected user front-ends (displays).
.\"O This is most useful for multiuser sessions.
現在接続されているユーザのフロントエンド (ディスプレイ) を表にして示す。
これはマルチユーザセッションにおいて特に便利。
.sp
.ne 3
.BR "digraph " [ \fIpreset ]
.PP
.\"O This command prompts the user for a digraph sequence. The next
.\"O two characters typed are looked up in a builtin table and the
.\"O resulting character is inserted in the input stream. For example,
.\"O if the user enters 'a"', an a-umlaut will be inserted. If the
.\"O first character entered is a 0 (zero),
.\"O .I screen
.\"O will treat the following characters (up to three) as an octal
.\"O number instead.  The optional argument
.\"O .I preset
.\"O is treated as user input, thus one can create an \*Qumlaut\*U key.
.\"O For example the command "bindkey ^K digraph '"'" enables the user
.\"O to generate an a-umlaut by typing CTRL-K a.
このコマンドはユーザに二重字 (digraph sequence) を入力させる。
この次に入力された 2 文字は、組み込みのテーブルで検索され、
得られた文字が入力ストリームに挿入される。
例えばユーザが 'a"' を入力すると、ウムラウト付きの a が挿入される。
最初に入力された文字が 0 (ゼロ)ならば、
.I screen
はこれに続く文字 (3 文字まで) を文字としてではなく 8 進数の値として扱う。
(省略可能な) 引き数
.I preset
はユーザの入力として扱われるので、
これを利用すると「ウムラウト」キーが作れる。
例えば "bindkey ^K digraph '"'" というコマンドを使うと、
CTRL-K a という入力によってウムラウト付きの a を生成できる。
.sp
.ne 3
.B dumptermcap
.PP
.\"O Write the termcap entry for the virtual terminal optimized for the currently
.\"O active window to the file \*Q.termcap\*U in the user's 
.\"O \*Q$HOME/.screen\*U directory (or wherever 
.\"O .I screen
.\"O stores its sockets. See the \*QFILES\*U section below).
.\"O This termcap entry is identical to the value of the environment variable
.\"O $TERMCAP that is set up by
.\"O .I screen
.\"O for each window. For terminfo based systems you will need to run a converter
.\"O like 
.\"O .IR captoinfo
.\"O and then compile the entry with 
.\"O .IR tic .
現在アクティブなウィンドウに対して最適化された
仮想端末用の termcap エントリを、
ユーザの \*Q$HOME/.screen\*U  ディレクトリ (あるいは
.I screen
がソケットを格納している場所のどこか。詳しくは後述の『ファイル』
セクションを参照) に書き出す。
この termcap エントリは、
.I screen
が各ウィンドウに対して設定する環境変数 $TERMCAP の値と同じである。
terminfo ベースのシステムでは、
.I captoinfo
のような変換プログラムを実行し、
.I tic
を使ってそのエントリをコンパイルする必要があるだろう。
.sp
.ne 3
.BR "echo " [ -n ]
.I message
.PP
.\"O The echo command may be used to annoy 
.\"O .I screen
.\"O users with a 'message of the
.\"O day'. Typically installed in a global /etc/screenrc. 
.\"O The option \*Q-n\*U may be used to suppress the line feed.
.\"O See also \*Qsleep\*U.
.\"O Echo is also useful for online checking of environment variables.
echo コマンドを使うと、「今日のメッセージ」で
.I screen
ユーザに嫌がらせができる。通常はシステムグローバルの
/etc/screenrc に設定する。
\*Q-n\*U を使うと行送りを抑制できる。\*Qsleep\*U も参照すること。
echo は環境変数をオンラインで調べる時にも便利である。
.sp
.ne 3
.BI "encoding " enc
.RI [ enc ]
.PP
.\"O Tell 
.\"O .I screen 
.\"O how to interpret the input/output. The first argument
.\"O sets the encoding of the current window. Each window can emulate
.\"O a different encoding. The optional second parameter overwrites
.\"O the encoding of the connected terminal. It should never be
.\"O needed as screen uses the locale setting to detect the encoding.
.\"O There is also a way to select a terminal encoding depending on
.\"O the terminal type by using the \*QKJ\*U termcap entry.
入出力の解釈方法を
.I screen
に伝える。最初の引き数はカレントウィンドウのエンコーディングを設定する。
各ウィンドウは別々のエンコーディングをエミュレートできる。
二番目のパラメータは省略可能であるが、
これを指定すると接続している端末のエンコーディングを上書き設定する。
screen はエンコーディングの検知にロケール設定を利用するので、
これが必要になることは無いはずである。端末のエンコーディングを
端末のタイプによって変更する方法としては、termcap の \*QKJ\*U
エントリを用いる方法もある。
.PP 
.\"O Supported encodings are eucJP, SJIS, eucKR, eucCN, Big5, GBK, KOI8-R,
.\"O CP1251, UTF-8, ISO8859-2, ISO8859-3, ISO8859-4, ISO8859-5, ISO8859-6,
.\"O ISO8859-7, ISO8859-8, ISO8859-9, ISO8859-10, ISO8859-15, jis.
サポートされているエンコーディングは次の通り:
eucJP, SJIS, eucKR, eucCN, Big5, GBK, KOI8-R,
CP1251, UTF-8, ISO8859-2, ISO8859-3, ISO8859-4, ISO8859-5, ISO8859-6,
ISO8859-7, ISO8859-8, ISO8859-9, ISO8859-10, ISO8859-15, jis
.PP
.\"O See also \*Qdefencoding\*U, which changes the default setting of a new
.\"O window.
\*Qdefencoding\*U も参照のこと。
これは新規ウィンドウに対するデフォルト値を変更する。
.sp
.ne 3
.BI "escape " xy
.PP
.\"O Set the command character to \fIx\fP and the character generating a literal
.\"O command character (by triggering the \*Qmeta\*U command) to \fIy\fP (similar
.\"O to the \-e option).
.\"O Each argument is either a single character, a two-character sequence
.\"O of the form \*Q^x\*U (meaning \*QC-x\*U), a backslash followed by an octal
.\"O number (specifying the ASCII code of the character), or a backslash followed
.\"O by a second character, such as \*Q\e^\*U or \*Q\e\e\*U.
.\"O The default is \*Q^Aa\*U.
コマンド文字を \fIx\fP に設定し、
(\*Qmeta\*U コマンドを呼んで) リテラルコマンド文字を生成する文字を
\fIy\fP に設定する (\-e オプションと同様)。
各引き数には、文字 1 つ、
\*Q^x\*U 形式 (\*QC-x\*U の意味) の 2 文字からなるシーケンス、
バックスラッシュの後に 8 進数を続けたもの
(その文字の ASCII コードを指定する)、
バックスラッシュの後に 2 番目の文字を続けたもの
(\*Q\e^\*U や \*Q\e\e\*U など)、のいずれかを指定できる。
デフォルト値は \*Q^Aa\*U である。
.sp
.ne 3
.B eval
.I command1
.RI [ command2
.IR ... ]
.PP
.\"O Parses and executes each argument as separate command.
各引き数をパースして、別々のコマンドとして実行する。
.sp
.ne 3
.B exec
.RI [[ fdpat ]
.IR "newcommand " [ "args ..." ]]
.PP
.\"O Run a unix subprocess (specified by an executable path \fInewcommand\fP and its 
.\"O optional arguments) in the current window. The flow of data between 
.\"O newcommands stdin/stdout/stderr, the process originally started in the window 
.\"O (let us call it "application-process") and screen itself (window) is 
.\"O controlled by the filedescriptor pattern fdpat.
.\"O This pattern is basically a three character sequence representing stdin, stdout
.\"O and stderr of newcommand. A dot (.) connects the file descriptor
.\"O to
.\"O .IR screen .
.\"O An exclamation mark (!) causes the file
.\"O descriptor to be connected to the application-process. A colon (:) combines
.\"O both.
.\"O User input will go to newcommand unless newcommand receives the 
.\"O application-process' 
.\"O output (fdpats first character is `!' or `:') or a pipe symbol (|) is added 
.\"O (as a fourth character) to the end of fdpat.
実行パス \fInewcommand\fP およびその引き数 (省略可) で指定された
unix サブプロセスを現在のウィンドウで実行する。
newcommand と標準入力/標準出力/標準エラー出力の間のデータフロー、
もともとこのウィンドウで開始されたプロセス
(これを「アプリケーションプロセス」と呼ぼう)、
screen そのもの (ウィンドウ)、の三つは、
ファイルディスクリプタパターン fdpat で制御する。
このパターンは基本的に 3 つの文字からなるシーケンスで、
newcommand の標準入力、標準出力、標準エラー出力を表す。
ドット (.) はファイルディスクリプタを
.I screen
に接続する。
感嘆符 (!) はファイルディスクリプタを既に実行中のプロセスに接続する。
コロン (:) は両方を結合させる。
.\"nakano 「両方」とは？
ユーザ入力は newcommand に送られる。
ただし newcommand が「アプリケーションプロセス」
の出力を受けていたり
(fdpats の最初の文字が `!' または `:')、
パイプ (|) が fdpat の最後に (4 番目の文字として)
追加されている場合は別である。
.\"O .br
.P
.\"O Invoking `exec' without arguments shows name and arguments of the currently
.\"O running subprocess in this window. Only one subprocess a time can be running
.\"O in each window.
引き数を付けずに `exec' を実行すると、
現在実行中のサブプロセスの名前と引き数とがそのウィンドウに表示される。
各ウィンドウで一度に動作できるサブプロセスはひとつだけである。
.\"O .br
.P
.\"O When a subprocess is running the `kill' command will affect it instead of the
.\"O windows process.
サブプロセスの実行中には、`kill' コマンドはウィンドウのプロセスではなく
サブプロセスに影響する。
.\"O .br
.P
.\"O Refer to the postscript file `doc/fdpat.ps' for a confusing illustration
.\"O of all 21 possible combinations. Each drawing shows the digits 2,1,0
.\"O representing the three file descriptors of newcommand. The box marked
.\"O `W' is the usual pty that has the application-process on its slave side.
.\"O The box marked `P' is the secondary pty that now has
.\"O .I screen
.\"O at its master side.
この 21 通りもある組み合わせを描いた難解な図については、
PostScript 形式のファイル `doc/fdpat.ps' を参照のこと。
それぞれの図には、newcommand の三つのファイルデスクリプタを表す数字
2,1,0 が書かれている。`W' の印が付いた四角は普通の pty で、
このスレーブ側にアプリケーションプロセスがある。
`P' の印が付いた四角はセカンダリの pty で、
このマスター側に
.I screen
が属することになる。
.\"nakano 実際に見てみないとワカラン。
.\"O .sp
.P
.\"O Abbreviations: 
省略形:
.br
.\"O Whitespace between the word `exec' and fdpat and the command 
.\"O can be omitted. Trailing dots and a fdpat consisting only of dots can be 
.\"O omitted. A simple `|' is synonymous for the pattern `!..|'; the word exec can
.\"O be omitted here and can always be replaced by `!'.
`exec' と fdpat とコマンドの間の空白は省略できる。
末尾のドットと、ドットだけからなる fdpat は省略できる。
単に `|' と書くとパターン `!..|' と同義になる。
この場合には exec を省略でき、常に `!' で置き換え可能である。
.\"nakano ??
.sp
.\"O Examples:
実行例:
.IP
exec ... /bin/sh
.br
exec /bin/sh
.br
!/bin/sh
.PP
.\"O Creates another shell in the same window, while the original shell is still 
.\"O running. Output of both shells is displayed and user input is sent to the new
.\"O /bin/sh.
同じウィンドウで、元のシェルを実行させたまま別のシェルを生成する。
両方のシェルの出力が表示され、ユーザの入力は新しい /bin/sh に送られる。
.IP
exec !.. stty 19200
.br
exec ! stty 19200
.br
!!stty 19200
.PP
.\"O Set the speed of the window's tty. If your stty command operates on stdout, 
.\"O then add another `!'.
ウィンドウの tty の速度を設定する。
stty コマンドが標準出力を操作する場合には、もうひとつ `!' を追加すること。
.IP
exec !..| less
.br
|less
.PP
.\"O This adds a pager to the window output. The special character `|' is needed to
.\"O give the user control over the pager although it gets its input from the 
.\"O window's process. This works, because
.\"O .I less
.\"O listens on stderr (a behavior that
.\"O .I screen
.\"O would not expect without the `|') 
.\"O when its stdin is not a tty. 
.\"O .I Less 
.\"O versions newer than 177 fail miserably here; good old
.\"O .I pg
.\"O still works.
これはウィンドウ出力にページャを追加する。
ユーザ制御をページャ越しに行い、
しかしページャにウィンドウのプロセスから入力を取得させるには、
この特殊文字 `|' が必要である。
.\"nakano で OK か？
これが動作するのは、
標準入力が tty でないとき、
.I less
が標準エラー出力を監視する (`|' が無ければ
.I screen
が想定しない動作) からである。
バージョンが 177 より新しい
.I less 
はここではまともに動作しない。この場合でも古き良き
.I pg
なら動作する。
.IP
!:sed -n s/.*Error.*/\e007/p
.PP
.\"O Sends window output to both, the user and the sed command. The sed inserts an
.\"O additional bell character (oct. 007) to the window output seen by
.\"O .IR screen .
.\"O This will cause "Bell in window x" messages, whenever the string "Error"
.\"O appears in the window.
ウィンドウの出力をユーザと sed コマンドの両方に送る。sed は、
.I screen
の表示するウィンドウ出力にベル文字 (8 進値で 007) を追加挿入する。
これを実行すると、このウィンドウに "Error" という文字列が現われると必ず
"Bell in window x" というメッセージが出力される。
.sp
.ne 3
.B fit
.PP
.\"O Change the window size to the size of the current region. This
.\"O command is needed because screen doesn't adapt the window size
.\"O automatically if the window is displayed more than once.
ウィンドウのサイズを現在のリージョンのサイズにする。
このコマンドが必要なのは、screen はウィンドウが複数表示されている場合には
自動的なウィンドウサイズ調整を行わないためである。
.sp
.ne 3
.B flow
.RB [ on | off | "auto\fR]\fP"
.PP
.\"O Sets the flow-control mode for this window.
.\"O Without parameters it cycles the current window's flow-control setting from 
.\"O "automatic" to "on" to "off".
.\"O See the discussion on \*QFLOW-CONTROL\*U later on in this document for full 
.\"O details and note, that this is subject to change in future releases.
.\"O Default is set by `defflow'.
このウィンドウのフロー制御モードを設定する。
パラメータを与えないと、現在のウィンドウのフロー制御設定を
"automatic", "on", "off" の順に切り替える。
詳細および注意点については、
本ドキュメントで後述する『フロー制御』での議論を参照すること。
これは将来のリリースでは変更されることになっている。
デフォルトでは `defflow' に設定されている。
.sp
.ne 3
.BR "focus " [ up | down | top | bottom ]
.PP
.\"O Move the input focus to the next region. This is done in a cyclic
.\"O way so that the top region is selected after the bottom one. If
.\"O no subcommand is given it defaults to `down'. `up' cycles in the
.\"O opposite order, `top' and `bottom' go to the top and bottom
.\"O region respectively. Useful bindings are (j and k as in vi)
入力フォーカスを次のリージョンに移す。これは循環的に行われるので、
一番下のリージョンの次には一番上のリージョンが選択される。
サブコマンドを省略したときのデフォルトの動作は `down' である。`up'
とすると逆順に回り、`top' では一番上の、`bottom'
では一番下のリージョンに移動する。
便利なキーバインディングを以下に示す (j や k は vi 流):
.nf
    bind j focus down
    bind k focus up
    bind t focus top
    bind b focus bottom
.fi
.sp
.ne 3
.BR "gr " [ on | off ]
.PP
.\"O Turn GR charset switching on/off. Whenever screen sees an input
.\"O character with the 8th bit set, it will use the charset stored in the
.\"O GR slot and print the character with the 8th bit stripped. The
.\"O default (see also \*Qdefgr\*U) is not to process GR switching because
.\"O otherwise the ISO88591 charset would not work.
GR 文字集合のオン/オフを切り替える。
screen は、8 ビット目が立っている入力文字を見つけると、
必ず GR スロットに格納されている文字集合を使用し、
8 番目のビットを取り除いて文字を出力する。
デフォルトでは (\*Qdefgr\*U も参照) GR 切り替えは処理しない
(処理してしまうと ISO8859-1 文字集合が使えないためである)。
.sp
.ne 3
.B hardcopy
.RB [ -h ]
.RI [ file ]
.PP
.\"O Writes out the currently displayed image to the file \fIfile\fP,
.\"O or, if no filename is specified, to \fIhardcopy.n\fP in the
.\"O default directory, where \fIn\fP is the number of the current window. 
.\"O This either appends or overwrites the file if it exists. See below.
.\"O If the option \fB-h\fP is specified, dump also the contents of the
.\"O scrollback buffer.
現在表示されている画面イメージを \Ifile\fP に書き込む。
ファイル名を指定しないと、デフォルトディレクトリの \fIhardcopy.n\fP
というファイルに書き込む (\fIn\fP はカレントウィンドウの番号)。
ファイルが存在する場合には、追加か上書きのどちらかが行われる。
詳しくは次項を参照。\fB-h\fP オプションを与えると、
スクロールバックバッファの内容も書き込まれる。
.sp
.ne 3
.BR "hardcopy_append on" | off
.PP
.\"O If set to "on", 
.\"O .I screen
.\"O will append to the "hardcopy.n" files created by the command \*QC-a h\*U, 
.\"O otherwise these files are overwritten each time.
.\"O Default is `off'.
"on" に設定されていると、
.I screen
はコマンド \*QC-a h\*U で生成される "hardcopy.n"
ファイルに対して追加書き込みを行う。
"off" の場合には、このファイルは毎回上書きされる。
デフォルト値は `off' である。
.sp
.ne 3
.BI "hardcopydir "directory
.PP
.\"O Defines a directory where hardcopy files will be placed. If unset, hardcopys
.\"O are dumped in
.\"O .IR screen 's
.\"O current working directory.
ハードコピーファイルが置かれるディレクトリを定義する。
設定されていない場合には、ハードコピーは
.I screen
のカレントワーキングディレクトリにダンプされる。
.sp
.ne 3
.BR "hardstatus " [ on | off ]
.br
.BR "hardstatus \fR[\fBalways\fR]\fBlastline" | message | ignore
.RI [ string ]
.br
.B "hardstatus string"
.RI [ string ]
.PP
.\"O This command configures the use and emulation of the terminal's
.\"O hardstatus line. The first form
.\"O toggles whether
.\"O .I screen
.\"O will use the hardware status line to display messages. If the
.\"O flag is set to `off', these messages
.\"O are overlaid in reverse video mode at the display line. The default
.\"O setting is `on'.
端末のハードステータス行の利用とエミュレーション
に関する設定をする。
最初の形式では、
.I screen
がハードステータス行をメッセージ表示に用いるかどうかをトグルする。
このフラグが "off" ならば、
メッセージは表示行に反転ビデオモードでオーバーレイ表示される。
デフォルトの設定は `on' である。
.P
.\"O The second form tells 
.\"O .I screen 
.\"O what to do if the terminal doesn't
.\"O have a hardstatus line (i.e. the termcap/terminfo capabilities
.\"O "hs", "ts", "fs" and "ds" are not set). If the type
.\"O \*Qlastline\*U is used, 
.\"O .I screen 
.\"O will reserve the last line of the
.\"O display for
.\"O the hardstatus. \*Qmessage\*U uses 
.\"O .I screen's
.\"O message mechanism and
.\"O \*Qignore\*U tells 
.\"O .I screen 
.\"O never to display the hardstatus.
.\"O If you prepend the word \*Qalways\*U to the type (e.g., \*Qalwayslastline\*U), 
.\"O .I screen 
.\"O will use the type even if the terminal supports a hardstatus.
二番目の形式は、ハードステータス行が端末に無い
(つまり termcap/terminfo の "hs", "ts", "fs", "ds"
といった機能が設定されていない) 場合にどうするかについて
.I screen
に指示する。\*Qlastline\*U を指定すると、
.I screen
は画面の一番下の行を反転させてハードステータスとして用いる。
\*Qmessage\*U を指定すると
.I screen
のメッセージ機構が用いられ、\*Qignore\*U とすると
ハードステータスは一切表示されなくなる。
これらの指定の前に \*Qalways\*U をつける
(例えば \*Qalwayslastline\*U) と、
.I screen
は端末がハードステータス行をサポートしている場合でも
その指定を用いる。
.P
.\"O The third form specifies the contents of the hardstatus line.  '%h' is
.\"O used as default string, i.e. the stored hardstatus of the current
.\"O window (settable via \*QESC]0;<string>^G\*U or \*QESC_<string>ESC\e\*U)
.\"O is displayed.  You can customize this to any string you like including
.\"O the escapes from the \*QSTRING ESCAPES\*U chapter. If you leave out
.\"O the argument
.\"O .IR string ,
.\"O the current string is displayed.
三番目の形式はハードステータス行の内容を指定する。
'%h' がデフォルトの文字列で、カレントウィンドウのハードステータスを表示する
(\*QESC]0;<string>^G\*U や \*QESC_<string>ESC\e\*U によって設定できる)。
この文字列は好きなように設定でき、
『文字エスケープ』の章にあるエスケープも利用できる。引き数
.I string
を省略すると、現在の文字列が表示される。
.P
.\"O You can mix the second and third form by providing the string as
.\"O additional argument.
二番目の形式に
.I string
引き数を付加することにより、三番目の形式の動作を同時に指定することもできる。
.sp
.ne 3
.B height
.RB [ -w | -d ]
.RI [ lines " [" cols ]]
.PP
.\"O Set the display height to a specified number of lines. When no argument
.\"O is given it toggles between 24 and 42 lines display. You can also
.\"O specify a width if you want to change both values.
.\"O The
.\"O .B -w
.\"O option tells screen to leave the display size unchanged and just set
.\"O the window size,
.\"O .B -d
.\"O vice versa.
ディスプレイの高さを指定された行数に設定する。
引き数を与えないと、24 行表示と 42 行表示の間をトグルさせる。
同時に指定すれば幅も変更できる。
.B -w
オプションは、ディスプレイのサイズはそのままで、
ウィンドウのサイズだけを設定したい場合に指定する。
.B -d
はその逆である。
.sp
.ne 3
.B help
.RB [ -c
.IR class ]
.PP
.\"O Not really a online help, but 
.\"O displays a help 
.\"O .I screen 
.\"O showing you all the key bindings.
.\"O The first pages list all the internal commands followed by their current
.\"O bindings.
.\"O Subsequent pages will display the custom commands, one command per key.
.\"O Press space when you're done reading each page, or return to exit early.
.\"O All other characters are ignored. If the \*Q-c\*U option is given,
.\"O display all bound commands for the specified command class.
.\"O See also \*QDEFAULT KEY BINDINGS\*U section.
本当の意味でのオンラインヘルプとは言えないが、
キー割り当てをすべて示したヘルプ画面を表示する。
最初のページでは、内部コマンドとその現在のキー割り当てがリスト表示される。
次のページにはカスタムコマンドが、
キーごとに 1 つのコマンドの形式で表示される。
各ページを読み終えたらスペースキーを押せば次のページが見られ、
リターンキーを押せば即座にヘルプが終了する。
他の文字はすべて無視される。\*Q-c\*U オプションを与えると、
指定したコマンドクラスに結びつけられているすべてのコマンドを表示する。
『デフォルトのキー割り当て』の節も参照すること。
.sp
.ne 3
.B history
.PP
.\"O Usually users work with a shell that allows easy access to previous commands.
.\"O For example csh has the command \*Q!!\*U to repeat the last command executed. 
.\"O .I Screen
.\"O allows you to have a primitive way of re-calling \*Qthe command that
.\"O started ...\*U: You just type the first letter of that command, then hit
.\"O `C-a {' and
.\"O .I screen
.\"O tries to find a previous line that matches with the `prompt character' 
.\"O to the left of the cursor. This line is pasted into this window's input queue.
.\"O Thus you have a crude command history (made up by the visible window and its
.\"O scrollback buffer). 
通常ユーザはシェルを使って作業していると、
以前のコマンドに簡単にアクセスできる。
例えば csh には直前に実行したコマンドを繰り返す \*Q!!\*U というコマンドがある。
.I screen
にも、「〜で始まるコマンド」を再呼び出しするための
原始的な方法が用意されている。
そのコマンドの最初の文字を打ち込み、その後に `C-a {' を打つと、
.I screen
はカーソルの左にある「プロンプト文字」にマッチする以前の行を見つけようとする。
この行はウィンドウの入力キューにペーストされる。これにより、
(可視ウィンドウとそのスクロールバッファからなる)
単純なコマンド履歴が使えることになる。
.sp
.ne 3
.BI "hstatus " status
.PP
.\"O Change the window's hardstatus line to the string \fIstatus\fP.
ウィンドウのハードステータス行を文字列 \fIstatus\fP に変更する。
.sp
.ne 3
.B idle
.RI [ timeout
.RI [ "cmd args" ]]
.PP
.\"O Sets a command that is run after the specified number of seconds
.\"O inactivity is reached. This command will normally be the \*Qblanker\*U
.\"O command to create a screen blanker, but it can be any screen command.
.\"O If no command is specified, only the timeout is set. A timeout of
.\"O zero (ot the special timeout \fBoff\fP) disables the timer.
.\"O If no arguments are given, the current settings are displayed.
指定した秒数の間作業がない時に実行されるコマンドを設定する。
普通ここにはスクリーンセーバを生成する \*Qblanker\*U
コマンドを指定することになるだろうが、screen コマンドならなんでも指定できる。
コマンドを何も指定しないと、タイムアウトだけが設定される。
timeout に 0 を指定する (あるいは \fBoff\fPを指定する) とタイマを無効にする。
一切引き数を与えないと、現在の設定を表示する。
.sp
.ne 3
.BR "ignorecase " [ on | off ]
.PP
.\"O Tell screen to ignore the case of characters in searches. Default is
.\"O `off'.
検索時に大文字小文字を区別しないようにする。デフォルトは `off'。
.sp
.ne 3
.B info
.PP
.\"O Uses the message line to display some information about the current window:
.\"O the cursor position in the form \*Q(column,row)\*U starting with \*Q(1,1)\*U,
.\"O the terminal width and height plus the size of the scrollback buffer in lines, 
.\"O like in \*Q(80,24)+50\*U, the current state of window XON/XOFF flow control
.\"O is shown like this (See also section FLOW CONTROL):
メッセージ行を使って現在のウィンドウに関するいくつかの情報を表示する：
\*Q(カラム,行)\*U 形式のカーソル位置 (\*Q(1,1)\*U から始まる)、
端末の幅と高さ、およびスクロールバッファの大きさ (行数)。
例えば \*U(80,24)+50\*U のようになる。
ウィンドウの XON/XOFF フローコントロールの現在の状態は、
次のように表示される (『フロー制御』の章も参照)：
.sp
.nf
.\"O   +flow     automatic flow control, currently on.
.\"O   -flow     automatic flow control, currently off.
.\"O   +(+)flow  flow control enabled. Agrees with automatic control.
.\"O   -(+)flow  flow control disabled. Disagrees with automatic control.
.\"O   +(-)flow  flow control enabled. Disagrees with automatic control.
.\"O   -(-)flow  flow control disabled. Agrees with automatic control.
  +flow     自動フローコントロール、現在は on。
  \-flow     自動フローコントロール、現在は off。
  +(+)flow  フローコントロール有効。自動コントロールと一致。
  \-(+)flow  フローコントロール無効。自動コントロールとは不一致。
  +(\-)flow  フローコントロール有効。自動コントロールとは不一致。
  \-(\-)flow  フローコントロール無効。自動コントロールと一致。
.fi
.PP
.\"O The current line wrap setting (`+wrap' indicates enabled, `\-wrap' not) is
.\"O also shown. The flags `ins', `org', `app', `log', `mon' or `nored' are 
.\"O displayed when the window is in insert mode, origin mode, 
.\"O application-keypad mode, has output logging,
.\"O activity monitoring or partial redraw enabled.
現在の折り返しモードも表示される (`+wrap は有効、`\-wrap' は無効)。
 `ins', `org', `app', `log', `mon', `nored' の各フラグは、
それぞれウィンドウがインサートモード、オリジンモード、
アプリケーションキーパッドモード、出力ログあり、
アクティビティ監視中、部分再描画有効、の状態のときに表示される。
.PP
.\"O The currently active character set (\fIG0\fP, \fIG1\fP, \fIG2\fP,
.\"O or \fIG3\fP) and in square brackets the terminal character sets that are
.\"O currently designated as \fIG0\fP through \fIG3\fP is shown. If the window
.\"O is in UTF-8 mode, the string \*QUTF-8\*U is shown instead.
現在有効な文字集合 (\fIG0\fP, \fIG1\fP, \fIG2\fP, \fIG3\fP のいずれか) と、
現在 \fIG0\fP から \fIG3\fP に指定されている端末の文字集合
(角括弧で括られている) が表示される。
ウィンドウが UTF-8 モードのときは、これらの代わりに \*QUTF-8\*U が表示される。
.PP
.\"O Additional modes depending on the type of the window are displayed at the end of the status line (See also chapter \*QWINDOW TYPES\*U).
.\"O .br
.\"O If the state machine of the terminal emulator is in a non-default state,
.\"O the info line is started with a string identifying the current state.
.\"O .br
.\"O For system information use the \*Qtime\*U command.
ウィンドウのタイプに応じて、追加モードがステータス行の最下行に表示される
(『ウィンドウの種類』の章も見よ)。
.br
端末エミュレータのステートマシンがデフォルトの状態にないときは、
info 行の先頭には、まず現在の状態を示す文字列が表示される。
.br
システムの情報を見るには \*Qtime\*U コマンドを用いること。
.sp
.ne 3
.BR ins_reg " [" \fIkey ]
.PP
.\"O No longer exists, use \*Qpaste\*U instead.
もう存在しない。代わりに \*Qpaste\*U を用いること。
.sp
.ne 3
.B kill
.PP
.\"O Kill current window.
現在のウィンドウを kill する。
.br 
.\"O If there is an `exec' command running then it is killed. Otherwise the process
.\"O (shell) running in the window receives a HANGUP condition, 
.\"O the window structure is removed and 
.\"O .I screen 
.\"O (your display) switches to another
.\"O window.  When the last window is destroyed, 
.\"O .I screen
.\"O exits.
.\"O After a kill 
.\"O .I screen 
.\"O switches to the previously displayed window.
実行中の `exec' コマンドがあると、これが kill される。
それ以外の場合には、そのウィンドウで動作中のプロセス (シェル) が
HANGUP 信号を受け取り、そのウィンドウの関連データは削除され、
.I screen
(あなたの画面) は別のウィンドウへ切り替わる。
最後のウィンドウが破棄された時には、
.I screen
は終了する。kill の後には、
.I screen
は直前に表示していたウィンドウに切り替わる。
.br
.\"O Note:
.\"O .I Emacs
.\"O users should keep this command in mind, when killing a line.
.\"O It is recommended not to use \*QC-a\*U as the
.\"O .I screen
.\"O escape key or to rebind kill to \*QC-a K\*U.
注意:
.I Emacs
ユーザは、行を消すときに、このコマンドのことを念頭に置いておくように。
\*QC-a\*U を
.I screen
のエスケープキーとして用いない、あるいは
kill を \*QC-a K\*U に割り当てないことをお勧めする。
.sp
.ne 3
.B lastmsg
.PP
.\"O Redisplay the last contents of the message/status line.
.\"O Useful if you're typing when a message appears, because  the message goes 
.\"O away when you press a key (unless your terminal has a hardware status line).
.\"O Refer to the commands \*Qmsgwait\*U and \*Qmsgminwait\*U for fine tuning.
メッセージ/ステータス行の最後の内容を再表示する。
これが便利なのは、メッセージが表示されたときに
ちょうど文字を入力していたような場合である。
(端末にハードウェアステータス行が無ければ)
キーを押すとメッセージは消えてしまうからである。
この微調整には \*Qmsgwait\*U コマンドや \*Qmsgminwait\*U コマンドを参照のこと。
.sp
.ne 3
.B license
.PP
.\"O Display the disclaimer page. This is done whenever
.\"O .I screen
.\"O is started without options, which should be often enough. See also 
.\"O the \*Qstartup_message\*U command.
免責事項のページを表示する。これはオプション無しで
.I screen
を起動すると必ず実行される (たいていこれで十分だろう)。
\*Qstartup_message\*U コマンドも参照のこと。
.sp
.ne 3
.B lockscreen
.PP
.\"O Lock this display.
.\"O Call a screenlock program (/local/bin/lck or /usr/bin/lock or a builtin if no
.\"O other is available). Screen does not accept any command keys until this program
.\"O terminates. Meanwhile processes in the windows may continue, as the windows 
.\"O are in the `detached' state. The screenlock program may be changed through the
.\"O environment variable $LOCKPRG (which must be set in the shell from which 
.\"O .I screen
.\"O is started) and is executed with the user's uid and gid.
このディスプレイをロックする。
スクリーンロックのプログラム (/local/bin/lck か /usr/bin/lock、あるいは
使えるものがなければ組み込みのもの) を呼び出す。
screen はこのプログラムが終了するまで一切のコマンドキーを受け付けない。
ウィンドウは「デタッチされた」状態となるので、
各ウィンドウで実行中のプログラムは継続して動作する。
スクリーンロックプログラムは、環境変数 $LOCKPRG で変更でき
(これは
.I screen
を実行するシェルで設定されていなければならない)、
ユーザの UID と GID で実行される。
.br
.\"O Warning: 
.\"O When you leave other shells unlocked and you have no password set on           
.\"O .IR screen ,
.\"O the lock is void: One could easily re-attach from an unlocked
.\"O shell. This feature should rather be called `lockterminal'.
注意:
他のシェルをロックせず、
.I screen
にパスワードを与えていないと、このロックには意味がなく、
ロックされていないシェルから簡単に再アタッチできてしまう。
この機能は `lockterminal' と呼ぶ方が良いかもしれない。
.sp
.ne 3
.BR "log " [ on | off ]
.PP
.\"O Start/stop writing output of the current window to a file 
.\"O \*Qscreenlog.\fIn\fP\*U in the window's default directory, where \fIn\fP 
.\"O is the number of the current window. This filename can be changed with
.\"O the `logfile' command. If no parameter is given, the state
.\"O of logging is toggled. The session log is appended to the previous contents 
.\"O of the file if it already exists. The current contents and the contents 
.\"O of the scrollback history are not included in the session log.
.\"O Default is `off'.
現在のウィンドウからの出力を、
ファイル \*Qscreenlog.\fIn\fP\*U へ書き込む動作を開始/終了させる。
このファイルはウィンドウのデフォルトディレクトリにあり、
\fIn\fP は現在のウィンドウの番号である。このファイル名は
`logfile' コマンドで変更できる。
パラメータを与えなかった場合には、ログ出力の状態がトグルされる。
前のセッションログのファイルがあれば、
セッションログはこのファイルに追加される。現在の内容と
スクロールバック履歴の内容はセッションログには含まれない。
デフォルト値は `off' である。
.sp
.ne 3
.BI "logfile " filename
.br
.BI "logfile flush " secs
.PP
.\"O Defines the name the logfiles will get. The default is
.\"O \*Qscreenlog.%n\*U. The second form changes the number of seconds
.\"O .I screen
.\"O will wait before flushing the logfile buffer to the file-system. The
.\"O default value is 10 seconds.
ログファイルにつく名前を定義する。デフォルト値は
\*Qscreenlog.%n\*U である。
二番目の書式は、
.I screen
がログファイルバッファをファイルシステムにフラッシュするまでの
待ち時間 (秒) を変更する。デフォルトの値は 10 秒である。
.sp
.ne 3
.BR "login " [ on | off ]
.PP
.\"O Adds or removes the entry in the utmp database file for the current window.
.\"O This controls if the window is `logged in'.
.\"O When no parameter is given, the login state of the window is toggled.
.\"O Additionally to that toggle, it is convenient having a `log in' and a `log out'
.\"O key. E.\|g. `bind I login on' and `bind O login off' will map these
.\"O keys to be C-a I and C-a O.
.\"O The default setting (in config.h.in) should be \*Qon\*U for a 
.\"O .I screen
.\"O that runs under suid-root.
.\"O Use the \*Qdeflogin\*U command to change the default login state for new 
.\"O windows. Both commands are only present when 
.\"O .I screen
.\"O has been compiled with utmp support.
utmp データベースファイル中の、現在のウィンドウのエントリを追加・削除する。
これは、ウィンドウが「ログインされている」かどうかを制御する。
パラメータが与えられないと、そのウィンドウのログイン状態がトグルされる。
このようなトグルに加え、「ログイン」や「ログアウト」のキーがあると便利である。
例えば `bind I login on' と `bind O login off' とすれば、
これらの機能を C-a I と C-a O に割り当てできる。
.I screen
が root に suid されて動作する場合は、デフォルトの設定
(config.h.in にある) は \*Qon\*U のはずである。
新しいウィンドウのデフォルトのログイン状態を変えるには
\*Qdeflogin\*U コマンドを用いること。これら二つのコマンドは、
.I screen
のコンパイル時に utmp のサポートを組み込んである場合にしか存在しない。
.sp
.ne 3
.BR "logtstamp " [ on | off ]
.br
.B "logtstamp after"
.RI [ secs ]
.br
.B "logtstamp string"
.RI [ string ]
.PP
.\"O This command controls logfile time-stamp mechanism of 
.\"O .I screen.
.\"O If
.\"O time-stamps are turned \*Qon\*U, 
.\"O .I screen 
.\"O adds a string containing
.\"O the current time to the logfile after two minutes of inactivity.
.\"O When output continues and more than another two minutes have passed,
.\"O a second time-stamp is added to document the restart of the
.\"O output. You can change this timeout with the second form
.\"O of the command. The third form is used for customizing the time-stamp
.\"O string (`-- %n:%t -- time-stamp -- %M/%d/%y %c:%s --\\n' by
.\"O default).
このコマンドは
.I screen
のログファイルタイムスタンプ機能を制御する。タイムスタンプを \*Qon\*U
にすると、アクティビティがないまま 2 分間が過ぎたときに、
.I screen
は現在時刻を含む文字列をログファイルに追加する。
さらに 2 分が経過した後に出力がなされると、
この出力の再開を記録する二番目のタイムスタンプが追加される。
.\"nakano でいいのかな？ have passwd だからこうだと思うけど。
このタイムアウト時間は、二番目の形式でこのコマンドを実行すると変更できる。
三番目の形式は、タイムスタンプ文字列をカスタマイズする
(デフォルトは `-- %n:%t -- time-stamp -- %M/%d/%y %c:%s --\\n')。
.sp
.ne 3
.B mapdefault
.PP
.\"O Tell 
.\"O .I screen 
.\"O that the next input character should only be looked up
.\"O in the default bindkey table. See also \*Qbindkey\*U.
次の入力文字を、デフォルトのキー割り当てテーブルでのみ検索するよう
.I screen
に指示する。\*Qbindkey\*U も参照すること。
.sp
.ne 3
.B mapnotnext
.PP
.\"O Like mapdefault, but don't even look in the default bindkey table.
mapdefault と似ているが、デフォルトのキー割り当てテーブルも検索しない。
.sp
.ne 3
.B maptimeout
.RI [ timo ]
.PP
.\"O Set the inter-character timer for input sequence detection to a timeout
.\"O of
.\"O .I timo
.\"O ms. The default timeout is 300ms. Maptimeout with no arguments shows
.\"O the current setting.
.\"O See also \*Qbindkey\*U.
入力シーケンス検出の文字間タイマのタイムアウト値を
.I timo
ミリ秒に設定する。引き数を与えずに maptimeout を実行すると、
現在の設定を表示する。\*Qbindkey\*U も参照すること。
.sp
.ne 3
.BI "markkeys " string
.PP
.\"O This is a method of changing the keymap used for copy/history mode.
.\"O The string is made up of \fIoldchar\fP=\fInewchar\fP pairs which are
.\"O separated by `:'. Example: The string \*QB=^B:F=^F\*U will change the 
.\"O keys `C-b' and `C-f' to the vi style binding (scroll up/down fill page).
.\"O This happens to be the default binding for `B' and `F'.
.\"O The command \*Qmarkkeys h=^B:l=^F:$=^E\*U would set the mode for an emacs-style
.\"O binding.
.\"O If your terminal sends characters, that cause you to abort copy mode,
.\"O then this command may help by binding these characters to do nothing.
.\"O The no-op character is `@' and is used like this: \*Qmarkkeys
.\"O @=L=H\*U if you do not want to use the `H' or `L' commands any longer.
.\"O As shown in this example, multiple keys can be assigned to one function in a 
.\"O single statement.
これはコピー/履歴モードで使われるキーマップを変更する方法である。
ここで string は \fIoldchar\fP=\fInewchar\fP のペアからなり、
ペア間の区切りは `:' である。例: \*QB=^B:F=^F\*U を string に指定すると、
`C-b' と `C-f' の各キーは vi 形式の割り当て
(ページ全体のスクロールアップ/ダウン) に変更される。
これらは、実は `B' と `F' に対するデフォルトの割り当てであるが。
コマンド \*Qmarkkeys h=^B:l=^F:$=^E\*U は、
このモードを emacs 形式の割り当てに設定する。
端末が文字を送るタイプのもので、
これによってコピーモードが終了してしまうような場合、
このコマンドを使って、
それらの文字に何もさせないようにすると良い。
no-op 文字は `@' で、\*Qmarkkeys @=L=H\*U のようにすれば、
`H' や `L' コマンドは以後使えなくなる。
この例で示したように、ひとつの機能に複数のキーを (一行で) 割り当てできる。
.sp
.ne 3
.BI "maxwin " num
.PP
.\"O Set the maximum window number screen will create. Doesn't affect
.\"O already existing windows. The number may only be decreased.
screen の生成できる最大ウィンドウ数を設定する。
既に存在しているウィンドウには影響しない。この数は減らすことしかできない。
.sp
.ne 3
.B meta
.PP
.\"O Insert the command character (C-a) in the current window's input stream.
コマンド文字 (C-a) を現在のウィンドウの入力ストリームに挿入する。
.sp
.ne 3
.BR "monitor " [ on | off ]
.PP
.\"O Toggles activity monitoring of windows.
.\"O When monitoring is turned on and an affected window is switched into the
.\"O background, you will receive the activity notification message in the
.\"O status line at the first sign of output and the window will also be marked
.\"O with an `@' in the window-status display.
.\"O Monitoring is initially off for all windows.
ウィンドウのアクティビティ監視をトグルする。
監視が有効で、
かつその影響を受けるウィンドウがバックグラウンドに切り替えられている場合、
最初の出力の際にアクティビティがあった旨ステータス行にメッセージが表示され、
ウィンドウ状態の表示において、そのウィンドウに `@' 印が付けられる。
初期状態では、すべてのウィンドウで監視はオフになっている。
.sp
.ne 3
.BI "msgminwait " sec
.PP
.\"O Defines the time 
.\"O .I screen 
.\"O delays a new message when one message is currently displayed. 
.\"O The default is 1 second.
あるメッセージが表示されている時に、新しい (次の) メッセージを表示するまでに
.I screen
が待つ時間を定義する。デフォルト値は 1 秒である。
.sp
.ne 3
.BI "msgwait " sec
.PP
.\"O Defines the time a message is displayed if 
.\"O .I screen
.\"O is not disturbed by other activity. The default is 5 seconds.
.I screen
が他の動作の影響を受けない場合に、メッセージが表示される時間を定義する。
デフォルト値は 5 秒である。
.sp
.ne 3
.BR "multiuser on" | off
.PP
.\"O Switch between singleuser and multiuser mode. Standard
.\"O .I screen
.\"O operation is singleuser. In multiuser mode the commands `acladd',
.\"O `aclchg', `aclgrp' and `acldel'
.\"O can be used to enable (and disable) other users accessing this 
.\"O .I screen
.\"O session. 
シングルユーザモードとマルチユーザモードの切り替えを行う。
.I screen
の標準動作はシングルユーザモードである。マルチユーザモードでは、
コマンド `acladd', `aclchg', `acldel' を使って、
現在の
.I screen
セッションに対する他のユーザのアクセスを許可・禁止できる。
.sp
.ne 3
.BR "nethack on" | off
.PP
.\"O Changes the kind of error messages used by
.\"O .IR screen .
.\"O When you are familiar with the game \*Qnethack\*U, you may enjoy the
.\"O nethack-style messages which will often blur the facts a little, but are
.\"O much funnier to read. Anyway, standard messages often tend to be unclear as
.\"O well.
.I screen
が使うエラーメッセージの路線を変える。
\*Qnethack\*U というゲームに親しんでいるユーザなら、
このゲームスタイルのメッセージを楽しめるかもしれない。
これらのメッセージは事実を少々曲げているけれども、読むにはずっと面白い。
どうせ標準のメッセージだってそんなに分かりやすいわけではないし。
.br
.\"O This option is only 
.\"O available if
.\"O .I screen
.\"O was compiled with the NETHACK flag defined. The
.\"O default setting is then determined by the presence of the environment 
.\"O variable $NETHACKOPTIONS.
このオプションが利用できるのは、
.I screen
のコンパイル時に NETHACK フラグが定義されている場合だけである。
そして、デフォルトの設定は環境変数 $NETHACKOPTIONS があるかどうかで決まる。
.sp
.ne 3
.B next
.PP
.\"O Switch to the next window.
.\"O This command can be used repeatedly to cycle through the list of windows.
次のウィンドウに切り替える。このコマンドを繰り返し用いると、
ウィンドウを循環的に切り替えできる。
.sp
.ne 3
.B nonblock 
.RB [ on | off | \fInumsecs ]
.PP
.\"O Tell screen how to deal with user interfaces (displays) that cease to
.\"O accept output. This can happen if a user presses ^S or a TCP/modem
.\"O connection gets cut but no hangup is received. If nonblock is
.\"O \fBoff\fP (this is the default) screen waits until the display
.\"O restarts to accept the output. If nonblock is \fBon\fP, screen
.\"O waits until the timeout is reached (\fBon\fP is treated as 1s). If the
.\"O display still doesn't receive characters, screen will consider
.\"O it \*Qblocked\*U and stop sending characters to it. If at
.\"O some time it restarts to accept characters, screen will unblock
.\"O the display and redisplay the updated window contents.
出力の受け付けを停止したユーザインターフェース (ディスプレイ)
をどのように扱うかを screen に指示する。
このようなことが起こるのは、ユーザが ^S を押したときや、
TCP またはモデムの接続が切れたが hangup を受信していないような場合である。
nonblock を \fBoff\fP にしておくと (こちらがデフォルト)、
screen はディスプレイが出力を受理できるようになるまで待つ。
nonblock が \fBon\fP だと、screen はタイムアウトになるまで待つ
(\fBon\fP では 1s として扱われる)。待ってもディスプレイが文字を受け付けないと、
screen はディスプレイがブロックされていると判断し、
そのディスプレイへの文字送信を止める。
その後ディスプレイが文字の受信を再開すると、
screen はディスプレイのブロックを止め、更新されたウィンドウの内容を再描画する。
.sp
.ne 3
.BR "number " [ \fIn ]
.PP
.\"O Change the current windows number. If the given number \fIn\fP is already 
.\"O used by another window, both windows exchange their numbers. If no argument is
.\"O specified, the current window number (and title) is shown.
現在のウィンドウ番号を変更する。
指定した番号 \fIn\fP が既に他のウィンドウに使われている場合には、
2 つのウィンドウは番号を交換する。引き数が指定されていない場合は、
現在のウィンドウ番号 (とタイトル) が表示される。
.sp
.ne 3
.BR "obuflimit " [ \fIlimit ]
.PP
.\"O If the output buffer contains more bytes than the specified limit, no
.\"O more data will be
.\"O read from the windows. The default value is 256. If you have a fast
.\"O display (like xterm), you can set it to some higher value. If no
.\"O argument is specified, the current setting is displayed.
指定した上限値より多いバイト数が出力バッファに含まれている場合、
このウィンドウからはそれ以上のデータは読み出せない。
このデフォルト値は 256 である。
(xterm のように) 高速なディスプレイを使っている場合には、
もう少し大きな値を設定しても良いだろう。引き数を指定しないと、
現在の設定が表示される。
.sp
.ne 3
.B only
.PP
.\"O Kill all regions but the current one.
現在のものを除き、すべてのリージョンを kill する。
.\"nakano region は「領域」だと見逃すかなあ。
.sp
.ne 3
.B other
.PP
.\"O Switch to the window displayed previously. If this window does no longer exist,
.\"O \fIother\fP has the same effect as \fInext\fP.
前に表示されていたウィンドウに切り替える。
そのウィンドウがもう存在していなければ、
\fIother\fP は \fInext\fP と同じ動作をする。
.sp
.ne 3
.BR "partial on" | off
.PP
.\"O Defines whether the display should be refreshed (as with \fIredisplay\fP) after
.\"O switching to the current window. This command only affects the current window.
.\"O To immediately affect all windows use the \fIallpartial\fP command.
.\"O Default is `off', of course.  This default is fixed, as there is currently no 
.\"O \fIdefpartial\fP command.
現在のウィンドウに切り替えた後、(\fIredisplay\fP を使ったように)
画面をリフレッシュするかどうかを定義する。
このコマンドが効果を及ぼすのは現在のウィンドウだけである。
すぐにウィンドウすべてに効果を及ぼすには、
\fIallpartial\fP コマンドを用いること。デフォルト値は当然 `off' である。
現在 \fIdefpartial\fP コマンドはないので、このデフォルト値は固定である。
.sp
.ne 3
.BR "password " [ \fIcrypted_pw ]
.PP
.\"O Present a crypted password in your \*Q.screenrc\*U file and
.\"O .I screen
.\"O will ask
.\"O for it, whenever someone attempts to resume a detached. This is useful
.\"O if you have privileged programs running under
.\"O .I screen
.\"O and you want to protect your session from reattach attempts by another user
.\"O masquerading as your uid (i.e. any superuser.)
.\"O If no crypted password is specified,
.\"O .I screen
.\"O prompts twice for typing a
.\"O password and places its encryption in the paste buffer.
.\"O Default is `none', this disables password checking.
\*Q.screenrc\*U ファイル中に暗号化されたパスワードを置くことで、
デタッチされたセッションを誰かが再開しようとした際に、
.I screen
にこれを用いた認証を行わせる。これは特権を持つプログラムを
.I screen
下で動作させているときに、自分の UID を偽装した他のユーザ
(つまりスーパーユーザの誰か)
によるそのセッションの再アタッチを防ぎたい場合に便利である。
暗号化されたパスワードが指定されていないと、
.I screen
は 2 度パスワードの入力を求め、これを暗号化したものを
ペーストバッファに置く。デフォルト値は `none' であり、
パスワードの確認は無効になっている。
.sp
.ne 3
.BR paste
.RI [ registers " [" dest_reg ]]
.PP
.\"O Write the (concatenated) contents of the specified registers to the stdin queue
.\"O of the current window. The register '.' is treated as the
.\"O paste buffer. If no parameter is given the user is prompted for a single 
.\"O register to paste.
.\"O The paste buffer can be filled with the \fIcopy\fP, \fIhistory\fP and 
.\"O \fIreadbuf\fP commands. 
.\"O Other registers can be filled with the \fIregister\fP, \fIreadreg\fP and 
.\"O \fIpaste\fP commands.
指定されたレジスタの (連結された) 内容を、
現在のウィンドウの標準入力のキューに書き込む。
レジスタ '.' はペーストバッファとして扱われる。パラメータをひとつも与えないと、
ペーストを行うレジスタ (1 つ) をユーザに問い合わせる。
ペーストバッファには \fIcopy\fP, \fIhistory\fP, \fIreadbuf\fP
コマンドで書き込める。
他のレジスタには \fIregister\fP, \fIreadreg\fP, \fIpaste\fP
コマンドで書き込める。
.\"O If \fIpaste\fP is called with a second argument, the contents of the specified
.\"O registers is pasted into the named destination register rather than 
.\"O the window. If '.' is used as the second argument, the displays paste buffer is
.\"O the destination.
2 番目の引き数付きで \fIpaste\fP が呼び出されると、
指定されたレジスタの内容はそのウィンドウではなく、
指定された出力先のレジスタにペーストされる。
2 番目の引き数として '.' を用いると、
そのディスプレイのペーストバッファが出力先となる。
.\"nakano display's か？
.\"O Note, that \*Qpaste\*U uses a wide variety of resources: Whenever a second 
.\"O argument is specified no current window is needed. When the source specification
.\"O only contains registers (not the paste buffer) then there need not be a current 
.\"O display (terminal attached), as the registers are a global resource. The 
.\"O paste buffer exists once for every user.
\*Qpaste\*U は様々な種類のリソースを使うことに注意:
2 番目の引き数が指定されていれば、カレントウィンドウは必要ない。
入力元指定に (ペーストバッファではなく) レジスタしか含まれなければ、
カレントディスプレイ (アタッチされている端末) は必要ない。
レジスタはグローバルなリソースだからである。
ペーストバッファはユーザ 1 人に 1 つずつしか存在しない。
.sp
.ne 3
.BR "pastefont " [ on | off ]
.PP
.\"O Tell 
.\"O .I screen 
.\"O to include font information in the paste buffer. The
.\"O default is not to do so. This command is especially useful for
.\"O multi character fonts like kanji.
フォント情報をペーストバッファに含めるよう screen に指示する。
デフォルトではこれは行われない。
このコマンドが特に役立つのは、
漢字のように文字フォントが複数個ある場合である。
.\"nakano そうか？
.sp
.ne 3
.B pow_break
.PP
.\"O Reopen the window's terminal line and send a break condition. See `break'.
ウィンドウの端末ラインを再オープンし、ブレーク信号を送る。
`break' を参照すること。
.sp
.ne 3
.B pow_detach
.PP
.\"O Power detach. 
.\"O Mainly the same as \fIdetach\fP, but also sends a HANGUP signal to
.\"O the parent process of
.\"O .IR screen .
.\"O CAUTION: This will result in a logout, when 
.\"O .I screen
.\"O was started from your login shell.
強制デタッチ。基本的には \fIdetach\fP と同じだが、
.I screen
の親プロセスにも HANGUP シグナルを送る。
注意: 
.I screen
がログインシェルから実行されているときには、
これを行うとログアウトする。
.sp
.ne 3
.B pow_detach_msg
.RI [ message ]
.PP
.\"O The \fImessage\fP specified here is output whenever a `Power detach' was
.\"O performed. It may be used as a replacement for a logout message or to reset 
.\"O baud rate, etc. 
.\"O Without parameter, the current message is shown.
「強制デタッチ」を行うときに、ここで指定した \fImessage\fP が出力される。
これはログアウトメッセージの代わりや、
ボーレートのリセットなどに使える。
.sp
.ne 3
.B prev
.PP
.\"O Switch to the window with the next lower number.
.\"O This command can be used repeatedly to cycle through the list of windows.
現在のウィンドウの次に小さい番号を持つウィンドウに切り替える。
このコマンドを繰り返し用いると、ウィンドウを循環できる。
.sp
.ne 3
.B printcmd
.RI [ cmd ]
.PP
.\"O If
.\"O .I cmd
.\"O is not an empty string, 
.\"O .I screen 
.\"O will not use the terminal capabilities
.\"O \*Qpo/pf\*U if it detects an ansi print sequence
.\"O .BR "ESC [ 5 i" ,
.\"O but pipe the output into
.\"O .IR cmd .
.\"O This should normally be a command like \*Qlpr\*U or
.\"O \*Q'cat > /tmp/scrprint'\*U.
.\"O .B printcmd
.\"O without a command displays the current setting.
.\"O The ansi sequence
.\"O .B "ESC \e"
.\"O ends printing and closes the pipe.
.\"O .br
.\"O Warning: Be careful with this command! If other user have write
.\"O access to your terminal, they will be able to fire off print commands.
.I cmd
が空文字列でない場合、ANSI 印刷シーケンス
.BR "ESC [ 5 i"
が検出されても screen は端末機能 \*Qpo/pf\*U を使わず、その出力を
.I cmd
にパイプする。\fIcmd\fP には通常、
\*Qlpr\*U や \*Q'cat > /tmp/scrprint'\*U のようなコマンドを与える。
コマンド指定なしで
.B printcmd
を実行すると、現在の設定が表示される。ANSI シーケンス
.B "ESC \e"
は印刷を終わらせ、パイプを閉じる。
.br
警告: このコマンドは注意して使うこと!
他のユーザが端末への書き込み権限を持っていると、
印刷コマンドを勝手に起動できてしまう。
.sp
.ne 3
.BR process " [" \fIkey ]
.PP
.\"O Stuff the contents of the specified register into 
.\"O .IR screen 's
.\"O input queue. If no argument is given you are prompted for a
.\"O register name. The text is parsed as if it had been typed in from the user's
.\"O keyboard. This command can be used to bind multiple actions to a single key.
指定されたレジスタの内容を \fIscreen\fP の入力キューに入れる。
引き数を与えないと、ユーザにレジスタ名を尋ねるプロンプトを出す。
テキストはユーザがキーボードから入力したかのように解析される。
このコマンドを用いると、複数の動作を 1 つのキーに割り当てできる。
.sp
.ne 3
.B quit
.PP
.\"O Kill all windows and terminate
.\"O .IR screen .
.\"O Note that on VT100-style terminals the keys C-4 and C-\e are identical.
.\"O This makes the default bindings dangerous:
.\"O Be careful not to type C-a C-4 when selecting window no. 4.
.\"O Use the empty bind command (as in \*Qbind '^\e'\*U) to remove a key binding.
すべてのウィンドウを kill し、
.I screen
を終了する。VT100 形式の端末では、C-4 キーと C-\e キーは同一であることに注意。
このため、デフォルトの割り当ては危険である:
ウィンドウ番号 4 を選択するときに、C-a C-4 と入力しないように注意すること。
キー割り当てを削除するには、空の bind コマンドを使えばよい
(\*Qbind '^\e'\*U など)。
.sp
.ne 3
.B readbuf
.RB [ -e
.IR encoding ]
.RI [ filename ]
.PP
.\"O Reads the contents of the specified file into the paste buffer.
.\"O You can tell screen the encoding of the file via the \fB-e\fP option.
.\"O If no file is specified, the screen-exchange filename is used.
.\"O See also \*Qbufferfile\*U command.
指定したファイルの内容をペーストバッファに読み込む。
ファイルのエンコーディングを \fB-e\fP オプションで
screen に知らせることもできる。
ファイルを指定しないと、画面交換ファイルのファイル名が用いられる。
\*Qbufferfile\*U コマンドも参照のこと。
.sp
.ne 3
.B readreg 
.RB [ -e
.IR encoding ]
.RI [ register " [" filename ]]
.PP
.\"O Does one of two things, dependent on number of arguments: with zero or one
.\"O arguments it it duplicates the paste buffer contents into the register specified
.\"O or entered at the prompt. With two arguments it reads the contents of the named 
.\"O file into the register, just as \fIreadbuf\fP reads the screen-exchange file
.\"O into the paste buffer.
.\"O You can tell screen the encoding of the file via the \fB-e\fP option.
.\"O The following example will paste the system's password file into 
.\"O the 
.\"O .I screen 
.\"O window (using register p, where a copy remains):
.\"nakano it it
引き数の数に従って、以下の 2 動作のうちのどちらかを行う:
引き数が 0 個または 1 個の場合には、
ペーストバッファの内容を、指定されたレジスタか、
ユーザに問い合わせて得たレジスタに複製する。
引き数が 2 つの場合には、指定されたファイルの内容をレジスタに読み込む
(\fIreadbuf\fP が画面交換ファイルをペーストバッファに読み込むのと同様)。
ファイルのエンコーディングを \fB-e\fP オプションで
screen に知らせることもできる。
以下の例はシステムのパスワードファイルを
.I screen
の画面にペーストしている
(レジスタ p を用いている。これはコピーが残るレジスタである):
.PP
.nf
	C-a : readreg p /etc/passwd
	C-a : paste p
.fi
.sp
.ne 3
.B redisplay
.PP
.\"O Redisplay the current window. Needed to get a full redisplay when in
.\"O partial redraw mode.
現在のウィンドウを再描画する。
部分再描画モード時に画面全体を書き直す場合に必要となる。
.sp
.ne 3
.B register
.RB [ -e
.IR encoding ]
.I "key string"
.PP
.\"O Save the specified \fIstring\fP to the register \fIkey\fP.
.\"O The encoding of the string can be specified via the \fB-e\fP option.
.\"O See also the \*Qpaste\*U command.
指定された \fIstring\fP をレジスタ \fIkey\fP に保存する。
ファイルのエンコーディングを \fB-e\fP オプションで
screen に知らせることもできる。
\*Qpaste\*U コマンドも参照すること。
.sp
.ne 3
.B "remove"
.PP
.\"O Kill the current region. This is a no-op if there is only one region.
現在のリージョンを kill する。リージョンがひとつしかない場合は no-op となる。
.\"nakano "region"
.sp
.ne 3
.B "removebuf"
.PP
.\"O Unlinks the screen-exchange file used by the commands \*Qwritebuf\*U and 
.\"O \*Qreadbuf\*U. 
\*Qwritebuf\*U コマンドと
\*Qreadbuf\*U コマンドが使う画面交換ファイルを削除 (unlink) する。
.sp
.ne 3
.B "reset"
.PP 
.\"O Reset the virtual terminal to its \*Qpower-on\*U values. Useful when strange
.\"O settings (like scroll regions or graphics character set) are left over from
.\"O an application.
仮想端末を \*Q電源投入状態\*U の値にリセットする。
アプリケーションが設定
(スクロール領域やグラフィック文字集合など)
をおかしくした場合に役に立つ。
.sp
.ne 3
.B "resize"
.PP 
.\"O Resize the current region. The space will be removed from or added to
.\"O the region below or if there's not enough space from the region above.
現在のリージョンのサイズを変更する。
スペースは下方のリージョンから取ったり (に渡したり) するが、
もし余裕がなければ上方のリージョンとやり取りする。
.\"nakano "region"
.IP
.\"O resize +N	increase current region height by N
resize +N	現在のリージョンの高さを N 増やす
.IP
.\"O resize -N	decrease current region height by N
resize -N	現在のリージョンの高さを N 減らす
.IP
.\"O resize  N	set current region height to N
resize N	現在のリージョンの高さを N にする
.IP
.\"O resize  =	make all windows equally high
resize  =	すべてのウィンドウを同じ高さにする
.IP
.\"O resize  max	maximize current region height
resize  max	現在のリージョンの高さを最大にする
.IP
.\"O resize  min	minimize current region height
resize  min	現在のリージョンの高さを最小にする
.PP
.sp
.ne 3
.B "screen \fP[\fI-opts\fP] [\fIn\fP] [\fIcmd\fP [\fIargs\fP]]"
.PP
.\"O Establish a new window.
.\"O The flow-control options (\fB\-f\fP, \fB\-fn\fP and \fB\-fa\fP),
.\"O title (a.\|k.\|a.) option (\fB\-t\fP), login options (\fB-l\fP and \fB-ln\fP)
.\"O , terminal type option (\fB-T\fP <term>), the all-capability-flag (\fB-a\fP)
.\"O and scrollback option (\fB-h\fP <num>) may be specified with each command. 
.\"O The option (\fB-M\fP) turns monitoring on for this window.
.\"O The option (\fB-L\fP) turns output logging on for this window.
.\"O If an optional number \fIn\fP in the range 0..9 is given, the window
.\"O number \fIn\fP is assigned to the newly created window (or, if this
.\"O number is already in-use, the next available number).
.\"O If a command is specified after \*Qscreen\*U, this command (with the given
.\"O arguments) is started in the window; otherwise, a shell is created.
.\"O Thus, if your \*Q.screenrc\*U contains the lines
新しいウィンドウを作る。
フロー制御オプション (\fB\-f\fP, \fB\-fn\fP,\fB\-fa\fP)、
タイトル (別名) オプション (\fB\-t\fP)、
ログインオプション (\fB-l\fP, \fB-ln\fP)、
端末タイプオプション (\fB-T <term>\fP)、
全機能フラグ (\fB-a\fP)、
スクロールバックオプション(\fB-h\fP <num>)
を各コマンドと共に指定できる。
.\"nakano ここの "each command" はなんだろう？
\fB-M\fP オプションを与えると、このウィンドウの監視が on になる。
\fB-L\fP オプションを与えると、このウィンドウの出力ロギングが on になる。
0 から 9 の範囲で数値 \fIn\fP を与えると(これは省略可能)、
新しく生成されるウィンドウにウィンドウ番号 \fIn\fP が割り当てられる
(この番号が既に使用中ならば、その次に利用可能な番号が使われる)。
\*Qscreen\*U の後にコマンドを指定すると、
そのコマンドは (指定された引き数付きで) ウィンドウ内で実行される。
コマンドが指定されていなければ、シェルが生成される。
したがって、\*Q.screenrc\*U に以下のような行がある場合、
.I screen
はシェルウィンドウを (番号 1 のウィンドウに) 生成し、
またマシン foobar に telnet 接続を行うウィンドウ
(フロー制御なし、タイトルは \*Qfoobar\*U, ウィンドウ番号は 2)
を生成し、この telnet セッションをログファイル (\*Qscreenlog.2\*U)
に出力する。
.sp
.nf
	# example for .screenrc:
	screen 1
	screen -fn -t foobar -L 2 telnet foobar
.fi
.sp
.\"O .I screen
.\"O creates a shell window (in window #1) and a window with a TELNET connection
.\"O to the machine foobar (with no flow-control using the title \*Qfoobar\*U
.\"O in window #2) and will write a logfile (\*Qscreenlog.2\*U) of the telnet 
.\"O session.
.\"O Note, that unlike previous versions of
.\"O .I screen
.\"O no additional default window is created when \*Qscreen\*U commands are 
.\"O included in your \*Q.screenrc\*U file. When the initialization is completed,
.\"O .I screen
.\"O switches to the last window specified in your .screenrc file or, if none,
.\"O opens a default window #0.
以前のバージョンの
.I screen
とは異なり、\*Qscreen\*U コマンドが \*Q.screenrc\*U
ファイルに含まれている時には、余分のデフォルトウィンドウは
生成されない点に注意すること。初期化が終了すると、
.I screen
は .screenrc ファイルで指定した最後のウィンドウに切り替わる。
ウィンドウが指定されていないと、
デフォルトの番号 0 のウィンドウを開く。
.br
.\"O Screen has built in some functionality of \*Qcu\*U and \*Qtelnet\*U.
.\"O See also chapter \*QWINDOW TYPES\*U.
screen には \*Qcu\*U と \*Qtelnet\*U の機能がいくつか組み込まれている。
『ウィンドウの種類』の章も参照のこと。
.sp
.ne 3
.B "scrollback \fP\fInum\fP"
.PP
.\"O Set the size of the scrollback buffer for the current windows to \fInum\fP 
.\"O lines. The default scrollback is 100 lines.
.\"O See also the \*Qdefscrollback\*U command and use \*QC-a i\*U to view the 
.\"O current setting.
現在のウィンドウのスクロールバックバッファの大きさを
\fInum\fP 行に設定する。デフォルトのスクロールバックは 100 行である。
\*Qdefscrollback\*U コマンドも参照すること。
また、現在の設定を確認するには \*QC-a i (info)\*U を用いること。
.sp
.ne 3
.BR "select " [ \fIWindowID ]
.PP
.\"O Switch to the window identified by \fIWindowID\fP.
.\"O This can be a prefix of a window title (alphanumeric window name) or a
.\"O window number.
.\"O The parameter is optional and if omitted, you get prompted for an identifier. 
.\"O When a new window is established, the first available number
.\"O is assigned to this window.
.\"O Thus, the first window can be activated by \*Qselect 0\*U.
.\"O The number of windows is limited at compile-time by the MAXWIN
.\"O configuration parameter.
.\"O There are two special WindowIDs, \*Q-\*U selects the
.\"O internal blank window and \*Q.\*U selects the current window. The
.\"O latter is useful if used with screen's \*Q-X\*U option.
\fIWindowID\fP で指定したウィンドウに切り替える。
これはウィンドウタイトル (英字・数字のウィンドウ名) の先頭からの文字列か、
ウィンドウの番号である。
このパラメータは省略でき、その場合はユーザに識別子の問い合わせを行う。
新しいウィンドウが生成されると、
利用可能な最初の数がこのウィンドウに割り当てられる。
したがって、先頭のウィンドウは \*Qselect 0\*U で呼び出せる。
ウィンドウの総数は、コンパイル時の設定パラメータ MAXWIN によって制限される。
特殊な意味を持つ WindowID が二つ存在する。\*Q-\*U
は内部のブランクウィンドウを選択し、\*Q.\*U は現在のウィンドウを選択する。
後者は screen の \*Q-X\*U と一緒に用いると便利だろう。
.sp
.ne
.BR "sessionname " [ \fIname ]
.PP
.\"O Rename the current session. Note, that for \*Qscreen -list\*U the
.\"O name shows up with the process-id prepended. If the argument \*Qname\*U
.\"O is omitted, the name of this session is displayed. Caution: The $STY 
.\"O environment variables still reflects the old name. This may result in 
.\"O confusion. 
.\"O The default is constructed from the tty and host names.
現在のセッションの名前を変更する。この名前は、
\*Qscreen -list\*U ではプロセス ID と共に表示される点に注意すること。
引き数 \*Qname\*U を省略すると、このセッションの名前が表示される。
注意: この変更後も、環境変数 $STY は古い名前を反映したままである。
これにより混乱が起こるかもしれない。
デフォルト値は tty とホスト名から作られる。
.sp
.ne 3
.B "setenv " 
.RI [ var " [" string ]]
.PP
.\"O Set the environment variable \fIvar\fP to value \fIstring\fP.
.\"O If only \fIvar\fP is specified, the user will be prompted to enter a value.
.\"O If no parameters are specified, the user will be prompted for both variable
.\"O and value. The environment is inherited by all subsequently forked shells.
環境変数 \fIvar\fP の値を \fIstring\fP に設定する。
\fIvar\fP だけが指定されるとプロンプトが表示され、
値の入力がユーザに求められる。パラメータが全く指定されていなければ、
変数名と値の両方がユーザに問い合わせられる。
この環境変数は、設定以降に fork されるすべてのシェルに継承される。
.sp
.ne 3
.BR "setsid " [ on | off ]
.PP
.\"O Normally screen uses different sessions and process groups for
.\"O the windows. If setsid is turned \fIoff\fP, this is not done
.\"O anymore and all windows will be in the same process group as the
.\"O screen backend process. This also breaks job-control, so be careful.
.\"O The default is \fIon\fP, of course. This command is probably useful
.\"O only in rare circumstances.
通常 screen は各ウィンドウごとに別々のセッションとプロセスグループとを用いる。
setsid を \fIoff\fP にすると、以降これは行われないようになり、
すべてのウィンドウはバックエンドの screen プロセスと同じプロセスグループに
属するようになる。これはジョブ制御を不可能にすることに注意。
デフォルトは当然 \fIon\fP である。このコマンドが有用なのは、
おそらくかなりまれな状況に限られるだろう。
.sp
.ne 3
.B "shell \fIcommand\fP"
.PP
.\"O Set the command to be used to create a new shell.
.\"O This overrides the value of the environment variable $SHELL.
.\"O This is useful if you'd like to run a tty-enhancer which is expecting to
.\"O execute the program specified in $SHELL. If the command begins with
.\"O a '-' character, the shell will be started as a login-shell.
新しいシェルを生成するために使うコマンドを設定する。
これは環境変数 $SHELL の値より優先される。
これは、$SHELL を起動プログラムの指定に用いるような
tty 強化プログラムを使いたい時に便利である。
コマンドの最初の文字が '-' ならば、シェルはログインシェルとして起動される。
.sp
.ne 3
.B "shelltitle \fItitle\fP"
.PP
.\"O Set the title for all shells created during startup or by
.\"O the C-A C-c command.
.\"O For details about what a title is, see the discussion
.\"O entitled \*QTITLES (naming windows)\*U.
起動時や C-A C-c コマンドによって生成された、
すべてのシェルのタイトルを設定する。
タイトルに関する詳細は、
『タイトル (ウィンドウの命名)』の章での議論を参照のこと。
.sp
.ne 3
.BR "silence " [ on | off "|\fIsec\fP]"
.PP
.\"O Toggles silence monitoring of windows.
.\"O When silence is turned on and an affected window is switched into the
.\"O background, you will receive the silence notification message in the
.\"O status line after a specified period of inactivity (silence). The default
.\"O timeout can be changed with the `silencewait' command or by specifying a 
.\"O number of seconds instead of `on' or `off'.
.\"O Silence is initially off for all windows.
ウィンドウの沈黙監視 (silence monitoring) をトグルする。
silence が on で、かつその影響を受けるウィンドウが
バックグラウンドに回されたとき、
指定された期間の間アクティビティがなければ (沈黙していれば)、
沈黙通知のメッセージがステータス行に表示される。
デフォルトのタイムアウトは `silencewait' コマンドで変更できる。
あるいは `on' や `off' の代わりに秒数を指定することもできる。
初期状態では、すべてのウィンドウで silence は off である。
.sp
.ne 3
.BI "silencewait " sec
.PP
.\"O Define the time that all windows monitored for silence should wait before
.\"O displaying a message. Default 30 seconds.
沈黙を監視するウィンドウにおける、
メッセージ表示までの待ち時間を指定する。
デフォルト値は 30 秒である。
.sp
.ne
.B "sleep \fP\fInum\fP"
.PP
.\"O This command will pause the execution of a .screenrc file for \fInum\fP seconds.
.\"O Keyboard activity will end the sleep.
.\"O It may be used to give users a chance to read the messages output by \*Qecho\*U.
このコマンドは、.screenrc ファイルの実行を \fInum\fP 秒間一時停止させる。
キーボード入力があると sleep は終了する。これを用いると、
\*Qecho\*U による出力を読むチャンスをユーザに与えられる。
.sp
.ne 3
.B "slowpaste \fImsec\fP"
.PP
.\"O Define the speed at which text is inserted into the current window by the 
.\"O paste ("C-a ]") command. 
.\"O If the slowpaste value is nonzero text is written character by character.
.\"O .I screen
.\"O will make a pause of \fImsec\fP milliseconds after each single character write 
.\"O to allow the application to process its input. Only use slowpaste if your 
.\"O underlying system exposes flow control problems while pasting large amounts of 
.\"O text. 
paste コマンド ("C-a ]") によってテキストを挿入する時の速度を定義する。
slowpaste の値が 0 でなければ、テキストは 1 文字ずつ書き込まれる。
.I screen
は 1 文字書き込むたびに \fImsec\fP ミリ秒停止し、
アプリケーションがこの入力を処理する時間を与える。
slowpaste コマンドは、大量のテキストをペーストしたときに、
下層のシステムでフロー制御の問題が起こる場合にのみ用いること。
.sp
.ne 3
.BI "source " file
.PP
.\"O Read and execute commands from file \fIfile\fP. Source commands may
.\"O be nested to a maximum recursion level of ten. If file is not an
.\"O absolute path and screen is already processing a source command, the
.\"O parent directory of the running source command file is used to search
.\"O for the new command file before screen's current directory.
\fIfile\fP からコマンドを読んで実行する。source コマンドはネストでき、
最大の再帰レベルは 10 である。ファイルが絶対パスでなく、
すでに screen が source コマンドを処理中の場合は、
screen のカレントディレクトリよりも先に、
実行中の source コマンドファイルの親ディレクトリが、
新たなコマンドファイルの検索に用いられる。
.PP
.\"O Note that termcap/terminfo/termcapinfo commands only work at
.\"O startup and reattach time, so they must be reached via the
.\"O default screenrc files to have an effect.
temcap/terminfo/termcapinfo コマンドは起動時か
再アタッチの時にしか動作しないことに注意。
したがってこれらを機能させるには、
デフォルトの screenrc ファイルから呼ばれるところに置いておかねばならない。
.sp
.ne 3
.B sorendition
.RB [ "\fIattr\fR " [ \fIcolor ]]
.PP
.\"O Change the way 
.\"O .I screen 
.\"O does highlighting for text marking and printing messages.
.\"O See the \*QSTRING ESCAPES\*U chapter for the syntax of the modifiers.
.\"O The default is currently \*Q=s dd\*U (standout, default colors).
テキストのマーキングや印刷メッセージで、
.I screen
が行うハイライト表示のさせかたを変更する。
.I attr
修正指定の文法は『文字エスケープ』の章を見ること。
現在のデフォルトは \*Q=s dd\*U である (スタンドアウト、デフォルト色)。
.sp
.ne 3
.B split
.PP
.\"O Split the current region into two new ones. All regions on the
.\"O display are resized to make room for the new region. The blank
.\"O window is displayed on the new region. Use the \*Qremove\*U or the
.\"O \*Qonly\*U command to delete regions.
現在のリージョンを 2 つに分割する。
新たなリージョンの場所を確保するため、画面上のすべてのリージョンはリサイズされる。
新しいリージョンにはブランクウィンドウが表示される。
リージョンの削除には、\*Qremove\*U コマンドまたは \*Qonly\*U コマンドを用いること。
.\"nakano region
.sp
.ne 3
.B "startup_message on\fP|\fBoff"
.PP
.\"O Select whether you want to see the copyright notice during startup.
.\"O Default is `on', as you probably noticed.
起動時に著作権表示を表示するかどうかを選ぶ。
デフォルト値は、おそらく既にお気付きの通り、`on' である。
.sp
.ne 3
.B stuff
.I string
.PP
.\"O Stuff the string
.\"O .I string
.\"O in the input buffer of the current window.
.\"O This is like the \*Qpaste\*U command but with much less overhead.
.\"O You cannot paste
.\"O large buffers with the \*Qstuff\*U command. It is most useful for key
.\"O bindings. See also \*Qbindkey\*U.
文字列
.I string
をカレントウィンドウの入力バッファに置く。
これは \*Qpaste\*U コマンドと似ているが、
こちらの方がオーバーヘッドが小さい。
\*Qstuff\*U コマンドでは大きなバッファのペーストはできない。
このコマンドは、キー割り当てで用いると非常に便利である。
\*Qbindkey\*U も参照すること。
.sp
.ne 3
.B su
.RB [ username " [" password
.RB [ password2 ]]
.PP
.\"O Substitute the user of a display. The command prompts for all parameters that
.\"O are omitted. If passwords are specified as parameters, they have to be
.\"O specified un-crypted. The first password is matched against the systems
.\"O passwd database, the second password is matched against the 
.\"O .I screen
.\"O password as set with the commands \*Qacladd\*U or \*Qpassword\*U.
.\"O \*QSu\*U may be useful for the 
.\"O .I screen
.\"O administrator to test multiuser setups.
ディスプレイのユーザを変更する。省略されたパラメータについては、
すべて問い合わせのプロンプトを出す。パスワードをパラメータに指定する場合は、
暗号化されていないかたちでなければならない。
一番目のパスワードはシステムのパスワードデータベースに対してマッチが行われ、
二番目のパスワードは \*Qacladd\*U コマンドや
\*Qpassword\*U コマンドで設定された
.I screen
のパスワードに対してマッチが行われる。
\*Qsu\*U は、
.I screen
の管理者がマルチユーザ設定をテストする際に便利であろう。
.\"						XXX removed in 3.8.0 XXX
.\" but it is mainly used implicitly
.\" by the \*Qconnect\*U command to identify users that access a remote session.
.\"O When the identification fails, the user has access to the commands available
.\"O for user
.\"O .BR nobody .
.\"O These are \*Qdetach\*U, \*Qlicense\*U, \*Qversion\*U, \*Qhelp\*U and
.\"O \*Qdisplays\*U.
認証に失敗すると、そのユーザがアクセスできるコマンドはユーザ
.B nobody
が使えるもの
(すなわち
\*Qdetach\*U, \*Qlicense\*U, \*Qversion\*U, \*Qhelp\*U, \*Qdisplays\*U)
に限られる。
.sp
.ne 3
.B "suspend"
.PP
.\"O Suspend
.\"O .IR screen .
.\"O The windows are in the `detached' state, while 
.\"O .I screen
.\"O is suspended. This feature relies on the shell being able to do job control.
.I screen
をサスペンドする。
.I screen
がサスペンドされている間は、ウィンドウは「デタッチされた」状態となる。
この機能は、シェルのジョブ制御機能に依存している。
.sp
.ne 3
.B "term \fIterm\fP"
.PP
.\"O In each window's environment
.\"O .I screen
.\"O opens, the $TERM variable is set to \*Qscreen\*U by default. 
.\"O But when no description for \*Qscreen\*U is installed in the local termcap
.\"O or terminfo data base, you set $TERM to \- say \-
.\"O \*Qvt100\*U. This won't do much harm, as 
.\"O .I screen
.\"O is VT100/ANSI compatible.
.\"O The use of the \*Qterm\*U command is discouraged for non-default purpose.
.\"O That is, one may want to specify special $TERM settings (e.g. vt100) for the
.\"O next \*Qscreen rlogin othermachine\*U command. Use the command \*Qscreen -T vt100
.\"O rlogin othermachine\*U rather than setting and resetting the default.
.I screen
がオープンした各ウィンドウの環境変数 $TERM には、デフォルトでは
\*Qscreen\*U が設定される。
しかし、ローカルの termcap または terminfo データベースに
\*Qscreen\*U 用の記述がインストールされていないときには、
$TERM には (例えば) \*Qvt100\*U を設定すると良い。
.I screen
は VT100/ANSI 互換なので、これならあまり問題は起きないだろう。
デフォルト値を設定する目的以外に
\*Qterm\*U コマンドを使うのは避けたほうがよい。
例えば、\*Qscreen rlogin othermachine\*U の実行前に
特殊な $TERM (vt100 等) を設定したいような場合である。
このような時には、デフォルト値を変更・復帰するのではなく、
\*Qscreen -T vt100 rlogin othermachine\*U というコマンドを用いると良い。
.sp
.ne 3
.BI termcap " term terminal-tweaks"
.RI [ window-tweaks ]
.br
.BI terminfo " term terminal-tweaks"
.RI [ window-tweaks ]
.br
.BI termcapinfo " term terminal-tweaks"
.RI [ window-tweaks ]
.PP
.\"O Use this command to modify your terminal's termcap entry without going
.\"O through all the hassles involved in creating a custom termcap entry.
.\"O Plus, you can optionally customize the termcap generated for the windows.
.\"O You have to place these commands in one of the screenrc startup files, as
.\"O they are meaningless once the terminal emulator is booted.  
このコマンドを使うと、
独自の termcap エントリを作るという面倒な作業を行わずに、
端末の termcap エントリを修正できる。
さらに、そのウィンドウ用に生成された termcap のカスタマイズもできる。
端末エミュレータが起動したらこれらの設定は意味を持たないので、
これらのコマンドは
screenrc スタートアップファイルのどこかに置かなければならない。
.\"O .br
.PP
.\"O If your system works uses the terminfo database rather than termcap, 
.\"O .I screen 
.\"O will understand the `terminfo' command, which has the same effects as the
.\"O `termcap' command.  Two separate commands are provided, as there are subtle
.\"O syntactic differences, e.g. when parameter interpolation (using `%') is
.\"O required. Note that termcap names of the capabilities have to be used
.\"O with the `terminfo' command. 
termcap でなく terminfo データベースで動作するシステムでは、
.I screen
は `terminfo' コマンドを認識する
(このコマンドの効果は `termcap' コマンドと同じ)。
2 つの異なるコマンドが提供されているのは、
例えば (`%' を用いた) パラメータ挿入が必要な場合などに、
文法が微妙に異なるからである。
なお、 `terminfo' コマンドでも、
各機能の名前には termcap でのものを使わなければならない。
.\"O .br
.PP
.\"O In many cases, where the arguments are valid in both terminfo and termcap
.\"O syntax, you can use the command `termcapinfo', which is just a shorthand
.\"O for a pair of `termcap' and `terminfo' commands with identical arguments.
多くの場合、つまり引き数が terminfo と termcap どちらの文法でも有効な場合は、
`termcapinfo' コマンドが使える。このコマンドは、`termcap'
コマンドと `terminfo' コマンドとの両方を、同じ引き数で実行するものである。
.PP
.\"O The first argument specifies which terminal(s) should be affected by this
.\"O definition.
.\"O You can specify multiple terminal names by separating them with `|'s.
.\"O Use `*' to match all terminals and `vt*' to match all terminals that begin
.\"O with \*Qvt\*U.
最初の引き数は、この定義がどの端末に影響するかを指定する。
端末名を `|' で区切ることにより、複数の端末を指定できる。
すべての端末にマッチさせるには `*' を用い、\*Qvt\*U で始まるすべての端末に
マッチさせるには `vt*' を用いれば良い。
.PP
.\"O Each \fItweak\fP argument contains one or more termcap defines (separated
.\"O by `:'s) to be inserted at the start of the appropriate termcap entry,
.\"O enhancing it or overriding existing values.
.\"O The first tweak modifies your terminal's termcap, and contains definitions
.\"O that your terminal uses to perform certain functions.
.\"O Specify a null string to leave this unchanged (e.\|g. '').
.\"O The second (optional) tweak modifies all the window termcaps, and should
.\"O contain definitions that
.\"O .I screen
.\"O understands (see the \*QVIRTUAL TERMINAL\*U
.\"O section).
各 \fItweak\fP 引き数には、適切な termcap エントリの先頭に挿入される、
1 つ以上の termcap 定義 (`:' で区切る) が含まれる。
これによりエントリを拡張したり、既定の値を変更したりできる。
最初の tweak は使っている端末の termcap を修正するもので、
使っている端末が何らかの機能を実現するために用いる定義を含む。
これを変更しないのならば空文字列 (つまり '') を指定すること。
2 番目の (省略可能な) tweak は、
全ウィンドウの termcap を変更するもので、
.I screen
が理解する定義を含まなければならない
(『仮想端末』の章を参照すること)。
.PP
.\"O Some examples:
いくつか例を示す:
.IP
termcap xterm*  LP:hs@
.PP
.\"O Informs
.\"O .I screen
.\"O that all terminals that begin with `xterm' have firm auto-margins that
.\"O allow the last position on the screen to be updated (LP), but they don't
.\"O really have a status line (no 'hs' \- append `@' to turn entries off).
.\"O Note that we assume `LP' for all terminal names that start with \*Qvt\*U,
.\"O but only if you don't specify a termcap command for that terminal.
これは、
`xterm' で始まるすべての端末はちゃんとした自動マージン機能を持っており、
画面の最後の位置を更新できる (LP) が、ステータス行を本当に持っていないこと
('hs' がない \- エントリを無効にするには `@' を追加する) を
.I screen
に知らせる。
なお\*Qvt\*U で始まるすべての端末名には `LP' があるものと想定しているが、
これはその端末に対して termcap コマンドを指定していない場合に限られる。
.IP
termcap vt*  LP
.br
termcap vt102|vt220  Z0=\eE[?3h:Z1=\eE[?3l
.PP
.\"O Specifies the firm-margined `LP' capability for all terminals that begin with
.\"O `vt', and the second line will also add the escape-sequences to switch
.\"O into (Z0) and back out of (Z1) 132-character-per-line mode if this is
.\"O a VT102 or VT220.
.\"O (You must specify Z0 and Z1 in your termcap to use the width-changing
.\"O commands.)
最初の行は、`vt' で始まるすべての端末に、
確実にマージン機能が動作する `LP' 機能があることを指定する。
次の行は、端末が VT102 または VT220 の時に、
132 文字/行モードにしたり (Z0)、これを解除する (Z1)
エスケープシーケンスを追加する
(画面幅変更コマンドを用いるには、
termcap ファイルに Z0 と Z1 を指定しなければならない)。
.IP
termcap vt100  ""  l0=PF1:l1=PF2:l2=PF3:l3=PF4
.PP
.\"O This leaves your vt100 termcap alone and adds the function key labels to
.\"O each window's termcap entry.
これは VT100 の termcap はそのままにしておき、
各ウィンドウの termcap エントリにファンクションキーのラベルを追加する。
.IP
termcap h19|z19  am@:im=\eE@:ei=\eEO  dc=\eE[P
.PP
.\"O Takes a h19 or z19 termcap and turns off auto-margins (am@) and enables the
.\"O insert mode (im) and end-insert (ei) capabilities (the `@' in the `im'
.\"O string is after the `=', so it is part of the string).
.\"O Having the `im' and `ei' definitions put into your terminal's termcap will
.\"O cause
.\"O .I screen
.\"O to automatically advertise the character-insert capability in
.\"O each window's termcap.
.\"O Each window will also get the delete-character capability (dc) added to its
.\"O termcap, which
.\"O .I screen
.\"O will translate into a line-update for the terminal
.\"O (we're pretending it doesn't support character deletion).
h19 または z19 termcap での自動マージンを無効にし(am@)、挿入モード
(im) と挿入終了 (ei) 機能を有効にする
(`im' の文字列中の `@' は `=' の後にあるので、この文字列の一部である)。
`im' と `ei' の定義を使っている端末の termcap に入れると、
.I screen
は各ウィンドウの termcap の文字挿入機能を自動的に告知する。
各ウィンドウの termcap には、文字削除機能 (dc) も追加され、
.I screen
はその端末での行更新機能に変換する
(つまり文字削除をサポートしていないものとみなす)。
.PP
.\"O If you would like to fully specify each window's termcap entry, you should
.\"O instead set the $SCREENCAP variable prior to running
.\"O .IR screen .
.\"O See the discussion on the \*QVIRTUAL TERMINAL\*U in this manual, and the termcap(5)
.\"O man page for more information on termcap definitions.
各ウィンドウの termcap エントリをすべて定義したければ、
このコマンドを用いるのではなく、
.I screen
を実行する前に $SCREENCAP 変数を設定すること。
termcap の定義に関する詳しい情報については、
このマニュアルの『仮想端末』での議論と、
オンラインマニュアルの
.BR termcap (5)
とを参照すること。
.sp
.ne 3
.B time
.RI [ string ]
.PP
.\"O Uses the message line to display the time of day, the host name, and the load
.\"O averages over 1, 5, and 15 minutes (if this is available on your system).
.\"O For window specific information use \*Qinfo\*U.
メッセージ行を用いて、時刻、ホスト名、1, 5, 15 分間のロードアベレージ
(使っているシステムで可能なら) を表示する。
ウィンドウ固有の情報については \*Qinfo\*U を用いること。
.PP
.\"O If a string is specified, it changes the format of the time report like it is
.\"O described in the \*QSTRING ESCAPES\*U chapter. Screen uses a default of
.\"O "%c:%s %M %d %H%? %l%?".
string を指定すると、時刻の報告形式を
\*Q文字エスケープ\*U の章で記述する方法に従って変更する。
screen はデフォルトでは "%c:%s %M %d %H%? %l%?" を用いる。
.sp
.ne 3
.BR "title " [ \fIwindowtitle ]
.PP
.\"O Set the name of the current window to \fIwindowtitle\fP. If no name is 
.\"O specified,
.\"O .I screen
.\"O prompts for one. This command was known as `aka' in previous
.\"O releases.
現在のウィンドウの名前を \fIwindowtitle\fP に設定する。
名前が指定されないと、
.I screen
はユーザに入力を求める。
このコマンドは過去のリリースでは `aka' コマンドという名前だった。
.sp
.ne 3
.BI "unsetenv " var
.PP
.\"O Unset an environment variable.
環境変数の設定を取り消す。
.sp
.ne 3
.B utf8
.RB [ on | off
.RB [ on | off ]]
.PP
.\"O Change the encoding used in the current window. If utf8 is enabled, the
.\"O strings sent to the window will be UTF-8 encoded and vice versa. Omitting the
.\"O parameter toggles the setting. If a second parameter is given, the display's
.\"O encoding is also changed (this should rather be done with screen's \*Q-U\*U
.\"O option).
.\"O See also \*Qdefutf8\*U, which changes the default setting of a new
.\"O window.
現在のウィンドウが用いるエンコーディングを変更する。
utf8 を on にすると、ウィンドウに送られる文字列は UTF-8 エンコードされる
(逆も同じ)。パラメータを省略すると状態をトグルする。
二つ目のパラメータを与えると、
ディスプレイのエンコーディングも同時に変更される
(これは screen の \*Q-U\*U オプションで指定するほうが良いが)。
\*Qdefutf8\*U も参照のこと。
これは新規に生成されるウィンドウのデフォルトを変更する。
.sp
.ne 3
.B vbell 
.RB [ on | off ]
.PP
.\"O Sets the visual bell setting for this window. Omitting the parameter
.\"O toggles the setting. If vbell is switched on, but your terminal does not 
.\"O support a visual bell, a `vbell-message' is displayed in the status line when
.\"O the bell character (^G) is received.
.\"O Visual bell support of a terminal is defined by the termcap variable `vb' 
.\"O (terminfo: 'flash'). 
このウィンドウの可視ベル (visual bell) を設定する。
可視ベルが on で、
使っている端末が可視ベルをサポートしていない場合には、
ベル文字 (^G) を受信した際に `vbell-message' がステータス行に表示される。
端末が可視ベルをサポートしているかどうかは termcap 変数 `vb'
(terminfo では 'flash') で定義される。
.\"O .br
.PP
.\"O Per default, vbell is off, thus the audible bell is used. 
.\"O See also `bell_msg'.
デフォルトでは vbell は off になっており、
音声ベル (audible bell) が用いられる。
`bell_msg' も参照のこと。
.sp
.ne 3
.B vbell_msg
.RI [ message ]
.PP
.\"O Sets the visual bell message. \fImessage\fP is printed to the status line if
.\"O the window receives a bell character (^G), vbell is set to \*Qon\*U, but the 
.\"O terminal does not support a visual bell.
.\"O The default message is \*QWuff, Wuff!!\*U.
.\"O Without parameter, the current message is shown.
可視ベルのメッセージを設定する。ウィンドウがベル文字 (^G) を受け取り、
かつ vbell が \*Qon\*U に設定されているが、
しかし端末が可視ベルをサポートしていない場合、
\fImessage\fP がステータス行に表示される。
デフォルトのメッセージは `\*QWuff, Wuff!!\*U' である。
パラメータを省略すると、現在のメッセージが表示される。
.sp
.ne 3
.BI "vbellwait " sec
.PP
.\"O Define a delay in seconds after each display of 
.\"O .IR screen 's
.\"O visual bell message. The default is 1 second.
.IR screen
の可視ベルメッセージが表示された後の待ち時間を定義する。
デフォルト値は 1 秒である。
.sp
.ne 3
.B verbose
.RB [ on | off ]
.PP
.\"O If verbose is switched on, the command name is echoed, whenever a window
.\"O is created (or resurrected from zombie state). Default is off.
.\"O Without parameter, the current setting is shown.
verbose を on にすると、ウィンドウが生成される
(あるいはゾンビ状態から復活する) ときに、コマンド名がエコーされる。
パラメータを省略すると、現在の設定が表示される。
.sp
.ne 3
.B version
.PP
.\"O Print the current version and the compile date in the status line.
現在のバージョンとコンパイルされた日時をステータス行に表示する。
.sp
.ne 3
.BI "wall " "message"
.PP
.\"O Write a message to all displays. The message will appear in the terminal's
.\"O status line.
すべてのディスプレイにメッセージを書き込む。
このメッセージは端末のステータス行に現れる。
.sp
.ne 3
.B width
.RB [ -w | -d ]
.RI [ cols " [" lines ]]
.PP
.\"O Toggle the window width between 80 and 132 columns or set it to \fIcols\fP 
.\"O columns if an argument is specified. 
.\"O This requires a capable terminal and the termcap entries \*QZ0\*U and \*QZ1\*U.
.\"O See the \*Qtermcap\*U command for more information. You can also specify
.\"O a new height if you want to change both values.
.\"O The
.\"O .B -w
.\"O option tells screen to leave the display size unchanged and just set
.\"O the window size,
.\"O .B -d
.\"O vice versa.
ウィンドウの幅を 80 と 132 カラムの間でトグルする。
または引き数を指定すると \fInum\fP カラムに設定する。
この機能を持った端末と、termcap のエントリ \*QZ0\*U, \*QZ1\*U を必要とする。
詳細は \*Qtermcap\*U コマンドを参照すること。
同時に高さを指定して変更することもできる。
.B -w
オプションを指定すると、
ディスプレイのサイズはそのままにウィンドウのサイズだけを変更する。
.B -d
はその逆である。
.sp
.ne 3
.B windowlist
.RB [ -b ]
.RB [ -m ]
.br
.B windowlist
.B string
.RI [ string ]
.br
.B windowlist
.B title
.RI [ title ]
.PP
.\"O Display all windows in a table for visual window selection. The
.\"O desired window can be selected via the standard movement keys (see
.\"O the \*Qcopy\*U command) and activated via the return key.
.\"O If the 
.\"O .B -b
.\"O option is given, screen will switch to the blank window before
.\"O presenting the list, so that the current window is also selectable.
.\"O The
.\"O .B -m
.\"O option changes the order of the windows, instead of sorting by
.\"O window numbers screen uses its internal most-recently-used list.
全ウィンドウを表形式で示し、ビジュアルにウィンドウを選択できるようにする。
通常の移動キー (\*Qcopy\*U コマンドを見よ) でウィンドウを選択でき、
リターンキーで切り替えできる。
.B -b
オプションを与えると、screen はリストを表示する前に
ブランクウィンドウに切り替わるので、カレントウィンドウも選択できるようになる。
.B -m
オプションはウィンドウの並び順を変更する。
ウィンドウ番号の代わりに、screen が内部で持っている
「最終利用時刻」順のリストが用いられる。
.PP
.\"O The table format can be changed with the \fBstring\fP and
.\"O \fBtitle\fP option, the title is displayed as table heading, while
.\"O the lines are made by using the string setting. The default
.\"O setting is \*QNum Name%=Flags\*U for the title and \*Q%3n %t%=%f\*U
.\"O for the lines.
.\"O See the \*QSTRING ESCAPES\*U chapter for more codes (e.g. color
.\"O settings).
表のフォーマットは \fBstring\fP オプションと
\fBtitle\fP オプションとで変更できる。title は表の先頭に表示され、
各レコードには string の設定が用いられる。デフォルトの設定は
title が \*QNum Name%=Flags\*U で、
各レコードが \*Q%3n %t%=%f\*U である。
もっと複雑なこと (色設定など) をしたければ、
『文字エスケープ』を参照のこと。
.sp
.ne 3
.B windows
.PP
.\"O Uses the message line to display a list of all the windows.
.\"O Each window is listed by number with the name of process that has been
.\"O started in the window (or its title);
.\"O the current window is marked with a `*';
.\"O the previous window is marked with a `-';
.\"O all the windows that are \*Qlogged in\*U are marked with a `$';
.\"O a background window that has received a bell is marked with a `!';
.\"O a background window that is being monitored and has had activity occur
.\"O is marked with an `@';
.\"O a window which has output logging turned on is marked with `(L)'; 
.\"O windows occupied by other users are marked with `&';
.\"O windows in the zombie state are marked with `Z'.
.\"O If this list is too long to fit on the terminal's status line only the
.\"O portion around the current window is displayed.
メッセージ行を使ってすべてのウィンドウの一覧を表示する。
ウィンドウは番号順に並べられ、ウィンドウで起動されたプロセスの名前
(またはウィンドウのタイトル) もそれぞれ表示される。
現在のウィンドウには `*' が付く。
ひとつ前のウィンドウには `-' が付く。
「ログイン」されているすべてのウィンドウには `$' が付く。
ベル文字を受け取ったバックグラウンドウィンドウには `!' が付く。
監視中で、アクティビティが検出されたバックグラウンドウィンドウには
`@' が付く。
ログ出力が有効になっているウィンドウには `(L)' が付く。
他のユーザが保有しているウィンドウには `&' が付く。
ゾンビ状態のウィンドウには `Z' が付く。
この一覧が長すぎて、端末のステータス行ではすべてを表示できない場合には、
現在のウィンドウの近辺だけが表示される。
.sp
.ne 3
.BR "wrap " [ on | off ]
.PP
.\"O Sets the line-wrap setting for the current window.
.\"O When line-wrap is on, the second consecutive printable character output at
.\"O the last column of a line will wrap to the start of the following line.
.\"O As an added feature, backspace (^H) will also wrap through the left margin
.\"O to the previous line.
.\"O Default is `on'.
現在のウィンドウの行折り返しを設定する。
行折り返しが有効ならば、ある行の最後のカラムの次にある
表示可能文字の出力は、次の行の先頭へ折り返される。
追加機能として、バックスペース (^H) も画面の左端から前の行に折り返しで戻る。
デフォルト値は `on' である。
.sp
.ne 3
.B writebuf
.RB [ -e
.IR encoding ]
.RI [ filename ]
.PP
.\"O Writes the contents of the paste buffer to the specified file, or the public accessible screen-exchange
.\"O file if no filename is given. This is thought of as a primitive means of communication between
.\"O .I screen
.\"O users on the same host. If an encoding is specified the paste buffer
.\"O is recoded on the fly to match the encoding.
.\"O The filename can be set with the \fIbufferfile\fP
.\"O command and defaults to \*Q/tmp/screen-exchange\*U.
ペーストバッファの内容を指定したファイルに書き出す。
ファイルを指定しないと誰でもアクセスできる画面交換ファイルに書き出す。
これは、同じホスト上の
.I screen
のユーザ間がコミュニケーションするための原始的な方法ともみなせる。
encoding を指定すると、ペーストバッファへの記録は、
そのエンコードに合うように自動的に変換される。
ファイル名は \*Qbufferfile\*U コマンドで設定でき、
そのデフォルト値は \fI/tmp/screen-exchange\fP である。
.sp
.ne 3
.BR "writelock " [ on | "off\fR|\fBauto\fR]"
.PP
.\"O In addition to access control lists, not all users may be able to write to
.\"O the same window at once. Per default, writelock is in `auto' mode and
.\"O grants exclusive input permission to the user who is the first to switch
.\"O to the particular window. When he leaves the window, other users may obtain
.\"O the writelock (automatically). The writelock of the current window is disabled
.\"O by the command \*Qwritelock off\*U. If the user issues the command 
.\"O \*Qwritelock on\*U he keeps the exclusive write permission while switching
.\"O to other windows.
アクセス制御リストによる制限とは別に、
必ずしもすべてのユーザが同じウィンドウに同時に書き込みできるわけではない。
デフォルトでは、書き込みロックは `auto' モードになっており、
ある特定のウィンドウに最初に切り替えたユーザが、
排他的な入力パーミッションを得るようになっている。
このユーザがそのウィンドウを離れると、
他のユーザが (自動的に) 書き込みロックを取得できるようになる。
現在のウィンドウの書き込みロックは \*Qwritelock off\*U コマンドで無効となる。
ユーザが \*Qwritelock on\*U コマンドを発行すると、
そのユーザは他のウィンドウに切り替えている間も
排他的な書き込みパーミッションを保持し続ける。
.sp
.ne 3
.B xoff
.br
.B xon
.PP
.\"O Insert a CTRL-s / CTRL-q character to the stdin queue of the
.\"O current window.
CTRL-s / CTRL-q 文字を現在のウィンドウの標準入力キューに挿入する。
.sp
.ne 3
.B zmodem
.RB [ off\fR|\fPauto\fR|\fPcatch\fR|\fPpass ]
.br
.B "zmodem sendcmd"
.RI [ string ]
.br
.B "zmodem recvcmd"
.RI [ string ]
.PP
.\"O Define zmodem support for screen. Screen understands two different
.\"O modes when it detects a zmodem request: \*Qpass\*U and \*Qcatch\*U.
.\"O If the mode is set to \*Qpass\*U, screen will relay all data
.\"O to the attacher until the end of the transmission is reached.
.\"O In \*Qcatch\*U mode screen acts as a zmodem endpoint and starts
.\"O the corresponding rz/sz commands. If the mode is set to \*Qauto\*U,
.\"O screen will use \*Qcatch\*U if the window is a tty (e.g. a serial line),
.\"O otherwise it will use \*Qpass\*U.
.br
.\"O You can define the templates screen uses in \*Qcatch\*U mode
.\"O via the second and the third form.
screen の zmodem サポートを定義する。
screen が zmodem 要求を検知した際の動作には、
2 つのモード \*Qpass\*U と \*Qcatch\*U がある。
\*Qpass\*U モードでは、screen は通信の末尾に至るまでのすべてのデータを
アタッチしているプロセスに転送する。
\*Qcatch\*U モードでは、screen は zmodem の通信端末となり、
それぞれ rz/sz コマンドを起動する。\*Qauto\*U モードでは、
screen はウィンドウが tty (例えばシリアルライン) なら
\*Qcatch\*U を用い、それ以外なら \*Qpass\*U を用いる。
.\"O .br
.\"O Note also that this is an experimental feature.
この機能はまだ実験段階のものである。
.sp
.ne 3
.BR "zombie " [\fIkeys\fP]
.br
.BR "defzombie " [\fIkeys\fP]
.PP
.\"O Per default
.\"O .I screen 
.\"O windows are removed from the window list as soon as
.\"O the windows process (e.g. shell) exits. When a string of two keys is 
.\"O specified to the zombie command, `dead' windows will remain in the list.
.\"O The \fBkill\fP command may be used to remove such a window. Pressing the 
.\"O first key in the dead window has the same effect. When pressing the second 
.\"O key, 
.\"O .I screen 
.\"O will attempt to resurrect the window. The process that was 
.\"O initially running in the window will be launched again. Calling \fBzombie\fP
.\"O without parameters will clear the zombie setting, thus making windows disappear 
.\"O when their process exits.
デフォルトでは
.I screen
のウィンドウはユーザのプロセス (シェル等) が終了すると即座に削除される。
2 つのキーからなる文字列を zombie コマンドに指定すると、
「死んだ」ウィンドウもリスト中に残る。
このようなウィンドウは \fBkill\fP コマンドで削除できる。
「死んだ」ウィンドウで 1 番目のキーを押すと同じ効果が得られる。
2 番目のキーを押すと、
.I screen
はこのウィンドウを復活させようとする。
つまり、このウィンドウで実行されていたプロセスを再び起動する。
パラメータを指定せずに \fBzombie\fP コマンドを呼び出すと、
zombie の設定がクリアされ、
したがってウィンドウは内部のプロセスが終了したときに消えるようになる。
.PP
.\"O As the zombie-setting is manipulated globally for all windows, this command 
.\"O should only be called \fBdefzombie\fP. Until we need this as a per window 
.\"O setting, the commands \fBzombie\fP and \fBdefzombie\fP are synonymous.
zombie の設定はすべてのウィンドウに対してグローバルに操作されるので、
このコマンドは \fBdefzombie\fP とのみ呼ぶべきである。
ウィンドウごとの設定が必要となるまでは、
\fBzombie\fP コマンドは \fBdefzombie\fP コマンドと同じにしておく。

.\"O .SH "THE MESSAGE LINE"
.SH メッセージ行
.\"O .I Screen
.\"O displays informational messages and other diagnostics in a \fImessage line\fP.
.\"O While this line is distributed to appear at the bottom of the screen,
.\"O it can be defined to appear at the top of the screen during compilation.
.\"O If your terminal has a status line defined in its termcap,
.\"O .I screen
.\"O will use this for displaying its messages, otherwise a line of the
.\"O current screen will
.\"O be temporarily overwritten and output will be momentarily interrupted. The
.\"O message line is automatically removed after a few seconds delay, but it
.\"O can also be removed early (on terminals without a status line) by beginning
.\"O to type.
.I screen
は情報メッセージや診断メッセージを\fIメッセージ行\fPに表示する。
この行は通常画面の一番下に配置されるが、
コンパイル時の設定で画面の一番上に現れるようにも定義できる。
使っている端末の termcap にステータス行の定義がある場合、
.I screen
はこれをメッセージ表示に用いる。それ以外の場合には、
現在の画面のうち 1 行が一時的に上書きされ、
出力がしばらく中断される。数秒後にこのメッセージ行は自動的に消されるが、
(ステータス行の無い端末では)
キー入力を行えばすぐに消すこともできる。
.PP
.\"O The message line facility can be used by an application running in
.\"O the current window by means of the ANSI \fIPrivacy message\fP
.\"O control sequence.
.\"O For instance, from within the shell, try something like:
メッセージ行の機能は、
カレントウィンドウで動作中のアプリケーションからも利用できる。
これには ANSI の\fIプライバシーメッセージ (Privacy message)\fP
制御シーケンスを使う。
例えば、シェルから以下のようなコマンドを試してみよ:
.IP
echo '<esc>^Hello world from window '$WINDOW'<esc>\e\e'
.PP
.\"O where '<esc>' is an \fIescape\fP, '^' is a literal up-arrow,
.\"O and '\e\e' turns into a single backslash.
ここでの '<esc>' は \fIescape\fP、'^' は上矢印キーである。
また '\e\e' はバックスラッシュ 1 つに置き換えられる。

.\"O .SH "WINDOW TYPES"
.SH ウィンドウの種類
.\"O Screen provides three different window types. New windows are created with 
.\"O .IR screen 's
.\"O .B screen
.\"O command (see also the entry in chapter \*QCUSTOMIZATION\*U). The first
.\"O parameter to the 
.\"O .B screen
.\"O command defines which type of window is created. The different window types are
.\"O all special cases of the normal type. They have been added in order
.\"O to allow 
.\"O .I screen 
.\"O to be used efficiently as a console multiplexer with 100 or more windows.
.I screen
は 3 種類のウィンドウを提供している。新しいウィンドウは
.I screen
の
.B screen
コマンドで生成される (『カスタマイズ』の章のエントリも参照)。
どのタイプのウィンドウが生成されるかは、
.B screen
コマンドに与える最初のパラメータによって決まる。
各タイプは、それぞれ基本タイプの特殊ケースである。
これらは
.I screen
を 100 以上のウィンドウを扱うコンソールマルチプレクサとして
効率良く利用できるように追加されてきた。

.IP \(bu 3
.\"O The normal window contains a shell (default, if no parameter is given) or any
.\"O other system command that could be executed from a shell (e.g.  
.\"O .BR slogin ,
.\"O etc...) 
基本ウィンドウは、シェル (パラメータが与えられない場合のデフォルト)
またはシェルから起動される何らかのシステムコマンド (例:
.B slogin
など) を内部で実行する。

.IP \(bu
.\"O If a tty (character special device) name (e.g. \*Q/dev/ttya\*U)
.\"O is specified as the first parameter, then the window is directly connected to
.\"O this device. 
.\"O This window type is similar to \*Qscreen cu -l /dev/ttya\*U.
.\"O Read and write access is required on the device node, an exclusive open is
.\"O attempted on the node to mark the connection line as busy.
.\"O An optional parameter is allowed consisting of a comma separated list of flags
.\"O in the notation used by stty(1):
tty (キャラクタスペシャルデバイス) の名前 (例えば \*Q/dev/ttya\*U)
を最初のパラメータに指定すると、そのウィンドウはこのデバイスに直接接続する。
このウィンドウタイプは \*Qscreen cu -l /dev/ttya\*U と似ている。
指定するデバイスノードには読み書きのアクセス権が必要で、
ノードには排他オープンが試みられ、接続ラインを busy 状態にしようとする。
追加パラメータを与えることもできる。
これはコンマ区切りのフラグの並びで、各フラグの意味は
.BR stty (1)
のものと同様である:
.RS
.IP <baud_rate>		
.\"O Usually 300, 1200, 9600 or 19200. This affects transmission as well as receive speed.
通常は 300, 1200, 9600, 19200 のいずれか。
この指定は送信・受信両方の速度に影響する。
.\"O .IP "cs8 or cs7"
.IP "cs8 または cs7"
.\"O Specify the transmission of eight (or seven) bits per byte.
1 バイトあたり 8 ビット (または 7 ビット) を送るよう指定する。
.\"O .IP "ixon or -ixon"
.IP "ixon または -ixon"
.\"O Enables (or disables) software flow-control (CTRL-S/CTRL-Q) for sending data.
データ送信におけるソフトウェアフローコントロール (CTRL-S/CTRL-Q)
を有効に (無効に) する。
.\"O .IP "ixoff or -ixon"
.\"nakano 原文間違い?
.IP "ixoff または -ixoff"
.\"O Enables (or disables) software flow-control for receiving data.
データ受信におけるソフトウェアフローコントロールを有効に (無効に) する。
.\"O .IP "istrip or -istrip"
.IP "istrip または -istrip"
.\"O Clear (or keep) the eight bit in each received byte.
各受信バイトの 8 ビット目を消去 (保持) する。
.PP
.\"O You may want to specify as many of these options as applicable. Unspecified
.\"O options cause the terminal driver to make up the parameter values of the
.\"O connection.  These values are system dependant and may be in defaults or values
.\"O saved from a previous connection.
これらのパラメータは、できるだけ指定したほうが良いだろう。
指定しないオプションの接続時の値は、端末ドライバが決めることになる。
これらの値はシステムに依存し、
デフォルトが定義されているかもしれないし、
前回の接続時の値を保存して使うかもしれない。
.PP
.\"O For tty windows, the 
.\"O .B info
.\"O command shows some of the modem control lines
.\"O in the status line. These may include `RTS', `CTS', 'DTR', `DSR', `CD' and more.
.\"O This depends on the available ioctl()'s and system header files as well as the
.\"O on the physical capabilities of the serial board. 
.\"O Signals that are logical low (inactive) have their name preceded by
.\"O an exclamation mark (!), otherwise the signal is logical high (active).
.\"O Signals not supported by the hardware but available to the ioctl() interface
.\"O are usually shown low. 
tty ウィンドウでは、
.B info
コマンドによってモデムの制御線がいくつかステータス行に表示される。
これらには `RTS', `CTS', `DTR', `DSR', `CD' などが含まれうる。
何が表示されるかは、利用できる ioctl() とシステムのヘッダファイル、
シリアルボードの物理的な特性などに依存する。
論理 low (inactive) の信号は、名前の前にエクスクラメーション (!) が付く。
付いていない信号は論理 high (active) である。
ハードウェアがサポートしていないが、ioctl() インターフェースは存在する信号は、
通常 low として表示される。
.\"O .br
.sp
.\"O When the CLOCAL status bit is true, the whole set of modem signals is placed 
.\"O inside curly braces ({ and }).
.\"O When the CRTSCTS or TIOCSOFTCAR bit is set, the signals `CTS' or `CD' 
.\"O are shown in parenthesis, respectively. 
CLOCAL ステータスビットが真の場合、モデム信号全体が中括弧 ({ と })
の内部に置かれる。CRTSCTS ビットが立っている場合は `CTS' 信号が括弧で括られ、
TIOCSOFTCAR ビットが立っている場合は `CD' 信号が括弧で括られる。
.sp
.\"O For tty windows, the command
.\"O .B break
.\"O causes the Data transmission line (TxD) to go low for a specified period of
.\"O time. This is expected to be interpreted as break signal on the other side.
.\"O No data is sent and no modem control line is changed when a 
.\"O .B break
.\"O is issued.
tty ウィンドウでは、
.B break
コマンドによってデータ送信線 (TxD) が指定した期間だけ low になる。
これは、通信の他端にてブレーク信号と解釈されることが期待できる。
.B break
が発行されると、データ送信は行われず、モデム制御線は変更されない。
.RE
.IP \(bu
.\"O If the first parameter is \*Q//telnet\*U, the second parameter is expected to
.\"O be a host name, and an optional third parameter may specify a TCP port number
.\"O (default decimal 23).  Screen will connect to a server listening on the remote
.\"O host and use the telnet protocol to communicate with that server.
最初のパラメータが \*Q/telnet\*U だと、
二番目のパラメータはホスト名とされ、
三番目のパラメータ (省略可) は TCP のポート番号を指定することになる
(デフォルトは 10 進数の 23)。
.I screen
はリモートホストでリッスンしているサーバに接続し、
そのサーバとの通信に telnet プロトコルを用いる。
.\"O .br
.\"O .br
.sp
.\"O For telnet windows, the command
.\"O .B info
.\"O shows details about the connection in square brackets ([ and ]) at the end of
.\"O the status line. 
telnet ウィンドウでは、
.B info
コマンドによって、ステータス行の末尾に
接続の詳細が角括弧 ([ と ]) に括られて表示される。
.RS
.IP b
.\"O BINARY. The connection is in binary mode.
BINARY。この接続はバイナリモードである。
.IP e
.\"O ECHO. Local echo is disabled.
ECHO。ローカルエコーは無効になっている。
.IP c
.\"O SGA. The connection is in `character mode' (default: `line mode').
SGA。この接続は「キャラクタモード」である (デフォルトは「ラインモード」)。
.IP t
.\"O TTYPE. The terminal type has been requested by the remote host.
.\"O Screen sends the name \*Qscreen\*U unless instructed otherwise (see also
.\"O the command `term').
TTYPE。この端末タイプはリモートホストからリクエストされた。
.I screen
は、特に指定がなければ端末名 \*Qscreen\*U を送る
(`term' コマンドも参照)。
.IP w
.\"O NAWS. The remote site is notified about window size changes.
NAWS。リモートサイトはウィンドウサイズの変更を通知される。
.IP f
.\"O LFLOW. The remote host will send flow control information.
.\"O (Ignored at the moment.)
LFLOW。リモートホストはフロー制御情報を送る
(現時点では無視される)。
.PP
.\"O Additional flags for debugging are x, t and n (XDISPLOC, TSPEED and
.\"O NEWENV).
他にもデバッグ用のフラグとして、x (XDISPLOC),
t (TSPEED), n (NEWENV) が存在する。
.PP
.\"O For telnet windows, the command
.\"O .B break
.\"O sends the telnet code IAC BREAK (decimal 243) to the remote host.
telnet ウィンドウでは、
.B break
コマンドを実行すると telnet コード IAC BREAK (10 進 243)
がリモートホストに送信される。
.sp
.\"O This window type is only available if
.\"O .I screen
.\"O was compiled with the BUILTIN_TELNET option defined.
このウィンドウタイプは
.I screen
のコンパイル時に BUILTIN_TELNET オプションを定義していないと使えない。
.RE

.\"O .SH "STRING ESCAPES"
.SH 文字エスケープ
.\"O Screen provides an escape mechanism to insert information like the
.\"O current time into messages or file names. The escape character
.\"O is '%' with one exception: inside of a window's hardstatus '^%' ('^E')
.\"O is used instead.
screen には、
現在時刻のメッセージやファイル名などの情報を表示するための、
エスケープの仕組みがある。エスケープ文字は '%' であるが、
ひとつだけ例外があり、ウィンドウのハードステータスの内部では
これの代わりに '^%' ('^E') を用いる。
.PP
.\"O Here is the full list of supported escapes:
以下にサポートされているエスケープの完全なリストを示す:
.IP %
.\"O the escape character itself
エスケープ文字自身
.IP a
.\"O either 'am' or 'pm'
\(aqam' または 'pm' のどちらか
.IP A
.\"O either 'AM' or 'PM'
\(aqAM' または 'PM' のどちらか
.IP c
.\"O current time HH:MM in 24h format
現在の時刻 HH:MM (24h 表記)
.IP C
.\"O current time HH:MM in 12h format
現在の時刻 HH:MM (12h 表記)
.IP d
.\"O day number
月内日
.IP D
.\"O weekday name
曜日
.IP f
.\"O flags of the window
ウィンドウのフラグ
.IP F
.\"O sets %? to true if the window has the focus
ウィンドウにフォーカスがあると %? を真にする
.IP h
.\"O hardstatus of the window
ウィンドウのハードステータス
.IP H
.\"O hostname of the system
システムのホスト名
.IP l
.\"O current load of the system
システムの現在の負荷 (load)
.IP m
.\"O month number
月 (数値)
.IP M
.\"O month name
月 (名前)
.IP n
.\"O window number
ウィンドウ番号
.IP s
.\"O seconds
秒
.IP t
.\"O window title
ウィンドウのタイトル
.IP u
.\"O all other users on this window
このウィンドウを使っている他のユーザすべて
.IP w
.\"O all window numbers and names. With '-' quailifier: up to the current
.\"O window; with '+' qualifier: starting with the window after the current
.\"O one.
.\"nakano quailifier は qualifier か？
全ウィンドウの番号と名前。限定詞 '-' をつけると現在のウィンドウまで、
限定詞 '+' をつけると現在のウィンドウ以降、となる。
.IP W
.\"O all window numbers and names except the current one
現在のウィンドウを除く、全ウィンドウの番号と名前
.IP y
.\"O last two digits of the year number
年 (下二桁)
.IP Y
.\"O full year number
年 (全表示)
.IP ?
.\"O the part to the next '%?' is displayed only if a '%' escape
.\"O inside the part expands to a non-empty string
次の '%?' までの部分が表示される。
ただしその内部の '%' エスケープが空でない文字列に展開される場合に限られる。
.IP :
.\"O else part of '%?'
'%?' の else 部
.IP =
.\"O pad the string to the display's width (like TeX's hfill). If a
.\"O number is specified, pad to the percentage of the window's width.
.\"O A '0' qualifier tells screen to treat the number as absolute position.
.\"O You can specify to pad relative to the last absolute pad position
.\"O by adding a '+' qualifier or to pad relative to the right margin
.\"O by using '-'. The padding truncates the string if the specified
.\"O position lies before the current position. Add the 'L' qualifier
.\"O to change this.
(TeX の hfill のように) ディスプレイの幅に合わせて文字埋めをする。
数値を指定すると、ウィンドウ幅のそのパーセント分を埋める。
限定詞 '0' をつけると、screen はその数値を絶対位置として扱う。
直前に指定された絶対位置から相対的な文字埋めをするには、
限定詞 '+' を付ける。また相対的な右マージンを文字埋めするには
限定詞 '-' を付ける。文字埋め動作では、
指定位置が現在位置よりも前にあると、文字列を切り捨てて短縮する。
これを変更するには限定詞 'L' を加える。
.IP <
.\"O same as '%=' but just do truncation, do not fill with spaces
'%=' と同様だが、切り捨てのみを行い、スペースによる埋めを行わない。
.IP >
.\"O mark the current text position for the next truncation. When
.\"O screen needs to do truncation, it tries to do it in a way that
.\"O the marked position gets moved to the specified percentage of
.\"O the output area. (The area starts from the last absolute pad
.\"O position and ends with the position specified by the truncation
.\"O operator.) The 'L' qualifier tells screen to mark the truncated
.\"O parts with '...'.
現在のテキスト位置を、次回の文字列短縮用にマークする。
短縮が必要になると、screen はこのマークした位置を
出力領域の指定パーセントの位置に移動することによって、
文字列を短縮しようとする
(この領域は、直前の絶対文字埋め位置から文字列短縮演算子で指定した位置まで)。
限定詞 'L' をつけると、screen は切り捨て部を '...' で示すようになる。
.IP {
.\"O attribute/color modifier string terminated by the next \*Q}\*U
次の \*Q}\*U の間にある文字列の属性/色を変更する。
.IP `
.\"O Substitute with the output of a 'backtick' command. The length
.\"O qualifier is misused to identify one of the commands.
'backtick' コマンドの結果を代入する。
ここでは長さ限定詞がコマンドの特定に用いられる (本来は誤用だが)。
.P
.\"O The 'c' and 'C' escape may be qualified with a '0' to make 
.\"O .I screen 
.\"O use zero instead of space as fill character. The '0' qualifier
.\"O also makes the '=' escape use absolute positions. The 'n' and '='
.\"O escapes understand
.\"O a length qualifier (e.g. '%3n'), 'D' and 'M' can be prefixed with 'L'
.\"O to generate long names, 'w' and 'W' also show the window flags
.\"O if 'L' is given.
\(aqc' と 'C' の各エスケープには限定詞 '0' をつけることができ、
この場合
.I screen
は埋め文字としてスペースではなくゼロを用いる。
限定詞 '0' は '=' エスケープにも付き、
その場合は絶対位置指定を用いさせる。'n' と '=' の各エスケープは長さ限定詞
(例えば '%3n') を理解し、'D' と 'M' は前に 'L'
を付けると長い名前になる。'w' と 'W' は 'L'
を付けるとウィンドウのフラグも同時に表示する。
.PP
.\"O An attribute/color modifier is is used to change the attributes or the
.\"O color settings. Its format
.\"O is \*Q[attribute modifier] [color description]\*U. The attribute modifier
.\"O must be prefixed by a change type indicator if it can be confused with
.\"O a color desciption. The following change types are known:
.\"nakano is is
属性/色指定は、これらの設定を変更するために用いる。
書式は \*Q[属性指定] [色定義]\+U である。
属性指定と色定義とが混乱しそうな場合には、
属性指定の前に変更タイプの指定をつけなければならない。
変更タイプとしては次のものが利用できる:
.IP +
.\"O add the specified set to the current attributes
現在の属性に指定セットを追加する
.IP -
.\"O remove the set from the current attributes
現在の属性から指定セットを削除する
.IP !
.\"O invert the set in the current attributes
現在の属性において、指定セットを反転させる
.IP =
.\"O change the current attributes to the specified set
現在の属性を、指定セットに変更する
.PP
.\"O The attribute set can either be specified as a hexadecimal number or
.\"O a combination of the following letters:
属性のセットは 16 進の数値か、次に示す文字の組で指定できる:
.IP d
.\"O dim
暗くする (dim)
.PD 0
.IP u
.\"O underline
アンダーライン
.IP b
.\"O bold
ボールド
.IP r
.\"O reverse
リバース
.IP s
.\"O standout
強調 (standout)
.IP B
.\"O blinking
ブリンク
.PD
.PP
.\"O Colors are coded either as a hexadecimal number or two letters specifying
.\"O the desired background and foreground color (in that order). The following
.\"O colors are known:
色は 16 進数か、あるいは背景色と前景色を示す 2 つの文字 (背景、前景の順)
で指定する。次の色がある:
.IP k
.\"O black
ブラック
.PD 0
.IP r
.\"O red
レッド
.IP g
.\"O green
グリーン
.IP y
.\"O yellow
イエロー
.IP b
.\"O blue
ブルー
.IP m
.\"O magenta
マゼンダ
.IP c
.\"O cyan
シアン
.IP w
.\"O white
ホワイト
.IP d
.\"O default color
デフォルト色
.IP .
.\"O leave color unchanged
色を変更しない
.PD
.PP
.\"O The capitalized versions of the letter specify bright colors. You can also
.\"O use the pseudo-color 'i' to set just the brightness and leave the color
.\"O unchanged.
これらの大文字版は明るい色になる。
疑似色として 'i' を指定でき、この場合は色はそのままで明るさだけを変更できる。
.\"O .br
.PP
.\"O A one digit/letter color description is treated as foreground or
.\"O background color dependant on the current attributes: if reverse mode is
.\"O set, the background color is changed instead of the foreground color.
.\"O If you don't like this, prefix the color with a \*Q.\*U. If you want
.\"O the same behaviour for two-letter color descriptions, also prefix them
.\"O with a \*Q.\*U.
数値にせよ文字にせよ、一色だけを指定した場合に、
それが前景色として扱われるか背景色になるかは、
現在の属性に依存する。リバースが設定されていると、
前景色ではなく背景色が変更される。
これが嫌なら、色の前に \*Q.\*U を付ければ良い。
2 文字の色記述においても同様の動作をさせたければ、
同じくそれらの前に \*Q.\*U を付ければ良い。
.\"O .br
.PP
.\"O As a special case, \*Q%{-}\*U restores the attributes and colors that
.\"O were set before the last change was made (i.e. pops one level of the
.\"O color-change stack).
特殊ケースとして、\*Q%{-}\*U は直前に変更された属性と色とを復元する
(すなわち色変更のスタックを 1 レベル pop する)。
.PP
.\"O Examples:
例：
.IP "\*QG\*U"
.\"O set color to bright green
明るいグリーン
.IP "\*Q+b r\*U"
.\"O use bold red
ボールドのレッド
.IP "\*Q= yd\*U"
.\"O clear all attributes, write in default color on yellow background.
全属性をクリア、イエローの背景にデフォルト色で書く。
.IP "%-Lw%{= BW}%50>%n%f* %t%{-}%+Lw%<"
.\"O The available windows centered at the current window and truncated to
.\"O the available width. The current window is displayed white on blue.
.\"O This can be used with \*Qhardstatus alwayslastline\*U.
現在のウィンドウを中心として、利用できるウィンドウを、
現在の幅に表示できるだけ表示する。
現在のウィンドウはブルーの背景にホワイトで書かれる。
これは \*Qhardstatus alwayslastline\*U と一緒に使える。
.IP "%?%F%{.R.}%?%3n %t%? [%h]%?"
.\"O The window number and title and the window's hardstatus, if one is set.
.\"O Also use a red background if this is the active focus. Useful for
.\"O \*Qcaption string\*U.
ウィンドウの番号・タイトル・ハードステータス (設定されている場合)。
また、これがフォーカスされている場合は背景を赤にする。
\*Qcaption string\*U に便利。

.\"O .SH "FLOW-CONTROL"
.SH フロー制御
.\"O Each window has a flow-control setting that determines how
.\"O .I screen
.\"O deals with
.\"O the XON and XOFF characters (and perhaps the interrupt character).
.\"O When flow-control is turned off,
.\"O .I screen
.\"O ignores the XON and XOFF characters,
.\"O which allows the user to send them to the current program by simply typing
.\"O them (useful for the \fIemacs\fP editor, for instance).
.\"O The trade-off is that it will take longer for output from a \*Qnormal\*U
.\"O program to pause in response to an XOFF.
.\"O With flow-control turned on, XON and XOFF characters are used to immediately
.\"O pause the output of the current window.
.\"O You can still send these characters to the current program, but you must use
.\"O the appropriate two-character
.\"O .I screen
.\"O commands (typically \*QC-a q\*U (xon)
.\"O and \*QC-a s\*U (xoff)).
.\"O The xon/xoff commands are also useful for typing C-s and C-q past a terminal
.\"O that intercepts these characters.
各ウィンドウにはフロー制御の設定があり、
.I screen
はこれを基に、XON 文字と XOFF 文字 (およびおそらく割り込み文字)
の扱い方を決める。フロー制御が無効になっていると、
.I screen
は XON 文字と XOFF 文字を無視する。この場合、ユーザは単に入力するだけで
これらの文字を実行中のプログラムに送れる
(例えば、\fIemacs\fP エディタ等ではこの設定が便利である)。
その代わり、\*Q普通\*Uのプログラムからの出力が、
XOFF に応答して一時停止するまでに、より長い時間がかかる。
フロー制御が有効になっていると、XON 文字と XOFF 文字を使って、
現在のウィンドウの出力を即座に停止できる。
この場合でも、XON 文字や XOFF 文字を実行中プログラムへ送信することはできるが、
これにはそれぞれに対応する
.I screen
の 2 文字コマンドを使わなければならない
(普通は \*QC-a q\*U (xon) と \*QC-a s\*U (xoff))。
xon/xoff コマンドは、C-s と C-q を横取りしてしまうような端末越しに、
これらの文字を入力する場合にも役立つ。
.PP
.\"O Each window has an initial flow-control value set with either the
.\"O .B \-f
.\"O option or the \*Qdefflow\*U .screenrc command. Per default the windows
.\"O are set to automatic flow-switching.
.\"O It can then be toggled between the three states 'fixed on', 'fixed off'
.\"O and 'automatic' interactively with the \*Qflow\*U command bound to "C-a f".
各ウィンドウはフロー制御に関する初期値を持ち、これは
.B \-f
オプションまたは .screenrc コマンドの \*Qdefflow\*U で設定できる。
デフォルトでは、各ウィンドウには自動フロー切り替えが設定される。
この値は、\*Qflow\*U コマンド ("C-a f" に割り当てられている)
を用いると、'fixed on', 'fixed off', 'automatic' の 3 つの状態に、
順々にトグルできる。
.PP
.\"O The automatic flow-switching mode deals with
.\"O flow control using the TIOCPKT mode (like \*Qrlogin\*U does). If
.\"O the tty driver does not support TIOCPKT,
.\"O .I screen
.\"O tries to find out
.\"O the right mode based on the current setting of the application
.\"O keypad \- when it is enabled, flow-control is turned off and visa versa.
.\"O Of course, you can still manipulate flow-control manually when needed.
自動フロー切り替えモードは (\*Qrlogin\*U のように) TIOCPKT
モードを用いてフロー制御を扱う。
tty ドライバが TIOCPKT をサポートしていない場合、
.I screen
はアプリケーションテンキーの現在の状態に基づいて
正しいモードを見つけようとする。
つまり、テンキーがアプリケーションモードならフロー制御無効、およびその逆、
である。もちろん、必要ならば手動でフロー制御を操作することもできる。
.PP
.\"O If you're running with flow-control enabled and find that pressing the
.\"O interrupt key (usually C-c) does not interrupt the display until another
.\"O 6-8 lines have scrolled by, try running
.\"O .I screen
.\"O with the \*Qinterrupt\*U
.\"O option (add the \*Qinterrupt\*U flag to the \*Qflow\*U command in
.\"O your .screenrc, or use the
.\"O .B \-i
.\"O command-line option).
フロー制御を有効にしているにもかかわらず、
割り込みキー (通常は C-c) を押してから表示に割り込みがかかるまでに
6-8 行スクロールしてしまうような場合には、\*Qinterrupt\*U オプションを与えて
.I screen
を起動してみること
(.screenrc で \*Qflow\*U コマンドに \*Qinterrupt\*U 
フラグを追加するか、コマンドラインオプションの
.B \-i
を用いる)。
.\"O This causes the output that
.\"O .I screen
.\"O has accumulated from the interrupted program to be flushed.
.\"O One disadvantage is that the virtual terminal's memory contains the
.\"O non-flushed version of the output, which in rare cases can cause
.\"O minor inaccuracies in the output.
.\"O For example, if you switch screens and return, or update the screen
.\"O with \*QC-a l\*U you would see the version of the output you would
.\"O have gotten without \*Qinterrupt\*U being on.
こうすると、割り込みを受けたプログラムから
.I screen
が受け取って蓄積していた出力はフラッシュされるようになる。
これによる不都合は、仮想端末のメモリが非フラッシュ出力を含むことであり、
これによって、まれに出力に多少不正確な部分が現れるかもしれない。
例えば画面の切り替えと復帰を行ったり、
\*QC-a l\*U を使って画面の更新を行うと、
\*Qinterrupt\*U をオンにしていなかった場合に得られたはずの出力が得られる。
.\"O Also, you might need to turn off flow-control (or use auto-flow mode to turn
.\"O it off automatically) when running a program that expects you to type the
.\"O interrupt character as input, as it is possible to interrupt
.\"O the output of the virtual terminal to your physical terminal when flow-control
.\"O is enabled.
.\"O If this happens, a simple refresh of the screen with \*QC-a l\*U will
.\"O restore it.
.\"O Give each mode a try, and use whichever mode you find more comfortable.
また、割り込み文字を入力として期待するプログラムを実行する際には、
フロー制御を無効にする
(あるいは自動フロー制御を用いてこれを自動的に無効にする)
必要があるかもしれない。なぜなら、フロー制御が有効だと、
仮想端末から物理端末への出力に割り込みがかかることがあり得るからである。
このようになった場合も、\*QC-a l\*U を行って画面をリフレッシュしさえすれば、
元に戻るはずである。各モードを試してみて、
一番都合が良いと思ったものを使うとよいだろう。

.\"O 
.\"O .SH "TITLES (naming windows)"
.SH "タイトル (ウィンドウの命名)"
.\"O You can customize each window's name in the window display (viewed with the
.\"O \*Qwindows\*U command (C-a w)) by setting it with one of
.\"O the title commands.
.\"O Normally the name displayed is the actual command name of the program
.\"O created in the window.
.\"O However, it is sometimes useful to distinguish various programs of the same
.\"O name or to change the name on-the-fly to reflect the current state of
.\"O the window.
ウィンドウ表示に現れる各ウィンドウの名前
(\*Qwindows\*U コマンド (C-a w) で表示される) は、
title コマンドのどれかを用いればカスタマイズできる。
通常この名前は、そのウィンドウで生成されるプログラムの実際のコマンド名になる。
しかし、同じ名前の複数のプログラムを区別したり、
ウィンドウの現在の状態をその場で名前に反映させたりできれば、
便利な場合もあるだろう。
.PP
.\"O The default name for all shell windows can be set with the \*Qshelltitle\*U
.\"O command in the .screenrc file, while all other windows are created with
.\"O a \*Qscreen\*U command and thus can have their name set with the
.\"O .B \-t
.\"O option.
.\"O Interactively, there is the title-string escape-sequence
.\"O (<esc>k\fIname\fP<esc>\e) and the \*Qtitle\*U command (C-a A).
.\"O The former can be output from an application to control the window's name
.\"O under software control, and the latter will prompt for a name when typed.
.\"O You can also bind pre-defined names to keys with the \*Qtitle\*U command
.\"O to set things quickly without prompting.
すべてのシェルウィンドウに対するデフォルト名は .screenrc ファイルの
\*Qshelltitle\*U コマンドで設定できる。
一方、他のウィンドウはすべて \*Qscreen\*U コマンドで生成されるので、
.B \-t
オプションを使えば名前を設定できる。
対話的に行うには、タイトル文字列用エスケープシーケンス
(<esc>k\fIname\fP<esc>\e)と \*Qtitle\*U コマンド(C-a A)がある。
前者をアプリケーションから出力させれば、
ソフトウェア制御でウィンドウの名前を変更できる。
後者は名前の入力をユーザに求める。
定義済みの名前を \*Qtitle\*U コマンドのキーに割り当てておいて、
入力なしに即座に設定を行わせることもできる。
.PP
.\"O Finally,
.\"O .I screen
.\"O has a shell-specific heuristic that is enabled by setting the window's name
.\"O to \*Q\fIsearch|name\fP\*U and arranging to have a null title escape-sequence
.\"O output as a part of your prompt.
.\"O The \fIsearch\fP portion specifies an end-of-prompt search string, while
.\"O the \fIname\fP portion specifies the default shell name for the window.
.\"O If the \fIname\fP ends in a `:'
.\"O .I screen
.\"O will add what it believes to be the current command running in the window
.\"O to the end of the window's shell name (e.\|g. \*Q\fIname:cmd\fP\*U).
.\"O Otherwise the current command name supersedes the shell name while it is
.\"O running.
最後に、
.I screen
にはシェルの場合にのみ使われるヒューリスティックなタイトル指定方法がある。
これを実現するには、ウィンドウの名前を \*Q\fIsearch|name\fP\*U に設定し、
プロンプトの一部で空の title エスケープシーケンスが出力されるようにする。
\fIsearch\fP の部分には「プロンプト末尾」の検索文字列を指定し、
\fIname\fP の部分にはそのウィンドウのデフォルトのシェル名を指定する。
\fIname\fP が `:' で終わる場合、
.I screen
は、そのウィンドウで現在実行中のコマンドと認識しているものを
ウィンドウのシェル名の最後に追加する (例えば \*Q\fIname:cmd\fP\*U)。
それ以外の場合には、コマンドの実行中にはそのコマンド名がシェル名を上書きする。
.PP
.\"O Here's how it works:  you must modify your shell prompt to output a null
.\"O title-escape-sequence (<esc>k<esc>\e) as a part of your prompt.
.\"O The last part of your prompt must be the same as the string you specified
.\"O for the \fIsearch\fP portion of the title.
.\"O Once this is set up,
.\"O .I screen
.\"O will use the title-escape-sequence to clear the previous command name and
.\"O get ready for the next command.
.\"O Then, when a newline is received from the shell, a search is made for the
.\"O end of the prompt.
.\"O If found, it will grab the first word after the matched string and use it
.\"O as the command name.
.\"O If the command name begins with either '!', '%', or '^'
.\"O .I screen
.\"O will use the first word on the following line (if found) in preference to
.\"O the just-found name.
.\"O This helps csh users get better command names when using job control or
.\"O history recall commands.
以下にその動作を示す: ユーザはシェルのプロンプトを変更して、
空の title エスケープシーケンス (<esc>k<esc>\e) がプロンプトの一部に
出力されるようにしなければならない。プロンプトの末尾は、
タイトルの \fIsearch\fP 部分に指定した文字列と同じでなければならない。
このようにすると、
.I screen
はタイトルエスケープシーケンスを使って以前のコマンド名をクリアし、
次のコマンドのための準備を行う。
次に、シェルから改行文字を受け取ると、プロンプトの末尾を検索する。
検索にマッチする部分が見つかると、
マッチした文字列の後ろの最初の単語が取り出され、
これがコマンド名として使われる。
コマンド名が '!', '%', '^' のいずれかで始まる場合、
.I screen
は次の行に出てくる最初の単語を (もし見つかれば)
いま見つかった名前よりも優先する。
これにより、csh ユーザがジョブ制御や履歴の再呼び出しコマンドを使ったときでも、
まともなコマンド名を取得できる。
.PP
.\"O Here's some .screenrc examples:
以下に .screenrc での指定例をいくつか示す:
.IP
screen -t top 2 nice top
.PP
.\"O Adding this line to your .screenrc would start a nice-d version of the
.\"O \*Qtop\*U command in window 2 named \*Qtop\*U rather than \*Qnice\*U.
この行を .screenrc に追加すると、
nice コマンドでプライオリティを設定した \*Qtop\*U コマンドが、
ウィンドウ 2 において (\*Qnice\*U ではなく) \*Qtop\*U という名前で起動する。
.sp
.nf
	shelltitle '> |csh'
	screen 1
.fi
.sp
.\"O These commands would start a shell with the given shelltitle.
.\"O The title specified is an auto-title that would expect the prompt and
.\"O the typed command to look something like the following:
このコマンドでは、与えられた shelltitle を持つシェルが起動される。
指定されたタイトルは自動設定タイトルであり、
次のような形のプロンプト+コマンド入力を監視する:
.IP
/usr/joe/src/dir> trn
.PP
.\"O (it looks after the '> ' for the command name).
.\"O The window status would show the name \*Qtrn\*U while the command was
.\"O running, and revert to \*Qcsh\*U upon completion.
('> ' の後の部分がコマンド名として扱われる)。
このコマンドの実行中には、
ウィンドウのステータスには \*Qtrn\*U という名前が表示され、
実行が終了するとこれは \*Qcsh\*U に戻る。
.IP
bind R screen -t '% |root:' su
.PP
.\"O Having this command in your .screenrc would bind the key
.\"O sequence \*QC-a R\*U to the \*Qsu\*U command and give it an
.\"O auto-title name of \*Qroot:\*U.
.\"O For this auto-title to work, the screen could look something
.\"O like this:
このコマンドが .screenrc に書かれていると、キーシーケンス
\*QC-a R\*U に対して \*Qsu\*U コマンドが割り当てられ、
自動設定タイトル名として \*Qroot:\*U が与えられる。
この自動タイトル設定が動作するのは、
screen には以下のような表示が渡った場合である:
.sp
.nf
	% !em
	emacs file.c
.fi
.sp
.\"O Here the user typed the csh history command \*Q!em\*U which ran the
.\"O previously entered \*Qemacs\*U command.
.\"O The window status would show \*Qroot:emacs\*U during the execution
.\"O of the command, and revert to simply \*Qroot:\*U at its completion.
ここでは、ユーザは csh の履歴コマンド \*Q!em\*U を入力している。
これは以前に入力した \*Qemacs\*U コマンドを実行するものである。
このコマンドの実行中には、ウィンドウのステータスには \*Qroot:emacs\*U 
が表示され、実行の終了時には \*Qroot:\*U だけの表示に戻る。
.PP
.nf
	bind o title
	bind E title ""
	bind u title (unknown)
.fi
.sp
.\"O The first binding doesn't have any arguments, so it would prompt you
.\"O for a title. when you type \*QC-a o\*U.
.\"O The second binding would clear an auto-title's current setting (C-a E).
.\"O The third binding would set the current window's title to \*Q(unknown)\*U
.\"O (C-a u).
最初の割り当てには全く引き数がないので、
ユーザに対してタイトルの問い合わせが行われる(\*QC-a o\*U を入力した時と同様)。
2 番目の割り当ては現在の自動タイトル設定をクリアする(C-a E)。
3 番目の割り当ては現在のウィンドウのタイトルに \*Q(unknown)\*U を設定する
(C-a u)。
.PP
.\"O One thing to keep in mind when adding a null title-escape-sequence to
.\"O your prompt is that some shells (like the csh) count all the non-control
.\"O characters as part of the prompt's length.
.\"O If these invisible characters aren't a multiple of 8 then backspacing over
.\"O a tab will result in an incorrect display.
.\"O One way to get around this is to use a prompt like this:
空の title エスケープシーケンスをプロンプトに追加する際に注意すべきなのは、
一部のシェル (csh など) では、
.\"nakano 原文 non- だと logic がおかしい？
制御文字などもすべてプロンプトの長さに数え入れる点である。
このような表示されない文字の数が 8 の倍数でないと、
バックスペースでタブを消した時の表示がおかしくなる。
これを回避する方法の 1 つは、以下のようなプロンプトを使うことである:
.IP
set prompt='^[[0000m^[k^[\e% '
.PP
.\"O The escape-sequence \*Q<esc>[0000m\*U not only normalizes the character
.\"O attributes, but all the zeros round the length of the invisible characters
.\"O up to 8.
.\"O Bash users will probably want to echo the escape sequence in the
.\"O PROMPT_COMMAND:
エスケープシーケンス \*Q<esc>[0000m\*U は文字の属性を統一するだけでなく、
表示されない文字の長さを 0 を使って 8 個に合わせる。
bash ユーザは多分、PROMPT_COMMAND 中で
エスケープシーケンスを出力するのがよいだろう:
.IP
PROMPT_COMMAND='echo -n -e "\e033k\e033\e134"'
.PP
.\"O (I used \*Q\134\*U to output a `\e' because of a bug in bash v1.04).
(bash バージョン 1.04 のバグを回避するため、
筆者は \*Q\134\*U を使って `\e' を出力している)

.\"O 
.\"O .SH "THE VIRTUAL TERMINAL"
.SH 仮想端末
.\"O Each window in a 
.\"O .I screen
.\"O session emulates a VT100 terminal, with some extra functions added. The
.\"O VT100 emulator is hard-coded, no other terminal types can be emulated.
.I screen
セッションの各ウィンドウは VT100 端末をエミュートしており、
いくつかの機能も追加されている。
VT100 エミュレータはハードコーディングされており、
他の種類の端末をエミュレートすることはできない。
.\"O .br
.PP
.\"O Usually
.\"O .I screen
.\"O tries to emulate as much of the VT100/ANSI standard
.\"O as possible. But if your terminal lacks certain capabilities,
.\"O the emulation may not be complete. In these cases
.\"O .I screen
.\"O has to tell the applications that some of the features
.\"O are missing. This is no problem on machines using termcap,
.\"O because
.\"O .I screen
.\"O can use the $TERMCAP variable to
.\"O customize the standard
.\"O .I screen
.\"O termcap.
通常
.I screen
はできる限り VT100/ANSI 標準をエミュレートしようとする。
しかし端末が特定の機能を持っていない場合には、
エミュレーションが完全でないこともある。このような場合、
.I screen
は一部の機能が欠けていることをアプリケーションに伝えなければならない。
これは termcap を使っているマシンでは問題にはならない。なぜなら、
.I screen
は $TERMCAP 変数を使って標準の
.I screen
termcap をカスタマイズできるからである。
.PP
.\"O But if you do a
.\"O rlogin on another machine or your machine supports only
.\"O terminfo this method fails. Because of this,
.\"O .I screen
.\"O offers a way to deal with these cases. 
.\"O Here is how it works:
しかし、別のマシンに rlogin した時や、
使っているマシンが terminfo しかサポートしていない場合には、
この方法はうまくいかない。そのため
.I screen
にはこのような場合を扱う手段が用意されている。
その動作を以下に示す:
.PP
.\"O When 
.\"O .I screen
.\"O tries to figure out a terminal name for itself,
.\"O it first looks
.\"O for an entry named \*Qscreen.<term>\*U, where <term> is
.\"O the contents of your $TERM variable.
.\"O If no such entry exists,
.\"O .I screen
.\"O tries \*Qscreen\*U (or \*Qscreen-w\*U if the terminal is wide
.\"O (132 cols or more)).
.\"O If even this entry cannot be found, \*Qvt100\*U is used as a
.\"O substitute.
.I screen
は自力で端末名を調べようとする時、まず \*Qscreen.<term>\*U
という名前のエントリを参照する。ここで <term> は $TERM 変数の内容である。
このようなエントリが存在しないと、
.I screen
は \*Qscreen\*U
(あるいは端末の幅が広ければ (132 カラム以上) \*Qscreen-w\*U)
を試す。このエントリも見つからない場合には、
代わりに \*Qvt100\*U を使う。
.PP
.\"O The idea is that if you have a terminal which doesn't
.\"O support an important feature (e.g. delete char or clear to EOS)
.\"O you can build a new termcap/terminfo entry for
.\"O .I screen
.\"O (named \*Qscreen.<dumbterm>\*U) in which this capability
.\"O has been disabled. If this entry is installed on your
.\"O machines you are able to do
.\"O a rlogin and still keep the correct termcap/terminfo entry.
.\"O The terminal name is put in the $TERM variable
.\"O of all new windows.
.\"O .I Screen
.\"O also sets the $TERMCAP variable reflecting the capabilities
.\"O of the virtual terminal emulated. Notice that, however, on machines
.\"O using the terminfo database this variable has no effect.
.\"O Furthermore, the variable $WINDOW is set to the window number
.\"O of each window.
つまり、重要な機能 (例えば文字削除や EOS までのクリア)
をサポートしていない端末を使っている場合でも、
これらの機能を無効にした (\*Qscreen.<dumbterm>\*U という名前の)
新しい
.I screen
用 termcap/terminfo エントリをビルドすれば良い、という考え方である。
使うマシンにこのエントリをインストールすれば、
rlogin の際にも正しい termcap/terminfo エントリを維持できる。
端末名はすべての新規ウィンドウの $TERM 変数に設定される。
.I screen
はエミュレートしている仮想端末の機能を反映させた $TERMCAP も設定する。
ただし、terminfo データベースを使っているマシンには
この変数は効果がないことに注意。
さらに、変数 $WINDOW には各ウィンドウのウィンドウ番号が設定される。
.PP
.\"O The actual set of capabilities supported by the virtual terminal
.\"O depends on the capabilities supported by the physical terminal.
.\"O If, for instance, the physical terminal does not support underscore mode,
.\"O .I screen
.\"O does not put the `us' and `ue' capabilities into the window's $TERMCAP
.\"O variable, accordingly.
.\"O However, a minimum number of capabilities must be supported by a
.\"O terminal in order to run
.\"O .IR screen ;
.\"O namely scrolling, clear screen, and direct cursor addressing
.\"O (in addition,
.\"O .I screen
.\"O does not run on hardcopy terminals or on terminals that over-strike).
仮想端末が実際にサポートしている機能のセットは、
物理端末がサポートしている機能に依存する。
そのため、もし例えば、物理端末が下線モードをサポートしていなければ、
.I screen
は `us' や `ue' 機能をそのウィンドウの $TERMCAP 変数に設定しない。しかし、
.I screen
を実行するために、端末が最低限サポートしていなければならない機能
がいくつか存在する。
例えば、スクロール機能、画面クリア、カーソル位置の直接指定などである
(さらに、
.I screen
はハードコピー端末や、文字の重ね打ちを行う端末では動作しない)。
.PP
.\"O Also, you can customize the $TERMCAP value used by
.\"O .I screen
.\"O by using the \*Qtermcap\*U .screenrc command, or
.\"O by defining the variable $SCREENCAP prior to startup.
.\"O When the is latter defined, its value will be copied verbatim into each
.\"O window's $TERMCAP variable.
.\"O This can either be the full terminal definition, or a filename where the
.\"O terminal \*Qscreen\*U (and/or \*Qscreen-w\*U) is defined.
.\"nakano たぶん "the latter is defined" のまちがい。
また、ユーザは .screenrc で \*Qtermcap\*U コマンドを用いたり、
起動前に変数 $SCREENCAP を定義することにより、
.I screen
が用いる $TERMCAP の値をカスタマイズできる。
後者が定義されていると、その値がそのままの形で各ウィンドウの
$TERMCAP 変数にコピーされる。
これは端末の完全な定義、または端末 \*Qscreen\*U
(や \*Qscreen-w\*U)
が定義されているファイル名、のいずれかである。
.PP
.\"O Note that 
.\"O .I screen
.\"O honors the \*Qterminfo\*U .screenrc command if the system uses the
.\"O terminfo database rather than termcap.
システムが termcap でなく terminfo データベースを用いている場合には、
.I screen
は .screenrc コマンドの \*Qterminfo\*U に従う点に注意すること。
.PP
.\"O When the boolean `G0' capability is present in the termcap entry
.\"O for the terminal on which
.\"O .I screen
.\"O has been called, the terminal emulation of
.\"O .I screen
.\"O supports multiple character sets.
.\"O This allows an application to make use of, for instance,
.\"O the VT100 graphics character set or national character sets.
.\"O The following control functions from ISO 2022 are supported:
.\"O \fIlock shift G0\fP (\fISI\fP), \fIlock shift G1\fP (\fISO\fP),
.\"O \fIlock shift G2\fP, \fIlock shift G3\fP, \fIsingle shift G2\fP,
.\"O and \fIsingle shift G3\fP.
.\"O When a virtual terminal is created or reset, the ASCII character
.\"O set is designated as \fIG0\fP through \fIG3\fP.
.\"O When the `G0' capability is present,
.\"O .I screen
.\"O evaluates the capabilities
.\"O `S0', `E0', and `C0' if present. `S0' is the sequence the terminal uses
.\"O to enable and start the graphics character set rather than \fISI\fP. 
.\"O `E0' is the corresponding replacement for \fISO\fP. `C0' gives a character
.\"O by character translation string that is used during semi-graphics mode. This 
.\"O string is built like the `acsc' terminfo capability.
.I screen
が呼び出された端末の termcap エントリ中に、
ブール値の `G0' 機能があると、
.I screen
の端末エミュレーションは複数の文字集合をサポートする。
これによりアプリケーションは、例えば、
VT100 のグラフィックス文字集合や特定の国の文字集合を利用できる。
ISO 2022 に含まれるものとしては、以下の制御機能がサポートされている:
\fIロックシフト G0\fP (\fISI\fP), \fIロックシフト G1\fP (\fISO\fP),
\fIロックシフト G2\fP, \fIロックシフト G3\fP, \fIシングルシフト G2\fP,
\fIシングルシフト G3\fP。
仮想端末の生成時やリセット時には、ASCII 文字集合が \fIG0\fP から 
\fIG3\fP までに指定される。`G0' 機能が存在すれば、
.I screen
は `S0', `E0', `C0' 機能を (存在すれば) 評価する。
`S0' は、(\fISI\fP の代わりに) グラフィックス文字集合を有効にし、
開始するために端末が用いるシーケンスである。
`E0' はこれに対応して \fISO\fP の代わりに使うシーケンスである。
`C0' は、セミグラフィックスモード時に使われる、文字ごとの変換文字列を与える。
この文字列は `acsc' terminfo エントリのように構築されている。
.PP
.\"O When the `po' and `pf' capabilities are present in the terminal's
.\"O termcap entry, applications running in a
.\"O .I screen
.\"O window can send output to the printer port of the terminal.
.\"O This allows a user to have an application in one window
.\"O sending output to a printer connected to the terminal, while all
.\"O other windows are still active (the printer port is enabled
.\"O and disabled again for each chunk of output).
.\"O As a side-effect, programs running in different windows can
.\"O send output to the printer simultaneously.
.\"O Data sent to the printer is not displayed in the window.  The 
.\"O .I info
.\"O command displays a line starting `PRIN' while the printer is active.
`po' 機能と `pf' 機能が端末の termcap エントリに存在すると、
.I screen
のウィンドウ内で実行されているアプリケーションは、
出力を端末のプリンタポートに送信できる。
これを使うと、ユーザは端末に接続されているプリンタに対し、
ウィンドウのアプリケーションの出力を送信できる。
この際にも、他のウィンドウはすべてアクティブなままである
(ひとまとまりの出力ごとにプリンタポートは繰り返し有効/無効にされる)。
この副作用として、別のウィンドウで動作しているプログラムも、
同時に出力をプリンタに送信できてしまう。
プリンタに送られたデータはウィンドウには表示されない。
.I info
コマンドは、プリンタがアクティブな時には行の先頭に `PRIN' を表示する。
.PP
.\"O .I Screen
.\"O maintains a hardstatus line for every window. If a window
.\"O gets selected, the display's hardstatus will be updated to match
.\"O the window's hardstatus line. If the display has no hardstatus
.\"O the line will be displayed as a standard 
.\"O .I screen 
.\"O message.
.\"O The hardstatus line can be changed with the ANSI Application
.\"O Program Command (APC): \*QESC_<string>ESC\e\*U. As a convenience
.\"O for xterm users the sequence \*QESC]0..2;<string>^G\*U is
.\"O also accepted.
.I screen
はウィンドウごとにハードステータス行を管理する。
あるウィンドウが選択されると、
ディスプレイのハードステータスはそのウィンドウの
ハードステータス行に一致するよう更新される。
ディスプレイにハードステータスがなければ、
この行は screen の標準メッセージとして表示される。
ハードステータス行は
ANSI のアプリケーションプログラムコマンド
(Application Program Command, APC) である \*QESC_<string>ESC\e\*U
で変更できる。xterm ユーザに便利なように、
\*QESC]0..2;<string>^G\*U というシーケンスも使えるようになっている。
.PP
.\"O Some capabilities are only put into the $TERMCAP
.\"O variable of the virtual terminal if they can be efficiently
.\"O implemented by the physical terminal.
.\"O For instance, `dl' (delete line) is only put into the $TERMCAP
.\"O variable if the terminal supports either delete line itself or
.\"O scrolling regions. Note that this may provoke confusion, when 
.\"O the session is reattached on a different terminal, as the value
.\"O of $TERMCAP cannot be modified by parent processes.
一部の機能は、それらが物理端末でちゃんと実装できている場合に限り、
仮想端末の $TERMCAP に設定される。例えば `dl' (行の削除)は、
端末が行削除または領域のスクロールのどちらかをサポートしている場合にのみ
$TERMCAP 変数に設定される。セッションを別の端末から再アタッチした時には、
これが混乱の元になりやすいので注意すること。
$TERMCAP の値は親プロセスからは変更できないからである。
.PP
.\"O The "alternate screen" capability is not enabled by default.
.\"O Set the \fBaltscreen\fP .screenrc command to enable it.
「別画面 (alternate screen)」機能はデフォルトでは有効になっていない。
有効にするには .screenrc コマンド \fBaltscreen\fP をセットすること。
.PP
.\"O The following is a list of control sequences recognized by
.\"O .IR screen .
.\"O \*Q(V)\*U and \*Q(A)\*U indicate VT100-specific and ANSI- or
.\"O ISO-specific functions, respectively.
.I screen
が認識する制御シーケンスの一覧を以下に示す。
\*Q(V)\*U は VT100 固有の機能であることを示し、
\*Q(A)\*U は ANSI または ISO 固有の機能であることを示す。
.PP
.ta 22n
.TP 27
.B "ESC E"
.\"O Next Line
次の行
.TP 27
.B "ESC D"
.\"O Index
インデックス
.TP 27
.B "ESC M"
.\"O Reverse Index
逆順のインデックス
.TP 27
.B "ESC H"
.\"O Horizontal Tab Set
水平タブセット
.TP 27
.B "ESC Z"
.\"O Send VT100 Identification String
VT100 の識別文字列を送る
.TP 27
.BR "ESC 7" "	(V)"
.\"O Save Cursor and Attributes
カーソルと属性を保存する
.TP 27
.BR "ESC 8" "	(V)"
.\"O Restore Cursor and Attributes
カーソルと属性を復元する
.TP 27
.BR "ESC [s" "	(A)"
.\"O Save Cursor and Attributes
カーソルと属性を保存する
.TP 27
.BR "ESC [u" "	(A)"
.\"O Restore Cursor and Attributes
カーソルと属性を復元する
.TP 27
.B "ESC c"
.\"O Reset to Initial State
初期状態へのリセット
.TP 27
.B "ESC g"
.\"O Visual Bell
可視ベル
.TP 27
.B "ESC \fPPn\fB p"
.\"O Cursor Visibility (97801)
カーソルの可視制御 (97801)
.TP 27
\h'\w'ESC 'u'Pn = \fB6\fP
.\"O Invisible
不可視
.TP 27
\h'\w'ESC Pn = 'u'\fB7\fP
.\"O Visible
可視
.TP 27
.BR "ESC =" "	(V)"
.\"O Application Keypad Mode
アプリケーションキーパッドモード
.TP 27
.BR "ESC >" "	(V)"
.\"O Numeric Keypad Mode
数値キーパッドモード
.TP 27
.BR "ESC # 8" "	(V)"
.\"O Fill Screen with E's
画面を E で埋める
.TP 27
.BR "ESC \e" "	(A)"
.\"O String Terminator
文字列の終端子
.TP 27
.BR "ESC ^" "	(A)"
.\"O Privacy Message String (Message Line)
プライベートなメッセージ文字列 (メッセージ行)
.TP 27
.B "ESC !"
.\"O Global Message String (Message Line)
グローバルなメッセージ文字列 (メッセージ行)
.TP 27
.B "ESC k"
.\"O A.\|k.\|a. Definition String
定義文字列の別名
.TP 27
.BR "ESC P" "	(A)"
.\"O Device Control String.
.\"O Outputs a string directly to the host
.\"O terminal without interpretation.
デバイス制御文字列。文字列を、解釈せず、直接ホストの端末に出力する。
.TP 27
.BR "ESC _" "	(A)"
.\"O Application Program Command (Hardstatus)
アプリケーションプログラムコマンド (ハードステータス)
.TP 27
.BR "ESC ] 0 ; string ^G" "	(A)"
.\"O Operating System Command (Hardstatus, xterm title hack)
オペレーティングシステムのコマンド
(ハードステータス、xterm のタイトルのハック)
.TP 27
.BR "ESC ] 83 ; cmd ^G" "	(A)"
.\"O Execute screen command. This only works if multi-user support is
.\"O compiled into screen. The pseudo-user \*Q:window:\*U is used to
.\"O check the access control list. Use \*Qaddacl :window: -rwx #?\*U to
.\"O create a user with no rights and allow only the needed commands.
screen コマンドを実行する。
これは screen にマルチユーザのサポートが組み込まれている場合にのみ動作する。
アクセスコントロールリストのチェックには、疑似ユーザ \*Q:window:\*U
が用いられる。権限を持たず、
必要なコマンドだけを実行できるようなユーザを作るには、
\*Qaddacl :window: -rwx #?\*U を用いること。
.TP 27
.BR "Control-N" "	(A)"
.\"O Lock Shift G1 (SO)
ロックシフト G1 (SO)
.TP 27
.BR "Control-O" "	(A)"
.\"O Lock Shift G0 (SI)
ロックシフト G0 (SI)
.TP 27
.BR "ESC n" "	(A)"
.\"O Lock Shift G2
ロックシフト G2
.TP 27
.BR "ESC o" "	(A)"
.\"O Lock Shift G3
ロックシフト G3
.TP 27
.BR "ESC N" "	(A)"
.\"O Single Shift G2
シングルシフト G2
.TP 27
.BR "ESC O" "	(A)"
.\"O Single Shift G3
シングルシフト G3
.TP 27
.BR "ESC ( \fPPcs" "	(A)"
.\"O Designate character set as G0
文字集合として G0 を指定
.TP 27
.BR "ESC ) \fPPcs" "	(A)"
.\"O Designate character set as G1
文字集合として G1 を指定
.TP 27
.BR "ESC * \fPPcs" "	(A)"
.\"O Designate character set as G2
文字集合として G2 を指定
.TP 27
.BR "ESC + \fPPcs" "	(A)"
.\"O Designate character set as G3
文字集合として G3 を指定
.TP 27
.B "ESC [ \fPPn\fB ; \fPPn\fB H"
.\"O Direct Cursor Addressing
カーソルの位置の直接指定
.TP 27
.B "ESC [ \fPPn\fB ; \fPPn\fB f"
.\"O same as above
カーソルの位置の直接指定
.TP 27
.B "ESC [ \fPPn\fB J"
.\"O Erase in Display
ディスプレイの中での削除
.TP 27
.\"O \h'\w'ESC [ 'u'Pn = None or \fB0\fP
\h'\w'ESC [ 'u'Pn = None または \fB0\fP
.\"O From Cursor to End of Screen
カーソル位置からスクリーン末尾まで
.TP 27
\h'\w'ESC [ Pn = 'u'\fB1\fP
.\"O From Beginning of Screen to Cursor
スクリーン先頭からカーソル位置まで
.TP 27
\h'\w'ESC [ Pn = 'u'\fB2\fP
.\"O Entire Screen
スクリーン全体
.TP 27
.B "ESC [ \fPPn\fB K"
.\"O Erase in Line
行の中での削除
.TP 27
\h'\w'ESC [ 'u'Pn = None or \fB0\fP
.\"O From Cursor to End of Line
カーソル位置から行末まで
.TP 27
\h'\w'ESC [ Pn = 'u'\fB1\fP
.\"O From Beginning of Line to Cursor
行頭からカーソル位置まで
.TP 27
\h'\w'ESC [ Pn = 'u'\fB2\fP
.\"O Entire Line
行全体
.TP 27
.B "ESC [ \fPPn\fB X"
.\"O Erase character
文字削除
.TP 27
.B "ESC [ \fPPn\fB A"
.\"O Cursor Up
カーソルを上に移動
.TP 27
.B "ESC [ \fPPn\fB B"
.\"O Cursor Down
カーソルを下に移動
.TP 27
.B "ESC [ \fPPn\fB C"
.\"O Cursor Right
カーソルを右に移動
.TP 27
.B "ESC [ \fPPn\fB D"
.\"O Cursor Left
カーソルを左に移動
.TP 27
.B "ESC [ \fPPn\fB E"
.\"O Cursor next line
カーソルを次の行へ移動
.TP 27
.B "ESC [ \fPPn\fB F"
.\"O Cursor previous line
カーソルを前の行へ移動
.TP 27
.B "ESC [ \fPPn\fB G"
.\"O Cursor horizontal position
カーソルを水平位置へ
.\"nakano 要調査
.TP 27
.B "ESC [ \fPPn\fB `"
.\"O same as above
カーソルを水平位置へ
.TP 27
.B "ESC [ \fPPn\fB d"
.\"O Cursor vertical position
カーソルを垂直位置へ
.TP 27
.B "ESC [ \fPPs\fB ;\fP...\fB; \fPPs\fB m"
.\"O Select Graphic Rendition
グラフィックスの解釈を選択
.TP 27
\h'\w'ESC [ 'u'Ps = None or \fB0\fP
.\"O Default Rendition
デフォルトの解釈を行う
.TP 27
\h'\w'ESC [ Ps = 'u'\fB1\fP
.\"O Bold
ボールド
.TP 27
\h'\w'ESC [ Ps = 'u'\fB2\fP	(A)
.\"O Faint
薄い色で描画
.TP 27
\h'\w'ESC [ Ps = 'u'\fB3\fP	(A)
.\"O \fIStandout\fP Mode (ANSI: Italicized)
\fI強調\fPモード (ANSI ではイタリック表示)
.TP 27
\h'\w'ESC [ Ps = 'u'\fB4\fP
.\"O Underlined
アンダーラインを引く
.TP 27
\h'\w'ESC [ Ps = 'u'\fB5\fP
.\"O Blinking
ブリンクさせる
.TP 27
\h'\w'ESC [ Ps = 'u'\fB7\fP
.\"O Negative Image
イメージを反転させる
.TP 27
\h'\w'ESC [ Ps = 'u'\fB22\fP	(A)
.\"O Normal Intensity
通常の明度
.TP 27
\h'\w'ESC [ Ps = 'u'\fB23\fP	(A)
.\"O \fIStandout\fP Mode off (ANSI: Italicized off)
\fI強調\fP モードをオフにする (ANSI: イタリック化のオフ)
.TP 27
\h'\w'ESC [ Ps = 'u'\fB24\fP	(A)
.\"O Not Underlined
アンダーラインを引かない
.TP 27
\h'\w'ESC [ Ps = 'u'\fB25\fP	(A)
.\"O Not Blinking
ブリンクしない
.TP 27
\h'\w'ESC [ Ps = 'u'\fB27\fP	(A)
.\"O Positive Image
ポジティブ (反転していない) イメージ
.TP 27
\h'\w'ESC [ Ps = 'u'\fB30\fP	(A)
.\"O Foreground Black
前景色をブラックにする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB31\fP	(A)
.\"O Foreground Red
前景色をレッドにする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB32\fP	(A)
.\"O Foreground Green
前景色をグリーンにする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB33\fP	(A)
.\"O Foreground Yellow
前景色をイエローにする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB34\fP	(A)
.\"O Foreground Blue
前景色をブルーにする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB35\fP	(A)
.\"O Foreground Magenta
前景色をマゼンダにする
.TP 27.
\h'\w'ESC [ Ps = 'u'\fB36\fP	(A)
.\"O Foreground Cyan
前景色をシアンにする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB37\fP	(A)
.\"O Foreground White
前景色をホワイトにする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB39\fP	(A)
.\"O Foreground Default
前景色をデフォルト色にする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB40\fP	(A)
.\"O Background Black
背景色をブラックにする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB...\fP
...
.TP 27
\h'\w'ESC [ Ps = 'u'\fB49\fP	(A)
.\"O Background Default
背景色をデフォルト色にする
.TP 27
.B "ESC [ \fPPn\fB g"
.\"O Tab Clear
タブクリア
.TP 27
\h'\w'ESC [ 'u'Pn = None or \fB0\fP
.\"O Clear Tab at Current Position
現在位置のタブをクリアする
.TP 27
\h'\w'ESC [ Ps = 'u'\fB3\fP
.\"O Clear All Tabs
すべてのタブをクリアする
.TP 27
.BR "ESC [ \fPPn\fB ; \fPPn\fB r" "	(V)"
.\"O Set Scrolling Region
スクロール領域を設定する
.TP 27
.BR "ESC [ \fPPn\fB I" "	(A)"
.\"O Horizontal Tab
水平タブ
.TP 27
.BR "ESC [ \fPPn\fB Z" "	(A)"
.\"O Backward Tab
後方タブ
.TP 27
.BR "ESC [ \fPPn\fB L" "	(A)"
.\"O Insert Line
行を挿入する
.TP 27
.BR "ESC [ \fPPn\fB M" "	(A)"
.\"O Delete Line
行を削除する
.TP 27
.BR "ESC [ \fPPn\fB @" "	(A)"
.\"O Insert Character
文字を挿入する
.TP 27
.BR "ESC [ \fPPn\fB P" "	(A)"
.\"O Delete Character
文字を削除する
.TP 27
.B "ESC [ \fPPn\fB S"
.\"O Scroll Scrolling Region Up
スクロール領域を上にスクロールする
.TP 27
.B "ESC [ \fPPn\fB T"
.\"O Scroll Scrolling Region Down
スクロール領域を下にスクロールする
.TP 27
.B "ESC [ \fPPn\fB ^"
.\"O same as above
スクロール領域を下にスクロールする
.TP 27
.B "ESC [ \fPPs\fB ;\fP...\fB; \fPPs\fB h"
.\"O Set Mode
モード設定
.TP 27
.B "ESC [ \fPPs\fB ;\fP...\fB; \fPPs\fB l"
.\"O Reset Mode
モード解除
.TP 27
\h'\w'ESC [ 'u'Ps = \fB4\fP	(A)
.\"O Insert Mode
挿入モード
.TP 27
\h'\w'ESC [ Ps = 'u'\fB20\fP	(A)
.\"O \fIAutomatic Linefeed\fP Mode
\fI自動ラインフィード\fPモード
.TP 27
\h'\w'ESC [ Ps = 'u'\fB34\fP
.\"O Normal Cursor Visibility
通常のカーソル表示
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?1\fP	(V)
.\"O Application Cursor Keys
アプリケーションカーソルキー
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?3\fP	(V)
.\"O Change Terminal Width to 132 columns
端末の幅を 132 カラムに変更
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?5\fP	(V)
.\"O Reverse Video
ビデオ反転
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?6\fP	(V)
.\"O \fIOrigin\fP Mode
\fIオリジン (origin)\fP モード
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?7\fP	(V)
.\"O \fIWrap\fP Mode
\fI折り返し (wrap)\fP モード
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?9\fP
.\"O X10 mouse tracking
X10 マウス追跡
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?25\fP	(V)
.\"O Visible Cursor
可視カーソル
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?47\fP
.\"O Alternate Screen (old xterm code)
別画面 (古い xterm コード)
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?1000\fP	(V)
.\"O VT200 mouse tracking
VT200 マウス追跡
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?1047\fP
.\"O Alternate Screen (new xterm code)
別画面 (新しい xterm コード)
.TP 27
\h'\w'ESC [ Ps = 'u'\fB?1049\fP
.\"O Alternate Screen (new xterm code)
別画面 (新しい xterm コード)
.TP 27
.BR "ESC [ 5 i" "	(A)"
.\"O Start relay to printer (ANSI Media Copy)
プリンタへの転送を開始する (ANSI の Media Copy シーケンス)
.TP 27
.BR "ESC [ 4 i" "	(A)"
.\"O Stop relay to printer (ANSI Media Copy)
プリンタへの転送を止める (ANSI の Media Copy シーケンス)
.TP 27
.B "ESC [ 8 ; \fPPh\fB ; \fPPw\fB t"
.\"O Resize the window to `Ph' lines and `Pw' columns (SunView special)
ウィンドウを `Ph' 行、`Pw' カラムにリサイズする
(SunView 用の特別シーケンス)
.TP 27
.B "ESC [ c"
.\"O Send VT100 Identification String
VT100 識別文字列を送る
.TP 27
.B "ESC [ x"
.\"O Send Terminal Parameter Report
端末パラメータ報告を送る
.TP 27
.B "ESC [ > c"
.\"O Send VT220 Secondary Device Attributes String
VT220 のセカンダリデバイス属性文字列を送る
.TP 27
.B "ESC [ 6 n"
.\"O Send Cursor Position Report
カーソル位置の報告を送る

.\"O 
.\"O .SH "INPUT TRANSLATION"
.SH 入力の変換
.\"O In order to do a full VT100 emulation 
.\"O .I screen
.\"O has to detect
.\"O that a sequence of characters in the input stream was generated
.\"O by a keypress on the user's keyboard and insert the VT100
.\"O style escape sequence. \fIScreen\fP has a very flexible way of doing
.\"O this by making it possible to map arbitrary commands on arbitrary
.\"O sequences of characters. For standard VT100 emulation the command
.\"O will always insert a string in the input buffer of the window
.\"O (see also command \fBstuff\fP in the command table).
.\"O Because the sequences generated by a keypress can
.\"O change after a reattach from a different terminal type, it is
.\"O possible to bind commands to the termcap name of the keys.
.\"O \fIScreen\fP will insert the correct binding after each
.\"O reattach. See the \fBbindkey\fP command for further details on the
.\"O syntax and examples.
VT100 のエミュレーションを完全に行うには、
\fIscreen\fP はユーザのキー入力によって生成される入力ストリーム中から
文字シーケンスを検出して、
VT100 形式のエスケープシーケンスを挿入しなければならない。
\fIscreen\fP では、任意のコマンドを任意の文字シーケンスへ
割り当てることが可能であり、この動作を非常に柔軟に行える。
標準の VT100 エミュレーションの場合、
コマンドは常にウィンドウの入力バッファに文字列を挿入する
(コマンド表の \fBstuff\fP コマンドも参照すること)。
キー入力によって生成されるシーケンスは、
異なるタイプの端末から再アタッチした後には変わることもあるので、
キーの termcap 名にコマンドを割り当てることもできるようになっている。
これにより \fIscreen\fP は再アタッチの後でも必ず正しい割り当てを挿入できる。
詳しい文法と使用例については \fBbindkey\fP コマンドを参照すること。
.PP
.\"O Here is the table of the default key bindings. (A) means that the
.\"O command is executed if the keyboard is switched into application
.\"O mode.
以下にデフォルトのキー割り当ての表を示す。(A) はキーボードが
アプリケーションモードに切り替えられている場合に
実行されるコマンドであることを示す。
.PP
.ta 18n 34n 50n
.nf
.\"O Key name	Termcap name	Command
キーの名前	termcap 名	コマンド
\l'54n'
.ta 22n 34n 50n
.\"O Cursor up	ku	stuff \e033[A
カーソルキー上	ku	stuff \e033[A
		stuff \e033OA	(A)
.\"O Cursor down	kd	stuff \e033[B
カーソルキー下	kd	stuff \e033[B
		stuff \e033OB	(A)
.\"O Cursor right	kr	stuff \e033[C
カーソルキー右	kr	stuff \e033[C
		stuff \e033OC	(A)
.\"O Cursor left	kl	stuff \e033[D
カーソルキー左	kl	stuff \e033[D
		stuff \e033OD	(A)
.\"O Function key 0	k0	stuff \e033[10~
.\"O Function key 1	k1	stuff \e033OP
.\"O Function key 2	k2	stuff \e033OQ
.\"O Function key 3	k3	stuff \e033OR
.\"O Function key 4	k4	stuff \e033OS
.\"O Function key 5	k5	stuff \e033[15~
.\"O Function key 6	k6	stuff \e033[17~
.\"O Function key 7	k7	stuff \e033[18~
.\"O Function key 8	k8	stuff \e033[19~
.\"O Function key 9	k9	stuff \e033[20~
.\"O Function key 10	k;	stuff \e033[21~
.\"O Function key 11	F1	stuff \e033[23~
.\"O Function key 12	F2	stuff \e033[24~
ファンクションキー 0	k0	stuff \e033[10~
ファンクションキー 1	k1	stuff \e033OP
ファンクションキー 2	k2	stuff \e033OQ
ファンクションキー 3	k3	stuff \e033OR
ファンクションキー 4	k4	stuff \e033OS
ファンクションキー 5	k5	stuff \e033[15~
ファンクションキー 6	k6	stuff \e033[17~
ファンクションキー 7	k7	stuff \e033[18~
ファンクションキー 8	k8	stuff \e033[19~
ファンクションキー 9	k9	stuff \e033[20~
ファンクションキー 10	k;	stuff \e033[21~
ファンクションキー 11	F1	stuff \e033[22~
ファンクションキー 12	F2	stuff \e033[23~
Home	kh	stuff \e033[1~
End	kH	stuff \e033[4~
Insert	kI	stuff \e033[2~
Delete	kD	stuff \e033[3~
Page up	kP	stuff \e033[5~
Page down	kN	stuff \e033[6~
.\"O Keypad 0	f0	stuff 0
テンキー 0	f0	stuff 0
		stuff \e033Op	(A)
.\"O Keypad 1	f1	stuff 1
テンキー 1	f1	stuff 1
		stuff \e033Oq	(A)
.\"O Keypad 2	f2	stuff 2
テンキー 2	f2	stuff 2
		stuff \e033Or	(A)
.\"O Keypad 3	f3	stuff 3
テンキー 3	f3	stuff 3
		stuff \e033Os	(A)
.\"O Keypad 4	f4	stuff 4
テンキー 4	f4	stuff 4
		stuff \e033Ot	(A)
.\"O Keypad 5	f5	stuff 5
テンキー 5	f5	stuff 5
		stuff \e033Ou	(A)
.\"O Keypad 6	f6	stuff 6
テンキー 6	f6	stuff 6
		stuff \e033Ov	(A)
.\"O Keypad 7	f7	stuff 7
テンキー 7	f7	stuff 7
		stuff \e033Ow	(A)
.\"O Keypad 8	f8	stuff 8
テンキー 8	f8	stuff 8
		stuff \e033Ox	(A)
.\"O Keypad 9	f9	stuff 9
テンキー 9	f9	stuff 9
		stuff \e033Oy	(A)
.\"O Keypad +	f+	stuff +
テンキー +	f+	stuff +
		stuff \e033Ok	(A)
.\"O Keypad -	f-	stuff -
テンキー -	f-	stuff -
		stuff \e033Om	(A)
.\"O Keypad *	f*	stuff *
テンキー *	f*	stuff *
		stuff \e033Oj	(A)
.\"O Keypad /	f/	stuff /
テンキー /	f/	stuff /
		stuff \e033Oo	(A)
.\"O Keypad =	fq	stuff =
テンキー =	fq	stuff =
		stuff \e033OX	(A)
.\"O Keypad .	f.	stuff .
テンキー .	f.	stuff .
		stuff \e033On	(A)
.\"O Keypad ,	f,	stuff ,
テンキー ,	f,	stuff ,
		stuff \e033Ol	(A)
.\"O Keypad enter	fe	stuff \e015
テンキー Enter	fe	stuff \e015
		stuff \e033OM	(A)
.fi

.\"O 
.\"O .SH SPECIAL TERMINAL CAPABILITIES
.SH 特殊な端末機能
.\"O The following table describes all terminal capabilities
.\"O that are recognized by 
.\"O .I screen
.\"O and are not in the termcap(5) manual.
.\"O You can place these capabilities in your termcap entries (in
.\"O `/etc/termcap') or use them with the commands `termcap', `terminfo' and
.\"O `termcapinfo' in your screenrc files. It is often not possible to place
.\"O these capabilities in the terminfo database.
以下の表では、\fIscreen\fP は認識するが、
.BR termcap (5)
のマニュアルには含まれていない端末機能をすべて示す。
これらの機能は (`/etc/termcap' の) termcap エントリに置いたり、
screenrc ファイルの `termcap', `terminfo', `termcapinfo' コマンドで
使える。これらの機能を terminfo データベースには入れるのは、
不可能な場合が多い。
.PP
.ta 5n
.TP 13
.BI LP "	(bool)"
.\"O Terminal has VT100 style margins (`magic margins'). Note that
.\"O this capability is obsolete because 
.\"O .I screen
.\"O uses the standard 'xn' instead.
端末は VT100 形式のマージン (`magic マージン') を持つ。
\fIscreen\fP は標準の 'xn' の方を使うようになったので、
この機能は obsolete になった。
.TP 13
.BI Z0 "	(str)"
.\"O Change width to 132 columns.
幅を 132 カラムに変更する。
.TP 13
.BI Z1 "	(str)"
.\"O Change width to 80 columns.
幅を 80 カラムに変更する。
.TP 13
.BI WS "	(str)"
.\"O Resize display. This capability has the desired width and height as
.\"O arguments. \fISunView(tm)\fP example: '\eE[8;%d;%dt'.
ディスプレイをリサイズする。
この機能は指定する幅と高さを引き数に取る。
\fISunView(tm)\fP における指定例: '\eE[8;%d;%dt'
.TP 13
.BI NF "	(bool)"
.\"O Terminal doesn't need flow control. Send ^S and ^Q direct to
.\"O the application. Same as 'flow off'. The opposite of this
.\"O capability is 'nx'.
端末はフロー制御を必要としない。
アプリケーションに直接 ^S と ^Q を送信する。'flow off' と同じ意味である。
この反対の機能は 'nx' である。
.TP 13
.BI G0 "	(bool)"
.\"O Terminal can deal with ISO 2022 font selection sequences.
端末は ISO 2022 のフォント選択シーケンスを使用できる。
.TP 13
.BI S0 "	(str)"
.\"O Switch charset 'G0' to the specified charset. Default
.\"O is '\eE(%.'.
文字集合 'G0' を指定した文字集合に切り替える。
デフォルト値は '\eE(%.' である。
.TP 13
.BI E0 "	(str)"
.\"O Switch charset 'G0' back to standard charset. Default
.\"O is '\eE(B'.
文字集合 'G0' を標準の文字集合に戻す。デフォルト値は '\eE(B' である。
.TP 13
.BI C0 "	(str)"
.\"O Use the string as a conversion table for font '0'. See
.\"O the 'ac' capability for more details.
文字列をフォント '0' の変換テーブルとして使用する。
詳しくは 'ac' 機能を参照すること。
.TP 13
.BI CS "	(str)"
.\"O Switch cursor-keys to application mode.
カーソルキーをアプリケーションモードに切り替える。
.TP 13
.BI CE "	(str)"
.\"O Switch cursor-keys back to normal mode.
カーソルキーを通常モードに戻す。
.TP 13
.BI AN "	(bool)"
.\"O Turn on autonuke. See the 'autonuke' command for more details.
autonuke をオンにする。詳しくは 'autonuke' コマンドを参照すること。
.TP 13
.BI OL "	(num)"
.\"O Set the output buffer limit. See the 'obuflimit' command for more details.
出力バッファの上限値を設定する。詳しくは 'obuflimit' コマンドを参照すること。
.TP 13
.BI KJ "	(str)"
.\"O Set the encoding of the terminal. See the 'encoding' command for
.\"O valid encodings.
端末で使う漢字の種類を設定する。有効な文字列は 'encoding'
コマンドの解説を参照すること。
.TP 13
.BI AF "	(str)"
.\"O Change character foreground color in an ANSI conform way. This
.\"O capability will almost always be set to '\eE[3%dm' ('\eE[3%p1%dm'
.\"O on terminfo machines).
ANSI 準拠の方法で文字の前景色を変更する。この機能はほぼ常に '\eE[3%dm'
(terminfo を使うマシンでは '\eE[3%p1%dm') に設定される。
.TP 13
.BI AB "	(str)"
.\"O Same as 'AF', but change background color.
これは 'AF' と同様だが、背景色を変更する。
.TP 13
.BI AX "	(bool)"
.\"O Does understand ANSI set default fg/bg color (\eE[39m / \eE[49m).
ANSI セットのデフォルトの前景色/背景色 (\eE[39m / \eE[49m) を認識する。
.TP 13
.BI XC "	(str)"
.\"O Describe a translation of characters to strings depending on the
.\"O current font. More details follow in the next section.
現在のフォントに基づく、複数個の文字から文字列への変換を記述する。
詳細は次の節に書く。
.TP 13
.BI XT "	(bool)"
.\"O Terminal understands special xterm sequences (OSC, mouse tracking).
端末は xterm の特殊シーケンス (OSC, マウス追跡) を理解する。
.TP 13
.BI C8 "	(bool)"
.\"O Terminal needs bold to display high-intensity colors (e.g. Eterm).
端末は、高輝度色の表示にボールドを必要とする (例 Eterm)。
.TP 13
.BI TF "	(bool)"
.\"O Add missing capabilities to the termcap/info entry. (Set by default).
欠けている機能を termcap/terminfo のエントリに追加する
(デフォルトで設定されている)。

.\"O .SH CHARACTER TRANSLATION
.SH 文字の変換
.\"O \fIScreen\fP has a powerful mechanism to translate characters to arbitrary
.\"O strings depending on the current font and terminal type.
.\"O Use this feature if you want to work with a common standard character
.\"O set (say ISO8851-latin1) even on terminals that scatter the more
.\"O unusual characters over several national language font pages.
\fIscreen\fP には、現在のフォントや端末の種類に基づいて、
文字(列)を任意の文字列に変換する強力な機構がある。
この機能を用いれば、あまり使わない文字群が
いろいろな国・言語のフォントページに散っているような端末でも、
通常の標準的な文字集合 (例えば ISO8851-latin1) を使える。
.sp
.\"O Syntax:
文法:
.nf
    \fBXC=\fP\fI<charset-mapping>\fP{\fB,,\fP\fI<charset-mapping>\fP}
    \fI<charset-mapping>\fP := \fI<designator><template>\fP{\fB,\fP\fI<mapping>\fP}
    \fI<mapping>\fP := \fI<char-to-be-mapped><template-arg>\fP
.fi
.sp
.\"O The things in braces may be repeated any number of times.
ブレース内のものは任意の数だけ指定できる。
.PP
.\"O A \fI<charset-mapping>\fP tells 
.\"O .I screen
.\"O how to map characters
.\"O in font \fI<designator>\fP ('B': Ascii, 'A': UK, 'K': german, etc.)
.\"O to strings. Every \fI<mapping>\fP describes to what string a single
.\"O character will be translated. A template mechanism is used, as 
.\"O most of the time the codes have a lot in common (for example
.\"O strings to switch to and from another charset). Each occurrence
.\"O of '%' in \fI<template>\fP gets substituted with the \fI<template-arg>\fP
.\"O specified together with the character. If your strings are not
.\"O similar at all, then use '%' as a template and place the full
.\"O string in \fI<template-arg>\fP. A quoting mechanism was added to make
.\"O it possible to use a real '%'. The '\e' character quotes the
.\"O special characters '\e', '%', and ','.
\fI<charset-mapping>\fP は、フォント指示子 \fI<designator>\fP
('B': ASCII, 'A': イギリス語, 'K': ドイツ語、など)
に含まれる文字を、文字列にマップさせるやり方を \fIscreen\fP に伝える。
それぞれの \fI<mapping>\fP では、
1 つの文字をどんな文字列にマップさせるかを記述する。
大抵の場合、各コードの大部分は共通なので、
ここではテンプレート機構が用いられる
(例えば、別の文字集合に切り替える文字列など)。
\fI<template>\fP に '%' があると、
それはすべてその文字と同時に指定された \fI<template-arg>\fP に置き換えられる。
指定したい文字列が全く似ていない場合には、'%' をテンプレートとして用い、
文字列全体は \fI<template-arg>\fP
に置くこと。'%' そのものも使えるようにするため、
クォート機構も後に追加された。'\e'
は特殊文字 '\e', '%', ',' をクォートする。
.PP
.\"O Here is an example:
以下に指定例を示す:
.sp
    termcap hp700 'XC=B\eE(K%\eE(B,\e304[,\e326\e\e\e\e,\e334]'
.sp
.\"O This tells
.\"O .I screen
.\"O how to translate ISOlatin1 (charset 'B')
.\"O upper case umlaut characters on a hp700 terminal that has a
.\"O german charset. '\e304' gets translated to '\eE(K[\eE(B' and so on.
.\"O Note that this line gets parsed *three* times before the internal
.\"O lookup table is built, therefore a lot of quoting is needed to
.\"O create a single '\e'.
これは ISOlatin1 (文字集合 'B') のウムラウト付きの大文字を、
ドイツ語の文字集合を持つ HP700 端末向けに変換する方法を
\fIscreen\fP に指定する。'\e304' は '\eE(K[\eE(B' に変換される (以下同様)。
この行は内部参照テーブルが構築されるまでに * 3 回 * 展開されるため、
1 つの '\e' を生成するにはいくつものクォートが必要になる点に注意すること。
.PP
.\"O Another extension was added to allow more emulation: If a mapping
.\"O translates the unquoted '%' char, it will be sent to the terminal
.\"O whenever 
.\"O .I screen
.\"O switches to the corresponding \fI<designator>\fP. In this
.\"O special case the template is assumed to be just '%' because
.\"O the charset switch sequence and the character mappings normally
.\"O haven't much in common.
さらに多くのエミュレーションができるように、別の拡張も加えられている:
クォートされていない '%' がマッピングで変換された場合、
\fIscreen\fP がその \fI<designator>\fP に切り替わると、
必ずこれが端末に送られる。この特殊な場合には、
テンプレートは単に '%' とみなされる。
文字集合切り替えシーケンスと文字マッピングは、
通常あまり共通部分を持たないからである。
.PP
.\"O This example shows one use of the extension:
以下の指定例は、この拡張の使い方の 1 つを示したものである:
.sp
    termcap xterm 'XC=K%,%\eE(B,[\e304,\e\e\e\e\e326,]\e334'
.sp
.\"O Here, a part of the german ('K') charset is emulated on an xterm.
.\"O If 
.\"O .I screen
.\"O has to change to the 'K' charset, '\eE(B' will be sent
.\"O to the terminal, i.e. the ASCII charset is used instead. The
.\"O template is just '%', so the mapping is straightforward: '['
.\"O to '\e304', '\e' to '\e326', and ']' to '\e334'.
この例では、ドイツ語 ('K') 文字集合の一部が xterm 上でエミュレートされる。
\fIscreen\fP が文字集合 'K' に切り替わらなければならない場合、'\eE(B'
が端末に送られる。つまり、
ASCII 文字集合がドイツ語文字集合の代わりに使われる。
テンプレートは '%' だけになり、したがってマッピングは単純である: '['
は '\e304' に、'\e' は '\e326' に、']' は '\e334' にマッピングされる。

.\"O .SH ENVIRONMENT
.SH 環境変数
.PD 0
.IP COLUMNS 15
.\"O Number of columns on the terminal (overrides termcap entry).
端末のカラム数 (termcap エントリより優先される)。
.IP HOME
.\"O Directory in which to look for .screenrc.
ファイル .screenrc を探すディレクトリ。
.IP LINES 
.\"O Number of lines on the terminal (overrides termcap entry).
端末の行数 (termcap エントリより優先される)。
.IP LOCKPRG
.\"O Screen lock program.
画面をロックするプログラム。
.IP NETHACKOPTIONS
.\"O Turns on nethack option.
nethack オプションを有効にする。
.IP PATH
.\"O Used for locating programs to run.
実行するプログラムの探索に用いられる。
.IP SCREENCAP
.\"O For customizing a terminal's TERMCAP value.
端末の TERMCAP 値のカスタマイズ用。
.IP SCREENDIR
.\"O Alternate socket directory.
別のソケットディレクトリ。
.IP SCREENRC
.\"O Alternate user screenrc file.
別のユーザ用 screenrc ファイル。
.IP SHELL
.\"O Default shell program for opening windows (default \*Q/bin/sh\*U).
ウィンドウをオープンした時のデフォルトのシェルプログラム
(デフォルト値は \*Q/bin/sh\*U)。
.IP STY
.\"O Alternate socket name.
別のソケット名。
.IP SYSSCREENRC
.\"O Alternate system screenrc file.
別のシステム用 screenrc ファイル。
.IP TERM
.\"O Terminal name.
端末名。
.IP TERMCAP
.\"O Terminal description.
端末記述。
.IP WINDOW
.\"O Window number of a window (at creation time).
ウィンドウの番号 (生成時)。

.\"O .SH FILES
.SH ファイル
.PD 0
.IP .../screen-4.?.??/etc/screenrc 34
.IP .../screen-4.?.??/etc/etcscreenrc
.\"O Examples in the 
.\"O .I screen
.\"O distribution package for private and global initialization files.
.I screen
の配布パッケージに含まれている、
プライベート用・グローバル用各初期化ファイルの例。
.IP $SYSSCREENRC 
.IP /etc/screenrc
.\"O .I screen
.\"O initialization commands
\fIscreen\fP の初期化コマンド群を含む。
.IP $SCREENRC
.IP $HOME/.screenrc
.\"O Read in after /etc/screenrc
/etc/screenrc の後に読み込まれる
.IP $SCREENDIR/S-<login>
.IP /var/run/screen/S-<login>
.\"O Socket directories (default)
ソケットディレクトリ (デフォルト)
.IP /usr/tmp/screens/S-<login>
.\"O Alternate socket directories.
別のソケットディレクトリ
.IP "<socket directory>/.termcap"
.\"O Written by the "termcap" output function
"termcap" 出力関数が書き込む
.\"O .IP /usr/tmp/screens/screen-exchange
.\"O or
.\"O .IP /tmp/screen-exchange
.IP "/usr/tmp/screens/screen-exchange または /tmp/screen-exchange"
.\"O .I screen
.\"O `interprocess communication buffer'
\fIscreen\fP の「プロセス間通信バッファ」
.IP hardcopy.[0-9]
.\"O Screen images created by the hardcopy function
hardcopy 関数が生成する画面イメージ
.IP screenlog.[0-9]
.\"O Output log files created by the log function
log 関数が生成するログファイル
.\"O .IP /usr/lib/terminfo/?/*
.\"O or
.\"O .IP /etc/termcap
.IP "/usr/lib/terminfo/?/* または /etc/termcap"
.\"O Terminal capability databases
端末機能データベース
.IP /var/run/utmp
.\"O Login records
ログイン記録
.IP $LOCKPRG
.\"O Program that locks a terminal.
端末をロックするプログラム

.\"O 
.\"O .SH "SEE ALSO"
.SH 関連項目
termcap(5), utmp(5), vi(1), captoinfo(1), tic(1)
.\"O 

.\"O .SH AUTHORS
.SH 著者
.\"O Originally created by Oliver Laumann, this latest version was
.\"O produced by Wayne Davison, Juergen Weigert and Michael Schroeder.
最初に作成したのは Oliver Laumann であり、最新版を作ったのは
Wayne Davison, Juergen Weigert, Michael Schroeder である。

.SH COPYLEFT
.nf
Copyright (C) 1993-2003
	Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
	Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
Copyright (C) 1987 Oliver Laumann
.fi
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.
.PP
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
.PP
You should have received a copy of the GNU General Public License
along with this program (see the file COPYING); if not, write to the
Free Software Foundation, Inc.,
59 Temple Place - Suite 330, Boston, MA  02111-1307, USA

.\"O .SH CONTRIBUTORS
.SH 貢献者
.nf
Ken Beal (kbeal@amber.ssd.csd.harris.com),
Rudolf Koenig (rfkoenig@immd4.informatik.uni-erlangen.de),
Toerless Eckert (eckert@immd4.informatik.uni-erlangen.de), 
Wayne Davison (davison@borland.com),
Patrick Wolfe (pat@kai.com, kailand!pat),
Bart Schaefer (schaefer@cse.ogi.edu),
Nathan Glasser (nathan@brokaw.lcs.mit.edu),
Larry W. Virden (lvirden@cas.org),
Howard Chu (hyc@hanauma.jpl.nasa.gov),
Tim MacKenzie (tym@dibbler.cs.monash.edu.au),
Markku Jarvinen (mta@{cc,cs,ee}.tut.fi),
Marc Boucher (marc@CAM.ORG),
Doug Siebert (dsiebert@isca.uiowa.edu),
Ken Stillson (stillson@tsfsrv.mitre.org),
Ian Frechett (frechett@spot.Colorado.EDU),
Brian Koehmstedt (bpk@gnu.ai.mit.edu),
Don Smith (djs6015@ultb.isc.rit.edu),
Frank van der Linden (vdlinden@fwi.uva.nl),
Martin Schweikert (schweik@cpp.ob.open.de),
David Vrona (dave@sashimi.lcu.com),
E. Tye McQueen (tye%spillman.UUCP@uunet.uu.net),
Matthew Green (mrg@eterna.com.au),
Christopher Williams (cgw@pobox.com),
Matt Mosley (mattm@access.digex.net),
Gregory Neil Shapiro (gshapiro@wpi.WPI.EDU),
Johannes Zellner (johannes@zellner.org),
Pablo Averbuj (pablo@averbuj.com).
.fi
.\"O 

.\"O .SH VERSION
.SH バージョン
.\"O This is version 4.0.2. Its roots are a merge of a custom version
.\"O 2.3PR7 by Wayne Davison
.\"O and several enhancements to Oliver Laumann's version 2.0. Note that all versions
.\"O numbered 2.x are copyright by Oliver Laumann. 
これはバージョン 4.0.2 である。これは Wayne Davison による
2.3PR7 カスタム版をマージしたものと、
Oliver Laumann のバージョン 2.0 へのいくつかの改良とがもとになっている。
2.x の番号が付いているバージョンはすべて Oliver Laumann の著作物である。

.\"O .SH AVAILABILITY
.SH 入手方法
.\"O The latest official release of 
.\"O .I screen
.\"O available via anonymous ftp from gnudist.gnu.org, nic.funet.fi or any other 
.\"O .I GNU 
.\"O distribution site. The home site of
.\"O .I screen
.\"O is ftp.uni-erlangen.de, in the directory
.\"O pub/utilities/screen. The subdirectory `private' contains the latest beta
.\"O testing release. If you want to help, send a note to
.\"O screen@uni-erlangen.de.
.I screen
の最新の公式リリースは、gnudist.gnu.org, nic.funet.fi その他の
.I GNU
配布サイトから anonymous ftp で取得できる。
.I screen
のホームサイトは ftp.uni-erlangen.de のディレクトリ pub/utilities/screen
である。ここのサブディレクトリ `private' には、
最新のベータテスト版が置かれる。開発に協力したい場合は、
気付いた点を screen@uni-erlangen.de に送ってほしい。

.\"O .SH BUGS
.SH バグ
.PD
.IP \(bu 3
.\"O `dm' (delete mode) and `xs' are not handled
.\"O correctly (they are ignored). `xn' is treated as a magic-margin
.\"O indicator.
`dm' (削除モード)と `xs' を正しく扱うことができない
(これらは無視される)。`xn' は magic-margin 指示子として扱われる。
.IP \(bu
.\"O .I Screen
.\"O has no clue about double-high or double-wide characters.         
.\"O But this is the only area where 
.\"O .I vttest
.\"O is allowed to fail.
.I screen
は 2 倍高や 2 倍幅の文字を扱うことができない。
しかし、
.I vttest
の失敗が許されるのはここだけである。
.IP \(bu
.\"O It is not possible to change the environment variable $TERMCAP when 
.\"O reattaching under a different terminal type.
異なる端末タイプから再アタッチを行ったとき、
環境変数 $TERMCAP を変更できない。
.IP \(bu
.\"O The support of terminfo based systems is very limited. Adding extra
.\"O capabilities to $TERMCAP may not have any effects.
terminfo ベースのシステムのサポートが非常に限られている。
機能を $TERMCAP に追加しても全く効果が現われないことがある。
.IP \(bu
.\"O .I Screen
.\"O does not make use of hardware tabs.
.I screen
はハードウェアタブを利用していない。
.IP \(bu
.\"O .I Screen
.\"O must be installed as set-uid with owner root on most systems in order
.\"O to be able to correctly change the owner of the tty device file for
.\"O each window.
.\"O Special permission may also be required to write the file \*Q/var/run/utmp\*U.
.I screen
は所有者 root に setuid してインストールしなければならない。
これは各ウィンドウに対する tty デバイスファイルの所有者を
正しく変更するためである。\*Q/etc/utmp\*U
ファイルに書き込みを行うためにも特殊な権限が必要である。
.IP \(bu
.\"O Entries in \*Q/var/run/utmp\*U are not removed when
.\"O .I screen
.\"O is killed with SIGKILL.
.\"O This will cause some programs (like "w" or "rwho")
.\"O to advertise that a user is logged on who really isn't.
.I screen
が SIGKILL で kill された時には、\*Q/etc/utmp\*U のエントリが削除されない。
この場合、一部のプログラム ("w" や "rwho" 等)
は、実際にはログインしていないユーザをログイン中であると表示する。
.IP \(bu
.\"O .I Screen
.\"O may give a strange warning when your tty has no utmp entry.
ユーザが使っている tty に utmp エントリが無いとき、
.I screen
はおかしな警告を出す。
.IP \(bu
.\"O When the modem line was hung up, 
.\"O .I screen
.\"O may not automatically detach (or quit)
.\"O unless the device driver is configured to send a HANGUP signal. 
.\"O To detach a 
.\"O .I screen
.\"O session use the -D or -d command line option.
モデムラインのデバイスドライバが HANGUP シグナルを送るように
設定されていないと、このラインがハングアップした時に
.I screen
は自動的なデタッチ (あるいは終了) を行えないことがある。
.I screen
セッションをデタッチするには
コマンドラインオプション -D または -d を用いること。
.IP \(bu
.\"O If a password is set, the command line options -d and -D still detach a 
.\"O session without asking.
パスワードを設定しているときでも、
コマンドラインオプション -D および -d によって、
パスワードを尋かれることなしにデタッチができてしまう。
.IP \(bu
.\"O Both \*Qbreaktype\*U and \*Qdefbreaktype\*U change the break generating
.\"O method used by all terminal devices. The first should change a window
.\"O specific setting, where the latter should change only the default for new 
.\"O windows.
\*Qbreaktype\*U と \*Qdefbreaktype\*U の両方ともが、
全端末デバイスで用いられるブレークの生成方法を変更してしまう。
前者はそのウィンドウの設定だけを変更すべきで、
後者は以降新規に生成されるウィンドウの設定だけを変更すべきである。
.IP \(bu
.\"O When attaching to a multiuser session, the user's .screenrc file is not
.\"O sourced. Each user's personal settings have to be included in the .screenrc
.\"O file from which the session is booted, or have to be changed manually.
マルチユーザセッションにアタッチしようとすると、
そのユーザの .screenrc ファイルは評価されない。
各ユーザの個人設定は、そのセッションがブートされるときの .screenrc
ファイルに書くか、あるいは手動で変更しなければならない。
.IP \(bu
.\"O A weird imagination is most useful to gain full advantage of all the features.
全機能を最大限に生かすためには、おかしな想像力が非常に有用となる。
.IP \(bu
.\"O Send bug-reports, fixes, enhancements, t-shirts, money, beer & pizza to
.\"O .BR screen@uni-erlangen.de .
バグ報告、修正、改良、T シャツ、お金、ビール、ピザ等は
.BR screen@uni-erlangen.de
まで送ってほしい。
