'\" t
.\" $Id: ncurses-ja.3x,v 1.3 1998/10/14 15:20:42 kanda Exp $
.\" Japanese Version Copyright (c) 1998 Kanda Mitsuru
.\"         all rights reserved.
.\" Translated Mon Oct 12 22:30:53 JST 1998
.\"         by Kanda Mitsuru <kanda@@nn.iij4u.or.jp>
.TH ncurses 3X ""
.ds n 5
.ds d /usr/share/terminfo
.\"0 .SH NAME
.SH 名前
\fBncurses\fR - CRT screen handling and optimization package
\fBncurses\fR - CRT スクリーンハンドリングと最適化パッケージ
.\"0 .SH SYNOPSIS
.SH 書式
\fB#include <curses.h>\fR
.br
.\"0 .SH DESCRIPTION
.SH 説明
.\"0 The \fBcurses\fR library routines give the user a terminal-independent method
.\"0 of updating character screens with reasonable optimization.  This
.\"0 implementation is ``new curses'' (ncurses) and is the approved replacement for
.\"0 4.4BSD classic curses, which has been discontinued.
\fBcurses\fR ライブラリルーチンは適度な最適化をして端末独立な
文字端末の更新方法を提供する。この実装は ``new curses'' (ncurses) という名であり、
開発の止まった 4.4BSD 付属の古典的な curses に置き換わるものである。

.\"0 The \fBncurses\fR routines emulate the \fBcurses\fR(3X) library of System V
.\"0 Release 4 UNIX, and the XPG4 curses standard (XSI curses) but the \fBncurses\fR
.\"0 library is freely redistributable in source form.  Differences from the SVr4
.\"0 curses are summarized under the EXTENSIONS and BUGS sections below and
.\"0 described in detail in the EXTENSIONS and BUGS sections of individual man
.\"0 pages.
\fBncurses\fR ルーチンは System V Release 4 UNIX の \fBcurses\fR(3X) ライブラリと 
XPG4 curses スタンダード (XSI curses) をエミュレートする、しかし \fBncurses\fR 
ライブラリは ソースを自由に配布可能である。SVr4 curses との違いは 後述する
 \fB拡張\fR と \fBバグ\fR のセクションにまとめられていて、
各々の man ページの \fB拡張\fR と \fBバグ\fR のセクションに詳述されている。

.\"0 A program using these routines must be linked with the \fB-lncurses\fR option,
.\"0 or (if it has been generated) with the debugging library \fB-lncurses_g\fR. 
.\"0 (Your system integrator may also have installed these libraries under
.\"0 the names \fB-lcurses\fR and \fB-lcurses_g\fR.)
.\"0 The ncurses_g library generates trace logs (in a file called 'trace' in the
.\"0 current directory) that describe curses actions.
これらのルーチンを使用するプログラムは \fB-lncurses\fR か
(もし作成していたならば)デバッグ用のライブラリ \fB-lncurses_g\fR オプションを
付けてリンクしなければならない。(あなたのシステム管理者がこれらのライブラリを
\fB-lcurses\fR と \fB-lcurses_g\fR という名でインストールしているかもしれない。)
ncurses_g ライブラリは curses のアクションを記述した
(カレントディレクトリに 'trace' というファイル中に)トレースログを生成する。

.\"0 The \fBncurses\fR package supports: overall screen, window and pad
.\"0 manipulation; output to windows and pads; reading terminal input; control over
.\"0 terminal and \fBcurses\fR input and output options; environment query
.\"0 routines; color manipulation; use of soft label keys; terminfo capabilities;
.\"0 and access to low-level terminal-manipulation routines.
\fBncurses\fR パッケージは以下のものをサポートする: 
オーバオールスクリーン、ウインドウ、パッドの操作; ウインドウとパッドの出力; 
端末からの入力の読み込み; 端末や \fBcurses\fR の入力と出力オプションの制御; 
環境問い合わせルーチン; カラー操作; ソフトラベルキーの使用; terminfo 可能出力; 
低レベル端末操作ルーチンへのアクセス。

.\"0 To initialize the routines, the routine \fBinitscr\fR or \fBnewterm\fR
.\"0 must be called before any of the other routines that deal with windows
.\"0 and screens are used.  The routine \fBendwin\fR must be called before
.\"0 exiting.  To get character-at-a-time input without echoing (most
.\"0 interactive, screen oriented programs want this), the following
.\"0 sequence should be used:
ルーチンを初期化するために、ウインドウやスクリーンを扱うその他のルーチンを
使用する前に、\fBinitscr\fR もしくは \fBnewterm\fR ルーチンを
呼び出さなければならない。\fBendwin\fR ルーチンは終了前に呼び出さなければならない。
その場ですぐにエコー無しで(ほとんどは対話式で、スクリーンオリエンテッドな
プログラムはこれを必要とする)文字入力を得るためには、
以下のシーケンスを用いれば良い:

      \fBinitscr(); cbreak(); noecho();\fR

.\"0 Most programs would additionally use the sequence:
多くのプログラムは以下のシーケンスも付け加えて使用する:

      \fBnonl();\fR
      \fBintrflush(stdscr, FALSE);\fR
      \fBkeypad(stdscr, TRUE);\fR

.\"0 Before a \fBcurses\fR program is run, the tab stops of the terminal
.\"0 should be set and its initialization strings, if defined, must be
.\"0 output.  This can be done by executing the \fBtput init\fR command
.\"0 after the shell environment variable \fBTERM\fR has been exported.
.\"0 \fBtset(1)\fR is usually responsible for doing this.
.\"0 [See \fBterminfo\fR(\*n) for further details.]
\fBcurses\fR プログラムが起動される前に、端末のタブストップは設定され、
その初期化文字列が、もし定義されていれば、出力される。
これは、シェルの環境変数 \fBTERM\fR がエキスポートされた後に
 \fRtput init\fR コマンドを実行することにより行われ得る。
[詳しくは \fBterminfo\fR(\*n) 参照のこと]

.\"0 The \fBcurses\fR library permits manipulation of data structures,
.\"0 called \fIwindows\fR, which can be thought of as two-dimensional
.\"0 arrays of characters representing all or part of a CRT screen.  A
.\"0 default window called \fBstdscr\fR, which is the size of the terminal
.\"0 screen, is supplied.  Others may be created with \fBnewwin\fR.
\fBcurses\fR ライブラリは \fIwindows\fR と呼ばれるデータ構造体の操作を
可能にしている、これは文字全て表す2次の配列もしくは CRT スクリーンの
部分として考え得る。(??) 
デフォルトのウインドウは \fBstdscr\fR と呼ばれる、これは端末のスクリーンのサイズ
として提供される。その他は \fBnewwin\fR によって作成される。

.\"0 Note that \fBcurses\fR does not handle overlapping windows, that's done by
.\"0 the \fBpanel\fR(3X) library. This means that you can either use
.\"0 \fBstdscr\fR or divide the screen into tiled windows and not using
.\"0 \fBstdscr\fR at all. Mixing the two will result in unpredictable, and
.\"0 undesired, effects.
注意することは、\fBcurses\fR はウインドウの重ねあわせを操作しないことである、
それは \fBpanel\fR(3X) ライブラリによってなされる。これは \fBstdscr\fR を
使用するか、\fBstdscr\fR を全く使用せずにタイルのようにウインドウを分割して
使用するかしか出来ないことを意味する。２つを混ぜての使用は予期できない、
望まない結果になるであろう。

.\"0 Windows are referred to by variables declared as \fBWINDOW *\fR.
.\"0 These data structures are manipulated with routines described here and
.\"0 elsewhere in the \fBncurses\fR manual pages.  Among which the most basic
.\"0 routines are \fBmove\fR and \fBaddch\fR.  More general versions of
.\"0 these routines are included with names beginning with \fBw\fR,
.\"0 allowing the user to specify a window.  The routines not beginning
.\"0 with \fBw\fR affect \fBstdscr\fR.)
ウインドウは \fBWINDOW\fR として宣言された変数によって参照される。
これらのデータ構造体はここや \fBncurses\fR マニュアルページ中の他の場所
で説明されるルーチンで操作される。多くの基本的なルーチンの中に \fBmove\fR
と \fBaddch\fR がある。これらのルーチンの多くのバージョンは \fBw\fR で
はじまる名前を持ち、ユーザにウインドウを指定させる。\fBw\fR ではじまらない
ルーチンは \fBstdscr\fR に作用する。

.\"0 After using routines to manipulate a window, \fBrefresh\fR is called,
.\"0 telling \fBcurses\fR to make the user's CRT screen look like
.\"0 \fBstdscr\fR.  The characters in a window are actually of type
.\"0 \fBchtype\fR, (character and attribute data) so that other information
.\"0 about the character may also be stored with each character.
ウインドウを操作するためのルーチンを使用した後に、ユーザの CRTスクリーンに 
\fBstdscr\fR  などを見せることを \fBcurses\fR に伝えるために \fBrefresh\fR を呼ぶ。
ウインドウ内の文字は実際は \fBchtype\fR の型(文字と属性データ)である、それで
文字についてのその他の情報は各文字と共に蓄えられる。

.\"0 Special windows called \fIpads\fR may also be manipulated.  These are windows
.\"0 which are not constrained to the size of the screen and whose contents need not
.\"0 be completely displayed.  See \fBcurs_pad\fR(3X) for more information.
\fIpad\fR と呼ばれる特別のウインドウもまた同様に操作される。これらは
スクリーンのサイズに束縛されないウインドウであり、
その中身は完全に表示される必要はないものである。より詳細な情報は \fBcurs_pad\fR(3X)
を参照のこと。

.\"0 In addition to drawing characters on the screen, video attributes and colors
.\"0 may be supported, causing the characters to show up in such modes as
.\"0 underlined, in reverse video, or in color on terminals that support such
.\"0 display enhancements.  Line drawing characters may be specified to be output.
.\"0 On input, \fBcurses\fR is also able to translate arrow and function keys that
.\"0 transmit escape sequences into single values.  The video attributes, line
.\"0 drawing characters, and input values use names, defined in \fB<curses.h>\fR,
.\"0 such as \fBA_REVERSE\fR, \fBACS_HLINE\fR, and \fBKEY_LEFT\fR.
スクリーン上に文字を描くのに加えて、下線、反転表示、機能拡張されたディスプレイの
端末上のカラーのようなモードで文字を目立たせるためにはビデオ属性とカラーが
サポートされる必要がある。線を描く文字は出力時に指定する必要がある。
入力時に、\fBcurses\fR は エスケープシーケンス送信する矢印キーやファンクションキーを
一つの値に変換することもできる。\fBA_REVERSE\fR、\fBACS_HLINE\fR、\fBKEY_LEFT\fR 
などのビデオ属性、線を描く文字、名前を使用する入力変数は \fB<curses.h>\fR 
に定義されている。

.\"0 If the environment variables \fBLINES\fR and \fBCOLUMNS\fR are set, or if the
.\"0 program is executing in a window environment, line and column information in
.\"0 the environment will override information read by \fIterminfo\fR.  This would
.\"0 effect a program running in an AT&T 630 layer, for example, where the size of a
.\"0 screen is changeable.
もし環境変数 \fBLINES\fR と \fBCOLUMNS\fR が設定されているか、プログラムが
ウインドウ環境で実行されていれば、環境中のラインとカラム情報は AT&T 630 レイヤー中で
実行されているプログラムに影響を与える、例えば、スクリーンのサイズは変更可能である。

.\"0 If the environment variable \fBTERMINFO\fR is defined, any program using
.\"0 \fBcurses\fR checks for a local terminal definition before checking in the
.\"0 standard place.  For example, if \fBTERM\fR is set to \fBatt4424\fR, then the
.\"0 compiled terminal definition is found in
もし 環境変数 \fBTERMINFO\fR が定義されていれば、\fBcurses\fR を使用している
プログラムは標準的な場所をチェックする前にローカルの端末定義をチェックする。
例えば、もし \fBTERM\fR が \fBatt4424\fR が設定されていれば、コンパイル済みの端末
定義は以下のように見つけられる。

.\"0      \fB\*d/a/att4424\fR.
      \fB\*d/a/att4424\fR

.\"0 (The \fBa\fR is copied from the first letter of \fBatt4424\fR to avoid
.\"0 creation of huge directories.)  However, if \fBTERMINFO\fR is set to
.\"0 \fB$HOME/myterms\fR, \fBcurses\fR first checks
(\fBa\fR は巨大なディレクトリの作成を避けるため \fBatt4424\fR 
の最初の文字からコピーされる。) しかしながら、もし \fBTERMINFO\fR が
\fB$HOME/myterms\fR に設定されているならば、\fBcurses\fR は最初に
以下をチェックし、

.\"0       \fB$HOME/myterms/a/att4424\fR,
      \fB$HOME/myterms/a/att4424\fR,

.\"0 and if that fails, it then checks
そしてもし失敗すれば、以下をチェックする。

.\"0       \fB\*d/a/att4424\fR.
      \fB\*d/a/att4424\fR

.\"0 This is useful for developing experimental definitions or when write
.\"0 permission in \fB\*d\fR is not available.
これは 実験的な定義を開発する場合や、\fB\*d\fR に書き込み権限がない場合有益である。

.\"0 The integer variables \fBLINES\fR and \fBCOLS\fR are defined in
.\"0 \fB<curses.h>\fR and will be filled in by \fBinitscr\fR with the size of the
.\"0 screen.  The constants \fBTRUE\fR and \fBFALSE\fR have the values \fB1\fR and
.\"0 \fB0\fR, respectively.
整数の変数 \fBLINES\fR と \fBCOLS\fR は \fB<curses.h>\fR で定義されていて、
スクリーンのサイズで \fBinitscr\fR によって満たされる。
定数 \fBTRUE\fR と \fBFALSE\fR は 各々 \fB1\fR と \fB0\fR の値を持つ。

.\"0 The \fBcurses\fR routines also define the \fBWINDOW *\fR variable \fBcurscr\fR
.\"0 which is used for certain low-level operations like clearing and redrawing a
.\"0 screen containing garbage.  The \fBcurscr\fR can be used in only a few
.\"0 routines.
\fBcurses\fR ルーチンは同様に ゴミを含んだスクリーンのクリアや再描画のような
低レベルの操作に使われる \fBWINDOW *\fR 変数 \fBcurscr\fR を定義している。

.\"0 .SS Routine and Argument Names
.SS ルーチンと引数名
.\"0 Many \fBcurses\fR routines have two or more versions.  The routines prefixed
.\"0 with \fBw\fR require a window argument.  The routines prefixed with \fBp\fR
.\"0 require a pad argument.  Those without a prefix generally use \fBstdscr\fR.
多くの \fBcurses\fR ルーチンは ２つ以上のバージョンを持っている。\fBw\fR がついた
ルーチンは ウインドウの引数を必要とする。\fBp\fR がついたルーチンは パッドの
引き数を必要とする。これらがついていないものは一般に \fBstdscr\fR に対して使用する。

.\"0 The routines prefixed with \fBmv\fR require a \fIy\fR and \fIx\fR
.\"0 coordinate to move to before performing the appropriate action.  The
.\"0 \fBmv\fR routines imply a call to \fBmove\fR before the call to the
.\"0 other routine.  The coordinate \fIy\fR always refers to the row (of
.\"0 the window), and \fIx\fR always refers to the column.  The upper
.\"0 left-hand corner is always (0,0), not (1,1).
\fBmv\fR がついたルーチンは 実行前に移動するための \fIy\fR と \fIx\fR 
座標を必要とする。\fBmv\fR ルーチンは他のルーチンを呼ぶ前に \fBmove\fR を
呼ぶことを含んでいる。座標 \fIy\fR は(ウインドウの)列を指し、\fIx\fR は
行を指す。ウインドウの上方の左角は (0,0) となり、(1,1) ではない。

.\"0 The routines prefixed with \fBmvw\fR take both a window argument and
.\"0 \fIx\fR and \fIy\fR coordinates.  The window argument is always
.\"0 specified before the coordinates.
\fBmvw\fR のついたルーチンは ウインドウの引数と \fIx\fR と \fIy\fR 座標を
必要とする。ウインドウ引数は座標の前に指定する。

.\"0 In each case, \fIwin\fR is the window affected, and \fIpad\fR is the
.\"0 pad affected; \fIwin\fR and \fIpad\fR are always pointers to type
.\"0 \fBWINDOW\fR.
どの場合においても、\fIwin\fR は ウインドウに影響し、 \fIpad\fR はパッドに
影響する; \fIwin\fR と \fIpad\fR は \fBWINDOW\fR 型へのポインタである。

.\"0 Option setting routines require a Boolean flag \fIbf\fR with the value
.\"0 \fBTRUE\fR or \fBFALSE\fR; \fIbf\fR is always of type \fBbool\fR.  The
.\"0 variables \fIch\fR and \fIattrs\fR below are always of type
.\"0 \fBchtype\fR.  The types \fBWINDOW\fR, \fBSCREEN\fR, \fBbool\fR, and
.\"0 \fBchtype\fR are defined in \fB<curses.h>\fR.  The type \fBTERMINAL\fR
.\"0 is defined in \fB<term.h>\fR.  All other arguments are integers.
オプション設定ルーチンは \fBTRUE\fR もしくは \fBFALSE\fR の値で Boolean フラグ 
\fIbf\fR を必要とする; \fIbf\fR は \fBbool\fR 型である。
変数 \fIch\fR と \fIattrs\fR は \fBchtype\fR 型である。\fBWINDOW\fR、\fBSCREEN\fR、
\fBbool\fR、\fBchtype\fR は \fB<curses.h> で定義されている。\fBTERMINAL\fR は
\fB<term.h>\fR で定義されている。全ての引数は整数である。

.\"0 .SS Routine Name Index
.SS ルーチン名の索引
.\"0 The following table lists each \fBcurses\fR routine and the name of
.\"0 the manual page on which it is described.  Routines flagged with `*'
.\"0 are ncurses-specific, not described by XPG4 or present in SVr4.
以下の表は \fBcurses\fR ルーチンとそれが説明されているマニュアルページ名である。
'*' がついたルーチンは ncurses 特有のものであり、XPG4 もしくは SVr4では
説明されていない。

.TS
center tab(/);
l l
l l .
.\"0 \fBcurses\fR Routine Name/Manual Page Name
\fBcurses\fR ルーチン名/マニュアルページ名
=
addch/\fBcurs_addch\fR(3X)
addchnstr/\fBcurs_addchstr\fR(3X)
addchstr/\fBcurs_addchstr\fR(3X)
addnstr/\fBcurs_addstr\fR(3X)
addstr/\fBcurs_addstr\fR(3X)
attroff/\fBcurs_attr\fR(3X)
attron/\fBcurs_attr\fR(3X)
attrset/\fBcurs_attr\fR(3X)
baudrate/\fBcurs_termattrs\fR(3X)
beep/\fBcurs_beep\fR(3X)
bkgd/\fBcurs_bkgd\fR(3X)
bkgdset/\fBcurs_bkgd\fR(3X)
border/\fBcurs_border\fR(3X)
box/\fBcurs_border\fR(3X)
can_change_color/\fBcurs_color\fR(3X)
cbreak/\fBcurs_inopts\fR(3X)
clear/\fBcurs_clear\fR(3X)
clearok/\fBcurs_outopts\fR(3X)
clrtobot/\fBcurs_clear\fR(3X)
clrtoeol/\fBcurs_clear\fR(3X)
color_content/\fBcurs_color\fR(3X)
copywin/\fBcurs_overlay\fR(3X)
curs_set/\fBcurs_kernel\fR(3X)
def_prog_mode/\fBcurs_kernel\fR(3X)
def_shell_mode/\fBcurs_kernel\fR(3X)
define_key/\fBdefine_key\fR(3X)*
del_curterm/\fBcurs_terminfo\fR(3X)
delay_output/\fBcurs_util\fR(3X)
delch/\fBcurs_delch\fR(3X)
deleteln/\fBcurs_deleteln\fR(3X)
delscreen/\fBcurs_initscr\fR(3X)
delwin/\fBcurs_window\fR(3X)
derwin/\fBcurs_window\fR(3X)
doupdate/\fBcurs_refresh\fR(3X)
dupwin/\fBcurs_window\fR(3X)
echo/\fBcurs_inopts\fR(3X)
echochar/\fBcurs_addch\fR(3X)
endwin/\fBcurs_initscr\fR(3X)
erase/\fBcurs_clear\fR(3X)
erasechar/\fBcurs_termattrs\fR(3X)
filter/\fBcurs_util\fR(3X)
flash/\fBcurs_beep\fR(3X)
flushinp/\fBcurs_util\fR(3X)
getbegyx/\fBcurs_getyx\fR(3X)
getch/\fBcurs_getch\fR(3X)
getmaxyx/\fBcurs_getyx\fR(3X)
getmouse/\fBcurs_mouse\fR(3X)*
getparyx/\fBcurs_getyx\fR(3X)
getstr/\fBcurs_getstr\fR(3X)
getsyx/\fBcurs_kernel\fR(3X)
getwin/\fBcurs_util\fR(3X)
getyx/\fBcurs_getyx\fR(3X)
halfdelay/\fBcurs_inopts\fR(3X)
has_colors/\fBcurs_color\fR(3X)
has_ic/\fBcurs_termattrs\fR(3X)
has_il/\fBcurs_termattrs\fR(3X)
has_key/\fBcurs_getch\fR(3X)*
hline/\fBcurs_border\fR(3X)
idcok/\fBcurs_outopts\fR(3X)
idlok/\fBcurs_outopts\fR(3X)
immedok/\fBcurs_outopts\fR(3X)
inch/\fBcurs_inch\fR(3X)
inchnstr/\fBcurs_inchstr\fR(3X)
inchstr/\fBcurs_inchstr\fR(3X)
init_color/\fBcurs_color\fR(3X)
init_pair/\fBcurs_color\fR(3X)
initscr/\fBcurs_initscr\fR(3X)
innstr/\fBcurs_instr\fR(3X)
insch/\fBcurs_insch\fR(3X)
insdelln/\fBcurs_deleteln\fR(3X)
insertln/\fBcurs_deleteln\fR(3X)
insnstr/\fBcurs_insstr\fR(3X)
insstr/\fBcurs_insstr\fR(3X)
instr/\fBcurs_instr\fR(3X)
intrflush/\fBcurs_inopts\fR(3X)
is_linetouched/\fBcurs_touch\fR(3X)
is_wintouched/\fBcurs_touch\fR(3X)
isendwin/\fBcurs_initscr\fR(3X)
keyname/\fBcurs_util\fR(3X)
keyok/\fBkeyok\fR(3X)*
keypad/\fBcurs_inopts\fR(3X)
killchar/\fBcurs_termattrs\fR(3X)
leaveok/\fBcurs_outopts\fR(3X)
longname/\fBcurs_termattrs\fR(3X)
mcprint/\fBcurs_print\fR(3X)*
meta/\fBcurs_inopts\fR(3X)
mouseinterval/\fBcurs_mouse\fR(3X)*
mousemask/\fBcurs_mouse\fR(3X)*
move/\fBcurs_move\fR(3X)
mvaddch/\fBcurs_addch\fR(3X)
mvaddchnstr/\fBcurs_addchstr\fR(3X)
mvaddchstr/\fBcurs_addchstr\fR(3X)
mvaddnstr/\fBcurs_addstr\fR(3X)
mvaddstr/\fBcurs_addstr\fR(3X)
mvcur/\fBcurs_terminfo\fR(3X)
mvdelch/\fBcurs_delch\fR(3X)
mvderwin/\fBcurs_window\fR(3X)
mvgetch/\fBcurs_getch\fR(3X)
mvgetstr/\fBcurs_getstr\fR(3X)
mvinch/\fBcurs_inch\fR(3X)
mvinchnstr/\fBcurs_inchstr\fR(3X)
mvinchstr/\fBcurs_inchstr\fR(3X)
mvinnstr/\fBcurs_instr\fR(3X)
mvinsch/\fBcurs_insch\fR(3X)
mvinsnstr/\fBcurs_insstr\fR(3X)
mvinsstr/\fBcurs_insstr\fR(3X)
mvinstr/\fBcurs_instr\fR(3X)
mvprintw/\fBcurs_printw\fR(3X)
mvscanw/\fBcurs_scanw\fR(3X)
mvwaddch/\fBcurs_addch\fR(3X)
mvwaddchnstr/\fBcurs_addchstr\fR(3X)
mvwaddchstr/\fBcurs_addchstr\fR(3X)
mvwaddnstr/\fBcurs_addstr\fR(3X)
mvwaddstr/\fBcurs_addstr\fR(3X)
mvwdelch/\fBcurs_delch\fR(3X)
mvwgetch/\fBcurs_getch\fR(3X)
mvwgetstr/\fBcurs_getstr\fR(3X)
mvwin/\fBcurs_window\fR(3X)
mvwinch/\fBcurs_inch\fR(3X)
mvwinchnstr/\fBcurs_inchstr\fR(3X)
mvwinchstr/\fBcurs_inchstr\fR(3X)
mvwinnstr/\fBcurs_instr\fR(3X)
mvwinsch/\fBcurs_insch\fR(3X)
mvwinsnstr/\fBcurs_insstr\fR(3X)
mvwinsstr/\fBcurs_insstr\fR(3X)
mvwinstr/\fBcurs_instr\fR(3X)
mvwprintw/\fBcurs_printw\fR(3X)
mvwscanw/\fBcurs_scanw\fR(3X)
napms/\fBcurs_kernel\fR(3X)
newpad/\fBcurs_pad\fR(3X)
newterm/\fBcurs_initscr\fR(3X)
newwin/\fBcurs_window\fR(3X)
nl/\fBcurs_outopts\fR(3X)
nocbreak/\fBcurs_inopts\fR(3X)
nodelay/\fBcurs_inopts\fR(3X)
noecho/\fBcurs_inopts\fR(3X)
nonl/\fBcurs_outopts\fR(3X)
noqiflush/\fBcurs_inopts\fR(3X)
noraw/\fBcurs_inopts\fR(3X)
notimeout/\fBcurs_inopts\fR(3X)
overlay/\fBcurs_overlay\fR(3X)
overwrite/\fBcurs_overlay\fR(3X)
pair_content/\fBcurs_color\fR(3X)
pechochar/\fBcurs_pad\fR(3X)
pnoutrefresh/\fBcurs_pad\fR(3X)
prefresh/\fBcurs_pad\fR(3X)
printw/\fBcurs_printw\fR(3X)
putp/\fBcurs_terminfo\fR(3X)
putwin/\fBcurs_util\fR(3X)
qiflush/\fBcurs_inopts\fR(3X)
raw/\fBcurs_inopts\fR(3X)
redrawwin/\fBcurs_refresh\fR(3X)
refresh/\fBcurs_refresh\fR(3X)
reset_prog_mode/\fBcurs_kernel\fR(3X)
reset_shell_mode/\fBcurs_kernel\fR(3X)
resetty/\fBcurs_kernel\fR(3X)
resizeterm/\fBresizeterm\fR(3X)*
restartterm/\fBcurs_terminfo\fR(3X)
ripoffline/\fBcurs_kernel\fR(3X)
savetty/\fBcurs_kernel\fR(3X)
scanw/\fBcurs_scanw\fR(3X)
scr_dump/\fBcurs_scr_dump\fR(3X)
scr_init/\fBcurs_scr_dump\fR(3X)
scr_restore/\fBcurs_scr_dump\fR(3X)
scr_set/\fBcurs_scr_dump\fR(3X)
scrl/\fBcurs_scroll\fR(3X)
scroll/\fBcurs_scroll\fR(3X)
scrollok/\fBcurs_outopts\fR(3X)
set_curterm/\fBcurs_terminfo\fR(3X)
set_term/\fBcurs_initscr\fR(3X)
setscrreg/\fBcurs_outopts\fR(3X)
setsyx/\fBcurs_kernel\fR(3X)
setterm/\fBcurs_terminfo\fR(3X)
setupterm/\fBcurs_terminfo\fR(3X)
slk_attr/\fBcurs_slk\fR(3X)*
slk_attroff/\fBcurs_slk\fR(3X)
slk_attron/\fBcurs_slk\fR(3X)
slk_attrset/\fBcurs_slk\fR(3X)
slk_clear/\fBcurs_slk\fR(3X)
slk_init/\fBcurs_slk\fR(3X)
slk_label/\fBcurs_slk\fR(3X)
slk_noutrefresh/\fBcurs_slk\fR(3X)
slk_refresh/\fBcurs_slk\fR(3X)
slk_restore/\fBcurs_slk\fR(3X)
slk_set/\fBcurs_slk\fR(3X)
slk_touch/\fBcurs_slk\fR(3X)
standend/\fBcurs_attr\fR(3X)
standout/\fBcurs_attr\fR(3X)
start_color/\fBcurs_color\fR(3X)
subpad/\fBcurs_pad\fR(3X)
subwin/\fBcurs_window\fR(3X)
syncok/\fBcurs_window\fR(3X)
termattrs/\fBcurs_termattrs\fR(3X)
termname/\fBcurs_termattrs\fR(3X)
tgetent/\fBcurs_termcap\fR(3X)
tgetflag/\fBcurs_termcap\fR(3X)
tgetnum/\fBcurs_termcap\fR(3X)
tgetstr/\fBcurs_termcap\fR(3X)
tgoto/\fBcurs_termcap\fR(3X)
tigetflag/\fBcurs_terminfo\fR(3X)
tigetnum/\fBcurs_terminfo\fR(3X)
tigetstr/\fBcurs_terminfo\fR(3X)
timeout/\fBcurs_inopts\fR(3X)
touchline/\fBcurs_touch\fR(3X)
touchwin/\fBcurs_touch\fR(3X)
tparm/\fBcurs_terminfo\fR(3X)
tputs/\fBcurs_termcap\fR(3X)
tputs/\fBcurs_terminfo\fR(3X)
typeahead/\fBcurs_inopts\fR(3X)
unctrl/\fBcurs_util\fR(3X)
ungetch/\fBcurs_getch\fR(3X)
ungetmouse/\fBcurs_mouse\fR(3X)*
untouchwin/\fBcurs_touch\fR(3X)
use_default_colors/\fBdft_fgbg\fR(3X)*
use_env/\fBcurs_util\fR(3X)
vidattr/\fBcurs_terminfo\fR(3X)
vidputs/\fBcurs_terminfo\fR(3X)
vline/\fBcurs_border\fR(3X)
vwprintw/\fBcurs_printw\fR(3X)
vwscanw/\fBcurs_scanw\fR(3X)
waddch/\fBcurs_addch\fR(3X)
waddchnstr/\fBcurs_addchstr\fR(3X)
waddchstr/\fBcurs_addchstr\fR(3X)
waddnstr/\fBcurs_addstr\fR(3X)
waddstr/\fBcurs_addstr\fR(3X)
wattroff/\fBcurs_attr\fR(3X)
wattron/\fBcurs_attr\fR(3X)
wattrset/\fBcurs_attr\fR(3X)
wbkgd/\fBcurs_bkgd\fR(3X)
wbkgdset/\fBcurs_bkgd\fR(3X)
wborder/\fBcurs_border\fR(3X)
wclear/\fBcurs_clear\fR(3X)
wclrtobot/\fBcurs_clear\fR(3X)
wclrtoeol/\fBcurs_clear\fR(3X)
wcursyncup/\fBcurs_window\fR(3X)
wdelch/\fBcurs_delch\fR(3X)
wdeleteln/\fBcurs_deleteln\fR(3X)
wechochar/\fBcurs_addch\fR(3X)
wenclose/\fBcurs_mouse\fR(3X)*
werase/\fBcurs_clear\fR(3X)
wgetch/\fBcurs_getch\fR(3X)
wgetnstr/\fBcurs_getstr\fR(3X)
wgetstr/\fBcurs_getstr\fR(3X)
whline/\fBcurs_border\fR(3X)
winch/\fBcurs_inch\fR(3X)
winchnstr/\fBcurs_inchstr\fR(3X)
winchstr/\fBcurs_inchstr\fR(3X)
winnstr/\fBcurs_instr\fR(3X)
winsch/\fBcurs_insch\fR(3X)
winsdelln/\fBcurs_deleteln\fR(3X)
winsertln/\fBcurs_deleteln\fR(3X)
winsnstr/\fBcurs_insstr\fR(3X)
winsstr/\fBcurs_insstr\fR(3X)
winstr/\fBcurs_instr\fR(3X)
wmove/\fBcurs_move\fR(3X)
wnoutrefresh/\fBcurs_refresh\fR(3X)
wprintw/\fBcurs_printw\fR(3X)
wredrawln/\fBcurs_refresh\fR(3X)
wrefresh/\fBcurs_refresh\fR(3X)
wresize/\fBwresize\fR(3X)*
wscanw/\fBcurs_scanw\fR(3X)
wscrl/\fBcurs_scroll\fR(3X)
wsetscrreg/\fBcurs_outopts\fR(3X)
wstandend/\fBcurs_attr\fR(3X)
wstandout/\fBcurs_attr\fR(3X)
wsyncdown/\fBcurs_window\fR(3X)
wsyncup/\fBcurs_window\fR(3X)
wtimeout/\fBcurs_inopts\fR(3X)
wtouchln/\fBcurs_touch\fR(3X)
wvline/\fBcurs_border\fR(3X)
.TE
.\"0 .SH RETURN VALUE
.SH 返り値
.\"0 Routines that return an integer return \fBERR\fR upon failure and an
.\"0 integer value other than \fBERR\fR upon successful completion, unless
.\"0 otherwise noted in the routine descriptions.
特に説明のある場合を除き、整数を返すルーチンはエラー時に 
\fBERR\fR を返し、成功した場合は \fBERR\fR 以外の整数値を返す。

.\"0 All macros return the value of the \fBw\fR version, except \fBsetscrreg\fR,
.\"0 \fBwsetscrreg\fR, \fBgetyx\fR, \fBgetbegyx\fR, \fBgetmaxyx\fR.  The return
.\"0 values of \fBsetscrreg\fR, \fBwsetscrreg\fR, \fBgetyx\fR, \fBgetbegyx\fR, and
.\"0 \fBgetmaxyx\fR are undefined (\fIi\fR.\fIe\fR., these should not be used as the
.\"0 right-hand side of assignment statements).
\fBsetscrreg\fR、\fBwsetscrreg\fR、 \fBgetyx\fR、 \fBgetbegyx\fR、 \fBgetmaxyx\fR
を除く全てのマクロは \fBw\fR のバージョンの値を返す。(??)
\fBsetscrreg\fR、\fBwsetscrreg\fR、\fBgetyx\fR、\fBgetbegyx\fR、\fBgetmaxyx\fR
の返り値は定義されていない。(\fIi\fR.\fIe\fR.、これれは右辺値への代入の宣言として
使われるべきでない。)

.\"0 Routines that return pointers return \fBNULL\fR on error.
ポインタを返すルーチンは エラー時に \fBNULL\fR  を返す。

.\"0 .SH SEE ALSO
.SH 参照
.\"0 \fBterminfo\fR(\*n) and 3X pages whose names begin "curs_" for detailed routine
.\"0 descriptions.
\fBterminfo\fR(\*n) と ページ 3X の "curs_" からはじまる名前のマニュアルに
より詳細に説明されている。
.\"0 .SH EXTENSIONS
.SH 拡張
.\"0 The \fBcurses\fR library can be compiled with an option (\fB-DTERMCAP_FILE\fR)
.\"0 that falls back to the old-style /etc/termcap file if the terminal setup code
.\"0 cannot find a terminfo entry corresponding to \fBTERM\fR.  Use of this feature
.\"0 is not recommended, as it essentially includes an entire termcap compiler in
.\"0 the \fBcurses\fR startup code, at significant cost in core and startup cycles.
\fBcurses\fB ライブラリは もし端末の設定コードが \fBTERM\fR に一致する terminfo 
エントリを見つけることができない場合に、古い形式の /etc/termcap ファイルに
フォールバックするためのオプション(\fB-DTERMCAP_FILE\fR) を
つけてコンパイルすることができる。
本質的に \fBcurses\fR のスタートアップコード中で全termcap コンパイラを含めるため
コアの部分とスタートアップサイクルで重大なコストを伴うので、 
この特徴の使用は推奨されていない。

.\"0 Compiling with \fB-DTERMCAP_FILE\fR changes the library's initialization
.\"0 sequence in a way intended to mimic the behavior of 4.4BSD curses.  If there is
.\"0 no local or system terminfo entry matching \fBTERM\fR, then the library looks
.\"0 for termcap entries in the following places: (1) if \fBTERMINFO\fR is
.\"0 undefined, in the file named by \fBTERMCAP_FILE\fR; (2) if \fBTERMINFO\fR is
.\"0 defined and begins with a slash, it is interpreted as the name of a termcap
.\"0 file to search for \fBTERM\fR; (3) otherwise, if \fBTERMINFO\fR has a leading
.\"0 string that looks like a terminal entry name list, and it matches \fBTERM\fR,
.\"0 the contents of \fBTERMINFO\fR is interpreted as a termcap; (4) if
.\"0 \fBTERMINFO\fR looks like a termcap but doesn't match \fBTERM\fR, the termcap
.\"0 file is searched for among the colon-separated paths in the environment
.\"0 variable \fBTERMPATHS\fR if that is defined, and in ~/.termcap and the file
.\"0 value of \fBTERMCAP_FILE\fR otherwise.
 \fB-DTERMCAP_FILE\fR をつけてコンパイルしたものは ライブラリの初期化シーケンスを
4.4BSD curses の振る舞いをまねたような方法に変更される。
もしローカルもしくはシステムに \fBTERM\fR に一致する terminfo エントリがない場合、
ライブラリは以下の場所で termcap エントリを探す: (1) もし \fBTERMINFO\fR が定義され
ていなければ、\fBTERMCAP_FILE\fR によって名付けられたファイルをみにいく; 
(2) もし \fBTERMINFO\fR が定義されそれが スラッシュではじまっていれば、\fBTERM\fR
を探すために termcap ファイルの名前として解釈される;
(3) それ以外の場合、もし \fBTERMINFO\fR が 端末エントリ名リストのような文字列を
もっていてそれが \fBTERM\fR に一致するなら、\fBTERMINFO\fR の内容は termcap として
解釈される;
(4) もし \fBTERMINFO\fR が termcap に似ているが \fBTERM\fR と一致していないなら、
termcap ファイル は環境変数 \fBTERMPATHS\fR や ~/.termcap や \fBTERMCAP_FILE\fR 
その他が定義されていればその中のコロンで分離されたパスの中から探索される。

.\"0 Versions of \fBcurses\fR compiled on PC clones support display of the PC ROM
.\"0 characters (including ROM characters 0-31, which stock SVr4 curses cannot
.\"0 display). See the EXTENSIONS sections of \fBcurs_addch\fR(3X) and
.\"0 \fBcurs_attr\fR(3X).
PC クローン上でコンパイルされた \fBcurses\fR のバージョンは PC ROM キャラクタの
表示をサポートする。(普通の SVr4 curses が表示できない ROM キャラクタ 0-31 を含む。)
 \fBcurs_addch\fR(3X) と \fBcurs_attr\fR(3X) の 拡張のセクションを参照のこと。

.\"0 The \fBcurses\fR library includes facilities for capturing mouse events on
.\"0 certain terminals (including xterm). See the \fBcurs_mouse\fR(3X)
.\"0 manual page for details.
 \fBcurses\fR ライブラリは ある種のターミナル(xterm を含む)上でマウスのイベントを
とらえる能力がある。詳細は \fBcurs_mouse\fR(3X) のマニュアルページを参照のこと。

.\"0 The \fBcurses\fR library includes a function for directing application output
.\"0 to a printer attached to the terminal device.  See the \fBcurs_print\fR(3X)
.\"0 manual page for details.
 \fBcurses\fR ライブラリはターミナルデバイスへ取りつけられたプリンタへ
アプリケーションの出力をする関数を含んでいる。詳細は \fBcurs_print\fR(3X) の
マニュアルページを参照のこと。
.\"0 .SH PORTABILITY
.SH 移植性
.\"0 The \fBcurses\fR library is intended to be BASE-level conformant with the XSI
.\"0 Curses standard.  Certain portions of the EXTENDED XSI Curses functionality
.\"0 (including color support) are supported.  The following EXTENDED XSI Curses
.\"0 calls in support of wide (multibyte) characters are not yet implemented:
\fBcurses\fR ライブラリは XSI Curses standard に 基礎的なレベルで形態を
あわせていくつもりである。(カラーサポートを含む) EXTENDED XSI Curses 機能の
確実な移植はサポートされている。ワイド(マルチバイト)キャラクタのサポート中の以下の
拡張 XSI Curses 関数はまだ実装されていない。
\fBaddnwstr\fB,
\fBaddwstr\fB,
\fBmvaddnwstr\fB,
\fBmvwaddnwstr\fB,
\fBmvaddwstr\fB,
\fBwaddnwstr\fB,
\fBwaddwstr\fB,
\fBadd_wch\fB,
\fBwadd_wch\fB,
\fBmvadd_wch\fB,
\fBmvwadd_wch\fB,
\fBadd_wchnstr\fB,
\fBadd_wchstr\fB,
\fBwadd_wchnstr\fB,
\fBwadd_wchstr\fB,
\fBmvadd_wchnstr\fB,
\fBmvadd_wchstr\fB,
\fBmvwadd_wchnstr\fB,
\fBmvwadd_wchstr\fB,
\fBbkgrndset\fB,
\fBbkgrnd\fB,
\fBgetbkgrnd\fB,
\fBwbkgrnd\fB,
\fBwbkgrndset\fB,
\fBwgetbkgrnd\fB,
\fBborder_set\fB,
\fBwborder_set\fB,
\fBbox_set\fB,
\fBhline_set\fB,
\fBmvhline_set\fB,
\fBmvvline_set\fB,
\fBmvwhline_set\fB,
\fBmvwvline_set\fB,
\fBwhline_set\fB,
\fBvhline_set\fB,
\fBwvline_set\fB,
\fBecho_wchar\fB,
\fBwecho_wchar\fB,
\fBerasewchar\fB,
\fBkillwchar\fB,
\fBget_wch\fB,
\fBmvget_wch\fB,
\fBmvwget_ch\fB,
\fBwget_wch\fB,
\fBgetwchtype\fB,
\fBget_wstr\fB,
\fBgetn_wstr\fB,
\fBwget_wstr\fB,
\fBwgetn_wstr\fB,
\fBmvget_wstr\fB,
\fBmvgetn_wstr\fB,
\fBmvwget_wstr\fB,
\fBmvwgetn_wstr\fB,
\fBinnwstr\fB,
\fBinwstr\fB,
\fBwinnwstr\fB,
\fBwinwstr\fB,
\fBmvinnwstr\fB,
\fBmvinwstr\fB,
\fBmvwinnwstr\fB,
\fBmvwinwstr\fB,
\fBins_nwstr\fB,
\fBins_wstr\fB,
\fBmvins_nwstr\fB,
\fBmvins_wstr\fB,
\fBmvwins_nwstr\fB,
\fBmvwins_wstr\fB,
\fBwins_nwstr\fB,
\fBwins_wstr\fB,
\fBins_wch\fB,
\fBwins_wch\fB,
\fBmvins_wch\fB,
\fBmvwins_wch\fB,
\fBin_wch\fB,
\fBwin_wch\fB,
\fBmvin_wch\fB,
\fBmvwin_wch\fB,
\fBinwchstr\fB,
\fBinwchnstr\fB,
\fBwinwchstr\fB,
\fBwinwchnstr\fB,
\fBmvinwchstr\fB,
\fBmvinwchnstr\fB,
\fBmvinwchstr\fB,
\fBmvwinwchnstr\fB.
.PP
.\"0 A small number of local differences (that is, individual differences between
.\"0 the XSI Curses and \fBcurses\fR calls) are described in \fBPORTABILITY\fR
.\"0 sections of the library man pages.
個々の違い(XSI Curses と \fBcurses\fR 関数の個々の違い)はライブラリの man ページの 
 \fB移植性\fR セクションに説明されている。
.PP
.\"0 The routine \fBhas_key\fR is not part of XPG4, nor is it present in SVr4.  See
.\"0 the \fBcurs_getch\fR(3X) manual page for details.
\fBhas_key\fR ルーチンは XPG4 にはないか、SVr4 にはない。
詳細は \fBcurs_getch\fR(3X) マニュアルページを参照のこと。
.PP
.\"0 The routine \fBslk_attr\fR is not part of XPG4, nor is it present in SVr4.  See
.\"0 the \fBcurs_slk\fR(3X) manual page for details.
\fBslk_attr\fR ルーチンは XPG4 にはないか、SVr4 にはない。
詳細は \fBcurs_slk\fR(3X) マニュアルページを参照のこと。
.PP
.\"0 The routines \fBgetmouse\fR, \fBmousemask\fR, \fBungetmouse\fR,
.\"0 \fBmouseinterval\fR, and \fBwenclose\fR relating to mouse interfacing are not
.\"0 part of XPG4, nor are they present in SVr4.  See the \fBcurs_mouse\fR(3X)
.\"0 manual page for details.
マウスインターフェースに関連する \fBgetmouse\fR、\fBmousemask\fR、\fBungetmouse\fR、\fBmouseinterval\fR、\fBwenclose\fR ルーチンは XPG4 にはないか、SVr4 にはない。
詳細は \fBcurs_mouse\fR(3X) マニュアルページを参照のこと。
.PP
.\"0 The routine \fBmcprint\fR was not present in any previous curses
.\"0 implementation.  See the \fBcurs_print\fR(3X) manual page for details.
\fBmcprint\fR ルーチンは 以前の curses の実装にはなかった。
詳細は \fBcurs_print\fR(3X) マニュアルページを参照のこと。
.PP
.\"0 The routine \fBwresize\fR is not part of XPG4, nor is it present in SVr4.  See
.\"0 the \fBwresize\fR(3X) manual page for details.
\fBwresize\fR ルーチンは XPG4 にはないか、SVr4 にはない。
詳細は \fBwresize\fR(3X) マニュアルページを参照のこと。
.PP
.\"0 In historic curses versions, delays embedded in the capabilities \fBcr\fR,
.\"0 \fBind\fR, \fBcub1\fR, \fBff\fR and \fBtab\fR activated corresponding delay
.\"0 bits in the UNIX tty driver.  In this implementation, all padding is done by
.\"0 NUL sends.  This method is slightly more expensive, but narrows the interface
.\"0 to the UNIX kernel significantly and increases the package's portability
.\"0 correspondingly.
歴史的な curses のバージョンにおいて、\fBcr\fR、\fBind\fR、\fBcub1\fR、\fBff\fR、
\fBtab\fR 中に埋め込まれた遅延は UNIX tty ドライバ中の遅延ビットに一致するように
動作する。(??)
この実装の中で、全てのパッディングは NUL を送ることによってなされている。
この方法はわずかに高価な代償となるが、重要な UNIX カーネルへのインターフェースを
狭め、パッケージの相応な移植性を増加させる。
.PP
.\"0 In the XSI standard and SVr4 manual pages, many entry points have prototype
.\"0 arguments of the for \fBchar *const\fR (or \fBcchar_t *const\fR, or \fBwchar_t
.\"0 *const\fR, or \fBvoid *const\fR).  Depending on one's interpretation of the
.\"0 ANSI C standard (see section 3.5.4.1), these declarations are either (a)
.\"0 meaningless, or (b) meaningless and illegal.  The declaration \fBconst char
.\"0 *x\fR is a modifiable pointer to unmodifiable data, but \fBchar *const x\fR' is
.\"0 an unmodifiable pointer to modifiable data.  Given that C passes arguments by
.\"0 value, \fB<type> *const\fR as a formal type is at best dubious.  Some compilers
.\"0 choke on the prototypes.  Therefore, in this implementation, they have been
.\"0 changed to \fBconst <type> *\fR globally.
XSI standard と SVr4 のマニュアルページにおいて、多くのエントリポイントは
\fBchar *const\fR (もしくは\fBcchar_t *const\fR、\fBwchar_t *const\fR、
\fBvoid *const\fR) のプロトタイプ引数を持つ。 ANSI C standard (セクション 2.5.4.1
参照)の解釈によると、これらの宣言は (a)意味をなさないか、意味をなさず
違法なものである。\fBconst char *x\fR の宣言は 変更できないデータへの
変更できるポインタである。C は引数へ値によって渡すので、正式の型である 
 \fB<type> *const\fR は とても曖昧なものである。(??)
あるコンパイラはこのプロトタイプではうまく行かない。それゆえ、この実装では、
\fBconst <type> *\fR に変更された。
.\"0 .SH NOTES
.SH 注意
.\"0 The header file \fB<curses.h>\fR automatically includes the header files
.\"0 \fB<stdio.h>\fR and \fB<unctrl.h>\fR.
\fB<curses.h>\fR は自動的に \fB<stdio.h>\fR と \fB<unctrl.h>\fR をインクルードする。

.\"0 If standard output from a \fBcurses\fR program is re-directed to something
.\"0 which is not a tty, screen updates will be directed to standard error.  This
.\"0 was an undocumented feature of AT&T System V Release 3 curses.
もし \fBcurses\fR プログラムからの標準出力が tty でないものへリダイレクトされたなら、
スクリーンの更新は標準エラーへ出力されるだろう。これは 文書化されていない 
AT&T  System V Release 3 curses の特徴である。
.\"0 .SH AUTHORS
.SH 著者
.\"0 Zeyd M. Ben-Halim, Eric S. Raymond.  Descends from the original pcurses
.\"0 by Pavel Curtis.
Zeyd M. Ben-Halim、eric S. Raymond。Pavel Curtis によるオリジナル pcurses から
派生している。
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
