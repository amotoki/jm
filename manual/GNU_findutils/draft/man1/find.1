.\"    This file documents the GNU utilities for finding files that match
.\" certain criteria and performing various operations on them.
.\" 
.\"    Copyright (C) 1994 Free Software Foundation, Inc.
.\" 
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided that
.\" the entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that this permission notice may be stated in a
.\" translation approved by the Foundation.
.\"
.\" Japanese Version Copyright (c) 1997 NAKANO Takeo
.\"   and 2010 Chonan Yoichi 
.\"         all rights reserved.
.\" Translated Thu May 11 1997 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Modified Fri 14 Aug 1998 by NAKANO Takeo -- bug fixes.
.\" Updated and modified (findutils-4.4.2) Mon Dec 20 21:17:50 JST 2010
.\"         by Chonan Yoichi <cyoichi@maple.ocn.ne.jp>
.\" Modified Sun Jan 30 11:44:29 JST 2011 by Chonan Yoichi
.\"
.\" WORD    expression   式
.\" WORD    predicate    述語 (式を構成するオプション、判別式、アクションを
.\"                            一まとめにした言い方)
.\" WORD    test(s)      判別式
.\" WORD    directive    書式指定子
.\" WORD    access time           アクセス日時
.\" WORD    status change time    ステータス変更日時
.\" WORD    modification time     内容更新日時
.\" WORD    birth time            (ファイルの)作成日時
.\"
.TH FIND 1 \" -*- nroff -*-
.\"O .SH NAME
.SH 名前
.\"O find \- search for files in a directory hierarchy
find \- ディレクトリ階層をたどって、条件を満たすファイルを検索する
.\"O .SH SYNOPSIS
.SH 書式
.B find 
[\-H] [\-L] [\-P] [\-D debugopts] [\-Olevel] [path...] [expression]
.\"O .SH DESCRIPTION
.SH 説明
.\"O This manual page
.\"O documents the GNU version of
.\"O .BR find .
このマニュアルページは GNU 版
.B find
の使用法を説明している。
.\"O GNU
.\"O .B find
.\"O searches the directory tree rooted at each given file name by
.\"O evaluating the given expression from left to right, according to the
.\"O rules of precedence (see section OPERATORS), until the outcome is
.\"O known (the left hand side is false for \fIand\fR operations, true for
.\"O \fIor\fR), at which point
.\"O .B find
.\"O moves on to the next file name.
.\"O .PP
GNU 版
.B find
は、指定されたファイル名 (訳注: 上記「書式」における path...、
普通はディレクトリを指定する) を始点とするディレクトリツリーを
一つづつ探索し、与えられた式 (expression) を、
優先規則に従いつつ (「演算子」セクションを参照)、左から右へ
評価することによって検索を行う。
結果が確定すると (たとえば、\fIand\fR 演算なら左辺が偽になった時点で、
\fIor\fR 演算なら左辺が真になった時点で)、
.B find
は検査の対象を次のファイル名に移す。
.PP
.\"O If you are using 
.\"O .B find 
.\"O in an environment where security is important (for example if you are
.\"O using it to search directories that are writable by other users), you
.\"O should read the "Security Considerations" chapter of the findutils
.\"O documentation, which is called \fBFinding Files\fP and comes with
.\"O findutils.   That document also includes a lot more detail 
.\"O and discussion than this manual page, so you may find it a more useful 
.\"O source of information.
もし
.B find
を使用しているのが、セキュリティの問題をおろそかにできない環境なら
(たとえば、
.B find
を使って探索しているディレクトリが、自分以外のユーザにも
書き込み可能な場合など)、findutils 関連文書の
「Security Considerations」の章をお読みになるとよいだろう。
\fBFinding Files\fP という文書で、findutils に同梱されているはずだ
(訳注: \fBinfo "Finding Files"\fR や \fBinfo find\fR で読むことができる)。
その文書では、ほかの点についてもこのマニュアルページより
はるかに詳しい説明や考察が行われているので、この文書以上に情報源として
お役に立つかもしれない。
.\"O .SH OPTIONS
.SH オプション
.\"O The 
.\"O .BR \-H , 
.\"O .B \-L 
.\"O and 
.\"O .B \-P
.\"O options control the treatment of symbolic
.\"O links.  Command-line arguments following these are taken to be names
.\"O of files or directories to be examined, up to the first argument that
.\"O begins with `\-', or the argument `(' or `!'.  That argument and any
.\"O following arguments are taken to be the expression describing what is
.\"O to be searched for.  If no paths are given, the current directory is
.\"O used.  If no expression is given, the expression 
.\"O .B \-print
.\"O is used
.\"O (but you should probably consider using 
.\"O .B \-print0
.\"O instead, anyway).
.\"O .PP
.BR \-H ,
.BR \-L ,
.B \-P
というオプションは、シンボリックリンクをどう処理するかを決める。
こうしたオプションに続くコマンドライン引き数は、探索場所となる
ファイル名やディレクトリ名と見なされる。ただし、それは、`\-' で始まる
引き数や、`(' とか `!' という引き数が、続いて現れるまでだ。
そうした引き数、及びそれに続くいかなる引き数も、何を捜すべきかを
記述した式であると解釈される。パスが一つも指定されていない場合は、
カレントディレクトリ以下が探索の対象になる。
式が一つも指定されていない場合は、
.B \-print
が式として使用される (もっとも、
.B \-print
の代わりに、
.B \-print0
の使用を考えた方がよさそうだが)。
.PP
.\"O This manual page talks about `options' within the expression list.
.\"O These options control the behaviour of 
.\"O .B find
.\"O but are specified immediately after the last path name.  The five
.\"O `real' options
.\"O .BR \-H , 
.\"O .BR \-L , 
.\"O .BR \-P , 
.\"O .B  \-D 
.\"O and 
.\"O .B  \-O
.\"O must appear before
.\"O the first path name, if at all.  A double dash 
.\"O .B \-\-
.\"O can also be used
.\"O to signal that any remaining arguments are not options (though
.\"O ensuring that all start points begin with either `./' or `/' is
.\"O generally safer if you use wildcards in the list of start points).
このマニュアルページで説明する「オプション」には、式の一部として
使われるものもある。そうしたオプションは、
.B find
の動作を制御するものであり、指定する位置は最後のパス名の直後になる。
これに対して、
.BR \-H ,
.BR \-L ,
.BR \-P ,
.BR \-D ,
.B  \-O
という五つの「本来」のオプションは、指定するなら、最初のパス名の前で
指定しなければならない。なお、ダッシュを二個重ねた
.B \-\-
を使用して、後に続く引き数がオプションではないことを明示することも
可能だ (それでも、探索の始点となるパス名のリストでワイルドカードを
使用するならば、始点のすべてが `./' か `/' で始まるように
しておいた方が、たいてい無難である)。
.\"O .IP \-P
.IP \-P
.\"O Never follow symbolic links.  This is the default behaviour.  When 
.\"O .B find
.\"O examines or prints information a file, and the file is a symbolic
.\"O link, the information used shall be taken from the properties of the
.\"O symbolic link itself.  
.\"O 
シンボリックリンクをまったくたどらない。これがデフォルトの動作である。
.B find
がファイルの情報を調べたり表示したりする際に、そのファイルが
シンボリックリンクだったら、そのシンボリックリンクそのものの
プロパティから取得した情報が使用されることになる。

.\"O .IP \-L
.IP \-L
.\"O Follow symbolic links.  When 
.\"O .B find
.\"O examines or prints information about files, the information used shall
.\"O be taken from the properties of the file to which the link points, not
.\"O from the link itself (unless it is a broken symbolic link or 
.\"O .B find
.\"O is unable to examine the file to which the link points).  Use of this
.\"O option implies 
.\"O .BR \-noleaf .  
.\"O If you later use the 
.\"O .B \-P 
.\"O option, 
.\"O .B \-noleaf
.\"O will still be in effect.  If 
.\"O .B \-L 
.\"O is in effect and 
.\"O .B find 
.\"O discovers a symbolic link to a subdirectory during its search, 
.\"O the subdirectory pointed to by the symbolic link will be searched.
シンボリックリンクをたどる。
.B find
がファイルの情報を調べたり表示したりする際に、
リンク先のファイルのプロパティから取得した情報が使用されることになり、
リンクそのものの情報は利用されない (ただし、
シンボリックリンクがリンク切れしていたり、
.B find
がリンク先のファイルを調べることができなかった場合は除く)。
このオプションを使用すると、自動的に
.B \-noleaf
が指定される。
後で
.B \-P
オプションを指定し直しても、
.B \-noleaf
は依然として有効なままである。
.B \-L
が有効になっているとき、
.B find
が探索中にサブディレクトリを指すシンボリックリンクに出会うと、
そのシンボリックリンクが参照しているサブディレクトリが探索される。
.\"O .IP
.\"O When the 
.\"O .B \-L 
.\"O option is in effect, the 
.\"O .B \-type 
.\"O predicate will always
.\"O match against the type of the file that a symbolic link points to
.\"O rather than the link itself (unless the symbolic link is broken).
.\"O Using 
.\"O .B \-L 
.\"O causes the 
.\"O .B \-lname 
.\"O and 
.\"O .B \-ilname 
.\"O predicates always to return
.\"O false.
.\"O 
.IP
.B \-L
オプションが有効だと、述語
.B \-type
は (訳注: 「述語 (predicate)」とは、式を構成するオプション、判別式、
アクションなどの基本語彙を言う)、リンクそのものに対してではなく、
常にシンボリックリンクが指しているファイルのタイプに対してマッチを
行うようになる (シンボリックリンクがリンク切れしている場合を除く)。
.B \-L
を使用すると、述語
.B \-lname 
や
.B \-ilname
は常に偽を返す。

.\"O .IP \-H
.IP \-H
.\"O Do not follow symbolic links, except while processing the command
.\"O line arguments.  When
.\"O .B find
.\"O examines or prints information about files, the information used 
.\"O shall be taken from the properties of the symbolic link itself.   The
.\"O only exception to this behaviour is when a file specified on the
.\"O command line is a symbolic link, and the link can be resolved.  For
.\"O that situation, the information used is taken from whatever the link
.\"O points to (that is, the link is followed).  The information about the
.\"O link itself is used as a fallback if the file pointed to by the
.\"O symbolic link cannot be examined.  If 
.\"O .B \-H 
.\"O is in effect and one of the
.\"O paths specified on the command line is a symbolic link to a directory,
.\"O the contents of that directory will be examined (though of course
.\"O \-maxdepth 0 would prevent this).
.\"O .P
コマンドライン上で指定された引き数を処理するとき以外、
シンボリックリンクをたどらない。すなわち、原則として、
.B find
がファイルの情報を調べたり表示したりする際に、シンボリックリンク
そのもののプロパティから取得した情報が、使用されることになる。
ただし、この動作には例外が一つあって、それは、コマンドラインで
指定されたファイルがシンボリックリンクであり、そのリンクが
解決できるときだ。その場合は、リンク先が何であれ、そこから
取得した情報が使用され (つまり、リンクがたどられるわけだ)、
シンボリックリンク自体の情報は、リンク先のファイルを調べることが
できなかったときの、控えの情報として使われる。
.B \-H
が有効な場合に、コマンドラインで指定されたパスの中にディレクトリへの
シンボリックリンクがあったら、そのディレクトリの中身が
調べられることになる (もっとも、\-maxdepth 0 を指定すれば、
当然ながら、この動作は抑制されることになるだろうが)。
.P
.\"O If more than one of 
.\"O .BR \-H , 
.\"O .B \-L 
.\"O and 
.\"O .B \-P 
.\"O is specified, each overrides the
.\"O others; the last one appearing on the command line takes effect.
.\"O Since it is the default, the 
.\"O .B \-P 
.\"O option should be considered to be in
.\"O effect unless either 
.\"O .B \-H 
.\"O or 
.\"O .B \-L 
.\"O is specified.
.\"O 
一つ以上の
.BR \-H ,
.BR \-L ,
.B \-P
を指定した場合は、後のものが前のものを上書きする。
従って、コマンドラインで最後に指定されたものが、効果を持つわけだ。
.B \-P 
はデフォルトなので、
.B \-H
や
.B \-L
を指定しないかぎり、
.B \-P
オプションが有効になっていると考えるべきである。

.\"O GNU 
.\"O .B find
.\"O frequently stats files during the processing of the command line
.\"O itself, before any searching has begun.  These options also affect how
.\"O those arguments are processed.  Specifically, there are a number of
.\"O tests that compare files listed on the command line against a file we
.\"O are currently considering.  In each case, the file specified on the
.\"O command line will have been examined and some of its properties will
.\"O have been saved.  If the named file is in fact a symbolic link, and
.\"O the 
.\"O .B \-P 
.\"O option is in effect (or if neither 
.\"O .B \-H 
.\"O nor 
.\"O .B \-L 
.\"O were specified), the information used for the comparison will be taken from
.\"O the properties of the symbolic link.  Otherwise, it will be taken from
.\"O the properties of the file the link points to.  If
.\"O .B find 
.\"O cannot follow the link (for example because it has insufficient
.\"O privileges or the link points to a nonexistent file) the properties of
.\"O the link itself will be used.
.\"O .P
GNU
.B find
は実際の探索に取りかかる前にコマンドラインの処理を行うが、
その際 stat システムコールを使ってファイルの情報を調べることが
よくある。上述のオプションは、そのとき引き数がどう処理されるかにも
影響を与える。具体的に説明しよう。いくつのの判別式では、
コマンドラインで指定したファイルを目下検査の対象になっているファイルと
照合する。いづれの判別式でも、コマンドラインで指定したファイルは、
情報が調べられた後、そのプロパティのいくつかが保存されることになる。
名前を指定したファイルが実際にはシンボリックリンクであるとき、
.B \-P
オプションが有効な場合は (言い換えれば、
.B \-H
と
.B \-L
のどちらのオプションも指定されていない場合は)、
照合に使用される情報は、シンボリックリンクのプロパティから
取得したものである。それ以外の場合、使用されるのはリンク先のファイルの
プロパティから取得した情報だ。ただし、
.B find
が (たとえば、権限が不十分だとか、リンク先のファイルが
存在しないとかの理由で) リンクをたどれない場合は、
リンクそのもののプロパティが使われることになる。
.P
.\"O When the 
.\"O .B \-H 
.\"O or 
.\"O .B \-L options are in effect, any symbolic links listed
.\"O as the argument of 
.\"O .B \-newer 
.\"O will be dereferenced, and the timestamp
.\"O will be taken from the file to which the symbolic link points.  The
.\"O same consideration applies to 
.\"O .BR \-newerXY , 
.\"O .B \-anewer 
.\"O and 
.\"O .BR \-cnewer .
.\"O 
.B \-H
や
.B \-L
オプションが有効な場合は、
.B \-newer
の引き数として指定されたのがシンボリックリンクなら、その参照がたどられて、
リンク先のファイルからタイムスタンプが取得されることになる。
同じことが、
.BR \-newerXY ,
.BR \-anewer ,
.B \-cnewer
についても言える。

.\"O The 
.\"O .B \-follow 
.\"O option has a similar effect to 
.\"O .BR \-L , 
.\"O though it takes
.\"O effect at the point where it appears (that is, if 
.\"O .B \-L
.\"O is not used but
.\"O .B \-follow
.\"O is, any symbolic links appearing after 
.\"O .B \-follow
.\"O on the
.\"O command line will be dereferenced, and those before it will not).
.\"O 
式の一部として使用される
.B \-follow
オプションには
.B \-L
と同様の効果があるが、それが現れた位置から有効になるという点が
異なる (すなわち、
.B \-L
が使われずに、
.B \-follow
が使われた場合、
.B \-follow
より後で指定されたいかなるシンボリックリンクも参照がたどられるが、
その前に指定されたシンボリックリンクは参照がたどられない)。

.\"O .IP "\-D debugoptions"
.\"O Print diagnostic information; this can be helpful to diagnose problems
.\"O with why
.\"O .B find 
.\"O is not doing what you want.  The list of debug options should be comma
.\"O separated.  Compatibility of the debug options is not guaranteed
.\"O between releases of findutils.  For a complete list of valid debug
.\"O options, see the output of
.\"O .B find \-D
.\"O .BR help .
.\"O Valid debug options include
.IP "\-D debugoptions"
診断用の情報を出力する。
.B find
が期待どおりに動いてくれないとき、問題の原因追求に役立つことがある。
デバッグオプションを複数指定するときは、コンマで区切る。
findutils のバージョンの間で、デバッグオプションの互換性は保証されていない。
有効な全デバッグオプションのリストについては、
.B find \-D help
の出力を見るとよい。
有効なデバッグオプションの中には、以下のものがある。
.\"O .RS
.\"O .IP help
.\"O Explain the debugging options
.RS
.IP help
デバッグ用オプションを説明する。
.\"O .IP tree
.\"O Show the expression tree in its original and optimised form.
.IP tree
式の構造 (expression tree) をオリジナルな形と最適化した形で示す。
.\"O .IP stat
.\"O Print messages as files are examined with the 
.\"O .B stat 
.\"O and 
.\"O .B lstat 
.\"O system calls.  The 
.\"O .B find
.\"O program tries to minimise such calls.
.IP stat
.B stat
や
.B lstat
システムコールを使ってファイルが調べられたとき、
メッセージを表示する。
.B find
プログラムは、そうしたシステムコールの回数を最少にしようとする。
.\"O .IP opt
.\"O Prints diagnostic information relating to the optimisation of the
.\"O expression tree; see the \-O option.
.IP opt
式の構造 (expression tree) の最適化に関する診断情報を表示する。
\-O オプションを参照。
.\"O .IP rates
.\"O Prints a summary indicating how often each predicate succeeded or
.\"O failed.
.IP rates
各述語が何回成功し、何回失敗したかを示す情報を要約して表示する。
.\"O .RE
.\"O .IP \-Olevel
.\"O Enables query optimisation.   The 
.\"O .B find 
.\"O program reorders tests to speed up execution while preserving the
.\"O overall effect; that is, predicates with side effects are not
.\"O reordered relative to each other.  The optimisations performed at each
.\"O optimisation level are as follows.
.RE
.IP \-Olevel
検査の最適化を有効にする。
.B find
プログラムは、実行速度を上げるために判別式の順序を並べ替えるとき、
全体的な効果を維持しようとする。すなわち、付加的な作用のある
述語同士については、相互の相対的な順序を変更しないということだ。
各最適化レベルで行われる最適化は、以下のとおりである。
.\"O .RS
.\"O .IP 0
.\"O Equivalent to optimisation level 1.
.RS
.IP 0
最適化レベル 1 と同じである。
.\"O .IP 1
.\"O This is the default optimisation level and corresponds to the
.\"O traditional behaviour.  Expressions are reordered so that tests based
.\"O only on the names of files (for example 
.\"O .B \-name 
.\"O and 
.\"O .BR \-regex ) 
.\"O are performed first.
.IP 1
これはデフォルトの最適化レベルであり、伝統的な動作に当たる。
式を並べ替えるとき、ファイル名にのみ基づいた判別式 (たとえば、
.B \-name
や
.BR \-regex )
が先に実行されるようにする。
.\"O .IP 2
.\"O Any 
.\"O .B \-type 
.\"O or 
.\"O .B \-xtype 
.\"O tests are performed after any tests based only on the names of files,
.\"O but before any tests that require information from the inode.  On many
.\"O modern versions of Unix, file types are returned by
.\"O .B readdir() 
.\"O and so these predicates are faster to evaluate than predicates which
.\"O need to stat the file first.
.IP 2
判別式
.B \-type
や
.B \-xtype
の実行は、ファイル名に基づいたいかなる判別式よりも後になるが、
inode から情報を取得する必要があるどんな判別式よりも先になる。
最近の Unix には
.B readdir()
関数でファイルタイプを取得できるものが多い。
それ故、こうした述語は、まず stat 関数でファイル情報を取得する
必要がある述語よりも、評価に時間がかからないのである。
.\"O .IP 3
.\"O At this optimisation level, the full cost-based query optimiser is
.\"O enabled.  The order of tests is modified so that cheap (i.e. fast)
.\"O tests are performed first and more expensive ones are performed later,
.\"O if necessary.  Within each cost band, predicates are evaluated earlier
.\"O or later according to whether they are likely to succeed or not.  For 
.\"O .BR \-o ,
.\"O predicates which are likely to succeed are evaluated earlier, and for 
.\"O .BR \-a ,
.\"O predicates which are likely to fail are evaluated earlier.
.IP 3
この最適化レベルでは、コストに基づいた検査の最適化を徹底して行う機能が
有効になる。判別式の順序が必要なら変更され、コストのかからない
(すなわち、速い) 判別式が先に行われ、よりコストのかかる判別式が
後回しにされる。コストがほぼ同じ場合には、その述語が真を返しそうか、
偽を返しそうかによって、評価の順番が変わってくる。
.B or
演算では、真を返しそうな述語が先に評価され、
.B and
演算では、偽になりそうな述語が先に評価されるのである。
.\"O .RE
.\"O .IP
.\"O The cost-based optimiser has a fixed idea of how likely any given test
.\"O is to succeed.  In some cases the probability takes account of the
.\"O specific nature of the test (for example, 
.\"O .B \-type f
.\"O is assumed to be more likely to succeed than 
.\"O .BR "\-type c" ).
.\"O The cost-based optimiser is currently being evaluated.   If it does
.\"O not actually improve the performance of 
.\"O .BR find ,
.\"O it will be removed again.  Conversely, optimisations that prove to be
.\"O reliable, robust and effective may be enabled at lower optimisation
.\"O levels over time.  However, the default behaviour (i.e. optimisation
.\"O level 1) will not be changed in the 4.3.x release series.  The
.\"O findutils test suite runs all the tests on 
.\"O .B find
.\"O at each optimisation level and ensures that the result is the same.
.\"O .P
.RE
.IP
コストに基づいた最適化機能は、ある判別式が真を返す確率について
一定の考えを持っている。場合によっては、その確率について、
問題のテストの特性が考慮されることもある (たとえば、
.B \-type f
は、
.B \-type c
よりも、真になる可能性が高いと見なされる)。
コストに基づいた最適化機能は、現在のところその効果を評価中である。
もし、それによって
.B find
の性能が実際に向上することがなければ、捨てられることになるだろう。
反対に、信頼性があり、問題を起こしにくく、効果的であることが
はっきりした最適化は、そのうち下位の最適化レベルでも採用される
かもしれない。とは言え、リリース 4.3.x のシリーズでは、
デフォルトの動作 (すなわち、最適化レベル 1) を変更する予定はない。
なお、findutils のソースに付属するテスト集は、そのテストのすべてを
各最適化レベルの
.B find
で実行して、どの最適化レベルでも結果が同じになることを保証している。
.\"O .SH EXPRESSIONS
.\"O The expression is made up of options (which affect overall operation
.\"O rather than the processing of a specific file, and always return
.\"O true), tests (which return a true or false value), and actions (which
.\"O have side effects and return a true or false value), all separated by
.\"O operators.  
.\"O .B \-and
.\"O is assumed where the operator is omitted.  
.\"O 
.SH "式 (EXPRESSIONS)"
式は、オプション、判別式、アクションから構成されている
(訳注: オプション、判別式、アクションをまとめて、「述語 (predicate)」と呼ぶ)。
オプションは特定のファイルの処理よりもむしろ作業全体に影響し、
常に真を返す。判別式が返す値は、真のこともあれば、偽のこともある。
アクションには付加的な作用があり、真または偽を返す。
こうした式の要素は、みな演算子で区切られる。演算子が省略された場所には、
.B \-and
があるものと見なされる。

.\"O If the expression contains no actions other than 
.\"O .BR \-prune , 
.\"O .B \-print
.\"O is
.\"O performed on all files for which the expression is true.
.\"O 
式の中に
.B \-prune
以外のアクションが存在しない場合は、
式の結果が真になったすべてのファイルに対して
.B \-print
が実行される。
.\"O .SS OPTIONS
.\"O .P
.\"O All options always return true.  Except for 
.\"O .BR \-daystart , 
.\"O .B \-follow
.\"O and
.\"O .BR \-regextype , 
.\"O the options affect all tests, including tests specified
.\"O before the option.  This is because the options are processed when the
.\"O command line is parsed, while the tests don't do anything until files
.\"O are examined.  The 
.\"O .BR \-daystart , 
.\"O .B \-follow 
.\"O and 
.\"O .B \-regextype
.\"O options are different in this respect, and have an effect only on tests which
.\"O appear later in the command line.  Therefore, for clarity, it is best
.\"O to place them at the beginning of the expression.  A warning is issued
.\"O if you don't do this.
.\"O 
.SS オプション
.P
すべてのオプションは常に真を返す。
.BR \-daystart ,
.BR \-follow ,
.B \-regextype
を除いて、そのほかのオプションは、そのオプションより前に
指定された判別式も含め、すべての判別式に影響を及ぼす。
これは、オプションの処理は、コマンドラインが解析されるときに
行われるのに対して、判別式の方は、ファイルが調べられるまで
何もしないからである。
.BR \-daystart ,
.BR \-follow ,
.B \-regextype
の各オプションはこの点で異なっている。この三つのオプションは、
コマンドラインで自分より後に指定された判別式にしか影響を
及ぼさないのだ。従って、混乱を避けるためには、
.BR \-daystart ,
.BR \-follow ,
.B \-regextype
以外のオプションは、
式の先頭部に置いた方がよい。そうしないと、警告が発せられる。

.\"O .IP \-d
.\"O A synonym for \-depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.
.\"O 
.IP \-d
\-depth と同じ。FreeBSD, NetBSD, MacOS X, OpenBSD との互換性のためにある。

.\"O .IP \-daystart
.\"O Measure times (for 
.\"O .BR \-amin , 
.\"O .BR \-atime , 
.\"O .BR \-cmin , 
.\"O .BR \-ctime , 
.\"O .BR \-mmin , 
.\"O and 
.\"O .BR \-mtime )
.\"O from the beginning of today rather than from 24 hours ago.  This
.\"O option only affects tests which appear later on the command line.
.\"O 
.IP \-daystart
.BR \-amin , 
.BR \-atime , 
.BR \-cmin , 
.BR \-ctime , 
.BR \-mmin , 
.B \-mtime
において、今日 (すなわち 0 日前) の始まりを今現在から 24 時間前ではなく、
コマンド実行当日の 0 時にする。
このオプションが影響を及ぼすのは、コマンドラインで自分より後に
指定された判別式だけである。
.RS
.IP "[訳注]:" 8
.BR \-amin ,
.BR \-cmin ,
.B \-mmin
のことも考慮に入れると、次のように言えばよいのかもしれない。
デフォルトでは時間を計算するときの基準を
今現在に置くが、
.B \-daystart
を指定すると、時間計算の基準が今日の 24:00 になる。
.RE

.\"O .IP \-depth
.\"O Process each directory's contents before the directory itself.  The
.\"O \-delete action also implies 
.\"O .BR \-depth .
.\"O 
.IP \-depth
ディレクトリそのものより先に、ディレクトリの中身を処理する。
アクション
.B \-delete
を使用すると、
.B \-depth
オプションも自動的に設定される。

.\"O .IP \-follow
.\"O Deprecated; use the 
.\"O .B \-L 
.\"O option instead.  Dereference symbolic links.
.\"O Implies 
.\"O .BR \-noleaf .  
.IP \-follow
非推奨である。
.B \-L
オプションを代わりに使う方がよい。シンボリックリンクをたどる。
.B \-noleaf
が自動的に設定される。
.\"O The 
.\"O .B \-follow 
.\"O option affects only those tests which
.\"O appear after it on the command line.  Unless the 
.\"O .B \-H
.\"O or 
.\"O .B \-L 
.\"O option has
.\"O been specified, the position of the 
.\"O .B \-follow 
.\"O option changes the behaviour of the 
.\"O .B \-newer 
.\"O predicate; any files listed as the argument
.\"O of 
.\"O .B \-newer
.\"O will be dereferenced if they are symbolic links.  The same
.\"O consideration applies to 
.\"O .BR \-newerXY , 
.\"O .B \-anewer 
.\"O and 
.\"O .BR \-cnewer .  
.B \-follow
オプションが影響を及ぼすのは、コマンドラインで自分より後に指定された
判別式だけである。
.B \-H
や
.B \-L
オプションが指定されていない場合、
.B \-follow
オプションの位置によって述語
.B \-newer
の動作が変わってくる。
.B \-newer
が
.B -follow
の後に来れば、
.B \-newer
の引き数として指定されたいかなるファイルも、それがシンボリックリンクなら、
リンクをたどられることになるわけだ。同じことが
.BR \-newerXY , 
.BR \-anewer , 
.B \-cnewer 
についても言える。
.\"O Similarly, the 
.\"O .B \-type 
.\"O predicate will always match against the type of the file
.\"O that a symbolic link points to rather than the link itself.  Using
.\"O .B \-follow 
.\"O causes the 
.\"O .B \-lname and
.\"O .B \-ilname 
.\"O predicates always to return false.
.\"O 
同様に、述語
.B \-type
も、シンボリックリンクそのものではなく、必ずシンボリックリンクが
参照しているファイルのタイプに対してマッチを行うようになる。
.B \-follow
を使用すると、述語
.B \-lname
と
.B \-ilname
は常に偽を返す。

.\"O .IP "\-help, \-\-help"
.\"O Print a summary of the command-line usage of
.\"O .B find
.\"O and exit.
.\"O 
.IP "\-help, \-\-help"
.B find
のコマンドラインの使用法をざっと説明して終了する。

.\"O .IP \-ignore_readdir_race
.\"O Normally, \fBfind\fR will emit an error message when it fails to stat a file.
.\"O If you give this option and a file is deleted between the time \fBfind\fR 
.\"O reads the name of the file from the directory and the time it tries to stat 
.\"O the file, no error message will be issued.    This also applies to files
.\"O or directories whose names are given on the command line.  This option takes
.\"O effect at the time the command line is read, which means that you cannot search
.\"O one part of the filesystem with this option on and part of it with this option
.\"O off (if you need to do that, you will need to issue two \fBfind\fR commands
.\"O instead, one with the option and one without it).
.\"O 
.IP \-ignore_readdir_race
通常、\fBfind\fR は stat 関数でファイル情報を取得できなかったとき、
エラーメッセージを吐くことになっている。
ところが、このオプションを指定した場合は、\fBfind\fR が
ディレクトリからファイル名を読み込んでから、そのファイルに対して
stat 関数を実行しようとするまでの間に、ファイルが消去されても、
エラーは表示されない。この動作は、コマンドラインで名前を指定した
ファイルやディレクトリに対しても適用される。このオプションは
コマンドラインを読み込む際に有効になるので、ファイルシステムの
ある部分をこのオプションを有効にして探索し、別の部分はこのオプションを
無効にして探索するといったことはできない (そうしたことをやりたかったら、
\fBfind\fR コマンドを二回実行する必要があるだろう。一回は、
このオプションを付けて、もう一回はこのオプションなしで)。

.\"O .IP "\-maxdepth \fIlevels\fR"
.\"O Descend at most \fIlevels\fR (a non-negative integer) levels of
.\"O directories below the command line arguments.  
.\"O .B \-maxdepth 0
.\"O  means only apply the tests and actions to the command line arguments.
.\"O 
.IP "\-maxdepth \fIlevels\fR"
コマンドライン引き数として指定したパスから最大 \fIlevels\fR 段階下の
ディレクトリまで探索する (\fIlevels\fR は非負の整数)。
.B \-maxdepth 0
は、判別式やアクションの対象にするのは、
コマンドライン引き数だけであることを意味する。

.\"O .IP "\-mindepth \fIlevels\fR"
.\"O Do not apply any tests or actions at levels less than \fIlevels\fR (a
.\"O non-negative integer).  
.\"O .B \-mindepth 1
.\"O means process all files except the command line arguments.
.\"O 
.IP "\-mindepth \fIlevels\fR"
 コマンドライン引き数として指定したパスから少なくとも \fIlevels\fR 段階
ディレクトリを下降するまで、どんな判別式やアクションも行わない
(\fIlevels\fR は非負の整数)。
.B \-mindepth 1
を指定すると、コマンドラインの引き数を除くすべてファイルを処理する。

.\"O .IP \-mount
.\"O Don't descend directories on other filesystems.  An alternate name for
.\"O .BR \-xdev , 
.\"O for compatibility with some other versions of
.\"O .BR find .
.\"O 
.IP \-mount
ほかのファイルシステムにあるディレクトリを探索しない。これは
.B \-xdev
の別名であり、系統の違う
.B find
との互換性のためにある。

.\"O .IP \-noignore_readdir_race
.\"O Turns off the effect of 
.\"O .BR \-ignore_readdir_race . 
.\"O 
.IP \-noignore_readdir_race
.B \-ignore_readdir_race
の効果を無効にする。

.\"O .IP "\-noleaf"
.\"O Do not optimize by assuming that directories contain 2 fewer
.\"O subdirectories than their hard link count.  This option is needed when
.\"O searching filesystems that do not follow the Unix directory-link
.\"O convention, such as CD-ROM or MS-DOS filesystems or AFS volume mount
.\"O points.  Each directory on a normal Unix filesystem has at least 2
.\"O hard links: its name and its `.'  entry.  Additionally, its
.\"O subdirectories (if any) each have a `..'  entry linked to that
.\"O directory.  When
.\"O .B find
.\"O is examining a directory, after it has statted 2 fewer subdirectories
.\"O than the directory's link count, it knows that the rest of the entries
.\"O in the directory are non-directories (`leaf' files in the directory
.\"O tree).  If only the files' names need to be examined, there is no need
.\"O to stat them; this gives a significant increase in search speed.
.\"O 
.IP "\-noleaf"
「ディレクトリのハードリンク数から 2 を引いたものが、そのディレクトリに
含まれるサブディレクトリの数である」とする最適化動作を行わない。
このオプションが必要になるのは、ディレクトリとリンクの関係について
Unix の流儀に従わないファイルシステムを探索するときだ。
たとえば、CD-ROM や MS-DOS のファイルシステムとか、AFS ボリュームの
マウントポイントなどを探索するときである。
通常の Unix ファイルシステムでは、各ディレクトリは少なくとも
2 個のハードリンクを持っている。ディレクトリ名のエントリと、
そのディレクトリ中の `.' エントリである。さらに、そのディレクトリに
サブディレクトリがあれば、サブディレクトリそれぞれに、親ディレクトリに
ハードリンクした '..' エントリが存在する。
.B find
としては、ディレクトリを調べる際に、ディレクトリのリンク数より 2 少ない
数だけサブディレクトリを stat 関数で調べた時点で、ディレクトリ中の
残りのエントリはディレクトリではない (ディレクトリツリー中の
`leaf 葉っぱ' ファイルである) とわかるわけである。
もし、調べるのがファイル名だけで充分なら、ファイルに対して stat 関数を
実行する必要はない。そこで、この動作により、検索速度が
いちじるしく向上するわけだ。

.\"O .IP "\-regextype \fItype\fR"
.\"O Changes the regular expression syntax understood by 
.\"O .B \-regex
.\"O and 
.\"O .B \-iregex
.\"O tests which occur later on the command line.  Currently-implemented
.\"O types are emacs (this is the default), posix-awk, posix-basic,
.\"O posix-egrep and posix-extended.
.\"O 
.IP "\-regextype \fItype\fR"
判別式
.B \-regex
と
.B \-iregex
が理解する正規表現の文法を変更する。
このオプションよりコマンドラインの後方で指定する
.B \-regex
などに対して効果がある。
現在実装されている文法のタイプには、emacs (デフォルトである),  
posix-awk, posix-basic,  posix-egrep, posix-extended がある。

.\"O .IP "\-version, \-\-version"
.\"O Print the \fBfind\fR version number and exit.
.\"O 
.IP "\-version, \-\-version"
\fBfind\fR のバージョンを表示して終了する。

.\"O .IP "\-warn, \-nowarn"
.\"O Turn warning messages on or off.  These warnings apply only to the
.\"O command line usage, not to any conditions that 
.\"O .B find 
.\"O might encounter when it searches directories.  The default behaviour
.\"O corresponds to 
.\"O .B \-warn 
.\"O if standard input is a tty, and to 
.\"O .B \-nowarn
.\"O otherwise.
.\"O 
.IP "\-warn, \-nowarn"
警告メッセージの表示、非表示を切り替える。こうしたメッセージは、
もっぱらコマンドラインの使用法に関するものであり、
.B find
がディレクトリを探索中に出会うかもしれない何らかの状況に
関するものではない。デフォルトの動作は、標準入力が tty であれば、
.B \-warn
であり、それ以外の場合は、
.B \-nowarn
である。

.\"O .IP \-xdev
.\"O Don't descend directories on other filesystems.
.\"O 
.IP \-xdev
ほかのファイルシステムにあるディレクトリを探索しない。

.\"O .SS TESTS
.\"O Some tests, for example
.\"O .B \-newerXY
.\"O and 
.\"O .BR -samefile ,
.\"O allow comparison between the file currently being examined and some
.\"O reference file specified on the command line.  When these tests are
.\"O used, the interpretation of the reference file is determined by the 
.\"O options 
.\"O .BR \-H , 
.\"O .B \-L 
.\"O and 
.\"O .B \-P
.\"O and any previous 
.\"O .BR \-follow ,
.\"O but the reference file is only examined once, at the time the command
.\"O line is parsed.  If the reference file cannot be examined (for
.\"O example, the 
.\"O .BR stat (2) 
.\"O system call fails for it), an error message is issued, and 
.\"O .B find
.\"O exits with a nonzero status.
.\"O .P
.SS 判別式 (TESTS)
判別式の中には、たとえば
.B \-newerXY
や
.B \-samefile
のように、現在検査の対象になっているファイルと、コマンドラインで指定した
リファレンスファイルとを比較することになっているものがある。
そうしたリファレンスファイルの実体が何になるかは、
.BR \-H ,
.BR \-L ,
.B \-P
といったオプションや、先行する
.B \-follow
の存在によって決まってくる。
ただし、リファレンスファイルが調べられるのは、一回だけであり、
それはコマンドラインの解析が行われるときである。
リファレンスファイルを調べることができない場合は (たとえば、
それに対する
.BR stat (2)
システムコールに失敗するなど)、エラーメッセージが表示され、
.B find
は 0 以外のステータスで終了する。
.P
.\"O Numeric arguments can be specified as
.\"O .IP \fI+n\fP
.\"O for greater than
.\"O .IR n ,
.\"O .IP \fI\-n\fP
.\"O for less than
.\"O .IR n ,
.\"O .IP \fIn\fP
.\"O for exactly
.\"O .IR n .
.\"O .P
.\"O
数値の引き数は、以下の形で指定することができる。
.IP \fI+n\fP
.I n
を越える数であることを意味する。
.IP \fI\-n\fP
.I n
未満であることを意味する。
.IP \fIn\fP
ぴったり
.I n
であることを意味する。

.\"O .IP "\-amin \fIn\fR"
.\"O File was last accessed \fIn\fR minutes ago.
.\"O 
.IP "\-amin \fIn\fR"
ファイルの最終アクセス日時が \fIn\fR 分前であれば真。

.\"O .IP "\-anewer \fIfile\fR"
.\"O File was last accessed more recently than \fIfile\fR was modified.  If
.\"O \fIfile\fR is a symbolic link and the 
.\"O .B \-H 
.\"O option or the 
.\"O .B \-L 
.\"O option is in effect, the access time of the file it points to is
.\"O always used.
.\"O 
.IP "\-anewer \fIfile\fR"
ファイルの最終アクセス日時が、\fIfile\fR の内容更新日時よりも
新しければ、真を返す。引き数 \fIfile\fR がシンボリックリンクで、
しかも
.B \-H
や
.B \-L
オプションが有効になっている場合は、リンク先のファイルの内容更新日時が
比較に使用されることになる。
.\" (訳注: "If \fIfile\fR is a symbolic link" の \fIfile\fR は
.\" 直前にある "than \fIfile\fR was modified" の \fIfile\fR と
.\" 同じだろうから -- すなわち、-anewer の引き数だろうから --
.\" "the access time of the file it points" の access time を
.\" modification time に修正しないと、つじつまが合わなくなる。
.\" ほぼ同じことが、-cnewer や -newer の訳についても言える)

.\"O .IP "\-atime \fIn\fR"
.\"O File was last accessed \fIn\fR*24 hours ago.  
.\"O When find figures out how many 24-hour periods ago the file 
.\"O was last accessed, any fractional part is ignored, so to match 
.\"O .B \-atime 
.\"O .BR +1 ,
.\"O a file has to have been accessed at least 
.\"O .I two
.\"O days ago.
.\"O 
.IP "\-atime \fIn\fR"
ファイルの最終アクセス日時が \fIn\fR 日前ならば、真を返す。
ファイルの最終アクセス日時が何日前かを計算する際、現在時刻との時間差を
24 で割った余りは切り捨てられる。従って、
.B \-atime +1
にマッチするためには、
ファイルは少なくとも二日前にアクセスされていなければならない。

.\"O .IP "\-cmin \fIn\fR"
.\"O File's status was last changed \fIn\fR minutes ago.
.\"O 
.IP "\-cmin \fIn\fR"
ファイルの最終ステータス変更日時が \fIn\fR 分前ならば真。

.\"O .IP "\-cnewer \fIfile\fR"
.\"O File's status was last changed more recently than \fIfile\fR was
.\"O modified.  If \fIfile\fR is a symbolic link and the 
.\"O .B \-H 
.\"O option or the
.\"O .B \-L 
.\"O option is in effect, the status-change time of the file it points
.\"O to is always used.
.\"O 
.IP "\-cnewer \fIfile\fR"
ファイルの最終ステータス変更日時が、\fIfile\fR の内容更新日時よりも
新しければ、真を返す。引き数 \fIfile\fR がシンボリックリンクで、
しかも
.B \-H
や
.B \-L
オプションが有効になっている場合は、リンク先のファイルの内容更新日時が
比較に使用されることになる。

.\"O .IP "\-ctime \fIn\fR"
.\"O File's status was last changed \fIn\fR*24 hours ago.
.\"O See the comments for 
.\"O .B \-atime 
.\"O to understand how rounding affects the interpretation of file status
.\"O change times.
.\"O 
.IP "\-ctime \fIn\fR"
ファイルの最終ステータス変更日時が \fIn\fR 日前ならば、真を返す。
何日前かを計算する際に、現在時刻との時間差を 24 で割った余りを
切り捨てることが、ファイルのステータス変更日時の解釈にどんな影響を
及ぼすかについては、
.B \-atime
の説明を見てほしい。

.\"O .IP \-empty
.\"O File is empty and is either a regular file or a directory.
.\"O 
.IP \-empty
ファイルが空で、通常のファイルかディレクトリならば真。

.\"O .IP \-executable
.\"O Matches files which are executable and directories which are
.\"O searchable (in a file name resolution sense).  This takes into account
.\"O access control lists and other permissions artefacts which the
.\"O .B \-perm 
.\"O test ignores.  This test makes use of the
.\"O .BR access (2)
.\"O system call, and so can be fooled by NFS servers which do UID
.\"O mapping (or root-squashing), since many systems implement 
.\"O .BR access (2) 
.\"O in the client's kernel and so cannot make use of the UID mapping
.\"O information held on the server.  Because this test is based only on
.\"O the result of the 
.\"O .BR access (2)
.\"O system call, there is no guarantee that a file for which this test
.\"O succeeds can actually be executed.
.\"O 
.IP \-executable
実行可能なファイルや (ファイル名解決の際に) 検索可能なディレクトリに
マッチする。判別式
.B \-perm
が ACL (アクセス・コントロール・リスト) などのパーミッション制御の
仕組みを無視するのに対して、この判別式は ACL なども考慮に入れる。
この判別式は
.BR access (2)
システムコールを使用しているので、UID マッピング (または root-squashing) を
行っている NFS サーバがあると、正確な結果を得られないことがある。
なぜなら、たいていのシステムは
.BR access (2)
をクライアントのカーネルで実装しており、それ故、サーバ側に保持されている
UID マッピング情報を利用できないからだ。
この判別式はひとえに
.BR access (2)
システムコールの結果に基づいているので、この判別式が
真を返したからと言って、そのファイルが実際に実行できるとはかぎらない。

.\"O .IP \-false
.\"O Always false.
.\"O 
.IP \-false
常に偽を返す。

.\"O .IP "\-fstype \fItype\fR"
.\"O File is on a filesystem of type \fItype\fR.  The valid filesystem
.\"O types vary among different versions of Unix; an incomplete list of
.\"O filesystem types that are accepted on some version of Unix or another
.\"O is: ufs, 4.2, 4.3, nfs, tmp, mfs, S51K, S52K.  You can use 
.\"O .B \-printf
.\"O with the %F directive to see the types of your filesystems.
.\"O 
.IP "\-fstype \fItype\fR"
ファイルが置かれているファイルシステムが \fItype\fR ならば、真を返す。
使用できるファイルシステムは、Unix の系統によって様々である。
Unix の系統次第では指定可能なファイルシステムを不完全ながら挙げると、
ufs, 4.2, 4.3, nfs, tmp, mfs, S51K, S52K などがある。
アクション
.B \-printf
で書式指定子
%F を使えば、使用中のファイルシステムのタイプが何かを知ることができる。

.\"O .IP "\-gid \fIn\fR"
.\"O File's numeric group ID is \fIn\fR.
.\"O 
.IP "\-gid \fIn\fR"
ファイルのグループ ID 番号が \fIn\fR ならば真。

.\"O .IP "\-group \fIgname\fR"
.\"O File belongs to group \fIgname\fR (numeric group ID allowed).
.\"O 
.IP "\-group \fIgname\fR"
ファイルの属するグループが \fIgname\fR ならば真 (グループ ID 番号で
指定してもよい)。

.\"O .IP "\-ilname \fIpattern\fR"
.\"O Like 
.\"O .BR \-lname , 
.\"O but the match is case insensitive.
.\"O If the 
.\"O .B \-L 
.\"O option or the 
.\"O .B \-follow 
.\"O option is in effect, this test returns false unless the symbolic link
.\"O is broken. 
.\"O 
.IP "\-ilname \fIpattern\fR"
.B \-lname
と同じだが、大文字小文字を区別しない。
.B \-L
か
.B \-follow
オプションが有効な場合は、シンボリックリンクがリンク切れしている場合を除き、
この判別式は偽を返す。

.\"O .IP "\-iname \fIpattern\fR"
.\"O Like 
.\"O .BR \-name , 
.\"O but the match is case insensitive.  For example, the
.\"O patterns `fo*' and `F??' match the file names `Foo', `FOO', `foo',
.\"O `fOo', etc.   In these patterns, unlike filename expansion by the
.\"O shell, an initial '.' can be matched by `*'.  That is, 
.\"O .B find \-name *bar 
.\"O will match the file `.foobar'.   Please note that you should quote
.\"O patterns as a matter of course, otherwise the shell will expand any
.\"O wildcard characters in them.
.\"O 
.IP "\-iname \fIpattern\fR"
.B \-name
と同じだが、大文字小文字を区別しない。
たとえば、パターン `fo*' や `F??' は、`Foo', `FOO', `foo', `fOo'
といったファイル名とマッチする。シェルのファイル名展開と違い、
こうしたパターンにおいて '*' は、ファイル名の先頭にある '.' とも
マッチする。すなわち、
.B find \-name *bar
は、ファイル `.foobar' ともマッチすることになるわけだ。
当然ながら、パターンは引用符で囲むべきだということに気をつけて
いただきたい。さもないと、パターン中にワイルドカード文字があれば、
シェルがそれを展開してしまうことになる。

.\"O .IP "\-inum \fIn\fR"
.\"O File has inode number \fIn\fR.  It is normally easier to use the 
.\"O .B \-samefile
.\"O test instead.
.\"O 
.IP "\-inum \fIn\fR"
ファイルの inode 番号が \fIn\fR ならば真。たいていの場合、
この判別式より、
.B \-samefile
を使った方が簡単である。

.\"O .IP "\-ipath \fIpattern\fR"
.\"O Behaves in the same way as 
.\"O .BR \-iwholename .  
.\"O This option is deprecated, so please do not use it.
.\"O 
.IP "\-ipath \fIpattern\fR"
.B \-iwholename
と同じように動作する。この判別式は非推奨である。使わないでいただきたい。

.\"O .IP "\-iregex \fIpattern\fR"
.\"O Like 
.\"O .BR \-regex , 
.\"O but the match is case insensitive.
.\"O 
.IP "\-iregex \fIpattern\fR"
.B \-regex
と同じだが、大文字小文字を区別しない。

.\"O .IP "\-iwholename \fIpattern\fR"
.\"O Like 
.\"O .BR \-wholename , 
.\"O but the match is case insensitive.
.\"O 
.IP "\-iwholename \fIpattern\fR"
.B \-wholename
と同じだが、大文字小文字を区別しない。

.\"O .IP "\-links \fIn\fR"
.\"O File has \fIn\fR links.
.\"O 
.IP "\-links \fIn\fR"
ファイルのリンク数が \fIn\fR ならば真。

.\"O .IP "\-lname \fIpattern\fR"
.\"O File is a symbolic link whose contents match shell pattern
.\"O \fIpattern\fR.  The metacharacters do not treat `/' or `.' specially.
.\"O If the 
.\"O .B \-L 
.\"O option or the 
.\"O .B \-follow 
.\"O option is in effect, this test returns false unless the symbolic link
.\"O is broken. 
.\"O 
.IP "\-lname \fIpattern\fR"
ファイルがシンボリックリンクであり、リンク先として指定されているパスが
シェルのパターン \fIpattern\fR にマッチすれば、真を返す。
メタ文字は、`/' や `.' を例外扱いしない。
.B \-L
や
.B \-follow
オプションが有効な場合は、シンボリックリンクがリンク切れしている場合を除き、
この判別式は偽を返す。

.\"O .IP "\-mmin \fIn\fR"
.\"O File's data was last modified \fIn\fR minutes ago.
.\"O 
.IP "\-mmin \fIn\fR"
ファイルの最終内容更新日時が \fIn\fR 分前であれば真。

.\"O .IP "\-mtime \fIn\fR"
.\"O File's data was last modified \fIn\fR*24 hours ago.
.\"O See the comments for 
.\"O .B \-atime 
.\"O to understand how rounding affects the interpretation of file
.\"O modification times.
.\"O 
.IP "\-mtime \fIn\fR"
ファイルの最終内容更新日時が \fIn\fR 日前ならば、真を返す。
何日前かを計算する際に、現在時刻との時間差を 24 で割った余りを
切り捨てることが、ファイルの内容更新日時の解釈にどんな影響を
及ぼすかについては、
.B \-atime
の説明を見てほしい。

.\"O .IP "\-name \fIpattern\fR"
.\"O Base of file name (the path with the leading directories removed)
.\"O matches shell pattern \fIpattern\fR.  The metacharacters (`*', `?',
.\"O and `[]') match a `.' at the start of the base name (this is a change
.\"O in findutils-4.2.2; see section STANDARDS CONFORMANCE below).  To ignore a
.\"O directory and the files under it, use 
.\"O .BR \-prune ; 
.\"O see an example in the
.\"O description of 
.\"O .BR \-path .  
.\"O Braces are not recognised as being
.\"O special, despite the fact that some shells including Bash imbue braces
.\"O with a special meaning in shell patterns.  The filename matching is
.\"O performed with the use of the
.\"O .BR fnmatch (3) 
.\"O library function.   Don't forget to enclose the pattern in quotes 
.\"O in order to protect it from expansion by the shell.
.\"O 
.IP "\-name \fIpattern\fR"
ファイルやディレクトリのベースネーム (パスから最後の要素だけを残して、
先行するディレクトリを取り去ったもの) が、シェルのパターン \fIpattern\fR に
マッチすれば、真を返す。メタ文字 (`*', `?', `[]) は、
ベースネームの先頭にある `.' とマッチする (findutils-4.2.2 から
このように変更になった。下記のセクション「標準への準拠」を参照)。
あるディレクトリとそれ以下にあるファイルをまとめて無視するには、
.B \-prune
を使うとよい。一例が
.B \-path
の説明中にある。
中カッコ ('{}') は特殊文字として認識されない。この点、bash を含む
一部のシェルで、シェル・パターン中の中カッコに特別な意味を付与しているのと
異なっている。ファイル名のマッチングは、
.BR fnmatch (3)
ライブラリ関数を用いて行われる。パターンを引用符で囲むのを
忘れないように。シェルによって展開されてしまわないようにするためである。

.\"O .IP "\-newer \fIfile\fR"
.\"O File was modified more recently than \fIfile\fR.  If \fIfile\fR is a
.\"O symbolic link and the 
.\"O .B \-H 
.\"O option or the 
.\"O .B \-L 
.\"O option is in effect, the
.\"O modification time of the file it points to is always used.
.\"O 
.IP "\-newer \fIfile\fR"
ファイルが \fIfile\fR よりも最近に内容を更新されていれば、真を返す。
引き数 \fIfile\fR がシンボリックリンクで、しかも
.B \-H
や
.B \-L
オプションが有効になっている場合は、
リンク先のファイルの内容更新日時が比較に使用されることになる。

.\"O .IP "\-newerXY \fIreference\fR"
.\"O Compares the timestamp of the current file with \fIreference\fR.  
.\"O The 
.\"O .I reference 
.\"O argument is normally the name of a file (and one of its timestamps is
.\"O used for the comparison) but it may also be a string describing an
.\"O absolute time.  
.\"O .I X 
.\"O and 
.\"O .I Y 
.\"O are placeholders for other letters, and these letters select which
.\"O time belonging to 
.\"O how 
.\"O .I reference 
.\"O is used for the comparison.
.IP "\-newerXY \fIreference\fR"
目下検査の対象になっているファイルのタイムスタンプを \fIreference\fR と
比較する。引き数
.I reference
は、たいていの場合ファイル名であるが (そして、そのタイムスタンプの一つが
比較に使用されるが)、日時を直接表す文字列でも構わない。
.I X
と
.I Y
は仮の表現であって、実際には以下に述べるような別の文字が来る。
そうした文字が、検査の対象になっているファイルとリファレンスそれぞれの、
どの日時を比較に使用するかを決めるのである (訳注: 前者を
.I X
で、
後者を
.I Y
で指定する)。
.\"O .TS
.\"O ll
.\"O ll
.\"O ll
.\"O ll
.\"O llw(2i).
.\"O a	The access time of the file \fIreference\fR 
.\"O B	The birth time of the file \fIreference\fR
.\"O c	The inode status change time of \fIreference\fR
.\"O m	The modification time of the file \fIreference\fR
.\"O t	\fIreference\fR is interpreted directly as a time
.\"O .TE
.\"O 
.TS
ll
ll
ll
ll
llw(2i).
a	ファイルのアクセス日時
B	ファイルの作成日時
c	inode のステータスが変更された日時
m	ファイルの内容が更新された日時
t	\fIreference\fR が日時の直接表現として解釈される
.TE

.\"O Some combinations are invalid; for example, it is invalid for
.\"O .I X 
.\"O to be 
.\"O .IR t .
組み合わせによっては、無効なものもある。たとえば、
.I X
に
.I t
を指定しても無効である。
.\"O Some combinations are not implemented on all systems; for example 
.\"O .I B
.\"O is not supported on all systems.  If an invalid or unsupported
.\"O combination of 
.\"O .I XY 
.\"O is specified, a fatal error results.  Time specifications are
.\"O interpreted as for the argument to the 
.\"O .B \-d 
.\"O option of GNU 
.\"O .BR date .
.\"O If you try to use the birth time of a reference file, and the birth
.\"O time cannot be determined, a fatal error message results.  If you
.\"O specify a test which refers to the birth time of files being examined,
.\"O this test will fail for any files where the birth time is unknown.
.\"O 
組み合わせの中には、すべてのシステムで実装されているとはかぎらない
ものもある。たとえば、
.I B
はすべてのシステムでサポートされているわけではない。
.I XY
の無効な組み合わせやサポートされていない組み合わせを指定すると、
致命的エラーが起きる。日時を直接指定すると、それは GNU
.B date
の
.B \-d
オプションに対する引き数と同様に解釈される。
リファレンスファイルの作成日時を使用しようとして、作成日時が
特定できない場合は、致命的エラーのメッセージが表示される。
また、検査対象になるファイルの作成日時を参照する判別式を指定した場合、
作成日時がわからない環境では、そのテストはどのファイルに対しても
失敗することになる。

.\"O .IP \-nogroup
.\"O No group corresponds to file's numeric group ID.
.\"O 
.IP \-nogroup
ファイルのグループ ID 番号に対応するグループが存在しなければ真。

.\"O .IP \-nouser
.\"O No user corresponds to file's numeric user ID.
.\"O 
.IP \-nouser
ファイルのユーザ ID 番号に対応するユーザが存在しなければ真。

.\"O .IP "\-path \fIpattern\fR"
.\"O File name matches shell pattern \fIpattern\fR.  The metacharacters do
.\"O not treat `/' or `.' specially; so, for example,
.IP "\-path \fIpattern\fR"
ファイル名がシェルのパターン \fIpattern\fR にマッチすれば真。
メタ文字は `/' や `.' を例外扱いしない。従って、たとえば、
.\"O .br
.\"O .in +1i
.\"O find . \-path "./sr*sc"
.\"O .br
.\"O .in -1i
.\"O will print an entry for a directory called `./src/misc' (if one
.\"O exists).  To ignore a whole directory tree, use 
.\"O .B \-prune
.\"O rather than
.\"O checking every file in the tree.  For example, to skip the
.\"O directory `src/emacs' and all files and directories under it, and
.\"O print the names of the other files found, do something like this:
.br
.in +1i
find . \-path "./sr*sc"
.br
.in -1i
は、`./src/misc' と言うディレクトリを (存在していれば) 表示する。
あるディレクトリ以下をすべて無視するには、そこに存在するファイルを
一つ一つ抑止するよりも、
.B \-prune
を使用した方がよい。たとえば、 `src/emacs' と、その下にあるファイルや
ディレクトリのすべてをスキップし、それ以外のファイルがあったら、
その名前を表示するとしよう。そのためには、こんな風にする。
.\"O .br
.\"O .in +1i
.\"O find . \-path ./src/emacs \-prune \-o \-print
.\"O .br
.\"O .in -1i
.\"O Note that the pattern match test applies to the whole file name,
.\"O starting from one of the start points named on the command line.  It
.\"O would only make sense to use an absolute path name here if the
.\"O relevant start point is also an absolute path.  This means that this
.\"O command will never match anything:
.br
.in +1i
find . \-path ./src/emacs \-prune \-o \-print
.br
.in -1i
パターンマッチのテストは、パスを含むファイル名の全体に対して行われるが、
そうしたパス付きのファイル名は、コマンドラインで指定した探索の始点の一つから
始まっていることに注意してほしい。だから、
.B \-path
の引き数に絶対パス名を使用することに意味があるのは、関連する探索の
始点がこちらも絶対パスであるときだけだろう。従って、次のコマンドは
何にもマッチしないことになる。
.\"O .br
.\"O .in +1i
.\"O find bar \-path /foo/bar/myfile \-print
.\"O .br
.\"O .in -1i
.\"O The predicate 
.\"O .B \-path
.\"O is also supported by HP-UX
.\"O .B find 
.\"O and will be in a forthcoming version of the POSIX standard.
.\"O 
.br
.in +1i
find bar \-path /foo/bar/myfile \-print
.br
.in -1i
述語
.B \-path
は、HP-UX の
.B find
でもサポートされている。
POSIX 標準の次期バージョンでも採用されることになるだろう。

.\"O .IP "\-perm \fImode\fR"
.\"O File's permission bits are exactly \fImode\fR (octal or symbolic).
.\"O Since an exact match is required, if you want to use this form for
.\"O symbolic modes, you may have to specify a rather complex mode string.
.\"O For example 
.\"O .B \-perm g=w
.\"O will only match files which have mode 0020
.\"O (that is, ones for which group write permission is the only permission
.\"O set).  It is more likely that you will want to use the `/' or `-'
.\"O forms, for example 
.\"O .BR "\-perm \-g=w" ,
.\"O which matches any file with group write permission.  See the
.\"O .B EXAMPLES 
.\"O section for some illustrative examples.
.\"O 
.IP "\-perm \fImode\fR"
ファイルの許可属性が \fImode\fR (8 進数表現でもシンボル表現でもよい)
とまったく同じなら、真を返す。
\fImode\fR 指定のこの形式では、許可属性がぴったり一致することを
要求しているので、シンボルによる表現でこの形式を使おうとすると、
かなり複雑なモード文字列を指定しなければならないかもしれない。たとえば
.B \-perm g=w
は、許可属性が 0020 のファイルにしかマッチしないことになる
(すなわち、許可属性のうち、グループの書き込み許可のみが立っている
ファイルだ)。そんなわけで、\fImode\fR の前に `/' や `-' を付ける形式を
使いたくなる場合の方が、ずっと多そうである。たとえば、
.BR "\-perm \-g=w"
なら、グループが書き込み許可を持っているいかなるファイルにも
マッチするわけだ。具体例については「用例」セクションを見てほしい。

.\"O .IP "\-perm \-\fImode\fR"
.\"O All of the permission bits \fImode\fR are set for the file.
.\"O Symbolic modes are accepted in this form, and this is usually the way
.\"O in which would want to use them.  You must specify `u', `g' or `o' if
.\"O you use a symbolic mode.   See the 
.\"O .B EXAMPLES 
.\"O section for some illustrative examples.
.\"O 
.IP "\-perm \-\fImode\fR"
\fImode\fR で指定した許可属性ビットのすべてが、ファイルでも立っていれば、
真を返す。\fImode\fR 指定のこの形式でも、シンボルによる許可属性表現が
使用できる。と言うより、この形式ではたいていの場合、シンボルによる表現を
使いたくなるだろう。
シンボルによる表現を使用する場合は、`u' や `g' や `o' を
きちんと指定しなければならない。具体例については「用例」セクションを
見てほしい。

.\"O .IP "\-perm /\fImode\fR"
.\"O Any of the permission bits \fImode\fR are set for the file.  Symbolic
.\"O modes are accepted in this form.  You must specify `u', `g' or `o' if
.\"O you use a symbolic mode.  See the
.\"O .B EXAMPLES 
.\"O section for some illustrative examples.  If no permission bits in 
.\"O .I mode
.\"O are set, this test matches any file (the idea here is to be consistent
.\"O with the behaviour of  
.\"O .B \-perm 
.\"O .BR \-000 ).
.\"O 
.IP "\-perm /\fImode\fR"
\fImode\fR で指定した許可属性ビットのどれかが、ファイルでも立っていれば、
真を返す。\fImode\fR 指定のこの形式でも、シンボルによる許可属性表現が
使用できる。シンボルによる表現を使用する場合は、`u' や `g' や `o' を
きちんと指定しなければならない。具体例については「用例」セクションを
見てほしい。
.I mode
で許可属性ビットが一つも立っていない場合、この判別式は
いかなるファイルにもマッチする (すなわち、
.B \-perm 
.B \-000
の動作と同じだということだ)。

.\"O .IP "\-perm +\fImode\fR"
.\"O Deprecated, old way of searching for files with any of the permission
.\"O bits in \fImode\fR set.  You should use
.\"O .B \-perm \fI/mode\fR
.\"O instead. Trying to use the `+' syntax with symbolic modes will yield
.\"O surprising results.  For example, `+u+x' is a valid symbolic mode
.\"O (equivalent to +u,+x, i.e. 0111) and will therefore not be evaluated
.\"O as
.\"O .B \-perm +\fImode\fR
.\"O but instead as the exact mode specifier
.\"O .B \-perm \fImode\fR
.\"O and so it matches files with exact permissions 0111 instead of files with any
.\"O execute bit set.  If you found this paragraph confusing, you're not
.\"O alone - just use 
.\"O .B \-perm /\fImode\fR.
.\"O This form of the 
.\"O .B \-perm
.\"O test is deprecated because the POSIX specification requires the
.\"O interpretation of a leading `+' as being part of a symbolic mode, and
.\"O so we switched to using `/' instead.
.\"O 
.IP "\-perm +\fImode\fR"
非推奨な形式。\fImode\fR で指定した許可属性ビットのどれかが立っている
ファイルを捜す古い方法である。代わりに
.B \-perm \fI/mode\fR
を使用した方がよい。`+' を付けて \fImode\fR を指定するこの形式で
シンボルによる表現を使おうとすると、思いがけない結果を生むことがある。
たとえば、 `+u+x' はそれ自体有効なシンボル表現である ('+u,+x' と
同じであり、0111 を意味する)。そのため、
.B \-perm +u+x
は、
.B \-perm +\fImode\fR
として評価されず、ぴったり一致する許可属性を指定するときの
.B \-perm \fImode\fR
として評価されてしまうのだ。その結果、実行ビットが少なくともどれか一つ
立っているファイルではなく、許可属性がぴったり 0111 のファイルに
マッチすることになる。もし、この項の説明がわかりにくかったとしても、
あなた一人がわからないのではない。とりあえず、
.B \-perm /\fImode\fR
を使っておいていただきたい。判別式
.B \-perm
のこの形式が非推奨なのは、シンボルによる許可属性に先行する `+' は、
シンボル表現の一部として解釈するように POSIX の規定で要求されて
いるからであり、それ故、我々は '+' に代えて、'/' を使うようにしたのである。

.\"O .IP \-readable
.\"O Matches files which are readable.  This takes into account access
.\"O control lists and other permissions artefacts which the
.\"O .B \-perm 
.\"O test ignores.  This test makes use of the
.\"O .BR access (2)
.\"O system call, and so can be fooled by NFS servers which do UID
.\"O mapping (or root-squashing), since many systems implement 
.\"O .BR access (2) 
.\"O in the client's kernel and so cannot make use of the UID mapping
.\"O information held on the server.
.\"O 
.IP \-readable
読み込み可能なファイルにマッチする。判別式
.B \-perm
が ACL (アクセス・コントロール・リスト) などのパーミッション制御の
仕組みを無視するのに対して、この判別式は ACL なども考慮に入れる。
この判別式は
.BR access (2)
システムコールを使用しているので、UID マッピング (または
root-squashing) を行っている NFS サーバがあると、正確な結果を
得られないことがある。なぜなら、たいていのシステムは
.BR access (2)
をクライアントのカーネルで実装しており、それ故、サーバ側に保持されている
UID マッピング情報を利用できないからである。

.\"O .IP "\-regex \fIpattern\fR"
.\"O File name matches regular expression \fIpattern\fR.  This is a match
.\"O on the whole path, not a search.  For example, to match a file named
.\"O `./fubar3', you can use the regular expression `.*bar.' or `.*b.*3',
.\"O but not `f.*r3'.  The regular expressions understood by 
.\"O .B find 
.\"O are by default Emacs Regular Expressions, but this can be
.\"O changed with the 
.\"O .B \-regextype 
.\"O option.
.\"O 
.IP "\-regex \fIpattern\fR"
ファイル名が正規表現 \fIpattern\fR にマッチすれば、真を返す。
これはパスを含むファイル名全体に対するマッチであって、部分的な一致ではない。
だから、たとえば、`./fubar3' という名前のファイルにマッチさせるために、
正規表現  `.*bar.' や `.*b.*3' は使用できるが、`f.*r3' は使用できないわけだ。 
.B find
が理解する正規表現は、デフォルトでは Emacs の正規表現だが、これは
.B \-regextype
オプションで変更することができる。

.\"O .IP "\-samefile \fIname\fR"
.\"O File refers to the same inode as \fIname\fR.   When 
.\"O .B \-L 
.\"O is in effect, this can include symbolic links.
.\"O 
.IP "\-samefile \fIname\fR"
ファイルが \fIname\fR と同じ inode を参照していれば、真を返す。
.B \-L
が有効な場合、シンボリックリンクも真を返す。

.\"O .IP "\-size \fIn\fR[cwbkMG]"
.\"O File uses \fIn\fP units of space.  The following suffixes 
.\"O can be used:
.\"O .RS
.\"O .IP `b' 
.\"O for 512-byte blocks (this is the default if no suffix is used)
.\"O .IP `c' 
.\"O for bytes
.\"O .IP `w' 
.\"O for two-byte words
.\"O .IP `k' 
.\"O for Kilobytes (units of 1024 bytes)
.\"O .IP `M' 
.\"O for Megabytes (units of 1048576 bytes)
.\"O .IP `G' 
.\"O for Gigabytes (units of 1073741824 bytes)
.\"O .RE
.IP "\-size \fIn\fR[cwbkMG]"
ファイルが \fIn\fP 単位分の領域を使用していれば、真を返す。
以下の接尾辞が使える。
.RS
.IP `b'
単位はブロック。1 ブロックは 512 バイト。(これが接尾辞を使わないときの
デフォルトである)
.IP `c'
単位はバイト。
.IP `w'
単位はワード。1 ワードは 2 バイト。
.IP `k
単位はキロバイト (1 キロバイトは 1024 バイト)。
.IP `M'
単位はメガバイト (1 メガバイトは 1048576 バイト)。
.IP `G'
単位はギガバイト (1 ギガバイトは 1073741824 バイト)。
.RE
.\"O .IP
.\"O The size does not count indirect blocks, but it does count blocks in
.\"O sparse files that are not actually allocated.  Bear in mind that the
.\"O `%k' and `%b' format specifiers of 
.\"O .B \-printf 
.\"O handle sparse files
.\"O differently.  The `b' suffix always denotes 512-byte blocks and never
.\"O 1 Kilobyte blocks, which is different to the behaviour of 
.\"O .BR \-ls .
.\"O 
.IP
サイズには間接ブロック (indirect block) の分は含まれないが、
穴空きファイル (sparse file) における、実際には割り当てられていない
ブロックの分は含まれる。アクション
.B \-printf
の
`%k' や `%b' 書式指定子とは穴空きファイルの扱い方が違うことを、
心にとめておいてほしい。接尾辞 `b' は常に 512 バイトのブロックを
意味し、1 キロバイトのブロックを指すことはない。その点が、アクション
.B \-ls
の動作と異なっている。

.\"O .IP \-true
.\"O Always true.
.\"O 
.IP \-true
常に真。

.\"O .IP "\-type \fIc\fR"
.\"O File is of type \fIc\fR:
.IP "\-type \fIc\fR"
ファイルのタイプが \fIc\fR であれば真。\fIc\fR の位置には実際には
以下の文字が来る。
.\"O .RS
.\"O .IP b
.\"O block (buffered) special
.RS
.IP b
ブロック・スペシャルファイル (バッファあり)
.\"O .IP c
.\"O character (unbuffered) special
.IP c
キャラクタ・スペシャルファイル (バッファなし)
.\"O .IP d
.\"O directory
.IP d
ディレクトリ
.\"O .IP p
.\"O named pipe (FIFO)
.IP p
名前付きパイプ (FIFO)
.\"O .IP f
.\"O regular file
.IP f
通常のファイル
.\"O .IP l
.\"O symbolic link; this is never true if the 
.\"O .B \-L 
.\"O option or the 
.\"O .B \-follow
.\"O option is in effect, unless the symbolic link is broken.  If you want
.\"O to search for symbolic links when 
.\"O .B \-L 
.\"O is in effect, use
.\"O .BR \-xtype .
.IP l
シンボリックリンク。オプション
.B \-L
や
.B \-follow
が有効な場合、シンボリックリンクがリンク切れの場合を除いて、
この判別式が真になることはない。
.B \-L
が有効なときにシンボリックリンクを検索したかったら、
.B \-xtype
を使うべきである。
.\"O .IP s
.\"O socket
.IP s
ソケット
.\"O .IP D
.\"O door (Solaris)
.\"O .RE
.IP D
ドア (Solaris の場合)
.RE
.\"O .IP "\-uid \fIn\fR"
.\"O File's numeric user ID is \fIn\fR.
.\"O 
.IP "\-uid \fIn\fR"
ファイル所有者のユーザ ID 番号が \fIn\fR ならば真。

.\"O .IP "\-used \fIn\fR"
.\"O File was last accessed \fIn\fR days after its status was last changed.
.\"O 
.IP "\-used \fIn\fR"
ファイルが最後にアクセスされたのが、ファイルのステータスが最後に
変更されてから \fIn\fR 日後ならば、真を返す。

.\"O .IP "\-user \fIuname\fR"
.\"O File is owned by user \fIuname\fR (numeric user ID allowed).
.\"O 
.IP "\-user \fIuname\fR"
ファイルの所有者が \fIuname\fR というユーザならば真
(ユーザ ID 番号で指定してもよい)。

.\"O .IP "\-wholename \fIpattern\fR"
.\"O See \-path.    This alternative is less portable than 
.\"O .BR \-path .
.\"O 
.IP "\-wholename \fIpattern\fR"
.B \-path
と同じである。この別名は移植性で
.B \-path
に劣る。

.\"O .IP "\-writable"
.\"O Matches files which are writable.  This takes into account access
.\"O control lists and other permissions artefacts which the
.\"O .B \-perm 
.\"O test ignores.  This test makes use of the
.\"O .BR access (2)
.\"O system call, and so can be fooled by NFS servers which do UID
.\"O mapping (or root-squashing), since many systems implement 
.\"O .BR access (2) 
.\"O in the client's kernel and so cannot make use of the UID mapping
.\"O information held on the server.
.\"O 
.IP "\-writable"
書き込み可能なファイルにマッチする。判別式
.B \-perm
が ACL (アクセス・コントロール・リスト) などのパーミッション制御の
仕組みを無視するのに対して、この判別式は ACL なども考慮に入れる。
この判別式は
.BR access (2)
システムコールを使用しているので、UID マッピング (または
root-squashing) を行っている NFS サーバがあると、正確な結果を
得られないことがある。なぜなら、たいていのシステムは
.BR access (2)
をクライアントのカーネルで実装しており、それ故、サーバ側に保持されている
UID マッピング情報を利用できないからである。

.\"O .IP "\-xtype \fIc\fR"
.\"O The same as 
.\"O .B \-type
.\"O unless the file is a symbolic link.  For symbolic
.\"O links: if the 
.\"O .B \-H 
.\"O or 
.\"O .B \-P 
.\"O option was specified, true if the file is a
.\"O link to a file of type \fIc\fR; if the 
.\"O .B \-L
.\"O option has been given, true
.\"O if \fIc\fR is `l'.  In other words, for symbolic links, 
.\"O .B \-xtype 
.\"O checks the type of the file that 
.\"O .B \-type
.\"O does not check.
.\"O 
.IP "\-xtype \fIc\fR"
検査の対象となるファイルがシンボリックリンクでないかぎり、
.B \-type
と同じである。ファイルがシンボリックリンクのときは、以下のように動作する。
.B \-H
や
.B \-P
オプションが指定された場合は、リンク先の
ファイルのタイプが \fIc\fR ならば、真を返す。他方、
.B \-L
オプションが指定されている場合は、\fIc\fR が `l' ならば、真を返す。
言い換えると、ファイルがシンボリックであるとき、
.B \-xtype
は、
.B \-type
が検査しない方のファイルのタイプを検査するわけだ。

.\"O .SS ACTIONS
.SS アクション
.\"O .IP "\-delete\fR"
.\"O Delete files; true if removal succeeded.  If the removal failed, an
.\"O error message is issued.  
.\"O If 
.\"O .B \-delete
.\"O fails, 
.\"O .BR find 's 
.\"O exit status will be nonzero
.\"O (when it eventually exits).  
.\"O Use of 
.\"O .B \-delete 
.\"O automatically turns on the 
.\"O .B \-depth 
.\"O option.   
.\"O 
.IP "\-delete\fR"
ファイルを消去する。消去に成功すれば、真を返す。消去に失敗した場合は、
エラーメッセージを表示する。
.B \-delete
に失敗した場合の
.B find
の終了ステータスは、ゼロ以外である (最終的に終了したときの
終了ステータスのことである)。
.B \-delete
を使用すると、自動的に
.B \-depth
オプションが有効になる。

.\"O .BR Warnings :
.\"O Don't forget that the find command line is 
.\"O evaluated as an expression, so putting 
.\"O .B \-delete 
.\"O first will make 
.\"O .B find
.\"O try to delete everything below the starting points you specified.
.BR 警告 :
忘れないでほしいが、find のコマンドラインは一つの式 (expression) として
評価されるので、一番最初に
.B \-delete
を指定すると、
.B find
は、指定された探索の開始点以下にあるものを、ことごとく消去しようとする。
.\"O When testing a 
.\"O .B find
.\"O command line that you later intend to use with 
.\"O .BR \-delete , 
.\"O you should explicitly specify 
.\"O .B \-depth 
.\"O in order to avoid later surprises.  Because
.\"O .B \-delete 
.\"O implies 
.\"O .BR \-depth , 
.\"O you cannot usefully use 
.\"O .B \-prune 
.\"O and 
.\"O .B \-delete
.\"O together. 
.\"O 
後で
.B \-delete
を付けて使用するつもりで、
.B find
のコマンドラインをテスト実行するときは、
.B \-depth
を明示的に指定するとよい。そうすれば、後で「こんなはずではなかった」と
慌てないですむ。
.B \-delete
を指定すると自動的に
.B \-depth
が有効になるので、
.B \-prune
を
.B \-delete
と一緒に使っても役に立たない。

.\"O .IP "\-exec \fIcommand\fR ;"
.\"O Execute \fIcommand\fR; true if 0 status is returned.  All following
.\"O arguments to
.\"O .B find
.\"O are taken to be arguments to the command until an argument consisting
.\"O of `;' is encountered.  The string `{}' is replaced by the current
.\"O file name being processed everywhere it occurs in the arguments to the
.\"O command, not just in arguments where it is alone, as in some versions
.\"O of
.\"O .BR find .
.IP "\-exec \fIcommand\fR ;"
\fIcommand\fR を実行する。\fIcommand\fR の返り値が 0 ならば、真を返す。
.B find
のコマンドラインで指定されたこれ以降の引き数は、`;' という引き数が現れるまで、
すべてコマンドに対する引き数と見なされる。文字列 `{}' は、
それがコマンドの引き数中に現れるすべての場所で、現在処理中のファイル名に
置き換えられる。
.B find
の一部の版とは違い、`{}' は引き数中の一ヶ所でしか使えないわけではない。
.\"O Both of these constructions might need to be escaped (with a `\e') or
.\"O quoted to protect them from expansion by the shell.  See the
.\"O .B EXAMPLES
.\"O section for examples of the use of the 
.\"O .B \-exec
.\"O option.  The specified
.\"O command is run once for each matched file.
.\"O The command is executed in the starting directory.   There are
.\"O unavoidable security problems surrounding use of the 
.\"O .B \-exec
.\"O action;
.\"O you should use the
.\"O .B \-execdir
.\"O option instead.  
.\"O 
こうした構文の要素 (訳注: すなわち、`{}' と `;') は、シェルによって
展開されないように、どちらも `\e' でエスケープするなり、
引用符で囲むなりする必要があるかもしれない。アクション
.B \-exec
の使用例については「用例」セクションを見てほしい。
指定したコマンドは、マッチした各ファイルに対して一回づつ実行される。
また、コマンドは
.B find
を実行したディレクトリで実行される。そこで、
.B \-exec
アクションの使用に関しては、セキュリティの問題が避けられないわけだ。
.B \-exec
の代わりに、
.B \-execdir
アクションを使用することをお勧めする。
(訳注: `;' は引き数なので、直前の引き数との間に空白が必要だ
ということに注意してほしい。)

.\"O .IP "\-exec \fIcommand\fR {} +"
.\"O This variant of the 
.\"O .B \-exec
.\"O action runs the specified command on the
.\"O selected files, but the command line is built by appending each
.\"O selected file name at the end; the total number of invocations of the
.\"O command will be much less than the number of matched files.  The
.\"O command line is built in much the same way that
.\"O .B xargs
.\"O builds its command lines.  Only one instance of `{}' is allowed within
.\"O the command.  The command is executed in the starting directory.
.\"O 
.IP "\-exec \fIcommand\fR {} +"
アクション
.B \-exec
のこの変形も、選択したファイルに対して指定したコマンドを実行するが、
コマンドラインを形成するとき、選択した各ファイル名をコマンドラインの末尾に
追加して行くという方法を取る (訳注: コマンドラインが長くなりすぎるときは、
処理するファイル名の数を適切に分割して、コマンドを複数回実行する)。
そのため、コマンドを呼び出す回数は、マッチしたファイルの数より
ずっと少なくてすむわけだ。コマンドラインの形成法は、
.B xargs
のコマンドライン形成法とほぼ同じである。`{}' はコマンドライン中の
一ヶ所でしか使えない。コマンドは
.B find
を実行したディレクトリで実行される。
(訳注: `+' は引き数なので、直前の引き数との間に空白が必要だ
ということに注意してほしい。)

.\"O .IP "\-execdir \fIcommand\fR ;"
.\"O .IP "\-execdir \fIcommand\fR {} +"
.\"O Like 
.\"O .BR \-exec ,
.\"O but the specified command is run from the subdirectory
.\"O containing the matched file, which is not normally the directory in
.\"O which you started 
.\"O .BR find .
.\"O This a much more secure method for invoking commands, as it avoids
.\"O race conditions during resolution of the paths to the matched files.
.IP "\-execdir \fIcommand\fR ;"
.IP "\-execdir \fIcommand\fR {} +"
.B \-exec
と似ているが、指定したコマンドはマッチしたファイルが存在するサブディレクトリで
実行される。そのサブディレクトリは、
.B find
を実行したディレクトリとは違うのが普通だ。
これはコマンドを呼び出す方法としてずっと安全である。マッチしたファイルの
パスを解決する際に、競合状態が起きるのを避けられるからだ。
.\"O As with the 
.\"O .B \-exec
.\"O action, the `+' form of 
.\"O .B \-execdir
.\"O will build a
.\"O command line to process more than one matched file, but any given
.\"O invocation of
.\"O .I command 
.\"O will only list files that exist in the same subdirectory.  If you use
.\"O this option, you must ensure that your 
.\"O .B $PATH
.\"O environment variable does not reference `.';
.\"O otherwise, an attacker can run any commands they like by leaving an
.\"O appropriately-named file in a directory in which you will run
.\"O .BR \-execdir .  
.\"O The same applies to having entries in 
.\"O .B $PATH
.\"O which are empty or which are not absolute directory names.
.\"O 
アクション
.B \-exec
の場合と同様、
.B \-execdir
の `+' を伴う形式でも、
マッチした複数のファイルを一度に処理するように、コマンドラインを
形成することになる。しかし、
.I command
のどの呼び出しにおいても、処理の対象としてリストされるファイルは、
同じサブディレクトリに存在するものだけである。このアクションを
使用するのなら、環境変数
.B $PATH
が `.' を参照しないようにしなければならない。
さもないと、悪意を持った攻撃者が、あなたが
.B \-execdir
を実行することになるディレクトリに適当な名前のファイルを
入れておくことによって、何でも好きなコマンドを実行できてしまうからである。
.B $PATH
の中に、空っぽのエントリや、絶対パスのディレクトリ名ではない
エントリがある場合にも、同じことが当てはまる。

.\"O .IP "\-fls \fIfile\fR"
.\"O True; like 
.\"O .B \-ls
.\"O but write to \fIfile\fR like 
.\"O .BR \-fprint .
.\"O The output file is always created, even if the predicate is never
.\"O matched.  
.\"O See the
.\"O .B UNUSUAL FILENAMES
.\"O section for information about how unusual characters in filenames are handled.
.\"O 
.IP "\-fls \fIfile\fR"
真を返す。
.B \-ls
と似ているが、
.B \-fprint
同様、出力を \fIfile\fR に書き出す点が違う。
出力用のファイルは、この述語の対象になるものが一つもなかった場合でも、
必ず作成される。
ファイル名中の変わった文字がどのように扱われるかについては、
「変わり者のファイル名」セクションを参照してほしい。

.\"O .IP "\-fprint \fIfile\fR"
.\"O True; print the full file name into file \fIfile\fR.  If \fIfile\fR
.\"O does not exist when \fBfind\fR is run, it is created; if it does
.\"O exist, it is truncated.  The file names ``/dev/stdout'' and
.\"O ``/dev/stderr'' are handled specially; they refer to the standard
.\"O output and standard error output, respectively.
.\"O The output file is always created, even if the predicate is never matched.
.\"O See the
.\"O .B UNUSUAL FILENAMES
.\"O section for information about how unusual characters in filenames are handled.
.\"O 
.IP "\-fprint \fIfile\fR"
真を返す。パス付きのファイル名をファイル \fIfile\fR に出力する。
\fBfind\fR の実行時に \fIfile\fR が存在しなければ、
新たに作成される。すでに存在していれば、元の中身が捨てられる。
ファイル名 ``/dev/stdout'' と ``/dev/stderr'' の扱いは特別で、
それぞれ標準出力と標準エラー出力を指している。
出力用のファイルは、この述語の対象になるものが一つもなかった場合でも、
必ず作成される。
ファイル名中の変わった文字がどのように扱われるかについては、
「変わり者のファイル名」セクションを参照してほしい。

.\"O .IP "\-fprint0 \fIfile\fR"
.\"O True; like 
.\"O .B \-print0 
.\"O but write to \fIfile\fR like 
.\"O .BR \-fprint .
.\"O The output file is always created, even if the predicate is never matched.
.\"O See the
.\"O .B UNUSUAL FILENAMES
.\"O section for information about how unusual characters in filenames are handled.
.\"O 
.IP "\-fprint0 \fIfile\fR"
真を返す。
.B \-print0
と似ているが、
.B \-fprint
同様、出力を \fIfile\fR に書き出す点が違う。
出力用のファイルは、この述語の対象になるものが一つもなかった場合でも、
必ず作成される。
ファイル名中の変わった文字がどのように扱われるかについては、
「変わり者のファイル名」セクションを参照してほしい。

.\"O .IP "\-fprintf \fIfile\fR \fIformat\fR"
.\"O True; like 
.\"O .B \-printf 
.\"O but write to \fIfile\fR like 
.\"O .BR \-fprint .
.\"O The output file is always created, even if the predicate is never matched.
.\"O See the
.\"O .B UNUSUAL FILENAMES
.\"O section for information about how unusual characters in filenames are handled.
.\"O 
.IP "\-fprintf \fIfile\fR \fIformat\fR"
真を返す。
.B \-printf
と似ているが、
.B \-fprint
同様、出力を \fIfile\fR に書き出す点が違う。
出力用のファイルは、この述語の対象になるものが一つもなかった場合でも、
必ず作成される。
ファイル名中の変わった文字がどのように扱われるかについては、
「変わり者のファイル名」セクションを参照してほしい。

.\"O .IP \-ls
.\"O True; list current file in 
.\"O .B ls \-dils
.\"O format on standard output.
.\"O The block counts are of 1K blocks, unless the environment variable
.\"O POSIXLY_CORRECT is set, in which case 512-byte blocks are used.
.\"O See the
.\"O .B UNUSUAL FILENAMES
.\"O section for information about how unusual characters in filenames are handled.
.\"O 
.IP \-ls
真を返す。処理対象のファイルを
.B ls \-dils
の書式で標準出力にリストする。ブロック数は、1 ブロック 1 キロバイトの
計算である。ただし、環境変数 POSIXLY_CORRECT が設定されている場合は、
1 ブロック 512 バイトが使用される。
ファイル名中の変わった文字がどのように扱われるかについては、
「変わり者のファイル名」セクションを参照してほしい。

.\"O .IP "\-ok \fIcommand\fR ;"
.\"O Like 
.\"O .B \-exec
.\"O but ask the user first.  If the user agrees, run the command.  Otherwise
.\"O just return false.  If the command is run, its standard input is redirected
.\"O from
.\"O .BR /dev/null .
.\"O 
.IP "\-ok \fIcommand\fR ;"
.B \-exec
と似ているが、まずユーザに問い合わせを行う。ユーザーが同意すれば、
コマンドを実行する。同意しなければ、何もせずに偽を返す。
コマンドを実行する際、そのコマンドの標準入力は、
.B /dev/null
に付け換えられる。

.\"O .IP
.\"O The response to the prompt is matched against a pair of regular
.\"O expressions to determine if it is an affirmative or negative
.\"O response.  This regular expression is obtained from the system if the
.\"O `POSIXLY_CORRECT' environment variable is set, or otherwise from 
.\"O .BR find 's 
.\"O message translations.  If the system has no suitable
.\"O definition, 
.\"O .BR find 's 
.\"O own definition will be used.   In either case, the interpretation of
.\"O the regular expression itself will be affected by the environment
.\"O variables 'LC_CTYPE' (character classes) and 'LC_COLLATE' (character
.\"O ranges and equivalence classes).
.\"O 
.\"O 
.\"O 
.IP
プロンプトに対するユーザの応答は、肯定・否定を表す一組の正規表現と照合して、
同意か、不同意かが判断される。この正規表現は、環境変数 `POSIXLY_CORRECT' が
設定されていれば、システムから得られるが、設定されていなければ、
.B find
のメッセージ・カタログから取得される。なお、システムに適切な定義が
存在しない場合は、
.B find
の持つ定義が使用されることになる。どちらの場合でも、正規表現そのものの
解釈は、環境変数 'LC_CTYPE' (文字クラスにについて) や 'LC_COLLATE'
(文字の範囲や等価クラスについて) の影響を受ける。

.\"O .IP "\-okdir \fIcommand\fR ;"
.\"O Like 
.\"O .B \-execdir
.\"O but ask the user first in the same way as for 
.\"O .BR \-ok .
.\"O If the user does not agree, just return false.  
.\"O If the command is run, its standard input is redirected from
.\"O .BR /dev/null .
.\"O 
.IP "\-okdir \fIcommand\fR ;"
.B \-execdir
と似ているが、
.B \-ok
と同じように、まずユーザに問い合わせを行う。
ユーザが同意しなければ、何もせずに偽を返す。
コマンドを実行する際、そのコマンドの標準入力は、
.B /dev/null
に付け換えられる。

.\"O .IP \-print
.\"O True; print the full file name on the standard output, followed by a
.\"O newline.   If you are piping the output of 
.\"O .B find 
.\"O into another program and there is the faintest possibility that the files 
.\"O which you are searching for might contain a newline, then you should 
.\"O seriously consider using the 
.\"O .B \-print0
.\"O option instead of 
.\"O .BR \-print .
.\"O See the
.\"O .B UNUSUAL FILENAMES
.\"O section for information about how unusual characters in filenames are handled.
.\"O 
.IP \-print
真を返す。パス付きのファイル名を標準出力に表示し、各ファイル名の後ろに
改行文字を付ける。
.B find
の出力をパイプを使って他のプログラムに渡している場合、検索対象の
ファイル名に改行文字が含まれている可能性が、わずかにでもあるならば、
アクション
.B \-print
ではなく、
.B \-print0
を使用することを真剣に考えるべきだ。
ファイル名中の変わった文字がどのように扱われるかについては、
「変わり者のファイル名」セクションを参照してほしい。

.\"O .IP \-print0
.\"O True; print the full file name on the standard output, followed by a
.\"O null character (instead of the newline character that 
.\"O .B \-print
.\"O uses).
.\"O This allows file names that contain newlines or other types of white
.\"O space to be correctly interpreted by programs that process the
.\"O \fBfind\fR output.  This option corresponds to the 
.\"O .B \-0
.\"O option of
.\"O .BR xargs .
.\"O 
.IP \-print0
真を返す。パス付きのファイル名を標準出力に表示し、各ファイル名の後ろに
.RB ( \-print
が改行文字を付けるのとは違って)
ヌル文字を付加する。
そうすることによって、\fBfind\fR の出力を処理するプログラムが、
改行文字などのホワイトスペースを含むファイル名を正しく解釈できる
ようになるわけだ。このアクションは、
.B xargs
の
.B \-0
オプションに呼応している。

.\"O .IP "\-printf \fIformat\fR"
.\"O True; print \fIformat\fR on the standard output, interpreting `\e'
.\"O escapes and `%' directives.  Field widths and precisions can be
.\"O specified as with the `printf' C function.  Please note that many of
.\"O the fields are printed as %s rather than %d, and this may mean that
.\"O flags don't work as you might expect.  This also means that the `\-'
.\"O flag does work (it forces fields to be left-aligned).  Unlike 
.\"O .BR \-print ,
.\"O .B \-printf
.\"O does not add a newline at the end of the string.  The escapes
.\"O and directives are:
.IP "\-printf \fIformat\fR"
真を返す。標準出力に \fIformat\fR を出力する。
そのとき \fIformat\fR 中の `\e' によるエスケープシーケンスと、`%' に
始まる書式指定子を認識して変換する。
フィールドの幅や精度は、C 言語の `printf' 関数と同じやり方で
指定できる。フィールドの多くは、(`printf' 関数流に言うと)
%d ではなく、%s として出力されることに注意していただきたい。
すなわち、フラグが期待通りに効かないかもしれないのだ。だが、
それはまた、`\-' フラグ (フィールドを強制的に左揃えにする) が
使えるということでもある。
.B \-print
とは違って、
.B \-printf
は文字列の末尾に改行文字を付加しない。
バックスラッシュ・エスケープシーケンスと書式指定子は以下のとおりである。
.\"O .RS
.\"O .IP \ea
.\"O Alarm bell.
.RS
.IP \ea
警告ベル。
.\"O .IP \eb
.\"O Backspace.
.IP \eb
バックスペース。
.\"O .IP \ec
.\"O Stop printing from this format immediately and flush the output.
.IP \ec
このフォーマットによる出力をただちに停止し、出力バッファを
フラッシュする。
.\"O .IP \ef
.\"O Form feed.
.IP \ef
フォームフィード文字。
.\"O .IP \en
.\"O Newline.
.IP \en
改行文字。
.\"O .IP \er
.\"O Carriage return.
.IP \er
復帰文字。
.\"O .IP \et
.\"O Horizontal tab.
.IP \et
水平タブ。
.\"O .IP \ev
.\"O Vertical tab.
.IP \ev
垂直タブ。
.\"O .IP \e0
.\"O ASCII NUL.
.IP \e0
ASCII NUL 文字。
.\"O .IP \e\e
.\"O A literal backslash (`\e').
.IP \e\e
バックスラッシュ文字そのもの (`\e')。
.\"O .IP \eNNN
.\"O The character whose ASCII code is NNN (octal).
.\"O .PP
.IP \eNNN
ASCII コードが NNN (8 進数) の文字。
.PP
.\"O A `\e' character followed by any other character is treated as an
.\"O ordinary character, so they both are printed.
バックスラッシュ文字 `\e' に上記以外の文字が続く場合、`\e' は
普通の文字として扱われる。従って、二文字とも表示されるわけだ。
.\"O .IP %%
.\"O A literal percent sign.
.IP %%
パーセント文字そのもの。
.\"O .IP %a
.\"O File's last access time in the format returned by the C `ctime' function.
.IP %a
ファイルの最終アクセス日時を C 言語の `ctime' 関数が返す形式で表示する。
.\"O .IP %A\fIk\fP
.\"O File's last access time in the format specified by \fIk\fR, which is
.\"O either `@' or a directive for the C `strftime' function.  The possible
.\"O values for \fIk\fR are listed below; some of them might not be
.\"O available on all systems, due to differences in `strftime' between
.\"O systems.  
.IP %A\fIk\fP
ファイルの最終アクセス日時を \fIk\fR で指定した書式で表示する。
\fIk\fR には `@' か、あるいは C 言語の `strftime' 関数の書式指定子を用いる。
\fIk\fR に指定可能な値を以下に列挙する。
一部のものは使えないシステムがあるかもしれないが、それはシステム間での
`strftime' の非互換性による。
.\"O .RS
.\"O .IP @
.\"O seconds since Jan. 1, 1970, 00:00 GMT, with fractional part.
.\"O .PP
.RS
.IP @
Jan. 1, 1970, 00:00 GMT からの経過秒数。小数点以下も表示する。
.PP
.\"O Time fields:
.\"O .IP H
.\"O hour (00..23)
時刻フィールド:
.IP H
時 (00..23)
.\"O .IP I
.\"O hour (01..12)
.IP I
時 (01..12)
.\"O .IP k
.\"O hour ( 0..23)
.IP k
時 ( 0..23)
.\"O .IP l
.\"O hour ( 1..12)
.IP l
時 ( 1..12)
.\"O .IP M
.\"O minute (00..59)
.IP M
分 (00..59)
.\"O .IP p
.\"O locale's AM or PM
.IP p
現在のロケールにおける AM/PM の相当語
.\"O .IP r
.\"O time, 12-hour (hh:mm:ss [AP]M)
.IP r
12 時間制の時刻 (hh:mm:ss [AP]M)
.\"O .IP S
.\"O Second (00.00 .. 61.00).  There is a fractional part.
.IP S
秒 (00.00 .. 61.00)。小数点以下も表示。
.\"O .IP T
.\"O time, 24-hour (hh:mm:ss)
.IP T
24 時間制の時刻 (hh:mm:ss)
.\"O .IP +
.\"O Date and time, separated by `+', for example
.\"O `2004\-04\-28+22:22:05.0'.  This is a GNU extension.  The time is
.\"O given in the current timezone (which may be affected by setting the TZ
.\"O environment variable).  The seconds field includes a fractional part.
.IP +
日付と時刻。両者の間は `2004\-04\-28+22:22:05.0' といった具合に '+' で
区切られる。これは GNU の拡張である。日時は現在のタイムゾーンのものが
使われる (それ故、環境変数 TZ の設定によって変わるかもしれない)。
秒には小数点以下も付く。
.\"O .IP X
.\"O locale's time representation (H:M:S)
.IP X
現在のロケールによる時刻表示 (H:M:S)
.\"O .IP Z
.\"O time zone (e.g., EDT), or nothing if no time zone is determinable
.\"O .PP
.IP Z
タイムゾーン (JST など)。タイムゾーンを決定できない場合は、何も表示しない。
.PP
.\"O Date fields:
.\"O .IP a
.\"O locale's abbreviated weekday name (Sun..Sat)
日付フィールド:
.IP a
現在のロケールによる曜日の短縮形 (Sun..Sat)
.\"O .IP A
.\"O locale's full weekday name, variable length (Sunday..Saturday)
.IP A
現在のロケールによる曜日のフル表示。長さは可変 (Sunday..Saturday)
.\"O .IP b
.\"O locale's abbreviated month name (Jan..Dec)
.IP b
現在のロケールによる月名の短縮形 (Jan..Dec)
.\"O .IP B
.\"O locale's full month name, variable length (January..December)
.IP B
現 在 のロケールによる月名のフル表示。長さは可変 (January..December)
.\"O .IP c
.\"O locale's date and time (Sat Nov 04 12:02:33 EST 1989).  The format is
.\"O the same as for 
.\"O .BR ctime (3)
.\"O and so to preserve compatibility with that format, there is no fractional part
.\"O in the seconds field.
.IP c
現在のロケールによる日付と時刻の表示 (Sat Nov 04 12:02:33 EST 1989)。
この表示形式は
.BR ctime (3)
のものと同じであり、
.BR ctime (3)
の形式との互換性を維持するためにそうなっている。秒には小数点以下が付かない。
.\"O .IP d
.\"O day of month (01..31)
.IP d
その月の何日目かの表示 (01..31)
.\"O .IP D
.\"O date (mm/dd/yy)
.IP D
日付 (mm/dd/yy)
.\"O .IP h
.\"O same as b
.IP h
b と同じ
.\"O .IP j
.\"O day of year (001..366)
.IP j
その年の何日目かの表示 (001..366)
.\"O .IP m
.\"O month (01..12)
.IP m
月 (01..12)
.\"O .IP U
.\"O week number of year with Sunday as first day of week (00..53)
.IP U
その年の何週目か (日曜日を週の始まりとする) (00..53)
.\"O .IP w
.\"O day of week (0..6)
.IP w
その週の何日目か (0..6)
.\"O .IP W
.\"O week number of year with Monday as first day of week (00..53)
.IP W
その年の何週目か (月曜日を週の始まりとする) (00..53)
.\"O .IP x
.\"O locale's date representation (mm/dd/yy)
.IP x
現在のロケールによる日付表示 (mm/dd/yy)
.\"O .IP y
.\"O last two digits of year (00..99)
.IP y
年の後ろ二桁 (00..99)
.\"O .IP Y
.\"O year (1970...)
.IP Y
年 (1970...)
.\"O .RE
.\"O .IP %b
.\"O The amount of disk space used for this file in 512-byte blocks. Since disk
.\"O space is allocated in multiples of the filesystem block size this is usually
.\"O greater than %s/512, but it can also be smaller if the file is a sparse file.
.RE
.IP %b
ファイルのディスクスペース使用量を 1 ブロック 512 バイトのブロック数で
表示する。割り当てられたディスクスペースは、ファイルシステムの
ブロックサイズの倍数になるので、この表示はたいてい %s/512 より大きい。
だが、ファイルが穴空きファイル (sparse file) の場合は、%s/512 より
小さくなることもある。
.\"O .IP %c
.\"O File's last status change time in the format returned by the C `ctime'
.\"O function.
.IP %c
ファイルの最終ステータス変更日時を C 言語の `ctime' 関数が返す
形式で表示する。
.\"O .IP %C\fIk\fP
.\"O File's last status change time in the format specified by \fIk\fR,
.\"O which is the same as for %A.
.IP %C\fIk\fP
ファイルの最終ステータス変更日時を \fIk\fR で指定した書式で表示する。
\fIk\fR は %A の場合と同じである。
.\"O .IP %d
.\"O File's depth in the directory tree; 0 means the file is a command line
.\"O argument.
.IP %d
ファイルがディレクトリツリー中でどの深さにあるかを示す。0 だったら、
そのファイルがコマンドライン引き数であるということだ。
.\"O .IP %D
.\"O The device number on which the file exists (the st_dev field of struct
.\"O stat), in decimal.
.IP %D
ファイルがどのデバイス上にあるかを十進数のデバイス番号で示す
(stat 構造体の st_dev フィールドに当たる)。
.\"O .IP %f
.\"O File's name with any leading directories removed (only the last element).
.IP %f
先行するディレクトリをすべて取り去ったファイル名 (すなわち、
最後の要素のみ表示)。
.\"O .IP %F
.\"O Type of the filesystem the file is on; this value can be used for
.\"O \-fstype.
.IP %F
ファイルが置かれているファイルシステムのタイプ。
ここで表示された値は -fstype の引き数に指定することができる。
.\"O .IP %g
.\"O File's group name, or numeric group ID if the group has no name.
.IP %g
ファイルのグループ名。グループ名が登録されていない場合は、
グループ ID 番号。
.\"O .IP %G
.\"O File's numeric group ID.
.IP %G
ファイルのグループ ID 番号。
.\"O .IP %h
.\"O Leading directories of file's name (all but the last element).
.\"O If the file name contains no slashes (since it is in the current 
.\"O directory) the %h specifier expands to ".".
.IP %h
ファイル名中の先行するディレクトリの部分 (すなわち、
最後の要素以外のすべて)。ファイル名にスラッシュが一つも含まれない場合は
(ファイルがカレントディレクトリにあるからだ)、
%h 書式指定子は "." に展開される。
.\"O .IP %H
.\"O Command line argument under which file was found.
.IP %H
探索の開始点を示すコマンドライン引き数で、その下に問題のファイルが
見つかったもの。
.\"O .IP %i
.\"O File's inode number (in decimal).
.IP %i
ファイルの inode 番号 (十進数表示)。
.\"O .IP %k
.\"O The amount of disk space used for this file in 1K blocks. Since disk space is
.\"O allocated in multiples of the filesystem block size this is usually greater
.\"O than %s/1024, but it can also be smaller if the file is a sparse file.
.IP %k
ファイルのディスクスペース使用量を 1 ブロック 1 キロバイトのブロック数で
表示する。割り当てられたディスクスペースは、ファイルシステムの
ブロックサイズの倍数になるので、この表示はたいてい %s/1024 より大きい。
だが、ファイルが穴空きファイル (sparse file) の場合は、%s/1024 より
小さくなることもある。
.\"O .IP %l
.\"O Object of symbolic link (empty string if file is not a symbolic link).
.IP %l
シンボリックリンクの参照先 (ファイルがシンボリックリンクでなかったら、
空文字列)。
.\"O .IP %m
.\"O File's permission bits (in octal).  This option uses the `traditional'
.\"O numbers which most Unix implementations use, but if your particular 
.\"O implementation uses an unusual ordering of octal permissions bits, you
.\"O will see a difference between the actual value of the file's mode and
.\"O the output of %m.   Normally you will want to have a leading
.\"O zero on this number, and to do this, you should use the 
.\"O .B #
.\"O flag (as in, for example, `%#m').
.IP %m
ファイルの許可属性ビット (8 進数表示)。このオプションが使用している
数値は、Unix のたいていの実装が使用している「伝統的な」数値である。
しかし、ご使用のシステムの実装では、8 進数で表示する許可属性ビットの並び方が
独特かもしれない。その場合は、ファイルの許可属性の実際の値と
%m の出力とが、相違することになる。この数値の先頭に 0 を付けて
表示したいこともよくあるが、そのためには、
.B #
フラグを使用すればよい (たとえば、`%#m' といった具合に)。
.\"O .IP %M 
.\"O File's permissions (in symbolic form, as for 
.\"O .BR ls ).  
.\"O This directive is supported in findutils 4.2.5 and later.
.IP %M
ファイルの許可属性
.RB ( ls
と同様のシンボルによる表現)。この書式指定子は findutils 4.2.5 以来
サポートされている。
.\"O .IP %n
.\"O Number of hard links to file.
.IP %n
ファイルのハードリンク数。
.\"O .IP %p
.\"O File's name.
.IP %p
ファイル名。
.\"O .IP %P
.\"O File's name with the name of the command line argument under which
.\"O it was found removed.
.IP %P
問題のファイルが、ある探索開始点の下にあった場合に、ファイル名から
探索開始点を示すコマンドライン引き数の部分を取り去ったもの。
.\"O .IP %s
.\"O File's size in bytes.
.IP %s
バイトで表示したファイルサイズ。
.\"O .IP %S 
.\"O File's sparseness.  This is calculated as (BLOCKSIZE*st_blocks /
.\"O st_size).  The exact value you will get for an ordinary file of a
.\"O certain length is system-dependent.  However, normally sparse files
.\"O will have values less than 1.0, and files which use indirect blocks
.\"O may have a value which is greater than 1.0.   The value used for
.\"O BLOCKSIZE is system-dependent, but is usually 512 bytes.   If the file
.\"O size is zero, the value printed is undefined.  On systems which lack
.\"O support for st_blocks, a file's sparseness is assumed to be 1.0.
.IP %S
ファイルの穴空き率 (sparseness)。この値は、(BLOCKSIZE*st_blocks / st_size) で
計算される。ある大きさの普通のファイルから得られる値は、
厳密に言うと、システム依存である。それでも、
穴空きファイルの穴空き率は、通常 1.0 未満になるし、間接ブロックを
使用しているファイルの穴空き率は、1.0 以上になることがある。
BLOCKSIZE に使われる値は、システム次第だが、普通は 512 バイトである。
ファイルサイズが 0 の場合、出力される値は不定である。
st_blocks をサポートしていないシステムでは、ファイルの穴空き率は、
1.0 と見なされる。
.\"O .IP %t
.\"O File's last modification time in the format returned by the C `ctime'
.\"O function.
.IP %t
ファイルの最終内容更新日時を、C 言語の `ctime' 関数が返す形式で表示する。
.\"O .IP %T\fIk\fP
.\"O File's last modification time in the format specified by \fIk\fR, 
.\"O which is the same as for %A.
.IP %T\fIk\fP
ファイルの最終内容更新日時を、\fIk\fR で指定した書式で表示する。
\fIk\fR は %A の場合と同じである。
.\"O .IP %u
.\"O File's user name, or numeric user ID if the user has no name.
.IP %u
ファイルの所有者名。所有者のユーザが登録されていない場合は、ユーザ ID 番号。
.\"O .IP %U
.\"O File's numeric user ID.
.IP %U
ファイルのユーザ ID 番号。
.\"O .IP %y
.\"O File's type (like in 
.\"O .BR "ls \-l" ), 
.\"O U=unknown type (shouldn't happen)
.IP %y
ファイルのタイプ
.RB ( "ls \-l"
の表現とほぼ同じ)。U=unknown type (これが表示されることはないはずだ）
.\"O .IP %Y
.\"O File's type (like %y), plus follow symlinks: L=loop, N=nonexistent
.\"O .PP
.IP %Y
ファイルのタイプ (表示は %y と同じ)。ただし、シンボリックリンクをたどる。
その場合、L=loop, N=nonexistent である。
.PP
.\"O A `%' character followed by any other character is discarded, but the
.\"O other character is printed (don't rely on this, as further format
.\"O characters may be introduced).  A `%' at the end of the format
.\"O argument causes undefined behaviour since there is no following
.\"O character.  In some locales, it may hide your door keys, while in
.\"O others it may remove the final page from the novel you are reading.
.\"O 
一個の `%' に上記以外の文字が続く場合、`%' 文字は捨てられるが、
それに続く文字は表示される (書式指定文字が新たに追加されるかもしれないので、
この動作を当てにしてはいけない)。書式指定の末尾に `%' があるときの動作は、
続く文字がないので不定である。ロケールによっては、お宅のドアの鍵が
見つからなくなるかもしれない。また、別のロケールでは、
お読みの小説の最後のページが消えてしまうかもしれない。

.\"O The %m and %d directives support the 
.\"O .B #
.\"O , 
.\"O .B 0 
.\"O and 
.\"O .B + 
.\"O flags, but the other directives do not, even if they
.\"O print numbers.  Numeric directives that do not support these flags
.\"O include 
.\"O .BR G , 
.\"O .BR U , 
.\"O .BR b , 
.\"O .BR D , 
.\"O .B  k 
.\"O and 
.\"O .BR n .
.\"O The `\-' format flag is supported and changes the alignment of a field
.\"O from right-justified (which is the default) to left-justified.
.\"O .PP
書式指定子 %m と %d はフラグ
.BR # ,
.BR 0 ,
.B +
をサポートするが、それ以外の書式指定子は、数値を表示する場合でも、
そうしたフラグをサポートしない。
.B #
などをサポートしない数値関係の書式指定子には、
.BR G , 
.BR U , 
.BR b , 
.BR D , 
.BR k , 
.B n
などがある。しかし、書式フラグ `\-' はサポートされており、フィールドを
(デフォルトの) 右揃えから左揃えに変更する。
.PP
.\"O See the
.\"O .B UNUSUAL FILENAMES
.\"O section for information about how unusual characters in filenames are handled.
.\"O 
.\"O 
.\"O .RE
ファイル名中の変わった文字がどのように扱われるかについては、
「変わり者のファイル名」セクションの説明を参照してほしい。


.RE
.\"O .IP \-prune
.\"O True; if the file is a directory, do not descend into it. If 
.\"O .B \-depth
.\"O is given, false; no effect.  Because 
.\"O .B \-delete
.\"O implies 
.\"O .BR \-depth , 
.\"O you cannot usefully use 
.\"O .B \-prune 
.\"O and 
.\"O .B \-delete together. 
.\"O 
.IP \-prune
真を返す。ファイルがディレクトリの場合は、そのディレクトリ以下に
降りて行かない。
.B \-depth
が指定してあるときは、偽を返し、何もしない。
.B \-delete
を指定すると自動的に
.B \-depth
が有効になるので、
.B \-prune 
を
.B \-delete
と一緒に使っても役に立たない。
.RS
.IP "[訳注]:" 8
バージョン 4.4.0 以降の \fBfind\fR では、\fB\-prune\fR の動作が
上記の説明と少し異なっている。すなわち、「\fB\-depth\fR が指定して
あるときは、何もしない」のは、それまでのバージョンと同じだが、
返り値は真を返している。ご自分で、
.B find . \-depth \-path \(dq./foo\(dq \-prune \-print
などを実行して、確認していただきたい。\fB\-prune\fR が真を返していれば、
ディレクトリ \fB./foo\fR が表示されるはずだ。
.RE

.\"O .IP "\-quit"
.\"O Exit immediately.  No child processes will be left running, but no more
.\"O paths specified on the command line will be processed.  For example,
.\"O .B find /tmp/foo /tmp/bar \-print \-quit
.\"O will print only
.\"O .BR /tmp/foo .
.\"O Any command lines which have been built up with
.\"O .B \-execdir ... {} +
.\"O will be invoked before 
.\"O .B find
.\"O exits.   The exit status may or may not be zero, depending on whether
.\"O an error has already occurred.  
.\"O 
.IP "\-quit"
直ちに終了する。動いている子プロセスを残したまま終了したりはしないが、
コマンドラインで指定したパスをこれ以上処理することはない。たとえば、
.B find /tmp/foo /tmp/bar \-print \-quit
は、
.B /tmp/foo
を表示するだけである。
.B \-execdir ... {} +
によってすでに作成されたコマンドラインがあれば、
.B find
が終了する前に、呼び出して実行する。終了ステータスは、
エラーがすでに起きているかどうかよって、0 のことも、0 でないこともある。

.\"O .SS UNUSUAL FILENAMES
.\"O Many of the actions of 
.\"O .B find
.\"O result in the printing of data which is under the control of other
.\"O users.  This includes file names, sizes, modification times and so
.\"O forth.  File names are a potential problem since they can contain any
.\"O character except `\e0' and `/'.  Unusual characters in file names can
.\"O do unexpected and often undesirable things to your terminal (for
.\"O example, changing the settings of your function keys on some
.\"O terminals).  Unusual characters are handled differently by various
.\"O actions, as described below.
.\"O 
.SS 変わり者のファイル名
多くの場合、
.B find
のアクションはデータを端末に表示することになるわけだが、それは
ほかのユーザが自由にできるデータであることもある。そうしたデータとは、
たとえば、ファイルの名前、サイズ、内容更新日時などだ。
この内、ファイル名は `\e0' と `/' 以外のどんな文字でも使えることに
なっているので、時として問題の種となる。ファイル名の中に
風変わりな文字があると、使用している端末に思いがけない、
そしてしばしば望ましくない影響をもたらすことがあるのだ (たとえば、
端末によっては、ファンクション・キーの現在の設定が変更されてしまう)。
風変わりな文字をどう扱うかはアクションによって異なっている。
それを以下に示そう。

.\"O .IP "\-print0, \-fprint0\"
.\"O Always print the exact filename, unchanged, even if the output is
.\"O going to a terminal.
.\"O 
.IP "\-print0, \-fprint0\"
常にファイル名に手を加えず、そのまま出力する。出力先が端末であっても、
同じである。

.\"O .IP "\-ls, \-fls"
.\"O Unusual characters are always escaped.  White space, backslash, and
.\"O double quote characters are printed using C-style escaping (for
.\"O example `\ef', `\e"').  Other unusual characters are printed using an
.\"O octal escape.  Other printable characters (for 
.\"O .B \-ls 
.\"O and 
.\"O .B \-fls 
.\"O these are the characters between octal 041 and 0176) are printed as-is.
.\"O 
.IP "\-ls, \-fls"
風変わりな文字は、常にエスケープされる。ホワイトスペース (空白、
改行、タブなど)、バックスラッシュ、ダブルクォートは C 言語式の
エスケープ表現で出力される (たとえば `\ef', `\e"')。
ほかの風変わりな文字には、エスケープした8 進数が使われる。
それ以外の表示可能な文字は
.RB ( \-ls
や
.B \-fls
とっては 8 進数の 041 から 0176 に当たる文字)、手を加えずに
そのまま出力される。

.\"O .IP "\-printf, \-fprintf"
.\"O If the output is not going to a terminal, it is printed as-is.
.\"O Otherwise, the result depends on which directive is in use.  The
.\"O directives %D, %F, %g, %G, %H, %Y, and %y expand to values which are
.\"O not under control of files' owners, and so are printed as-is.  The
.\"O directives %a, %b, %c, %d, %i, %k, %m, %M, %n, %s, %t, %u and %U have
.\"O values which are under the control of files' owners but which cannot
.\"O be used to send arbitrary data to the terminal, and so these are
.\"O printed as-is.  The directives %f, %h, %l, %p and %P are quoted.  This
.\"O quoting is performed in the same way as for GNU
.\"O .BR ls .   
.\"O This is not the same quoting mechanism as the one used for
.\"O .B \-ls 
.\"O and
.\"O .BR \-fls .   
.IP "\-printf, \-fprintf"
出力先が端末でない場合は、そのまま出力される。端末の場合は、
使用される書式指定子によって、結果は様々である。
書式指定子 %D, %F, %g, %G, %H, %Y, %y が展開される値は、
ファイルの所有者の管轄外なので、そのまま出力される。
書式指定子 %a, %b, %c, %d, %i, %k, %m, %M, %n, %s, %t, %u, %U の
値は、ファイル所有者の管轄内であるが、それを使って端末に勝手なデータを
送ることはできない。従って、そのまま出力される。
書式指定子  %f, %h, %l, %p, %P はクォートされる。このクォート方法は、GNU
.B ls
と同じである。言い換えると、
.B \-ls 
や
.B \-fls
におけるクォート方法とは違うということだ。
.\"O If you are able to decide what format to use for the output of 
.\"O .B find
.\"O then it is normally better to use `\e0' as a terminator
.\"O than to use newline, as file names can contain white space and newline
.\"O characters.  The setting of the `LC_CTYPE' environment
.\"O variable is used to determine which characters need to be quoted.
.\"O 
もし、
.B find
の出力に使う形式を自由に決めることができるならば、たいていの場合、
終端文字に改行ではなく、`\e0' を使用した方がよい。
ファイル名には空白や改行が含まれていることがあるからだ。
どの文字がクォートを必要とするかを判断するには、環境変数 `LC_CTYPE' の設定が
使用される。

.\"O .IP "\-print, \-fprint"
.\"O Quoting is handled in the same way as for 
.\"O .B \-printf
.\"O and 
.\"O .BR \-fprintf .
.\"O If you are using 
.\"O .B find
.\"O in a script or in a situation where the matched files might have
.\"O arbitrary names, you should consider using 
.\"O .B \-print0 
.\"O instead of
.\"O .BR \-print .
.\"O .P
.IP "\-print, \-fprint"
クォートは
.B \-printf
や
.B \-fprintf
と同じやり方で行われる。
.B find
をスクリプト中で使っている場合や、マッチするファイルが行儀の悪い
ファイル名を持っている可能性がある場合は、
.B \-print
ではなく、
.B \-print0
の使用を考えた方がよいだろう。
.P
.\"O The 
.\"O .B \-ok 
.\"O and 
.\"O .B \-okdir
.\"O actions print the current filename as-is.  This may change in a future release.
.\"O 
アクション
.B \-ok 
と
.B \-okdir
は、対象となるファイル名をそのまま手を加えずに出力する。この動作は、
将来のリリースで変わるかもしれない。

.\"O .SS OPERATORS
.\"O .P
.\"O Listed in order of decreasing precedence:
.\"O 
.SS 演算子
.P
演算子を優先順位の高いものから順に列挙する。

.\"O .IP "( \fIexpr\fR )"
.\"O Force precedence.  Since parentheses are special to the shell, you
.\"O will normally need to quote them.  Many of the examples in this manual
.\"O page use backslashes for this purpose: `\e(...\e)' instead of `(...)'.
.\"O 
.IP "( \fIexpr\fR )"
カッコの内側を先に処理する。カッコはシェルにとって特別な意味を
持っているので、普通はクォートする必要があるだろう。
このマニュアルページで挙げている例の多くでは、そのためにバックスラッシュを
使っている。すなわち `(...)' ではなく、`\e(...\e)' と書いているわけだ。

.\"O .IP "! \fIexpr\fR"
.\"O True if \fIexpr\fR is false.  This character will also usually need
.\"O protection from interpretation by the shell.
.\"O 
.IP "! \fIexpr\fR"
\fIexpr\fR が偽の場合、真になる。通常この記号も、シェルによって
解釈されないようにする必要があるだろう。

.\"O .IP "\-not \fIexpr\fR"
.\"O Same as ! \fIexpr\fR, but not POSIX compliant.
.\"O 
.IP "\-not \fIexpr\fR"
! \fIexpr\fR と同じだが、POSIX 準拠の表現ではない。

.\"O .IP "\fIexpr1 expr2\fR"
.\"O Two expressions in a row are taken to be joined with an 
.\"O implied "and"; \fIexpr2\fR is not evaluated if \fIexpr1\fR is false.
.\"O 
.IP "\fIexpr1 expr2\fR"
連続する二つの式は、and 結合と解釈される (明示されていないが、
式の間に "-a" があると見なされるわけだ)。\fIexpr1\fR が偽の場合、
\fIexpr2\fR は評価されない。

.\"O .IP "\fIexpr1\fR \-a \fIexpr2\fR"
.\"O Same as \fIexpr1 expr2\fR.
.\"O 
.IP "\fIexpr1\fR \-a \fIexpr2\fR"
\fIexpr1 expr2\fR と同じ。

.\"O .IP "\fIexpr1\fR \-and \fIexpr2\fR"
.\"O Same as \fIexpr1 expr2\fR, but not POSIX compliant.
.\"O 
.IP "\fIexpr1\fR \-and \fIexpr2\fR"
\fIexpr1 expr2\fR と同じだが、POSIX 準拠の表現ではない。

.\"O .IP "\fIexpr1\fR \-o \fIexpr2\fR"
.\"O Or; \fIexpr2\fR is not evaluated if \fIexpr1\fR is true.
.\"O 
.IP "\fIexpr1\fR \-o \fIexpr2\fR"
or 結合である。\fIexpr1\fR が真ならば、\fIexpr2\fR は評価されない。

.\"O .IP "\fIexpr1\fR \-or \fIexpr2\fR"
.\"O Same as \fIexpr1\fR 
.\"O .B \-o 
.\"O \fIexpr2\fR, but not POSIX compliant.
.\"O 
.IP "\fIexpr1\fR \-or \fIexpr2\fR"
\fIexpr1\fR
.B \-o
\fIexpr2\fR
と同じだが、POSIX 準拠の表現ではない。

.\"O .IP "\fIexpr1\fR , \fIexpr2\fR"
.\"O List; both \fIexpr1\fR and \fIexpr2\fR are always evaluated.  The
.\"O value of \fIexpr1\fR is discarded; the value of the list is the value
.\"O of \fIexpr2\fR. The comma operator can be useful for searching for
.\"O several different types of thing, but traversing the filesystem
.\"O hierarchy only once.  The
.\"O .B \-fprintf  
.\"O action can be used to list the various matched items into several
.\"O different output files.
.\"O 
.\"O 
.IP "\fIexpr1\fR , \fIexpr2\fR"
リストである。常に \fIexpr1\fR と \fIexpr2\fR の両方が評価される。
\fIexpr1\fR の値は捨てられ、\fIexpr2\fR の値がリスト全体の値になる。
コンマ演算子はいくつかの異なったタイプの対象を捜すとき便利だが、
ファイルシステム階層の探索は一度しか行われない。
異なった形でマッチした対象の一覧をそれぞれ別のファイルに書き出すには、
.B \-fprintf
を利用すればよい。

.IP "[訳注]:" 8
.B find
にとって演算子も引き数である。だから `(', `)', `!', `,' といった演算子も、
前後の引き数との間に空白が必要だということに気をつけてほしい。

.\"O .SH "STANDARDS CONFORMANCE"
.\"O For closest compliance to the POSIX standard, you should set the
.\"O POSIXLY_CORRECT environment variable.  The following options are
.\"O specified in the POSIX standard (IEEE Std 1003.1, 2003 Edition):
.\"O 
.SH "標準への準拠"
POSIX 標準にできるだけ準拠した動作を求めるのなら、環境変数
POSIXLY_CORRECT を設定するとよい。以下のオプションや述語は
POSIX standard (IEEE Std 1003.1, 2003 Edition) で規定されている。

.\"O .IP \fB\-H\fR
.\"O This option is supported.
.\"O 
.IP \fB\-H\fR
このオプションはサポートしている。

.\"O .IP \fB\-L\fR
.\"O This option is supported.
.\"O 
.IP \fB\-L\fR
このオプションもサポートしている。

.\"O .IP \fB\-name\fR
.\"O This option is supported, but POSIX conformance depends on the 
.\"O POSIX conformance of the system's 
.\"O .BR fnmatch (3) 
.\"O library function.  As of findutils-4.2.2, shell metacharacters
.\"O (`*', `?' or `[]' for example) will match a leading `.', because 
.\"O IEEE PASC interpretation 126 requires this.   This is a change from
.\"O previous versions of findutils.
.\"O 
.IP \fB\-name\fR
この述語はサポートしている。しかし、POSIX への準拠度は、システムの
.BR fnmatch (3)
ライブラリ関数がどの程度 POSIX に準拠しているかに依存している。
findutils-4.2.2 以来、シェルのメタ文字 (`*', `?', `[]' など) は、
ファイル名の先頭の `.' 文字にマッチするが、
これは IEEE PASC interpretation 126 がそう要求しているからである。
この動作は それ以前のバージョンの findutils と異なっている。 

.\"O .IP \fB\-type\fR
.\"O Supported.   POSIX specifies `b', `c', `d', `l', `p', `f' and `s'.
.\"O GNU find also supports `D', representing a Door, where the OS provides these.
.\"O 
.IP \fB\-type\fR
サポートしている。POSIX では `b', `c', `d', `l', `p', `f', `s' を
規定している。GNU find は、そのほか「ドア」を表す `D' もサポートしているが、
使えるのは OS がそうしたファイル・タイプを用意している場合のみである。

.\"O .IP \fB\-ok\fR
.\"O Supported.   
.\"O Interpretation of the response is according to the "yes" and "no"
.\"O patterns selected by setting the `LC_MESSAGES' environment variable.  
.\"O When the `POSIXLY_CORRECT' environment variable is set, these patterns
.\"O are taken system's definition of a positive (yes) or negative (no)
.\"O response. See the system's
.\"O documentation for \fBnl_langinfo\fP(3), in particular YESEXPR and
.\"O NOEXPR.    When `POSIXLY_CORRECT' is not set, the patterns are instead
.\"O taken from 
.\"O .BR find 's 
.\"O own message catalogue.
.\"O 
.IP \fB\-ok\fR
サポートしている。プロンプトに対する応答は、"yes"、"no" を表すパターンに
照らして解釈されるが、そのパターンは環境変数 `LC_MESSAGES' の設定によって
選択されたものである。 環境変数 `POSIXLY_CORRECT' が設定されている場合は、
何が肯定的応答 (yes) で、何が否定的応答 (no) かを決めているシステムの
定義が、このパターンに使用される。\fBnl_langinfo\fP(3) に関する
システムの文書、特に YESEXPR と NOEXPR の部分を参照してほしい。
`POSIXLY_CORRECT' が設定されていない場合は、パターンは、システムではなく、
.B find
自身のメッセージ・カタログから取得される。

.\"O .IP \fB\-newer\fR
.\"O Supported.  If the file specified is a symbolic link, it is always
.\"O dereferenced.  This is a change from previous behaviour, which used to 
.\"O take the relevant time from the symbolic link; see the HISTORY section
.\"O below.
.\"O 
.IP \fB\-newer\fR
サポートしている。指定されたファイルがシンボリックリンクの場合は、
必ずリンク先が参照される (訳注: 訳者としては、\fB\-P\fR、\fB\-L\fR、
\fB\-H\fR オプションの説明から言って、「\fB\-L\fR や \fB\-H\fR オプションが
有効な場合は」という条件が必要ではないかと思う)。以前のバージョンでは、
シンボリックリンクそのものから比較に使う日時を取得していたのだが、
動作がこのように変更になった。後述の「履歴」セクションも参照してほしい。

.\"O .IP \fB\-perm\fR
.\"O Supported.  If the POSIXLY_CORRECT environment variable is not set,
.\"O some mode arguments (for example +a+x ) which are not valid in POSIX
.\"O are supported for backward-compatibility.
.\"O 
.IP \fB\-perm\fR
サポートしている。環境変数 POSIXLY_CORRECT が設定されていない場合は、
POSIX では無効な +a+x といったモード指定の引き数も、
後方互換のために使用できるようになっている。

.\"O .IP "Other predicates"
.\"O The predicates
.\"O .BR \-atime ,
.\"O .BR \-ctime ,
.\"O .BR \-depth ,
.\"O .BR \-group ,
.\"O .BR \-links ,
.\"O .BR \-mtime ,
.\"O .BR \-nogroup ,
.\"O .BR \-nouser ,
.\"O .BR \-print ,
.\"O .BR \-prune ,
.\"O .BR \-size ,
.\"O .BR \-user  
.\"O and 
.\"O .B \-xdev
.\"O are all supported.
.\"O 
.IP "その他の述語"
.BR \-atime ,
.BR \-ctime ,
.BR \-depth ,
.BR \-group ,
.BR \-links ,
.BR \-mtime ,
.BR \-nogroup ,
.BR \-nouser ,
.BR \-print ,
.BR \-prune ,
.BR \-size ,
.BR \-user  
.B \-xdev
といった述語は、すべてサポートしている。

.\"O .P
.\"O The POSIX standard specifies parentheses `(', `)', negation `!' and the
.\"O `and' and `or' operators (
.\"O .BR \-a , 
.\"O .BR \-o ).   
.P
POSIX 標準は、カッコ `(', `)'、否定 `!'、それに and と or 演算子
.RB ( \-a ,
.BR \-o )
を規定している。
.\"O .P
.\"O All other options, predicates, expressions and so forth are extensions 
.\"O beyond the POSIX standard.  Many of these extensions are not unique to 
.\"O GNU find, however.
.P
上記以外のすべてのオプション、述語、式などは、POSIX 標準にない拡張である。
とは言え、そうした拡張の多くは、GNU find に特有なものではない。
.\"O .P
.\"O The POSIX standard requires that 
.\"O .B find 
.\"O detects loops:
.P
POSIX 標準によれば、
.B find
はループを検出することになっている。
.\"O .IP
.\"O The 
.\"O .B find
.\"O utility shall detect infinite loops; that is, entering a
.\"O previously visited directory that is an ancestor of the last file
.\"O encountered. When it detects an infinite loop, find shall write a
.\"O diagnostic message to standard error and shall either recover its
.\"O position in the hierarchy or terminate.
.IP
.B find
ユーティリティは無限ループを検出しなければならない。無限ループとは、
探索中に入ったディレクトリが、すでに探索済みで、最後に処理の対象にした
ファイルの上位ディレクトリに当たることである。無限ループを検出した場合、
find は何が起きたかを告げる診断メッセージを標準エラーに表示し、
探索位置をディレクトリ階層上の元の位置に戻すか、終了すべきである。
.\"O .P
.\"O GNU 
.\"O .B find 
.\"O complies with these requirements.  The link count of
.\"O directories which contain entries which are hard links to an ancestor
.\"O will often be lower than they otherwise should be.  This can mean that
.\"O GNU find will sometimes optimise away the visiting of a subdirectory
.\"O which is actually a link to an ancestor.  Since
.\"O .B find
.\"O does not actually enter such a subdirectory, it is allowed to avoid
.\"O emitting a diagnostic message.  Although this behaviour may be
.\"O somewhat confusing, it is unlikely that anybody actually depends on
.\"O this behaviour.  If the leaf optimisation has been turned off with
.\"O .BR \-noleaf ,
.\"O the directory entry will always be examined and the diagnostic message
.\"O will be issued where it is appropriate.  Symbolic links cannot be used
.\"O to create filesystem cycles as such, but if the 
.\"O .B \-L
.\"O option or the
.\"O .B \-follow
.\"O option is in use, a diagnostic message is issued when 
.\"O .B find 
.\"O encounters a loop of symbolic links.  As with loops containing hard
.\"O links, the leaf optimisation will often mean that 
.\"O .B find
.\"O knows that it doesn't need to call 
.\"O .I stat()
.\"O or
.\"O .I chdir() 
.\"O on the symbolic link, so this diagnostic is frequently not necessary.
.P
GNU
.B find
はこうした要求に従っている。ディレクトリがその中に
上位ディレクトリへのハードリンクであるエントリを含んでいる場合は、
ディレクトリのリンク数が、本来ならそうなるはずの数よりも
たいてい少なくなるものだ。その結果、
GNU find が時として、実際には上位ディレクトリへのハードリンクである
サブディレクトリを、最適化の副作用で探索しないですますことが起こりえる。
その場合、
.B find
は確かにそうしたディレクトリに足を踏み入れないわけだから、
「ループ検出」の診断メッセージを出さないでもよいことになっている。
これはかなり紛らわしい動作かもしれないが、
.B find
のこの動作を本気で当てにしている人もいないことだろう。
.B \-noleaf
オプションを指定して、ディレクトリ・ツリー上の葉っぱを簡易判別する
最適化を無効にしている場合は (訳注: \fB\-noleaf\fR 参照) 、
こうしたディレクトリ・エントリに対する検査も省略されずに行われ、
必要ならば、診断メッセージが表示されることになる。
シンボリックリンクを使うと、そういったファイルシステム上の循環は
起きないが、
.B \-L
や
.B \-follow
を使用している場合は、探索中に
シンボリックリンクのループに出会えば、診断メッセージが表示される。
ハードリンクを含むループの場合と同様、葉っぱを簡易判別する最適化を
使用していると、たいていの場合、シンボリックリンクに対して
.I stat()
や
.I chdir()
を呼び出すまでもないと、
.B find
が承知していることになるので、
ループの診断は不要になることが多い。
.IP "[訳注]:" 8
Linux や BSD 系 Unix のようにディレクトリへのハードリンクを
作成できない Unix もある。その場合は、上記のハードリンクに関する
解説は当てはまらない。
.\"O .P
.\"O The 
.\"O .B \-d
.\"O option is supported for compatibility with various BSD systems,
.\"O but you should use the POSIX-compliant option 
.\"O .B \-depth
.\"O instead.
.P
.B \-d
オプションは BSD システム各種との互換性のためにサポートされている。
だが、POSIX に準拠している
.B \-depth
オプションの方を使った方がよい。
.\"O .P
.\"O The POSIXLY_CORRECT environment variable does not affect the behaviour
.\"O of the 
.\"O .B \-regex 
.\"O or 
.\"O .B \-iregex 
.\"O tests because those tests aren't specified in the POSIX standard.
.P
環境変数 POSIXLY_CORRECT は、判別式
.B \-regex
や
.B \-iregex
の動作に影響を与えない。そうした判別式は、POSIX 標準で規定されていない
からである。
.\"O .SH "ENVIRONMENT VARIABLES"
.\"O 
.SH "環境変数"

.\"O .IP LANG
.\"O Provides a default value for the internationalization variables that
.\"O are unset or null.
.\"O 
.IP LANG
国際化関係の環境変数のうち、値が設定されていなかったり、null だったりする
変数に対して、LANG の値がデフォルトの値になる。

.\"O .IP LC_ALL
.\"O If set to a non-empty string value, override the values of all the
.\"O other internationalization variables.
.\"O 
.IP LC_ALL
これが空文字列以外の値に設定されていると、その値が国際化関係の
他のすべての環境変数の値よりも優先される。

.\"O .IP LC_COLLATE
.\"O The POSIX standard specifies that this variable affects the pattern
.\"O matching to be used for the 
.\"O .B \-name
.\"O option.   GNU find uses the 
.\"O .BR fnmatch (3) 
.\"O library function, and so support for `LC_COLLATE' depends on the
.\"O system library.    This variable also affects the interpretation of
.\"O the response to 
.\"O .BR \-ok;
.\"O while the `LC_MESSAGES' variable selects the actual pattern used to
.\"O interpret the response to 
.\"O .BR \-ok ,
.\"O the interpretation of any bracket expressions in the pattern will be
.\"O affected by `LC_COLLATE'.
.\"O 
.IP LC_COLLATE
POSIX の規定によれば、この環境変数は判別式
.B \-name
で使われるパターンマッチングに影響する。
GNU find は
.BR fnmatch (3)
ライブラリ関数を使用しているので、LC_COLLATE への対応は
システムのライブラリ次第である。また、この変数はアクション
.B \-ok
に対する応答の解釈にも影響を及ぼす。
.B \-ok
に対する応答の解釈に使用される実際のパターンは LC_MESSAGES 変数によって
選択されるのだが、パターン中に角カッコ式が現れた場合の解釈は、LC_COLLATE の
影響を受けるのである。

.\"O .IP LC_CTYPE 
.\"O This variable affects the treatment of character classes used in
.\"O regular expressions and also with 
.\"O the 
.\"O .B \-name
.\"O test, if the system's 
.\"O .BR fnmatch (3) 
.\"O library function supports this.  This variable also affects the 
.\"O interpretation of any character classes in the regular expressions
.\"O used to interpret the response to the prompt issued by 
.\"O .BR \-ok .
.\"O The `LC_CTYPE' environment variable will
.\"O also affect which characters are considered to be unprintable when
.\"O filenames are printed; see the section UNUSUAL FILENAMES.
.\"O 
.IP LC_CTYPE
この環境変数は、正規表現で使用される文字クラスの扱いに影響する。
システムの
.BR fnmatch (3)
ライブラリ関数がこの変数に対応している場合は、判別式
.B \-name
の使用にともなう文字クラスの扱いにも影響を及ぼす。また、この変数は、
アクション
.B \-ok
が出すプロンプトに対してユーザが応答する際、諾否の判断に使用される
正規表現の文字クラスの解釈にも関係する。さらにまた、環境変数 LC_CTYPE は、
ファイル名が表示されるとき、どの文字を表示不可能 (unprintable) と見なすかにも
かかわることになる。「変わり者のファイル名」セクションを参照してほしい。

.\"O .IP LC_MESSAGES
.\"O Determines the locale to be used for internationalised messages.  If
.\"O the `POSIXLY_CORRECT' environment variable is set, this also
.\"O determines the interpretation of the response to the prompt made by the
.\"O .BR \-ok
.\"O action.
.\"O 
.IP LC_MESSAGES
国際化されたメッセージのために使用されるロケールを決める。
また、環境変数 POSIXLY_CORRECT が設定されている場合は、アクション
.B \-ok
が出したプロンプトに対する応答を、どう解釈するかもこの変数が決定する。

.\"O .IP NLSPATH
.\"O Determines the location of the internationalisation message catalogues.
.\"O 
.IP NLSPATH
国際化メッセージ・カタログを置く場所を決める。

.\"O .IP PATH
.\"O Affects the directories which are searched to find the executables 
.\"O invoked by 
.\"O .BR \-exec , 
.\"O .BR \-execdir , 
.\"O .B \-ok
.\"O and 
.\"O .BR \-okdir .
.\"O 
.IP PATH
.BR \-exec ,
.BR \-execdir ,
.BR \-ok ,
.B \-okdir
によって呼び出される実行ファイルを捜すために検索するディレクトリに影響する。

.\"O .IP POSIXLY_CORRECT
.\"O Determines the block size used by 
.\"O .B \-ls
.\"O and 
.\"O .BR \-fls . 
.\"O If 
.\"O .B POSIXLY_CORRECT
.\"O is set, blocks are units of 512 bytes.  Otherwise
.\"O they are units of 1024 bytes.   
.IP POSIXLY_CORRECT
.B \-ls
や
.B \-fls
が使用するブロックサイズを決める。
.B POSIXLY_CORRECT
が設定されているときは、1 ブロック 512 バイト、
設定されていないときは、1 ブロック 1024 バイトである。
.\"O .IP
.\"O Setting this variable also turns off
.\"O warning messages (that is, implies
.\"O .BR \-nowarn )
.\"O by default, because POSIX requires that apart from
.\"O the output for 
.\"O .BR \-ok ,
.\"O all messages printed on stderr are diagnostics and must result in a
.\"O non-zero exit status.
.IP
また、この変数を設定すると、警告メッセージを出さないのがデフォルトになる
(すなわち、
.B \-nowarn
になるわけだ)。なぜならば、POSIX の規定では、
.B \-ok
の出すプロンプトを除いて、標準エラーに出力されるメッセージはすべて
問題が起きたことを知らせるものであり、そのときの終了ステータスは
0 以外でなければならないからである。
.\"O .IP
.\"O When POSIXLY_CORRECT is not set, 
.\"O .B \-perm
.\"O +zzz
.\"O is treated just like 
.\"O .B \-perm 
.\"O /zzz
.\"O if 
.\"O +zzz is not a valid symbolic mode.  When POSIXLY_CORRECT is set, such
.\"O constructs are treated as an error.
.IP
POSIXLY_CORRECT が設定されていない場合、
+zzz が許可属性を表すシンボルとしてそれ自体有効な表現であるときを除き、
.B \-perm
+zzz は
.B \-perm
/zzz とまったく同じように扱われる。
POSIXLY_CORRECT が設定されている場合は、許可属性の前に '+' や '/' を取る
こうした形式は、エラーとして処理される (訳注: もちろん、+zzz がそれ自体
有効なシンボル表現であるときを除く。判別式
.B \-perm +\fImode\fR
の説明を参照)。
.\"O .IP
.\"O When POSIXLY_CORRECT is set, the response to the prompt made by the 
.\"O .B \-ok 
.\"O action is interpreted according to the system's message catalogue, as
.\"O opposed to according to 
.\"O .BR find 's 
.\"O own message translations.
.\"O 
.IP
POSIXLY_CORRECT が設定されていると、アクション
.B \-ok
が出すプロンプトに対するユーザの応答を解釈する際に、
.B find
の持つメッセージ・カタログではなく、システムのメッセージ・カタログが
参照される。
.\"O .IP TZ
.\"O Affects the time zone used for some of the time-related format
.\"O directives of 
.\"O .B \-printf 
.\"O and 
.\"O .BR \-fprintf .
.IP TZ
タイムゾーンに影響する。タイムゾーンは、
.B \-printf
や
.B \-fprintf
の日時に関係する一部の書式指定子で使用される。
.\"O .SH "EXAMPLES"
.SH "用例"
.\"O .nf
.\"O .B find /tmp \-name core \-type f \-print | xargs /bin/rm \-f
.\"O 
.nf
.B find /tmp \-name core \-type f \-print | xargs /bin/rm \-f

.\"O .fi
.\"O Find files named 
.\"O .B core
.\"O in or below the directory 
.\"O .B /tmp 
.\"O and delete them.  Note that this will work incorrectly if there are 
.\"O any filenames containing newlines, single or double quotes, or spaces.
.fi
.B /tmp
ディレクトリ以下に
.B core
という名前のファイルを捜して、それを消去する。名前の中に改行、
シングルクォート、ダブルクォート、スペースなどを含むファイルがあるときは、
正しく動作しないことに注意すること。
.\"O .P
.\"O .B find /tmp \-name core \-type f \-print0 | xargs \-0 /bin/rm \-f
.\"O 
.P
.B find /tmp \-name core \-type f \-print0 | xargs \-0 /bin/rm \-f

.\"O .fi
.\"O Find files named 
.\"O .B core
.\"O in or below the directory 
.\"O .B /tmp 
.\"O and delete them, processing filenames in such a way that file or
.\"O directory names containing single or double quotes, spaces or newlines
.\"O are correctly handled.  The
.\"O .B \-name 
.\"O test comes before the 
.\"O .B \-type
.\"O test in order to avoid having to call 
.\"O .B stat(2) 
.\"O on every file.
.\"O 
.fi
.B /tmp
ディレクトリ以下に
.B core
という名前のファイルを捜して、それを消去する。ファイル名の処理に当たっては、
ファイルやディレクトリの名前にシングルクォート、ダブルクォート、空白、
改行などが含まれていても、適切に扱われるようにする。判別式
.B \-name
を
.B \-type
の前に置いているのは、すべてのファイルに対して
.B stat(2)
システムコールを行う無駄を省くためである。

.\"O .P
.\"O .nf
.\"O .B find . \-type f \-exec file \(aq{}\(aq \e\;
.\"O 
.P
.nf
.B find . \-type f \-exec file \(aq{}\(aq \e\;
 
.\"O .fi
.\"O Runs `file' on every file in or below the current directory.  Notice
.\"O that the braces are enclosed in single quote marks to protect them
.\"O from interpretation as shell script punctuation.  The semicolon is
.\"O similarly protected by the use of a backslash, though single quotes
.\"O could have been used in that case also.
.\"O 
.fi
カレントディレクトリ以下のあらゆるファイルに対して file コマンドを
実行する。中カッコをシングルクォートで囲んでいることに注目してほしい。
シェルスクリプトのブロック区切り記号として解釈されないようにするためである。
同様に、セミコロンもバックスラッシュを使って保護している。こちらにも
シングルクォートを使用してもよい。

.\"O .P
.\"O .nf
.\"O .B find /  \e
.\"O .B \e( \-perm \-4000 \-fprintf /root/suid.txt "%#m %u %p\en" \e) , \e
.\"O .B \e( \-size +100M \-fprintf /root/big.txt  "%\-10s %p\en" \e)
.\"O 
.P
.nf
.B find /  \e
.B \e( \-perm \-4000 \-fprintf /root/suid.txt \(dq%#m %u %p\en\(dq \e) , \e
.B \e( \-size +100M \-fprintf /root/big.txt  \(dq%\-10s %p\en\(dq \e)

.\"O .fi
.\"O Traverse the filesystem just once, listing setuid files and
.\"O directories into
.\"O .B /root/suid.txt
.\"O and large files into 
.\"O .BR /root/big.txt .
.\"O 
.fi
全ファイルシステムを一回だけ探索して、setuid ビットの立っている
ファイルやディレクトリのリストを
.B /root/suid.txt
に、サイズの大きいファイルのリストを
.B /root/big.txt
に出力する。

.\"O .P
.\"O .nf
.\"O .B find $HOME  \-mtime 0
.\"O 
.P
.nf
.B find $HOME  \-mtime 0

.\"O .fi
.\"O Search for files in your home directory which have been modified in
.\"O the last twenty-four hours.  This command works this way because the
.\"O time since each file was last modified is divided by 24 hours and any 
.\"O remainder is discarded.  That means that to match 
.\"O .B \-mtime 
.\"O .BR 0 ,
.\"O a file will have to have a modification in the past which is less than
.\"O 24 hours ago.
.\"O 
.fi
ここ 24 時間の内に内容が更新されたファイルをホームディレクトリ以下で
検索する。このコマンドがそういう動作になるのは、それぞれのファイルが
最後に更新されてから現在までの経過時間が、24 で割り算され、余りは
切り捨てられるからである。そこで、ファイルが
.B \-mtime 0
にマッチするためには、過去 24 時間未満の期間内に内容が更新されて
いなければならないことになる。

.\"O .P
.\"O .nf
.\"O .B find /sbin /usr/sbin -executable \e! -readable \-print
.\"O 
.P
.nf
.B find /sbin /usr/sbin -executable \e! -readable \-print

.\"O .fi
.\"O Search for files which are executable but not readable.
.\"O 
.fi
実行可能でありながら、読み出し不可能なファイルを捜す。

.\"O .P
.\"O .nf
.\"O .B find . \-perm 664
.\"O 
.P
.nf
.B find . \-perm 664

.\"O .fi
.\"O Search for files which have read and write permission for their owner,
.\"O and group, but which other users can read but not write to.  Files
.\"O which meet these criteria but have other permissions bits set (for
.\"O example if someone can execute the file) will not be matched.
.\"O 
.fi
ファイルの所有者とグループは読むことも書くことも可能だが、
他のユーザは読み出しのみ可能で書き込みはできないファイルを捜す。
そうした条件を満たすものの、他の許可属性ビットも立っているような
(たとえば、そのファイルを実行できる人がいるような) ファイルは、
この式にマッチしない。

.\"O .P
.\"O .nf
.\"O .B find . \-perm \-664
.\"O 
.P
.nf
.B find . \-perm \-664

.\"O .fi
.\"O Search for files which have read and write permission for their owner
.\"O and group, and which other users can read, without regard to the
.\"O presence of any extra permission bits (for example the executable
.\"O bit).  This will match a file which has mode 0777, for example.
.\"O 
.fi
ファイルの所有者とグループは読むことも書くことも可能であり、
他のユーザも読むことは可能であるようなファイルを捜す。
それ以外の許可属性ビットについては (たとえば、実行許可ビット)、
立っていてもいなくてもかまわない。この条件は、たとえば、
0777 のモードを持つファイルにもマッチすることになる。

.\"O .P
.\"O .nf
.\"O .B find . \-perm /222
.\"O 
.P
.nf
.B find . \-perm /222

.\"O .fi
.\"O Search for files which are writable by somebody (their owner, or
.\"O their group, or anybody else).
.\"O 
.fi
誰かが書き込めるようなファイルを捜す (書き込めるのは、ファイルの所有者でも、
グループでも、他の一般ユーザでもよい)。

.\"O .P
.\"O .nf
.\"O .B find . \-perm /220
.\"O .B find . \-perm /u+w,g+w
.\"O .B find . \-perm /u=w,g=w
.\"O 
.P
.nf
.B find . \-perm /220
.B find . \-perm /u+w,g+w
.B find . \-perm /u=w,g=w

.\"O .fi
.\"O All three of these commands do the same thing, but the first one uses
.\"O the octal representation of the file mode, and the other two use the
.\"O symbolic form.  These commands all search for files which are
.\"O writable by either their owner or their group.  The files don't have
.\"O to be writable by both the owner and group to be matched; either will
.\"O do.
.\"O 
.fi
上記のコマンドは三つとも同じ動作をする。最初のものは、ファイルの許可属性を
8 進数で表し、後の二つは、シンボルによる表現形式を使っている。
こうしたコマンドはどれも、ファイルの所有者かグループが
書き込み可能であるようなファイルを捜す。所有者とグループの両方が
書き込み可能な場合しか、マッチしないわけではない。どちらか片方だけでも
十分である。

.\"O .P
.\"O .nf
.\"O .B find . \-perm \-220
.\"O .B find . \-perm \-g+w,u+w
.\"O 
.P
.nf
.B find . \-perm \-220
.B find . \-perm \-g+w,u+w

.\"O .fi
.\"O Both these commands do the same thing; search for files which are
.\"O writable by both their owner and their group.
.\"O 
.fi
この二つのコマンドは同じ動作をする。すなわち、ファイルの所有者と
グループの両方が書き込み可能であるようなファイルを捜す。

.\"O .P
.\"O .nf
.\"O .B find . \-perm \-444 \-perm /222 ! \-perm /111
.\"O .B find . \-perm \-a+r \-perm /a+w ! \-perm /a+x
.\"O 
.P
.nf
.B find . \-perm \-444 \-perm /222 ! \-perm /111
.B find . \-perm \-a+r \-perm /a+w ! \-perm /a+x

.\"O .fi
.\"O These two commands both search for files that are readable for
.\"O everybody (
.\"O .B \-perm \-444 
.\"O or 
.\"O .BR "\-perm \-a+r" ), 
.\"O have at least one write bit
.\"O set (
.\"O .B \-perm /222 
.\"O or 
.\"O .BR "\-perm /a+w" ) 
.\"O but are not executable for anybody (
.\"O .B ! \-perm /111 
.\"O and 
.\"O .B ! \-perm /a+x 
.\"O respectively).
.\"O 
.fi
この二つのコマンドは両方とも次のような条件のファイルを捜す。
その条件とは、誰にでも読み出すことが可能で
.RB ( "\-perm \-444"
や
.B "\-perm \-a+r"
がそれにに当たる)、
書き込み許可ビットが少なくとも一つは立っているが
.RB ( "\-perm /222"
や 
.BR "\-perm /a+w" )、
誰にも実行することはできない
.RB ( "! \-perm /111"
や
.BR "! \-perm /a+x" )
というものである。

.\"O .P
.\"O .nf
.\"O .B cd /source-dir
.\"O .B find . \-name .snapshot \-prune \-o \e( \e! \-name "*~" \-print0 \e)|
.\"O .B cpio \-pmd0   /dest-dir
.\"O 
.P
.nf
.B cd /source-dir
.B find . \-name .snapshot \-prune \-o \e( \e! \-name "*~" \-print0 \e)|
.B cpio \-pmd0   /dest-dir

.\"O .fi 
.\"O This command copies the contents of 
.\"O .B /source-dir
.\"O to 
.\"O .BR /dest-dir ,
.\"O but omits files and directories named 
.\"O .B .snapshot 
.\"O (and anything in them).  It also omits files or directories whose name
.\"O ends in
.\"O .BR ~ ,
.\"O but not their contents.  The construct 
.\"O .B \-prune \-o \e( ... \-print0 \e)
.\"O is quite common.  The idea here is that the expression before 
.\"O .B \-prune 
.\"O matches things which are to be pruned.  However, the 
.\"O .B \-prune 
.\"O action itself returns true, so the following 
.\"O .B \-o 
.\"O ensures that the right hand side is evaluated only for those
.\"O directories which didn't get pruned (the contents of the pruned
.\"O directories are not even visited, so their contents are irrelevant).
.fi
このコマンドは
.B /source-dir
の中身を
.B /dest-dir
にコピーするが、その際
.B .snapshot
という名前のファイルやディレクトリ (及び、そのディレクトリ内のすべて) を
除外する。さらにこのコマンドは、名前の末尾に
.B ~
が付くファイルやディレクトリも除外するが、そうしたディレクトリの
中身については除外の対象にしない。
.B \-prune \-o \e( ... \-print0 \e)
という表現はかなりよく利用される。ここで肝腎なのは、
.B \-prune
の前にある式がマッチする項目は、
.B find
の探索の対象から
.B \-prune
によって取り除かれる (訳注: pruned、枝刈りされる) ということである。
しかし、アクション
.B \-prune
自体は返り値として真を返すので、直後に続く
.B \-o
によって、
探索の対象から取り除かれなかったディレクトリに対してだけ
.B \-o
の右辺の評価が行われることになる (探索の対象から取り除かれた
ディレクトリの中身は処理の対象にすらならないので、そうしたものは
もう関係がない)。
.\"O The expression on the right hand side of the 
.\"O .B \-o
.\"O is in parentheses only for clarity.  It emphasises that the
.\"O .B \-print0 
.\"O action takes place only for things that didn't have 
.\"O .B \-prune 
.\"O applied to them.  Because the default `and' condition between tests
.\"O binds more tightly than 
.\"O .BR \-o ,
.\"O this is the default anyway, but the parentheses help to show
.\"O what is going on.
.\"O 
.B \-o
の右辺の式がカッコで囲まれているのは、見やすくするためにすぎない。
アクション
.B \-print0
が行われるのは、
.B \-prune
が適用されなかった項目のみであることを強調しているわけだ。
述語間のデフォルトの結合は and であり、and 条件の結合は
.BR \-o
よりも強いから、カッコがあってもデフォルトの動作と同じなのだが、
カッコを使うと、何をやっているかがわかりやすくなる。

.\"O .P
.\"O .nf
.\"O .B find repo/ -exec test -d {}/.svn -o -d {}/.git -o -d {}/CVS \; \e
.\"O .B -print -prune
.P
.nf
.B find repo/ -exec test -d {}/.svn -o -d {}/.git -o -d {}/CVS \e\; \e
.B -print -prune
.\"O .fi
.\"O 
.\"O Given the following directory of projects and their associated SCM
.\"O administrative directories, perform an efficient search for the
.\"O projects' roots:
.\"O 
.fi

以下のようなプロジェクトのディレクトリとそれに関連する
SCM (ソースコード管理システム) の管理用ディレクトリがある場合に、
プロジェクトのルートを効率的に検索する。

.\"O .nf
.\"O .B repo/project1/CVS
.\"O .B repo/gnu/project2/.svn
.\"O .B repo/gnu/project3/.svn
.\"O .B repo/gnu/project3/src/.svn
.\"O .B repo/project4/.git
.\"O 
.nf
.B repo/project1/CVS
.B repo/gnu/project2/.svn
.B repo/gnu/project3/.svn
.B repo/gnu/project3/src/.svn
.B repo/project4/.git

.\"O .fi
.\"O In this example,
.\"O .B \-prune
.\"O prevents unnecessary descent into directories that have already been
.\"O discovered (for example we do not search project3/src because we
.\"O already found project3/.svn), but ensures sibling directories
.\"O (project2 and project3) are found.
.\"O   
.fi
この例では、
.B \-prune
を使うことによって、すでにプロジェクトのルートであることがわかった
ディレクトリ以下で不必要な探索をしないですませている (たとえば、
project3/src は探索しないが、それは project3/.svn がすでに見つかって
いるからである)。それでいて、同格のディレクトリ (たとえば、
project2 と project3) はきちんと見つかるようにしている。

.\"O .SH EXIT STATUS
.\"O .PP
.\"O .B find
.\"O exits with status 0 if all files are processed successfully, greater
.\"O than 0 if errors occur.   This is deliberately a very broad
.\"O description, but if the return value is non-zero, you should not rely
.\"O on the correctness of the results of 
.\"O .BR find .
.\"O 
.SH "終了ステータス"
.PP
.B find
は、すべてのファイルを問題なく処理できれば、ステータス 0 で終了する。
エラーが起きた場合の終了ステータスは、1 以上である。ここではあえて
ごく大雑把な言い方をしているが、返り値が 0 以外だった場合は、
.B find
が出した結果を正しいと思い込まない方がよいだろう。

.\"O .SH "SEE ALSO"
.\"O \fBlocate\fP(1), \fBlocatedb\fP(5), \fBupdatedb\fP(1), \fBxargs\fP(1),
.\"O \fBchmod\fP(1), \fBfnmatch\fP(3), \fBregex\fP(7), \fBstat\fP(2),
.\"O \fBlstat\fP(2), \fBls\fP(1), \fBprintf\fP(3), \fBstrftime\fP(3),
.\"O \fBctime\fP(3), \fBFinding Files\fP (on-line in Info, or printed).
.SH "関連項目"
\fBlocate\fP(1), \fBlocatedb\fP(5), \fBupdatedb\fP(1), \fBxargs\fP(1),
\fBchmod\fP(1), \fBfnmatch\fP(3), \fBregex\fP(7), \fBstat\fP(2),
\fBlstat\fP(2), \fBls\fP(1), \fBprintf\fP(3), \fBstrftime\fP(3),
\fBctime\fP(3), \fBFinding Files\fP (on-line in Info, or printed).
.\"O .SH "HISTORY"
.\"O As of findutils-4.2.2, shell metacharacters (`*', `?' or `[]' for
.\"O example) used in filename patterns will match a leading `.', because
.\"O IEEE POSIX interpretation 126 requires this.
.SH "履歴"
findutils-4.2.2 以来、ファイル名のパターンに使われたシェルのメタ文字
(`*', `?', `[]' など) は、先頭の  `.' にマッチする。これは、
IEEE POSIX interpretation 126 がそう要求しているからである。
.\"O .P
.\"O The syntax 
.\"O \.B \-perm +MODE 
.\"O was deprecated in findutils-4.2.21, in favour of
.\"O \.B \-perm 
.\"O .BR /MODE .
.\"O As of findutils-4.3.3, 
.\"O .B \-perm /000
.\"O now matches all files instead of none.  
.P
.B \-perm +MODE
という書き方は findutils-4.2.21 で非推奨になった。
.B \-perm /MODE
を使用する方をお勧めする。
findutils-4.3.3 以来、
.B \-perm /000
はどんなファイルにもマッチしないではなく、すべてのファイルにマッチする
になっている。
.\"O .P
.\"O Nanosecond-resolution
.\"O timestamps were implemented in findutils-4.3.3.
.P
ナノ秒まで表現するタイムスタンプは findutils-4.3.3 で実装された。
.\"O .P
.\"O As of findutils-4.3.11, the 
.\"O .B \-delete 
.\"O action sets 
.\"O .BR find 's 
.\"O exit status to a nonzero value when it fails.
.\"O However, 
.\"O .B find
.\"O will not exit immediately.  Previously, 
.\"O .BR find 's 
.\"O exit status was unaffected by the failure of 
.\"O .BR \-delete .
.P
findutils-4.3.11 以来、アクション
.B \-delete
は、実行に失敗すると、
.B find
の終了ステータスを 0 以外の値に設定する。とは言え、
.B \-delete
に失敗したとき、
.B find
が即座に終了してしまうわけではない。以前のバージョンでは、
.B \-delete
が実行に失敗しても、
.B find
の終了ステータスは影響を受けなかった。
.\"O .TS
.\"O l l l .
.\"O Feature	Added in	Also occurs in 
.\"O \-newerXY	4.3.3	BSD
.\"O \-D	4.3.1
.\"O \-O	4.3.1
.\"O \-readable	4.3.0
.\"O \-writable	4.3.0
.\"O \-executable	4.3.0
.\"O \-regextype	4.2.24
.\"O \-exec ... +	4.2.12	POSIX
.\"O \-execdir	4.2.12	BSD
.\"O \-okdir	4.2.12
.\"O \-samefile	4.2.11
.\"O \-H	4.2.5	POSIX
.\"O \-L	4.2.5	POSIX
.\"O \-P	4.2.5	BSD
.\"O \-delete	4.2.3	
.\"O \-quit	4.2.3
.\"O \-d	4.2.3	BSD
.\"O \-wholename	4.2.0
.\"O \-iwholename	4.2.0
.\"O \-ignore_readdir_race	4.2.0
.\"O \-fls	4.0
.\"O \-ilname	3.8
.\"O \-iname	3.8
.\"O \-ipath	3.8
.\"O \-iregex	3.8
.\"O .TE
.TS
l l l .
Feature	Added in	Also occurs in 
\-newerXY	4.3.3	BSD
\-D	4.3.1
\-O	4.3.1
\-readable	4.3.0
\-writable	4.3.0
\-executable	4.3.0
\-regextype	4.2.24
\-exec ... +	4.2.12	POSIX
\-execdir	4.2.12	BSD
\-okdir	4.2.12
\-samefile	4.2.11
\-H	4.2.5	POSIX
\-L	4.2.5	POSIX
\-P	4.2.5	BSD
\-delete	4.2.3	
\-quit	4.2.3
\-d	4.2.3	BSD
\-wholename	4.2.0
\-iwholename	4.2.0
\-ignore_readdir_race	4.2.0
\-fls	4.0
\-ilname	3.8
\-iname	3.8
\-ipath	3.8
\-iregex	3.8
.TE
.\"O .SH "NON-BUGS"
.\"O .nf
.\"O .B $ find . \-name *.c \-print
.\"O find: paths must precede expression
.\"O Usage: find [\-H] [\-L] [\-P] [\-Olevel] [\-D help|tree|search|stat|rates|opt|exec] [path...] [expression]
.\"O .fi
.SH "バグにあらず"
.nf
.B $ find . \-name *.c \-print
find: paths must precede expression
Usage: find [\-H] [\-L] [\-P] [\-Olevel] [\-D help|tree|search|stat|rates|opt|exec] [path...] [expression]
.fi
.\"O .P
.\"O This happens because 
.\"O .I *.c 
.\"O has been expanded by the shell
.\"O resulting in 
.\"O .B find
.\"O actually receiving a command line like this:
.\"O .nf
.\"O 
.\"O .B find . \-name bigram.c code.c frcode.c locate.c \-print
.\"O 
.\"O .fi
.P
こうしたエラーが起きる原因は、
.I *.c
がシェルによって展開されて、
.B find
が実際に受け取るコマンドラインが、たとえば次のようなものに
なってしまうからである。
.nf

.B find . \-name bigram.c code.c frcode.c locate.c \-print

.fi
.\"O That command is of course not going to work.  Instead of doing things
.\"O this way, you should enclose the pattern in quotes or escape the wildcard:
.\"O .nf
.\"O .B $ find . \-name \e*.c \-print
.\"O .fi
.\"O 
当然ながら、こんなコマンドがうまく動くわけがない。書き方を改めて、
パターンを引用符で囲むか、ワイルドカードをエスケープするべきだ。
.nf

.B $ find . \-name \e*.c \-print
.fi

.\"O .SH "BUGS"
.\"O .P
.\"O There are security problems inherent in the behaviour that the POSIX
.\"O standard specifies for
.\"O .BR find ,
.\"O which therefore cannot be fixed.  For example, the 
.\"O .B \-exec
.\"O action is
.\"O inherently insecure, and 
.\"O .B \-execdir
.\"O should be used instead.  
.\"O Please see \fBFinding Files\fP for more information. 
.SH "バグ"
.P
POSIX 標準が
.B find
について規定している動作にはセキュリティ上の問題があるが、
それはその動作自体に内在する問題なので、修正することができない。
一例を挙げると、アクション
.B \-exec
は本質的に安全ではない。だから、
.B \-execdir
の方を使うべきなのだ。
より詳しい情報については、\fBFinding Files\fP を参照していただきたい。
.\"O .P
.\"O The environment variable 
.\"O .B  LC_COLLATE
.\"O has no effect on the 
.\"O .B \-ok 
.\"O action.
.P
環境変数
.B  LC_COLLATE
はアクション
.B \-ok
にまったく影響を及ぼさない (訳注: 環境変数 \fBLC_COLLATE\fR の説明では
「この変数はアクション \fB\-ok\fR に対する応答の解釈にも影響を及ぼす」
と述べている)。
.\"O .P 
.\"O The best way to report a bug is to use the form at
.\"O http://savannah.gnu.org/bugs/?group=findutils.  
.\"O The reason for this is that you will then be able to track progress in
.\"O fixing the problem.   Other comments about \fBfind\fP(1) and about
.\"O the findutils package in general can be sent to the 
.\"O .I bug\-findutils
.\"O mailing list.  To join the list, send email to 
.\"O .IR bug\-findutils\-request@gnu.org .
.P
バグ報告の最善の方法は、
http://savannah.gnu.org/bugs/?group=findutils
にある書式を使用することだ。そうすれば、問題解決の進行状態を
追うことができるからである。\fBfind\fP(1) や
findutils パッケージ全般についてのその他のご意見は、
.I bug\-findutils
メーリングリストにお出しになればよい。メーリングリストに参加するには、
.IR bug\-findutils\-request@gnu.org
宛に E メールを送っていただきたい。
