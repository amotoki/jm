.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.
.TH ENV "1" "2021年4月" "GNU coreutils" "ユーザーコマンド"
.SH 名前
env \- 変更した環境でプログラムを実行する
.SH 書式
.B env
[\fI\,OPTION\/\fR]... [\fI\,-\/\fR] [\fI\,NAME=VALUE\/\fR]... [\fI\,COMMAND \/\fR[\fI\,ARG\/\fR]...]
.SH 説明
.\" Add any additional description here
.PP
Set each NAME to VALUE in the environment and run COMMAND.
.PP
Mandatory arguments to long options are mandatory for short options too.
.TP
\fB\-i\fR, \fB\-\-ignore\-environment\fR
start with an empty environment
.TP
\fB\-0\fR, \fB\-\-null\fR
end each output line with NUL, not newline
.TP
\fB\-u\fR, \fB\-\-unset\fR=\fI\,NAME\/\fR
remove variable from the environment
.TP
\fB\-C\fR, \fB\-\-chdir\fR=\fI\,DIR\/\fR
change working directory to DIR
.TP
\fB\-S\fR, \fB\-\-split\-string\fR=\fI\,S\/\fR
process and split S into separate arguments;
used to pass multiple arguments on shebang lines
.TP
\fB\-\-block\-signal\fR[=\fI\,SIG\/\fR]
block delivery of SIG signal(s) to COMMAND
.TP
\fB\-\-default\-signal\fR[=\fI\,SIG\/\fR]
reset handling of SIG signal(s) to the default
.TP
\fB\-\-ignore\-signal\fR[=\fI\,SIG\/\fR]
set handling of SIG signals(s) to do nothing
.TP
\fB\-\-list\-signal\-handling\fR
list non default signal handling to stderr
.TP
\fB\-v\fR, \fB\-\-debug\fR
print verbose information for each processing step
.TP
\fB\-\-help\fR
この使い方を表示して終了する
.TP
\fB\-\-version\fR
バージョン情報を表示して終了する
.PP
\- だけを指定した場合は \fB\-i\fR を指定したことになります。COMMAND が指定されなければ最終的な環境変数を表示します。
.PP
SIG may be a signal name like 'PIPE', or a signal number like '13'.
Without SIG, all known signals are included.  Multiple signals can be
comma\-separated.
.PP
GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
Report any translation bugs to <https://translationproject.org/team/>
Full documentation <https://www.gnu.org/software/coreutils/env>
or available locally via: info '(coreutils) env invocation'
.SH オプション
.SS "スクリプトでの \-S/\-\-split\-string の使い方"
.B \-S
オプションを使うと、スクリプト内で複数の引き数を指定することができます。
.B 1.pl
という名前のスクリプトの最初の行が以下のようになっている場合、
このスクリプトを実行すると、
.PP
.RS
.nf
#!/usr/bin/env \-S perl \-w \-T
\&...
.fi
.RE
.PP
.B "perl \-w \-T 1.pl"
が実行されます。
.PP
.B '\-S'
パラメーターを指定しない場合、
このスクリプトはおそらく以下のような感じで失敗することでしょう。
.PP
.RS
.nf
/usr/bin/env: 'perl \-w \-T': No such file or directory
.fi
.RE
.PP
.\" amotoki - full documentation は info を指しているので
.\" info であることがわかるように意訳している
さらなる詳細は info 形式のドキュメントを参照してください。
.PP
.SS "\-\-default-signal[=SIG]" の使い方
このオプションを使うと、シグナルハンドラーに
デフォルトの動作を設定できます。
これは、従来のシェルの trap コマンドではできません。
以下の例では、このコマンドを起動したプロセスでこのシグナルが
どのように処理されていたとしても、
seq は必ず SIGPIPE で終了します。

.PP
.RS
.nf
sh \-c 'env \-\-default-signal=PIPE seq inf | head \-n1'
.fi
.RE
.PP
.SH 注意
POSIX の exec(2) のページには以下のような記載がある。
.RS
「多くのアプリケーションは、
特定のシグナルがデフォルト動作に設定されていたりブロックされていない状態で
アプリケーションが開始される、という誤った前提を置いている。。。。
そのため、最も良いのは、明確な理由がない限りは exec の前後でシグナルを
ブロックしたり無視したりしないことだ。
特に、(密接に連携しているわけではない) 任意のプログラム間の exec では
シグナルをブロックしないのがよい。」
.RE
.SH 作者
作者 Richard Mlynarik、 David MacKenzie、および Assaf Gordon。
.SH 著作権
Copyright \(co 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH 関連項目
sigaction(2), sigprocmask(2), signal(7)
.PP
.B env
の完全なマニュアルは Texinfo マニュアルとして整備されている。もし、
.B info
および
.B env
のプログラムが正しくインストールされているならば、コマンド
.IP
.B info env
.PP
を使用すると完全なマニュアルを読むことができるはずだ。
