.\" Copyright (C) 1998 David A. Hinds -- dhinds@pcmcia.sourceforge.org
.\" pack_cis.8 1.4 1999/12/21 22:41:19
.\"
.\" Japanese Version Copyright (c) 2000 NAKANO Takeo all rights reserved.
.\" Translated Sun May 14 2000 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\"
.TH PACK_CIS 8 "1999/12/21 22:41:19" "pcmcia-cs"
.\"O .SH NAME
.\"O pack_cis \- compile PCMCIA Card Information Structures
.SH 名前
pack_cis \- PCMCIA カード情報構造体をコンパイルする
.\"O .SH SYNOPSIS
.SH 書式
.B pack_cis
.RB [ "\-o\ "\c
.I outfile\c
]
.I infile
.\"O .SH DESCRIPTION
.SH 説明
.\"O .B Pack_cis
.\"O is used to convert a text description of a PCMCIA Card
.\"O Information Structure (CIS) to its packed binary representation.  It
.\"O can parse a reasonably useful subset of the possible output of the
.\"O .B dump_cis
.\"O utility.  The primary use of
.\"O .B pack_cis
.\"O is to construct replacement CIS files
.\"O for cards that have incomplete, inaccurate, or damaged CIS
.\"O structures.  Thus, the supported tuple types are mostly limited to
.\"O things that are important for correctly configuring typical IO cards.
.B pack_cis
は、 PCMCIA のカード情報構造体 (Card Information Structure: CIS)
をテキストで記述したものを、 (本来の) パックされたバイナリ表現に変換する。
.sp
.RS
訳注: 本ページではテキストによる記述を「CIS 記述」、
パックされたバイナリ表現を「(パック済み) CIS」とする。
.RE
.sp
.B dump_cis
ユーティリティによる出力の全てをパースすることはできないが、
十分用の足りるサブセットをパースすることができる。
.B pack_cis
の基本的な用途は、不完全/不正確な、あるいは壊れた CIS 構造体を
持つカードに対して、代替用の CIS ファイルを作ることである。
従って、サポートされているタプルのタイプは、
正しく構成された典型的な I/O カードにとって重要なものにほぼ限られている。
.PP
.\"O By default, the packed data is written to standard output.
デフォルトでは、パックされたデータは標準出力に書き出される。
.\"O .SH FORMAT
.SH フォーマット
.\"O The best way to get started writing CIS descriptions will be to use
.\"O .B dump_cis
.\"O to extract the CIS data from a card, and to examine the CIS files
.\"O distributed with the PCMCIA source tree in
.\"O .IR etc/cis/ .
CIS 記述を書きはじめるときにもっとも良いやり方は、
.B dump_cis
を用いてカードから CIS データを取得したり、
あるいは PCMCIA のソースツリーの
.I etc/cis/
で配布されている CIS ファイルを調べることである。
.PP
.\"O The basic structure of a CIS is a list of tuple descriptions.
.\"O Anything following a hash mark (``#'') is treated as a comment.
.\"O A multifunction CIS can be described with the notation:
CIS の基本的な構造は、タプル記述のリストである。
ハッシュ記号 ("#") 以降はすべてコメントとみなされる。
複数機能の CIS は以下の表記によって記述できる。
.sp
.RS
.nf
[common tuple list]
mfc {
  [tuple list for function 0]
}, {
  [tuple list for function 1]
}
.RE
.fi
.sp
.\"O .SH OPTIONS
.SH オプション
.TP
.BI "\-o " outfile
.\"O Write the packed tuple data to the specified file.
パック済み CIS を指定ファイルに書き出す。
.\"O .SH FILES
.SH ファイル
.\"O .PD 0
.\"O .TP \w'/etc/pcmcia/cis\ \ \ \|\|'u
.TP
/etc/pcmcia/cis
.\"O Standard location for packed CIS files
パック済み CIS ファイルの標準的な置き場所
.\"O .SH AUTHOR
.SH 著者
David Hinds \- dhinds@pcmcia.sourceforge.org
.\"O .SH "SEE ALSO"
.SH 関連項目
.\"O dump_cis(8), cardmgr(8), pcmcia(5).
.BR dump_cis (8),
.BR cardmgr (8),
.BR pcmcia (5)

