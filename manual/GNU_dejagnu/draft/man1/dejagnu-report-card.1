.\"O .Sh NAME
.\"O .Nm dejagnu\ report\ card
.\"O .Nd summarize results from testing multiple tools
.Sh 名前
.Nm dejagnu\ report\ card
.Nd 複数ツールに対するテスト結果の取りまとめ
.\"O ----------------------------------------
.\"O .Sh SYNOPSIS
.\"O .Nm dejagnu\ report\ card
.\"O .Oo Ao Ar option Ac \*(Ba Ao Ar tool Ac \*(Ba Ao Ar file Ac Oc ...
.Sh 書式
.Nm dejagnu\ report\ card
.Oo Ao Ar option Ac \*(Ba Ao Ar tool Ac \*(Ba Ao Ar file Ac Oc ...
.\"O ----------------------------------------
.\"O .Sh DESCRIPTION
.\"O The
.\"O .Nm
.\"O command displays results from testing multiple tools in a tabular format.
.\"O The produced table lists, for each tool (and if multiple passes were run,
.\"O each pass) the number of tests passed, failed, unsupported, unresolved, and
.\"O untested.  Tests that are expected to fail are counted in separate columns
.\"O from tests expected to pass, but "known" failures and "expected" failures
.\"O are summarized together.  If a test generated warnings or errors, a tag
.\"O .Ql !W!
.\"O or
.\"O .Ql !E!
.\"O is appended at the end of the relevant line.
.Sh 説明
The
.Nm
コマンドは、 複数ツールによるテスト結果を表形式で表示します。 生成されるこの表においては、 以下の項目を一覧表示します。
各ツールごとに (そして複数パスが実行された場合には、 各パスごとに)、 テストの成功数 (passed)、 失敗数 (failed)、 未対応数
(unsupported)、 未解決数 (unresolved)、 未実施数 (untested) です。 失敗することが予想されるテストは、
成功することが予想されるテストとは、 別カラムに分けてカウントされます。 ただし失敗することが分かっている ("known") テストと、
失敗が予想される ("expected") テストは、 まとめられます。 テストが警告やエラーを生成した場合、 関連する行の終わりに
.Ql !W!
や
.Ql !E!
というタグがつきます。
.\"O ----------------------------------------
.\"O .Pp
.\"O Aside from options, the argument list may include tool or file names.  The
.\"O .Nm
.\"O command prefers to read DejaGnu summary files and will translate names accordingly:
.\"O .Bl -tag -width ".Pa *.sum"
.Pp
オプションでなく引数リストの場合には、 ツール名またはファイル名が含まれる場合があります。
.Nm
コマンドは、 DejaGnu 概要ファイル
(summary file) を読み込もうとします。 そして、 その場合には名称の翻訳を行います。
.Bl -tag -width ".Pa *.sum"
.\"O ----------------------------------------
.\"O .It Pa *.sum
.\"O Used as-is.
.It Pa *.sum
そのまま用います。
.\"O ----------------------------------------
.\"O .It Pa *.log
.\"O Rewritten to
.It Pa *.log
同じベース名を用いて
.\"O ----------------------------------------
.\"O .Pa *.sum
.\"O with the same stem.
.Pa *.sum
に書き換えます。
.\"O ----------------------------------------
.\"O .It Pa *.
.\"O The string
.It Pa *.
概要ファイルを用いるために、 文字列
.\"O ----------------------------------------
.\"O .Pa sum
.\"O is appended to select a summary file.  This processing is done for
.\"O convenience when using Readline file name completion in a shell, which will
.\"O complete to the dot.
.Pa sum
が後ろにつけられます。 この処理は、 シェル上の Readline によって、
ファイル名補完を用いた場合の利便性のために行われるものであり、 補完がドットまで行われるからです。
.\"O ----------------------------------------
.\"O .It Pa *
.\"O Taken as a tool name;
.It Pa *
ツール名として扱われます。 後ろに
.\"O ----------------------------------------
.\"O .Pa .sum
.\"O is appended.
.\"O .El
.Pa .sum
がつけられます。
.El
.\"O ----------------------------------------
.\"O .Sh OPTIONS
.\"O .Bl -tag -width ".Fl v , -verbose"
.Sh オプション
.Bl -tag -width ".Fl v , -verbose"
.\"O ----------------------------------------
.\"O .It Fl v , -verbose
.\"O Emit additional output describing the operation of
.\"O .Nm
.\"O itself.
.\"O .El
.It Fl v , -verbose
.Nm
の操作自体を説明する追加情報を出力します。
.El
.\"O ----------------------------------------
.\"O .Sh FILES
.\"O The
.\"O .Nm
.\"O command produces its output by reading the summary files produced by
.\"O DejaGnu and counting "PASS", "FAIL", etc.
.Sh ファイル
.Nm
コマンドが出力を生成する際には、 DejaGnu によって作られた概要ファイルを読み込んで、 "PASS" や "FAIL"
などの数をカウントします。
.\"O ----------------------------------------
.\"O .Pp
.\"O If no names are given as arguments, all files matching
.Pp
引数に名前が指定されなかった場合、 カレントディレクトリ内の
.\"O ----------------------------------------
.\"O .Pa *.sum
.\"O in the current directory are read.
.Pa *.sum
に一致するファイルすべてが読み込まれます。
.\"O ----------------------------------------
.\"O .Sh EXAMPLES
.\"O .Ss A simple example from DejaGnu's own testsuite
.\"O .Bd -literal
.\"O $ dejagnu report card
.\"O \             __________________________________________________
.\"O \            /    PASS   FAIL  ?PASS  ?FAIL  UNSUP  UNRES UNTEST
.\"O \            |--------------------------------------------------
.\"O \  launcher  |      52      0      0      0      0      0      0
.\"O libdejagnu  |       5      0      0      0      0      0      0
.\"O \   runtest  |     135      0      0      0      0      0      0
.\"O \            |--------------------------------------------------
.\"O \            |     192      0      0      0      0      0      0
.\"O \            \\__________________________________________________
.\"O .Ed
.Sh 例
.Ss DejaGnu 自体のテストスイートから、単純な例を示します。 
.Bd -literal
$ dejagnu report card
\             __________________________________________________
\            /    PASS   FAIL  ?PASS  ?FAIL  UNSUP  UNRES UNTEST
\            |--------------------------------------------------
\  launcher  |      52      0      0      0      0      0      0
libdejagnu  |       5      0      0      0      0      0      0
\   runtest  |     135      0      0      0      0      0      0
\            |--------------------------------------------------
\            |     192      0      0      0      0      0      0
\            \e__________________________________________________
.Ed
.\"O ----------------------------------------
.\"O .Pp
.\"O Three tools were tested, with a total of 192 tests, all expected to pass.
.\"O In this example, all tests did pass, so all other columns are zero.  The
.\"O .Ql ?PASS
.\"O and
.\"O .Ql ?FAIL
.\"O columns count tests known or expected to fail that either unexpectedly
.\"O passed or failed as expected.  The remaining three columns count the
.\"O exceptional results for unsupported tests, unresolved tests and stub tests
.\"O that simply declare themselves untested.
.Pp
3 つのツールがテストされました。 そこでは全部で 192 個のテストがあり、 すべて成功することが予想されているものです。 この例において、
テストはすべて成功 (pass) しています。 したがってこれ以外のカラムは、 すべてゼロになっています。
.Ql ?PASS
と
.Ql ?FAIL
のカラムは、 それぞれ失敗することが分かっている (known) ものと、 失敗が予想される (expected) ものであったもので、
実際には、 予想に反して成功したものと、 予想どおりに失敗したものを、 それぞれ示しています。 残りの 3 つのカラムは、
例外的な結果を示しているもので、 サポートされていない (unsupported) テスト、未解決 (unresolved) のテスト、
単純にテストしない (untested) ものとして宣言されているスタブテストをそれぞれ示しています。
.\"O ----------------------------------------
.\"O .Pp
.\"O .ne 16v
.\"O .Ss The same example after tests were added for dejagnu-report-card
.\"O .Bd -literal
.\"O $ dejagnu report-card
.\"O \                    __________________________________________________
.\"O \                   /    PASS   FAIL  ?PASS  ?FAIL  UNSUP  UNRES UNTEST
.\"O \                   |--------------------------------------------------
.\"O \   launcher        |      52      0      0      0      0      0      0
.\"O \ libdejagnu        |       5      0      0      0      0      0      0
.\"O report-card / awk  |      36      0      0      0      0      0      0
.\"O report-card / sh   |      36      0      0      0      0      0      0
.\"O report-card / tcl  |      36      0      0      0      0      0      0
.\"O \    runtest        |     135      0      0      0      0      0      0
.\"O \                   |--------------------------------------------------
.\"O \              awk  |      36      0      0      0      0      0      0
.\"O \              sh   |      36      0      0      0      0      0      0
.\"O \              tcl  |      36      0      0      0      0      0      0
.\"O \                   |--------------------------------------------------
.\"O \                   |     300      0      0      0      0      0      0
.\"O \                   \\__________________________________________________
.\"O .Ed
.Pp
.ne 16v
.Ss dejagnu-report-card に対するテストが追加された後の同様の結果例
.Bd -literal
$ dejagnu report-card
\                    __________________________________________________
\                   /    PASS   FAIL  ?PASS  ?FAIL  UNSUP  UNRES UNTEST
\                   |--------------------------------------------------
\   launcher        |      52      0      0      0      0      0      0
\ libdejagnu        |       5      0      0      0      0      0      0
report-card / awk  |      36      0      0      0      0      0      0
report-card / sh   |      36      0      0      0      0      0      0
report-card / tcl  |      36      0      0      0      0      0      0
\    runtest        |     135      0      0      0      0      0      0
\                   |--------------------------------------------------
\              awk  |      36      0      0      0      0      0      0
\              sh   |      36      0      0      0      0      0      0
\              tcl  |      36      0      0      0      0      0      0
\                   |--------------------------------------------------
\                   |     300      0      0      0      0      0      0
\                   \e__________________________________________________
.Ed
.\"O ----------------------------------------
.\"O .Pp
.\"O The
.\"O .Ql report-card
.\"O tool has been added, with three passes, one for each implementation.  (The
.\"O shell and Tcl implementations were later dropped to reduce future
.\"O maintenance burden.)  As before, all tests passed as expected.  The
.\"O interesting difference from the previous example is the use of DejaGnu's
.\"O multipass testing feature and the additional per-pass summary lines added.
.\"O For this example, only the
.\"O .Ql report-card
.\"O tool uses multipass testing, so each pass total is simply the count of
.\"O tests for
.\"O .Ql report-card
.\"O instead of a distinct total.
.Pp
.Ql report-card
ツールに対して、 各実装ごとに 1 つ、合計で 3 つのパスが追加されています。 (この後に shell と
Tcl による実装は、 将来のメンテナンス負荷を減らすために、 取り除かれます。) 前の例と同じく、 テストはすべて期待どおりに成功しています。
ただ前の例と違って興味深いのは、 DejaGnu によるマルチパスのテスト機能が利用されている点です。 これに従って、
パスごとの概要行が追加されています。 この例において、 マルチパスのテストを行っているのは
.Ql report-card
ツールだけです。
そこで各パスの合計値は、 他の合計値とは違って、 単に
.Ql report-card
のテスト数にすぎません。
.\"O ----------------------------------------
.\"O .Pp
.\"O Also note that the command used to invoke
.\"O .Nm
.\"O is slightly different here.  The
.\"O .Xr dejagnu 1
.\"O launcher will also accept multiple words joined with dashes into a single
.\"O argument.  This allows individual words in a command name to be separated
.\"O with either dashes or spaces on the command line interchangeably.
.Pp
また、
.Nm
の実行に用いたコマンドが、 ここでは多少異なっている点を確認してください。
.Xr dejagnu 1
の実行にあたっては、
複数単語をダッシュ文字でつなぎ合わせて 1 つの引数として受け渡すことができます。 こうすることによって、 1 つのコマンド名に含まれる複数単語を、
ダッシュや空白により交互に区切って、 コマンドライン上から指定することができます。
.\"O ----------------------------------------
.\"O .Sh SEE ALSO
.\"O .Xr dejagnu 1
.\"O .Xr runtest 1
.Sh 関連項目
.Xr dejagnu 1
.Xr runtest 1
.\"O ----------------------------------------
.\"O .Pp
.\"O The full documentation for DejaGnu is maintained as a Texinfo manual.  If the
.\"O .Nm info
.\"O program is properly installed at your site, the command
.\"O .Li info dejagnu
.\"O should give you access to the complete manual.
.Pp
DejaGnu の完全なドキュメントは Texinfo マニュアルとしてメンテナンスされています。
.Nm info
プログラムが適切にインストールされていれば、 コマンド
.Li info dejagnu
の実行によって、 完全なマニュアルを参照できます。
.\"O ----------------------------------------
.\"O .Sh AUTHORS
.\"O .An Jacob Bachmeyer
.Sh 著者
.An Jacob Bachmeyer
.\"O ----------------------------------------
