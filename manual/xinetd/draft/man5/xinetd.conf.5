.\"(c) Copyright 1992, by Panagiotis Tsirigotis
.\"(c) Sections Copyright 1998-2001 by Rob Braun
.\"All rights reserved.  The file named COPYRIGHT specifies the terms 
.\"and conditions for redistribution.
.\"
.\" $Id: xinetd.conf.5,v 1.12 2004/04/28 15:12:39 tsekine Exp $
.\"
.\" Japanese Version Copyright (C) 2001 SEKINE Tatsuo
.\"	all rights reserved.
.\" Translated May 19, 2001 by SEKINE Tatsuo <tsekine@isoternet.org>
.\"
.\" Update and Modified on Fri Feb 21 00:40:09 JST 2003
.\"	by System Design and Research Institute Co.,Ltd. <info@sdri.co.jp>
.\" 
.\"WORD identification server	ident サーバ
.\"WORD resident set size	常駐サイズ
.\"WORD swap out		スワップアウト
.\"WORD fork			フォーク
.\"WORD splat			表示する
.\"WORD facility		機能分類
.TH XINETD.CONF 5 "14 June 2001"
.\" *************************** NAME *********************************
.\"O .SH NAME
.SH 名前
.\"O xinetd.conf \- Extended Internet Services Daemon configuration file
xinetd.conf \- 拡張されたインターネットサービスデーモンの設定ファイル
.\" *********************** DESCRIPTION ****************************
.\"O .SH DESCRIPTION
.SH 説明
.\"O .B "xinetd.conf"
.\"O is the configuration file that
.\"O determines the services provided by \fBxinetd\fP.
.B "xinetd.conf"
は \fBxinetd\fP によって提供されるサービスを決定する設定ファイルである。
.\"O Any line whose first non-white-space character is a '#' is considered
.\"O a comment line. Empty lines are ignored.
行の最初の空白ではない文字が '#' ならばコメント行とみなされる。
空行は無視される。
.LP
.\"O The file contains entries of the form:
ファイルは以下の形式のエントリからなる:
.RS
.nf
.ft B
.sp
.\"O service <service_name>
service <service_name>
{
.RS
.ft B
.\"O <attribute> <assign_op> <value> <value> ...
<属性> <assign_op> <値> <値> ...
.I "..."
.RE
.B }
.ft R
.fi
.RE
.LP
.\"O The assignment operator,
.\"O .I assign_op,
.\"O can be one of 
.\"O .B '=', 
.\"O .B '+=',
.\"O .B '-='.
代入演算子
.I assign_op
は
.B '=', 
.B '+=',
.B '-='
のいずれかである。
.\"O The majority of attributes support only the simple assignment operator,
.\"O .B '='.
.\"O Attributes whose value is a set of values support all assignment operators.
殆んどの属性は単純な代入演算子である
.B '='
のみをサポートする。
値が値の組合せであるような属性は、すべての代入演算子をサポートする。
.\"O For such attributes,
.\"O .B '+=' 
.\"O means adding a value to the set and 
.\"O .B '-='
.\"O means removing a value from the set.
そのような属性については、
.B '+='
は組合せに値を追加することを、
.B '-='
は組合せから値を削除することを意味する。
.\"O A list of these attributes will be given
.\"O after all the attributes are described.
どの属性がどの演算子をサポートするかは、
すべての属性について述べた後に記述する。
.LP
.\"O Each entry defines a service identified by the \fIservice_name\fP.
.\"O The following is a list of available attributes:
各エントリは \fIservice_name\fP で識別されるサービスについて定義する。
.TP 17
.\"O .B id
.\"O This attribute is used to uniquely identify a service.
.\"O This is useful because there exist services that can use different 
.\"O protocols and need to be described with different entries in the
.\"O configuration file.
.\"O By default, the service id is the same as the service name.
.\"SEKINE あえて service name → service_name にしています
.B id
この属性はサービスを識別するのに用いられる。
サービスの中には違うプロトコルを使えるものがあり、
その場合は設定ファイルの別のエントリに記述されるので、
そうしたときに有用である。
デフォルトではサービス id は service_name と同じである。
.TP
.B type
.\"O Any combination of the following values may be used:
以下の値の任意の組合せである:
.RS
.TP 12
.B RPC
.\"O if this is an RPC service
RPC を使ったサービスである
.TP
.B INTERNAL
.\"O if this is a service provided by \fBxinetd\fP.
\fBxinetd\fP によって提供されるサービス
.TP
.B TCPMUX/TCPMUXPLUS
.\"O if this is a service that will be started according to the RFC 1078 protocol on the TCPMUX well-known port. See the section describing TCPMUX services below.
well-known(良く知られた)TCPMUX ポートを使う、RFC 1078
プロトコルによって開始されるサービス。
後述する TCPMUX サービスについて書かれた節を参照のこと。
.TP
.B UNLISTED
.\"O if this is a service not listed in a standard system file
.\"O (like
.\"O .I /etc/rpc 
.\"O for RPC services, or
.\"O .I /etc/services
.\"O for non-RPC services).
標準的なシステムファイル
(RPC サービスなら
.IR /etc/rpc ,
RPC でないサービスなら
.IR /etc/services )
にはないサービス
.RE
.TP
.B flags
.\"O Any combination of the following flags may be used:
以下のフラグの任意の組合せである:
.RS
.TP 12
.B INTERCEPT
.\"O Intercept packets or accepted connections in order to verify that they
.\"O are coming from acceptable locations (internal or multi-threaded
.\"O services cannot be intercepted).
パケットまたはすでに受けつけた接続を、
それが受け付けてよい場所から来ているのかを確かめるために横取りする
(内部サービスまたはマルチスレッドサービスは横取りできない)。
.TP
.B NORETRY
.\"O Avoid retry attempts in case of fork failure.
フォークに失敗しても再試行しない。
.TP
.B IDONLY
.\"O Accept connections only when the remote end identifies the remote user
.\"O (i.e. the remote host must run an identification server).
.\"O This flag applies only to connection-based services.
.\"O This flag is ineffective if the
.\"O .B USERID
.\"O log option is not used.
リモート側が、リモートのユーザを識別しているときのみ接続を受け付ける
(すなわち、リモートホストは ident サーバを動かさなければならない)。
ログオプション
.B USERID
が使われてない場合には、このフラグは効果がない。
.TP
.B NAMEINARGS
.\"O This will cause the first argument in "server_args" to be argv[0] when
.\"O executing the server, as specified in "server".  This allows you to use
.\"O tcpd by putting tcpd in "server" and the name of the server in "server_args"
.\"O like in normal inetd.
"server_args" の最初の引き数を、サーバが実行される際の argv[0] にする。
これにより、普通の inetd のように "server" を tcpd にし、
サーバー名を "server_args" に入れることで、tcpd を使うことができる。
.TP
.B NODELAY
.\"O If the service is a tcp service and the NODELAY flag is set, then the
.\"O TCP_NODELAY flag will be set on the socket.  If the service is not
.\"O a tcp service, this option has no effect.
サービスが TCP のサービスで NODELAY フラグが立てられている場合、
ソケットに TCP_NODELAY フラグを立てる。
サービスが TCP のサービスでなければ、このオプションは効果がない。
.TP
.B KEEPALIVE
.\"O If the service is a tcp service and the KEEPALIVE flag is set, then 
.\"O the SO_KEEPALIVE socket flag will be set on the socket.  If the service
.\"O is not a tcp service, this option has no effect.
サービスが TCP のサービスで、KEEPALIVE フラグが立てられた場合は、
ソケットに SO_KEEPALIVE フラグが立てられる。
サービスが TCP のサービスでなければ、このオプションは効果がない。
.TP
.B NOLIBWRAP
.\"O This disables internal calling of the tcpwrap library to determine access
.\"O to the service.  This may be needed in order to use libwrap functionality
.\"O not available to long-running processes such as xinetd; in this case,
.\"O the tcpd program can be called explicitly (see also the NAMEINARGS flag).
サービスへのアクセスを判断するのに、tcpwrap の内部呼び出しを行わない。
xinetd のように長い時間動くプロセスには libwrap 機能が使えないので、
これは必要になる;
その様な場合には tcpd プログラムを明示的に起動することができる(NAMEINARGS フラグの項を見よ)。
.TP
.B SENSOR
.\"O This replaces the service with a sensor that detects accesses to the 
.\"O specified port. NOTE: It will NOT detect stealth scans. This flag 
.\"O should be used only on services that you know you don't need. When an 
.\"O access is made to this service's port, the IP Address is added to a global
.\"O no_access list. This causes all subsequent accesses from the originating IP
.\"O address to be denied access until the deny_time setting expires. The amount
.\"O of time spent on this list is configurable as the deny_time attribute. The
.\"O SENSOR flag will also cause xinetd to consider the server attribute to be
.\"O INTERNAL no matter what is typed on the same line. Another important thing
.\"O to remember is that if the socket_type is set to stream, then the wait 
.\"O attribute should be set to no.
サービスの代わりに、指定されたポートへのアクセスを検知するセンサーを使う。
注意: これはステルススキャンを検知しない。
必要ないということが分かっているサービスにのみ、このフラグを用いるべきである。
このサービスのポートへアクセスがあると、IP アドレスが no_access
リストへ追加される。
以降の同じ IP アドレスからのアクセスは、deny_time で設定した期限が切れるまで
拒否される。
このリストへ費やす時間の長さは、deny_time 属性で設定が可能である。
また、SENSOR フラグが指定された場合、同じ行に何が書かれていようと、
サーバに INTERNAL 属性が指定されたと xinetd はみなす。
あと一つ覚えておくべき重要なことは、socket_type を stream に設定した場合は、
wait 属性は no に設定されなければならないということである。
.TP
.B IPv4
.\"O Sets the service to be an IPv4 service (AF_INET).
サービスを IPv4 サービス(AF_INET)にする。
.TP
.B IPv6
.\"O Sets the service to be an IPv6 service (AF_INET6), if IPv6 is available on the system.
IPv6 がシステムで有効であれば、サービスを IPv6 サービス(AF_INET6)にする。
.RE
.TP
.B disable
.\"O This is boolean "yes" or "no".  This will result in the service
.\"O being disabled and not starting.  See the DISABLE flag description.
"yes" または "no" の真偽値をとる。
これによりサービスが使用不能になり、起動されなくなる。
DISABLE フラグに関する記述を見よ。
.RE
.TP
.B socket_type
.\"O Possible values for this attribute include:
この属性に指定可能な値は以下:
.RS
.TP 12
.I stream
.\"O stream-based service
ストリーム型サービス
.TP
.I dgram
.\"O datagram-based service
データグラム型サービス
.TP
.I raw
.\"O service that requires direct access to IP
IP への直接制御が必要なサービス
.TP
.I seqpacket
.\"O service that requires reliable sequential datagram transmission
信頼できる連続的なデータグラム交換が必要なサービス
.RE
.TP
.B protocol
.\"O determines the protocol that is employed by the service.
.\"O The protocol must exist in
.\"O .I /etc/protocols.
.\"O If this
.\"O attribute is not defined, the default protocol employed by the service
.\"O will be used.
サービスに使われるプロトコルを指定する。
プロトコルは
.I /etc/protocols
になければならない。
この属性が指定されなかった場合、サービスのデフォルトのプロトコルが使われる。
.TP
.B wait
.\"O This attribute determines if the service is single-threaded or
.\"O multi-threaded. If its value is \fIyes\fP the service is single-threaded;
.\"O this means that \fBxinetd\fP will start the server and then it will stop 
.\"O handling requests for the service until the server dies.
.\"O If the attribute value is \fIno\fP, the service is multi-threaded and
.\"O \fBxinetd\fP will keep handling new service requests.
この属性はサービスがシングルスレッドか、マルチスレッドかを決定する。
値が \fIyes\fP ならシングルスレッドである;
すなわち \fBxinetd\fP は、サーバーを起動したらそのサーバが死ぬまでは、
そのサービスへの要求に対する処理を停止する。
値が \fIno\fP ならサービスはマルチスレッドであり、
\fBxinetd\fP はサービスへの新たな要求を処理し続ける。
.TP
.B user
.\"O determines the uid for the server process. The user name must exist in
.\"O .I /etc/passwd.
.\"O This attribute is ineffective if the effective user ID 
.\"O of \fBxinetd\fP is not super-user.
サーバプロセスの uid を指定する。
ユーザ名は
.I /etc/passwd
になければならない。
\fBxinetd\fP の実効ユーザIDがスーパーユーザーではない場合には、
この属性は効果がない。
.TP
.B group
.\"O determines the gid for the server process. The group name must exist in
.\"O .I /etc/group.
.\"O If a group is not specified, the group
.\"O of \fIuser\fP will be used (from 
.\"O .I /etc/passwd).
.\"O This attribute is ineffective if the effective user ID 
.\"O of \fBxinetd\fP is not super-user.
サーバプロセスの gid を指定する。
グループ名は
.I /etc/group
になければならない。
\fBxinetd\fP の実効ユーザIDがスーパーユーザーではない場合には、
この属性は効果がない。
.TP
.B instances
.\"O determines the number of servers that can be simultaneously active
.\"O for a service (the default is no limit). The value of this
.\"O attribute can be either a number or
.\"O .B UNLIMITED
.\"O which means that there is no limit.
サーバが同時にいくつサービスできるかを指定する(デフォルトは無制限)。
この属性の値は数値か、もしくは無制限を意味する
.B UNLIMITED
のどちらかである。
.TP
.B nice
.\"O determines the server priority. Its value is a (possibly negative) number;
.\"O check nice(3) for more information.
サーバーの優先度を指定する。
値は(負の)数値である; 詳しくは nice(3)(訳注:Linux では nice(2))を見よ。
.TP
.B server
.\"O determines the program to execute for this service.
そのサービスのために実行するプログラムを指定する
.TP
.B server_args
.\"O determines the arguments passed to the server. In contrast to \fBinetd\fP,
.\"O the server name should \fInot\fP be included in \fIserver_args\fP.
サーバに渡される引き数を指定する。
\fBinetd\fP とは違い、サーバ名は \fIserver_args\fP には含め\fIない\fP。
.TP
.B only_from
.\"O determines the remote hosts to which the particular
.\"O service is available.
.\"O Its value is a list of IP addresses which can be specified in any
.\"O combination of the following ways:
そのサービスを可能にするリモートホストを指定する。
値は IP アドレスのリストで、以下の方法の任意の組合せである:
.RS
.TP 5
.B a)
.\"O a numeric address in the form of %d.%d.%d.%d. If the rightmost components are 
.\"O 0, they are treated as wildcards 
.\"O (for example, 128.138.12.0 matches all hosts on the 128.138.12 subnet).
.\"O 0.0.0.0 matches all Internet addresses.  IPv6 hosts may be specified in the form of abcd:ef01::2345:6789.  The rightmost rule for IPv4 addresses does not apply to IPv6 addresses.
%d.%d.%d.%d形式の数値アドレス。
右端の部分が 0 であればワイルドカードとして扱われる
(例えば、128.138.12.0 は 128.128.12 サブネットのすべてのホストに合致する)。
0.0.0.0 はすべてのインターネットアドレスに合致する。
IPv6 ホストは abcd:ef01::2345:6789 のような形式で指定する。
IPv4 の場合のワイルドカードに関するルールは、IPv6 アドレスには適用されない
.TP
.B b)
.\"O a factorized address in the form of %d.%d.%d.{%d,%d,...}.
.\"O There is no need for all 4 components (i.e. %d.%d.{%d,%d,...%d} is also ok).
.\"O However, the factorized part must be at the end of the address.  This form does not work for IPv6 hosts.
%d.%d.%d.{%d,%d,...}形式の組合せアドレス。
4 つすべての部分が必要なわけではない
(すなわち%d.%d.{%d,%d,...%d}形式も可である)。
しかし、組合せの部分はアドレスの最後でなければならない。
この形式は IPv6 ホストでは使えない。
.TP
.B c)
.\"O a network name (from
.\"O .I /etc/networks).  This form does not work for IPv6 hosts.
.RI ( /etc/networks
から得られる)ネットワーク名。
この形式は IPv6 ホストでは使えない。
.TP
.B d)
.\"O a host name.  When a connection is made to xinetd, a reverse lookup is
.\"O performed, and the canonical name returned is compared to the specified host
.\"O name.  You may also use domain names in the form of .domain.com.  If the
.\"O reverse lookup of the client's IP is within .domain.com, a match occurs.
ホスト名。
xinetd への接続がなされると、逆引きが行われ、
得られた正規名(canonical name)と指定されたホスト名が比較される。
\&.domain.com 形式のドメイン名を指定することもできる。
クライアント IP の逆引き結果が .domain.com 内部なら、
そのクライアントは合致したことになる。
.TP
.B e)
.\"O an ip address/netmask range in the form of 1.2.3.4/32.
1.2.3.4/32 形式の IPアドレス/ネットマスク 範囲指定。
.RE
.TP
.B ""
.\"O Specifying this attribute
.\"O without a value makes the service available to nobody.
値の指定をせずにこの属性を指定すると、
いかなるユーザにもサービス使用不可となる。
.TP
.B no_access
.\"O determines the remote hosts to which the particular
.\"O service is unavailable. Its value can be specified in the same way as the
.\"O value of the \fBonly_from\fP
.\"O attribute. These two attributes determine the location access control 
.\"O enforced by \fBxinetd\fP. If none of the two is specified for a service,
.\"O the service is available to anyone. If both are specified for a service,
.\"O the one that is the better match for
.\"O the address of the remote host determines
.\"O if the service is available to that host (for example, if the 
.\"O \fBonly_from\fP list contains 128.138.209.0 and the
.\"O \fBno_access\fP list contains 128.138.209.10
.\"O then the host with the address 128.138.209.10 can not access the service).
そのサービスが使用できないリモートホストを指定する。
値の指定方法は \fBonly_from\fP と同じである。
これら二つの属性により \fBxinetd\fP は場所に基づいたアクセス制御を行う。
サービスに対しこの二つのどちらも指定されない場合には、
そのサービスは誰でも使用可になる。
サービスに対しこの二つが共に指定された場合には、
リモートホストのアドレスがよりよく(より正確に)合致した方に基づき、
そのサービスがそのホストで使用できるかどうかが決定される
(例えば、\fBonly_from\fP リストに 128.138.209.0 があり、
\fBno_access\fP リストに 128.138.209.10 があった場合には、
アドレスが 128.138.209.10 のホストはそのサービスへはアクセスできない)。
.TP
.B access_times
.\"O determines the time intervals when the service is available. An interval
.\"O has the form \fIhour:min-hour:min\fP (connections 
.\"O .I will 
.\"O be accepted at the bounds of an interval). Hours can range from 0 to 23 and
.\"O minutes from 0 to 59.
サービスが使用できる時間間隔を指定する。
間隔の形式は \fI時:分-時:分\fP である
(間隔の境界での接続は受け付けられる\fIだろう\fP)。
時間は 0 から 23 の範囲で、分は 0 から 59 である。
.TP
.B log_type
.\"O determines where the service log output is sent. There are two formats:
サービスのログ出力がどこに送られるかを指定する。
二つの形式がある:
.RS
.TP
.B SYSLOG " \fIsyslog_facility [syslog_level]\fP"
.\"O The log output is sent to syslog at the specified facility. Possible facility
.\"O names include:
ログ出力は指定された機能分類(facility)で syslog に送られる。
指定可能な機能分類は
.\"O .I daemon,
.\"O .I auth,
.\"O .I authpriv,
.\"O .I user,
.\"O .I mail,
.\"O .I lpr,
.\"O .I news,
.\"O .I uucp,
.\"O .I ftp
.\"O .I "local0-7."
.IR daemon ", " auth ", " authpriv ", " user ", " mail , 
.IR lpr ", " news ", " uucp ", " ftp ", " "local0-7"
である。
.\"O Possible level names include:
指定可能なレベル名は
.\"O .I emerg,
.\"O .I alert,
.\"O .I crit,
.\"O .I err,
.\"O .I warning,
.\"O .I notice,
.\"O .I info,
.\"O .I debug.
.IR emerg ", " alert ", " crit ", " err ", " warning ", " notice ", " info ", " debug
である。
.\"O If a level is not present, the messages will be recorded at the
.\"O .I info
.\"O level.
レベル指定がない場合には、メッセージは
.I info
レベルで記録される。
.TP
.B FILE " \fIfile [soft_limit [hard_limit]]\fP"
.\"O The log output is appended to \fIfile\fP which will be created if it does
.\"O not exist. Two limits on the size of the log file can be optionally specified.
ログ出力は \fIfile\fP に追加され、そのファイルが無ければ作成される。
ログファイルのサイズに関しては、二つの制限をオプションで指定できる。
.\"O The first limit is a soft one;
一つ目の制限は弱い制限(soft_limit)である;
.\"O .B xinetd 
.\"O will log a message the first time this limit is exceeded (if 
.\"O .B xinetd
.\"O logs to syslog, the message will be sent at the 
.\"O .I alert
.\"O priority level).
.B xinetd
はこの制限を最初に越えたときにログ出力を行う
.RB ( xinetd
が syslog に出力する場合は、メッセージは優先度レベル
.I alert
で送られる)。
.\"O The second limit is a hard limit; 
二つ目の制限は強い制限(hard_limit)である;
.\"O .B xinetd 
.\"O will stop logging for the affected service (if the log file is a
.\"O common log file, then more than one service may be affected)
.\"O and will log a message about this (if
.\"O .B xinetd
.\"O logs to syslog, the message will be sent at the 
.\"O .I alert
.\"O priority level).
.B xinetd
は影響があるサービス
(ログファイルとして共通のログファイルを使っている場合には、
二つ以上のサービスが影響受ける)
のログ出力を中止し、その様にしたというメッセージをログ出力する
.RB ( xinetd
が syslog に出力する場合は、メッセージは優先度レベル
.I alert
で送られる)。
.\"O If a hard limit is not specified, it defaults to the soft limit
.\"O increased by 1% but the extra size must be within the parameters
.\"O .SM LOG_EXTRA_MIN
.\"O and
.\"O .SM LOG_EXTRA_MAX
.\"O which default to 5K and 20K respectively (these constants are defined in 
.\"O \fIconfig.h\fP).
強い制限が指定されていない場合は、デフォルトは弱い制限を 1% 増やした値である。
ただし、増やすサイズはパラメータ
.SM LOG_EXTRA_MIN
と
.SM LOG_EXTRA_MAX
(デフォルトは 5K と 20K で、
これらの定数は(コンパイル時に) \fIconfig.h\fP で定義される)
の間になければならない。
.RE
.TP
.B log_on_success
.\"O determines what information is logged when a server is started and when
.\"O that server exits (the service id is always included in the log entry).
.\"O Any combination of the following values may be specified:
サーバ起動時と終了時にどの情報をログ出力するかを指定する
(サービス id はログエントリに必ず含まれる)。
以下の値の任意の組合せが指定可能である:
.RS
.TP 12
.B PID
.\"O logs the server process id (if the service is implemented by \fBxinetd\fP
.\"O without forking another process the logged process id will be 0)
サーバのプロセスIDを出力する
(サービスが \fBxinetd\fP によって実装され、
他のプロセスへとフォークされない場合には、プロセス ID として 0 が出力される)
.TP
.B HOST
.\"O logs the remote host address
リモートホストのアドレスを出力する
.TP
.B USERID
.\"O logs the user id of the remote user using the RFC 1413 identification protocol.
.\"O This option is available only for multi-threaded stream services.
RFC 1413 で示される ident(identification) プロトコルを使って、
リモートユーザのユーザ ID を出力する。
このオプションはマルチスレッドなストリームサービスにのみ使用できる。
.TP
.B EXIT
.\"O logs the fact that a server exited along with the exit status or the
.\"O termination signal
.\"O (the process id is also logged if the
.\"O .B PID
.\"O option is used)
サーバが終了したことを、終了ステータスまたは終了シグナルと共に出力する
.RB ( PID
オプションが指定されている場合にはプロセスIDも出力される)
.TP
.B DURATION 
.\"O logs the duration of a service session
サービスセッションの時間を出力する
.RE
.TP
.B log_on_failure
.\"O determines what information is logged when a server cannot be started
.\"O (either because of a lack of resources or because of access control
.\"O restrictions). The service id is always included in the log entry along
.\"O with the reason for failure.
.\"O Any combination of the following values may be specified:
サーバが起動できなかった場合
(リソースが足りなかった場合と、アクセス制御による制限による場合のどちらでも)
にどの情報をログ出力するかを指定する。
サービスのidは失敗した理由と共に常にログエントリに含まれる。
以下の値の任意の組合せが指定可能である:
.RS
.TP 12
.B HOST
.\"O logs the remote host address.
リモートホストのアドレスを出力する
.TP
.B USERID
.\"O logs the user id of the remote user using the RFC 1413 identification protocol.
.\"O This option is available only for multi-threaded stream services.
RFC 1413 で示されるident プロトコルを使って、
リモートユーザのユーザ ID を出力する。
このオプションはマルチスレッドなストリームサービスにのみ使用できる。
.TP 
.B ATTEMPT
.\"O logs the fact that a failed attempt was made
.\"O (this option is implied by all others).
失敗があったことを出力する
(このオプションは他のすべてのオプションに含まれる)。
.RE
.TP
.B rpc_version
.\"O determines the RPC version for a RPC service. The version can be
.\"O a single number or a range in the form \fInumber\fP-\fInumber\fP.
RPC サービスの RPC バージョンを指定する。
バージョンには一つの数か、\fInumber\fP-\fInumber\fP 形式の範囲を指定できる。
.TP
.B rpc_number
.\"O determines the number for an
.\"O .I UNLISTED
.\"O RPC service (this attribute is ignored if the service is not unlisted).
.I リストにない(UNLISTED)
RPCサービスの番号を指定する
(サービスが標準的なシステムファイルにリストされているなら、
この属性は無視される)。
.TP
.B env
.\"O The value of this attribute is a list of strings of the form 'name=value'.
.\"O These strings will be added to the environment before
.\"O starting a server (therefore the server's environment will include
.\"O \fBxinetd\fP's environment plus the specified strings).
この属性の値は 'name=value' 形式の文字列のリストである。
これらの文字列はサーバが起動する前に、環境に加えられる
(すなわち、
サーバの環境は \fBxinetd\fP の環境に指定された文字列を加えたものである)。
.TP
.B passenv
.\"O The value of this attribute is a list of environment variables from
.\"O \fBxinetd\fP's environment that will be passed to the server.
.\"O An empty list implies passing no variables to the server
.\"O except for those explicitly defined using the
.\"O .I env
.\"O attribute.
.\"O (notice that you can use this attribute in conjunction with the
.\"O .I env
.\"O attribute to specify exactly what argument will be passed to the server).
この属性の値は \fBxinetd\fP の環境変数のリストで、
その環境がサーバへと渡される。
空のリストは、
.I env
属性を使って明示的に指定されたものを除いて、
どの変数もサーバへと渡されないことを意味する
(この属性と
.I env
の組合せによって、
サーバにどの環境が渡されるかを正確に指定できるということである)
.TP
.B port
.\"O determines the service port. If this attribute is specified for a service 
.\"O listed in
.\"O .I /etc/services,
.\"O it must be equal to the port number listed in that file.
サービスのポートを指定する。
.I /etc/services
ファイルにリストされているサービスに対してこの属性が指定された場合、
その値とファイルにあるポート番号とは等しくなければならない。
.TP
.B redirect
.\"O Allows a tcp service to be redirected to another host.  When xinetd receives
.\"O a tcp connection on this port it spawns a process that establishes a
.\"O connection to the host and port number specified, and forwards all data
.\"O between the two hosts.  This option is useful when your internal machines
.\"O are not visible to the outside world.  Syntax is: redirect = (ip address) 
.\"O (port).  You can also use a hostname instead of the IP address in this
.\"O field.  The hostname lookup is performed only once, when xinetd is 
.\"O started, and the first IP address returned is the one that is used
.\"O until xinetd is restarted.
.\"O The "server" attribute is not required when this option is specified.  If
.\"O the "server" attribute is specified, this attribute takes priority.
TCP サービスの他ホストへの転送を指定する。
このポートへの接続を xinetd が受け取ったら、プロセスを起動し、
指定されたホストのポート番号への接続を確立し、
二つのホストの間ですべてのデータを転送する。
このオプションは、内部マシンが外界から見えない場合に有用である。
書式は redirect = (IPアドレス) (ポート) である。
IP アドレスの代わりにホスト名を使うこともできる。
ホスト名検索は xinetd が起動した時の一回のみ行われ、
最初に返された IP アドレスが xinetd が再起動されるまで使われる。
このオプションが指定された場合には "server" 属性は必要ではない。
"server" 属性が指定されても、こちらの属性の方が優先される。
.TP
.B bind
.\"O Allows a service to be bound to a specific interface on the machine.
.\"O This means you can have a telnet server listening on a local, secured
.\"O interface, and not on the external interface.  Or one port on one interface
.\"O can do something, while the same port on a different interface can do 
.\"O something completely different.  Syntax: bind = (ip address of interface).
マシンの特定のインタフェースにサービスを割り当てることを指定する。
これは、安全なインタフェースであるローカルインタフェースで待ち(listen)、
外部インタフェースではそうしないような telnet サーバが
作成できることを意味する。
また、あるインタフェースのあるポートで何かしている場合に、
同時に違うインタフェースの同じポートで全く違ったことができる。
書式は bind = (インタフェースの IP アドレス) である。
.TP
.B interface
.\"O Synonym for bind.
bind に同じ。
.TP
.B banner
.\"O Takes the name of a file to be splatted at the remote host when a 
.\"O connection to that service is established.  This banner is printed
.\"O regardless of access control.  It should *always* be printed when
.\"O a connection has been made.
サービスへの接続が確立された時に、
リモートホストで表示されるファイルの名前を指定する。
このバナーはアクセス制御に関係なく表示される。
接続がなされた場合には *いつでも* これが表示されるはずである。
.TP
.B banner_success
.\"O Takes the name of a file to be splatted at the remote host when a
.\"O connection to that service is granted.  This banner is printed
.\"O as soon as access is granted for the service.  
サービスへの接続が許可された時に、
リモートホストで表示されるファイルの名前を指定する。
このバナーはサービスへのアクセスが許可されるとすぐに表示される。
.TP
.B banner_fail
.\"O Takes the name of a file to be splatted at the remote host when a
.\"O connection to that service is denied.  This banner is printed 
.\"O immediately upon denial of access.  This is useful for informing
.\"O your users that they are doing something bad and they shouldn't be
.\"O doing it anymore.
サービスへの接続が拒否された時に、
リモートホストで表示されるファイルの名前を指定する。
このバナーはアクセスが拒否されるとすぐに表示される。
ユーザに対し、そのユーザが何か悪いことをしたということ、
そしてこれ以上何もするなということを通知するのに有用である。
.TP
.B per_source
.\"O Takes an integer or "UNLIMITED" as an argument.  This specifies the
.\"O maximum instances of this service per source IP address.  This can
.\"O also be specified in the defaults section.
発信元 IP アドレスごとの、そのサービスに対する最大サービス数を指定する。
引き数には一つの整数か "UNLIMITED"(無制限) をとる。
このオプションは、デフォルトセクション(後述)で指定することも可能である。
.TP
.B cps
.\"O Limits the rate of incoming connections.  Takes two arguments.  
.\"O The first argument is the number of connections per second to handle.
.\"O If the rate of incoming connections is higher than this, the service
.\"O will be temporarily disabled.  The second argument is the number of
.\"O seconds to wait before re-enabling the service after it has been disabled.
.\"O The default for this setting is 50 incoming connections and the interval
.\"O is 10 seconds.
入ってくる接続の割合の制限。
二つの引き数を取る。
最初の引き数は 1 秒あたりに処理する接続数である。
入ってくる接続の割合がこの値より大きくなると、
サービスは一時的に使用不可になる。
二つ目の引き数は、使用不可になってから再び使用可能になるまでに待つ秒数である。
この設定のデフォルトは、50 の入ってくる接続と、待つのは 10 秒である。
.TP
.B max_load
.\"O Takes a floating point value as the load at which the service will 
.\"O stop accepting connections.  For example: 2 or 2.5.  The service
.\"O will stop accepting connections at this load.  This is the one minute
.\"O load average.  This is an OS dependent feature, and currently only
.\"O Linux and Solaris are supported for this.
サービスが接続の受け付けを停止するようになる負荷(load)値を、
浮動小数点数で指定する。
例えば、2 や 2.5 である。
負荷がこの値になると、サービスは接続の受け付けを停止する。
これは 1 分間の平均負荷値(load average)である。
これは OS に依存した機能で、Linux と Solaris でだけサポートされる。
.TP
.B groups
.\"O Takes either "yes" or "no".  If the groups attribute is set to
.\"O "yes", then the server is executed with access to the groups that the
.\"O server's effective UID has access to.  If the groups attribute is set
.\"O to "no", then the server runs with no supplementary groups.  This
.\"O attribute must be set to "yes" for many BSD systems.  This attribute
.\"O can be set in the defaults section as well.
.\"SEKINE 実効 GID 以外に有効な group を、一般には何て呼ぶのでしょう?
"yes" または "no" を引き数にとる。
groups 属性が "yes" の場合、サーバの実効 UID でアクセスできる
グループにアクセスできるようにサーバが実行される。
groups 属性が "no" の場合、サーバは他のグループなしで実行される。
多くの BSD システムでは、この属性は "yes" にされなければならない。
このオプションは、デフォルトセクションで指定することも可能である。
.TP
.B umask
.\"O Sets the inherited umask for the service.  Expects an octal value.  
.\"O This option may be set in the "defaults" section to set a umask
.\"O for all services.  xinetd sets its own umask to the previous umask
.\"O OR'd with 022.  This is the umask that will be inherited by all 
.\"O child processes if the umask option is not used.
サービスが継承する umask を指定する。
8進数で指定する。
全てのサービスの umask を設定するために、"defaults" セクションで
指定することも可能である。
xinetd は自分自身の umask を、継承した umask と 022 との OR に設定する。
umask オプションが指定されなければ、この xinetd の umask 値が全ての
子プロセスに継承される。
.TP
.B enabled
.\"O Takes a list of service names to enable.  This will enable only the
.\"O services listed as arguments to this attribute; the rest will be
.\"O disabled.  Not that the service "disable" attribute and "DISABLE"
.\"O flag can prevent a service from being enabled despite being listed
.\"O in this attribute.
有効にするサービス名のリストを指定する。
この属性の引数としてリストされたサービスだけが有効になる。
すなわち、残りのサービスは無効になる。
"disable" 属性と "DISABLE" フラグは、この属性でリストされたかに関係なく
サービスが有効になるのを防ぐことができることに注目せよ。
.TP
.B include
.\"O Takes a filename in the form of "include /etc/xinetd/service".
.\"O The file is then parsed as a new configuration file.  It is not 
.\"O the same thing as pasting the file into xinetd.conf where the 
.\"O include directive is given.  The included file must be in the 
.\"O same form as xinetd.conf.  This may not be specified from within
.\"O a service.  It must be specified outside a service declaration.
"include /etc/xinetd/service" という形式で、ファイル名を指定する。
そのファイルは新たな設定ファイルとして解析(parse)される。
xinetd.conf の include が指定された場所にファイルを貼り付けるのとは、
同じではない。
取り込まれたファイルは xinetd.conf と同じ形式でなければならない。
サービス定義の内部でこの属性を指定してはいけない。
サービス定義の外側で指定されなければならない。
.TP
.B includedir
.\"O Takes a directory name in the form of "includedir /etc/xinetd.d".
.\"O Every file inside that directory, excluding files with names containing
.\"O a dot ('.') or ending with a tilde ('~'), will be parsed as xinetd 
.\"O configuration files.  The files will be parsed in alphabetical order
.\"O according to the C locale. This allows you to specify services one 
.\"O per file within a directory.  The
.\"O .B includedir
.\"O directive may not be specified from within a service declaration.  
"includedir /etc/xinetd.d" という形式でディレクトリ名を指定する。
そのディレクトリのすべてのファイル(ただし名前にドット('.')を含むファイルと、
名前がチルダ('~')で終わるファイル以外)
は xinetd 設定ファイルとして解析される。
ファイルは C ロケールでのアルファベット順で解析される。
.B includedir 
はサービス定義の内部で指定されてはならない。
.TP
.B rlimit_as
.\"O Sets the Address Space resource limit for the service. One parameter
.\"O is required, which is either a positive integer representing the number
.\"O of bytes to set the limit to (K or M may be used to specify
.\"O kilobytes/megabytes) or "UNLIMITED".  Due to the way Linux's libc malloc
.\"O is implemented, it is more useful to set this limit than rlimit_data,
.\"O rlimit_rss and rlimit_stack. This resource limit is only implemented on
.\"O Linux systems.
サービスの、アドレス空間資源の制限を設定する。
パラメータが一つ必要で、制限するバイト数
(キロバイト・メガバイトを指定するのに K, M が使える)を表す正の整数か、
"UNLIMITED" (無制限)を指定する。
Linux の libc の malloc の実装方法の関係で、
rlimit_data, rlimit_rss, rlimit_stack よりもこの制限を設定する方が有用である。
この資源制限は Linux システムでのみ実装されている。
.TP
.B rlimit_cpu
.\"O Sets the maximum number of CPU seconds that the service may use.
.\"O One parameter is required, which is either a positive integer representing
.\"O the number of CPU seconds limit to, or "UNLIMITED".
サービスが使える最大 CPU 時間(秒単位)を設定する。
パラメータが一つ必要で、CPU 時間を制限する正の整数か、
"UNLIMITED" (無制限)を指定する。
.TP
.B rlimit_data
.\"O Sets the maximum data size resource limit for the service.
.\"O One parameter is required, which is either a positive integer representing
.\"O the number of bytes or "UNLIMITED".
サービスの最大データサイズの制限を設定する。
パラメータが一つ必要で、バイト数を表す正の整数か、
"UNLIMITED" (無制限)を指定する。
.TP
.B rlimit_rss
.\"O Sets the maximum resident set size limit for the service.  Setting this
.\"O value low will make the process a likely candidate for swapping out to
.\"O disk when memory is low.
.\"O One parameter is required, which is either a positive integer representing
.\"O the number of bytes or "UNLIMITED".
サービスの最大常駐サイズの制限を設定する。
この値を小さくすれば、メモリが少ない時に
プロセスがディスクへとスワップアウトされる候補になりやすくなる。
パラメータが一つ必要で、バイト数を表す正の整数か、
"UNLIMITED" (無制限)を指定する。
.TP
.B rlimit_stack
.\"O Set the maximum stack size limit for the service.
.\"O One parameter is required, which is either a positive integer representing
.\"O the number of bytes or "UNLIMITED".
サービスの最大スタックサイズを設定する。
パラメータが一つ必要で、バイト数を表す正の整数か、
"UNLIMITED" (無制限)を指定する。
.TP
.B deny_time
.\"O Sets the time span that access to all services on all IP addresses are
.\"O denied to someone that sets off the SENSOR. The unit of time is in minutes.
SENSOR を作動させた何者かの IP アドレスからの、全てのサービスへのアクセスを
拒否する期間。単位は分。
.\"O Valid options are: FOREVER, NEVER, and a numeric value. FOREVER causes
.\"O the IP address not to be purged until xinetd is restarted. NEVER has the
.\"O effect of just logging the offending IP address. A typical time value would
.\"O be 60 minutes. This should stop most DOS attacks while allowing IP addresses
.\"O that come from a pool to be recycled for legitimate purposes. This option
.\"O must be used in conjunction with the SENSOR flag.
指定可能なオプションは FOREVER, NEVER そして数値である。
FOREVER では、xinetd が再起動されるまでその IP アドレスは消去されない。
NEVER は迷惑な IP アドレスをログに取る効果だけである。
典型的な値は 60 分である。
これなら、正当な目的でその IP アドレスが再利用されるのを許可する一方で、
殆んどの DoS 攻撃を防ぐことができる。
このオプションは SENSOR フラグとの組合わせで用いること。
.LP
.\"O You don't need to specify all of the above attributes for each service.
.\"O The necessary attributes for a service are:
それぞれのサービスで以上の属性をすべて指定する必要はない。
必要な属性は以下の通り:
.sp 1
.PD .1v
.RS
.TP 18
.B socket_type
.TP
.B user
.\"O (non-\fIinternal\fP services only)
(非\fI内部\fPサービスのみ)
.TP
.B server
.\"O (non-\fIinternal\fP services only)
(非\fI内部\fPサービスのみ)
.TP
.B wait
.TP
.B protocol
.\"O (\fIRPC\fP and \fIunlisted\fP services only)
(\fIRPC\fP と \fIリストにない(UNLISTED)\fPサービスのみ)
.TP
.B rpc_version
.\"O (\fIRPC\fP services only)
(\fIRPC\fP サービスのみ)
.TP
.B rpc_number
.\"O (\fIunlisted\fP RPC services only)
(\fIリストにない\fP RPC サービスのみ)
.TP
.B port
.\"O (\fIunlisted\fP non-RPC services only)
(\fIリストにない\fP非 RPC サービスのみ)
.RE
.PD
.LP
.\"O The following attributes support all assignment operators:
以下の属性はすべての代入演算子をサポートする:
.sp 1
.PD .1v
.RS
.TP 18
.B only_from
.TP
.B no_access
.TP
.B log_on_success
.TP
.B log_on_failure
.TP
.B passenv
.TP
.B env
.\"O (does not support the
.\"O .B '-='
.\"O operator)
.RB ( '-='
演算子はサポートしない)
.RE
.PD
.LP
.\"O These attributes can also appear more than once in a service entry.
これらの属性は一つのサービスエントリで複数回あらわれてもよい。
.\"O The remaining attributes support only the 
.\"O .B '='
.\"O operator and can appear at most once in a service entry.
残りの属性は
.B '='
演算子のみをサポートし、一つのサービスエントリで一回以下しか現れない。
.LP
.\"O The configuration file may also contain a single defaults entry
.\"O that has the form
また、設定ファイルは以下の形式のデフォルトエントリを一つ持つ。
.LP
.RS
.nf
.ft B
defaults
{
.RS
.ft B
.\"O <attribute> = <value> <value> ...
<属性> = <値> <値> ...
.I "..."
.RE
.ft B
}
.ft R
.fi
.RE
.LP
.\"O This entry provides default attribute values for service entries that
.\"O don't specify those attributes. Possible default attributes:
このエントリは、そのサービスで属性値が指定されなかった場合の、
デフォルトの属性値を決定する。指定可能なデフォルトの属性は:
.sp 1
.PD .1v
.RS
.TP 18
.B log_type
.TP
.B bind 
.TP
.B per_source 
.TP
.B umask 
.TP
.B log_on_success
.\"O (cumulative effect)
(積算効果)
.TP
.B log_on_failure
.\"O (cumulative effect)
(積算効果)
.TP
.B only_from
.\"O (cumulative effect)
(積算効果)
.TP
.B no_access
.\"O (cumulative effect)
(積算効果)
.TP
.B passenv
.\"O (cumulative effect)
(積算効果)
.TP
.B instances
.TP
.B disabled
.\"O (cumulative effect)
(積算効果)
.TP
.B enabled
.\"O (cumulative effect)
(積算効果)
.RE
.PD
.LP
.\"O Attributes with a cumulative effect can be specified multiple times
.\"O with the values specified each time accumulating (i.e. '=' does
.\"O the same thing as '+=').
積算効果を持つ属性は、複数回指定することができ、その度に積み上げられる
(すなわち '=' は '+=' と同じことをする)。
.\"O With the exception of
.\"O .I disabled
.\"O they all have the same meaning as if they were specified in a service entry.
.\"O .I disabled
.\"O determines services that are disabled even if they have entries in
.\"O the configuration file. This allows for quick reconfiguration by
.\"O specifying disabled services with the
.\"O .I disabled
.\"O attribute instead of commenting them out.
.I disabled
の例外を除いて、サービスエントリで指定された場合と同じ意味を持つ。
.I disabled
は、設定ファイルにエントリがあるものでさえも使用不可にする。
これにより、コメントアウトする代わりに、
.I disabled
属性を使って使用不可にするサービスを、素早く再設定できる。
.\"O The value of this attribute is a list of space separated service ids.
.\"O .I enabled 
.\"O has the same properties as disabled.  The difference being that
.\"O .I enabled 
.\"O is a list of which services are to be enabled.  If 
.\"O .I enabled 
.\"O is specified, only the services specified are available.  If
.\"O .I enabled 
.\"O is not specified, all services are assumed to be enabled,
.\"O except those listed in 
.\"O .I disabled.
この属性の値は、スペースで区切られた、サービス id のリストである。
.I enabled
は disabled と同じ特性を持つ。違いは
.I enabled
は使用可能にするサービスのリストであるということだ。もし
.I enabled
が指定された場合、指定されたサービスだけが使用可能になる。
.I enabled
が指定されなかった場合は、すべてのサービスが使用可能と仮定され、
.I disabled
にリストされたものが除外される。
.\"O
.\" *********************** INTERNAL SERVICES ****************************
.\"O .SH "INTERNAL SERVICES"
.SH 内部サービス
.LP
.\"O \fBxinetd\fP provides the following services internally (both
.\"O stream and datagram based):
\fBxinetd\fP は以下のサービスを内部的に提供する
(ストリーム型、データグラム型の両方とも):
.\"O .I echo,
.\"O .I time,
.\"O .I daytime,
.\"O .I chargen,
.\"O and
.\"O .I discard.
.IR echo ", " time ", " daytime ", " chargen ", " discard
である。
.\"O These services are under the same access restrictions as all other
.\"O services except for the ones that don't require \fBxinetd\fP to fork
.\"O another process for them. Those ones (\fItime\fP, \fIdaytime\fP,
.\"O and the datagram-based \fIecho\fP, \fIchargen\fP, and \fIdiscard\fP) 
.\"O have no limitation in the number of 
.\"O .B instances.
\fBxinetd\fP が他のプロセスへと fork する必要がないということを除けば、
これらのサービスは、他のサービスと同様にアクセス制限の下にある。
これら
.RI ( time ", " daytime
と、データグラム型の
.IR echo ", " chargen ", " discard )
は
.B instances
の数に制限がない。
.LP
.\"O .B xinetd
.\"O also provides two
.\"O .I UNLISTED
.\"O internal stream-based services:
.\"O .I servers
.\"O and
.\"O .I services.
.B xinetd
はまた、二つの
.I UNLISTED
なストリーム型内部サービスを提供する:
.I servers
と
.I services
である。
.\"O The former lists information about running servers while the latter
.\"O provides a list of currently active services. 
.\"O There is one service per line and each line contains the service name,
.\"O protocol (e.g. "tcp") and port number.
前者は実行しているサーバの情報を表示し、
一方後者は現在有効なサービスのリストを提供する。
一行に一つのサービスで、
各行はサービス名・プロトコル(例えば "tcp")・ポート番号からなる。
.LP
.\"O There is also now an administrative interface that is an internal
.\"O service.  The service name "xadmin" is reserved, and will always be
.\"O an internal service.  You should specify a port number for this
.\"O service, and probably also some IP based access control, since at
.\"O the time of this writing it does not have any password protection.
.\"O You can telnet to this port and query xinetd for some information.
今や管理インタフェースがあり、それは内部サービスである。
サービス名 "xadmin" は予約されており、それは常に内部サービスである。
このサービスにはポート番号を指定しなければならず、
多分 IP ベースのアクセス制御もしなければならないだろう。
なぜならば、これを執筆している時点では、
パスワード保護を何も持たないからである。
このポートに telnet し、xinetd にいくらかの問い合わせをすることができる。
.\"O 
.\" *********************** TCPMUX Services ****************************
.\"O .SH "TCPMUX Services"
.SH "TCPMUX サービス"
.LP
.\"O \fBxinetd\fP supports TCPMUX services that conform to RFC 1078. These services 
.\"O may not have a well-known port associated with them, and can be accessed via 
.\"O the TCPMUX well-known port.
.B xinetd
は RFC 1078 に準拠した TCPMUX サービスをサポートする。
サービスがそれに対応する well-known ポートを持たなくても、
well-known ポートである TCPMUX を通じてアクセスができる。
.LP
.\"O For each service that is to be accessed via TCPMUX, a service entry in
.\"O \fB/etc/xinetd.conf\fP or in a configuration file in an \fBincludedir\fP 
.\"O directory must exist.
TCPMUX を通じてアクセスされるサービスは、それぞれ
.B /etc/xinetd.conf
にサービスエントリーを持つか、もしくは
.B includedir
ディレクトリの設定ファイルにサービスエントリがなければならない。
.LP
.\"O The \fIservice_name\fP field (as defined above for each service in any 
.\"O \fBxinetd\fP 
.\"O configuration file) must be identical to the string that is passed (according 
.\"O to RFC 1078 protocol) to \fBxinetd\fP when the remote service requestor first 
.\"O makes the connection on the TCPMUX well-known port.  Private protocols should 
.\"O use a service name that has a high probability of being unique. One way is to 
.\"O prepend the service name with some form of organization ID.
.\"SEKINE (as defined …) の訳に自信がありません
.\"SEKINE organization ID はドメイン名としました
.I service_name
フィールド(各
.B xinetd
の設定ファイルで、サービスの最初で定義される)は
.B xinetd
に(RFC 1078 プロトコルによって)渡される文字列に等しくなければならない。
それはリモートのサービス要求者が最初に well-known ポートである TCPMUX に
アクセスしたときに渡される。
プライベートなプロトコルは高い確率で一意になるサービス名を使うべきだ。
ひとつの方法は、ドメイン名の前にサービス名を付加することである、
.LP
.\"O The \fItype\fP field can be either \fBTCPMUX\fP or \fBTCPMUXPLUS\fP. If the
.\"O type is \fBTCPMUXPLUS\fP, \fBxinetd\fP will handle the initial protocol
.\"O handshake (as defined in RFC 1078) with the calling process before initiating
.\"O the service. If the type is \fBTCPMUX\fP, the server that is started is
.\"O responsible for performing the handshake.
.I type
フィールドは
.B TCPMUX
または
.B TCPMUXPLUS
のどちらかである。
.B TCPMUXPLUS
が指定された場合、
.B xinetd
はサービスを初期化する前にプロセス呼び出して、
(RFC 1078 で定義される)プロトコルの最初のハンドシェイクを処理する。
type が
.B TCPMUX
の場合は、ハンドシェークを遂行するために開始されているサーバが対処する。
.LP
.\"O The \fItype\fP field should also include \fBUNLISTED\fP if the service is
.\"O not listed in a standard system file
.\"O (like
.\"O .I /etc/rpc
.\"O for RPC services, or
.\"O .I /etc/services
.\"O for non-RPC services).
サービスが標準的なシステムファイル
(RPC サービスなら、
.IR /etc/rpc ,
RPCサービスでないなら
.I /etc/services
など)
に無い場合は、
.I type
には
.B UNLISTED
も指定する。
.LP	
.\"O The \fIsocket_type\fP for these services must be \fBstream\fP, and the 
.\"O \fIprotocol\fP must be \fBtcp\fP.
これらのサービスに対する
.I socket_type
は
.B stream
でなければならず、また
.I protocal
は
.B tcp
でなければならない。
.LP
.\"O Following is a sample TCPMUX service configuration:
以下は TCPMUX サービス設定のサンプルである。
.PD .1v
.RS
.nf

service myorg_server
{
.RS
.IP disable 20
= no
.IP type
= TCPMUX
.IP socket_type
= stream
.IP protocol
= tcp
.IP wait
= no
.IP user
= root
.IP server
= /usr/etc/my_server_exec
.RE
}
.fi
.RE
.PD
.LP
.\"O Besides a service entry for each service that can be accessed
.\"O via the TCPMUX well-known port, a service entry for TCPMUX itself
.\"O must also be included in the \fBxinetd\fP configuration. Consider the following
.\"O sample:
well-known ポートの TCPMUX を通じてアクセスされる各サービスの
サービスエントリの他に、TCPMUX 自身のサービスエントリも
.B xinetd
の設定の中に含まれなければならない。
以下のサンプルを見よ:
.PD .1v
.RS
.nf

service tcpmux
{
.RS
.IP type 20
= INTERNAL
.IP id
= tcpmux
.IP socket_type
= stream
.IP protocol
= tcp
.IP user
= root
.IP wait
= no
.RE
}
.fi
.RE
.PD                                                                               
.\"O 
.\"O 
.\"O 
.\" *********************** NOTES ****************************
.\"O .SH NOTES
.SH 注意
.IP 1. 4
.\"O The following service attributes \fIcannot\fP be changed on reconfiguration:
以下のサービス属性は、再設定で変更することが\fIできない\fP:
.\"O .B socket_type,
.\"O .B wait,
.\"O .B protocol,
.\"O .B type.
.BR socket_type ", " wait ", " protocol ", " type
である。
.IP 2.
.\"O When the attributes
.\"O .I only_from
.\"O and
.\"O .I no_access
.\"O are not specified for a service (either directly or via \fIdefaults\fP)
.\"O the address check is considered successful (i.e. access will not be
.\"O denied).
属性
.I only_from
と
.I no_access
が(直接、\fIdefaults\fPのどちらでも)指定されなかったサービスは、
アドレスの照合は成功したものとして扱われる
(すなわち、アクセスは拒否されない)。
.IP 3.
.\"O The address check is based on the IP address of the remote host and
.\"O not on its domain address. We do this so that we can avoid
.\"O remote name lookups which may take a long time (since
.\"O .B xinetd
.\"O is single-threaded, a name lookup will prevent the daemon from
.\"O accepting any other requests until the lookup is resolved).
アドレス照合はリモートホストの IP アドレスとを基にしており、
ドメインアドレスには依らない。
長い時間がかかるリモートホストの名前検索を避けられるので、そうなっている
(なぜならば、
.B xinetd
は単一スレッドであり、
名前検索はデーモンがその検索を終えるまで、
他の全ての要求を受け付けるのを妨げるからである)。
.\"O The down side of this scheme is that if the IP address of a remote
.\"O host changes, then access to that host may be denied until
.\"O .B xinetd
.\"O is reconfigured.
この枠組の悪い面は、リモートホストの IP アドレスが変わってしまうと
.B xinetd
を再設定するまでは、アクセスが拒否されてしまうことである。
.\"O Whether access is actually denied or not will depend on whether the
.\"O new host IP address is among those allowed access. For example, if
.\"O the IP address of a host changes from 1.2.3.4 to 1.2.3.5 and 
.\"O only_from is specified as 1.2.3.0 then access will not be denied.
アクセスが実際に供されるかどうかは、
新たな IP アドレスが許可されたアクセスにあるかどうかによる。
例えば、ホストの IP アドレスが 1.2.3.4 から 1.2.3.5 に変更され、
only_from が 1.2.3.0 と指定されていれば、アクセスは拒否されない。
.IP 4.
.\"O If the
.\"O .B USERID
.\"O log option is specified and the remote host either does not run an 
.\"O identification server or the server sends back a bad reply,
.\"O access will not be denied unless the
.\"O .I IDONLY
.\"O service flag is used.
ログオプション
.B USERID
が指定され、もしリモートホストが ident サーバを動かしてないか、または
ident サーバが壊れた返事を送り返してきたら、
サービスフラグ
.I IDONLY
が使われない限り、アクセスは拒否されない。
.IP 5.
.\"O Interception works by forking a process which acts as a filter
.\"O between the remote host(s) and the local server. 
.\"O This obviously has a performance impact so
.\"O it is up to you to make the compromise between security and performance
.\"O for each service.
プロセスをフォークし、
それがリモートホストとローカルサーバの間でフィルタとして振舞うことにより、
横取りが機能する。
これは明らかに性能に影響を及ぼすので、
各サービスごとのセキュリティと性能との間の妥協は、あなたに任されている。
.\"O The following tables show the overhead of interception.
.\"O The first table shows the time overhead-per-datagram for a UDP-based service
.\"O using various datagram sizes.
.\"O For TCP-based services we measured the bandwidth reduction 
.\"O because of interception while sending
.\"O a certain amount of data from client to server (the time overhead should
.\"O the same as for UDP-based services but it is "paid" only by the first
.\"O packet of a continuous data transmission).
以下の表は横取りのオーバーヘッドを示す。
最初の表は様々なデータグラムサイズでの、UDP ベースのサービスにおけるデータグラムあたりのオーバーヘッドである。
TCP ベースのサービスについては、横取りによるバンド幅の減少を計測した。
計測の間は、ある量のデータをクライアントからサーバへ送った
(時間のオーバーヘッドは UDP ベースのサービスと同じはずだが、
連続するデータ転送の最初のパケットだけにかかる)。
.\"O The amount of data is given
.\"O in the table as \fIsystem_calls\fPx\fIdata_sent_per_call\fP, i.e.
.\"O each
.\"O .I "send(2)"
.\"O system call transferred so many bytes of data. 
データ量は表の
.IR システムコール数 x システムコールあたりのデータ量
から得られる。すなわち、各
.I "send(2)"
システムコールはそれほど多くのデータを転送した。
.\"O The bandwidth reduction is given in terms of bytes per second and as
.\"O a percentage of the bandwidth when interception is not performed.
.\"O All measurements were done on a SparcStation IPC running SunOS 4.1.
バンド幅の減少は、秒あたりのバイト数と、
横取りが行われなかった場合からの割合で与えられる。
全ての計測は SunOS 4.1 が走る SparcStation IPC で行われた。
.sp 1
.RS
.RS
.PD .1v
.TP 28
.\"O Datagram size (bytes)
.\"O Latency (msec)
データグラムサイズ(バイト)
遅延(ミリ秒)
.TP
.\"O ---------------------
.\"O --------------
--------------------------
------------
.TP
64
1.19
.TP
256
1.51
.TP
1024
1.51
.TP
4096
3.58
.sp 2
.TP
.\"O Bytes sent
.\"O Bandwidth reduction
送信バイト
バンド幅減少
.TP
.\"O ----------
.\"O -------------------
----------
------------
.TP
10000x64
941 (1.2%)
.TP
10000x256
4,231 (1.8%)
.TP
10000x1024
319,300 (39.5%)
.TP
10000x4096
824,461 (62.1%)
.RE
.RE
.sp 1
.\" *********************** EXAMPLE ****************************
.\"O .SH EXAMPLE
.SH 例
.LP
.PD .1v
.RS
.nf
#
.\"O # Sample configuration file for xinetd
# xinetd のサンプル設定ファイル
#

defaults
{
.RS
.IP log_type 20
= FILE /var/log/servicelog
.IP log_on_success
= PID
.IP log_on_failure 
= HOST RECORD
.IP only_from
= 128.138.193.0 128.138.204.0
.IP only_from
= 128.138.252.1 
.IP instances
= 10
.IP disabled
= rstatd
.RE
}

#
.\"O # Note 1: the protocol attribute is not required
.\"O # Note 2: the instances attribute overrides the default
# 注意 1: protocol 属性は必要ない
# 注意 2: instances 属性はデフォルト値を上書き
#
service login
{
.RS
.IP socket_type 20
= stream
.IP protocol
= tcp
.IP wait
= no
.IP user
= root
.IP server
= /usr/etc/in.rlogind
.IP instances
= UNLIMITED
.RE
}

#
.\"O # Note 1: the instances attribute overrides the default
.\"O # Note 2: the log_on_success flags are augmented
# 注意 1: instances 属性はデフォルト値を上書き
# 注意 2: log_on_success フラグは引き数
#
service shell
{
.RS
.IP socket_type 20
= stream
.IP wait
= no
.IP user
= root
.IP instances
= UNLIMITED
.IP server
= /usr/etc/in.rshd
.IP log_on_success
+= HOST RECORD
.RE
}

service ftp
{
.RS
.IP socket_type 20
= stream
.IP wait
= no
.IP nice
= 10
.IP user
= root
.IP server
= /usr/etc/in.ftpd
.IP server_args
= -l
.IP instances
= 4
.IP log_on_success
+= DURATION HOST USERID
.IP access_times
= 2:00-9:00 12:00-24:00
.RE
}

.\"O # Limit telnet sessions to 8 Mbytes of memory and a total
.\"O # 20 CPU seconds for child processes.
# telnet セッションを、8 メガバイトのメモリーと子プロセスを
# 合計 20 CPU 秒に制限
service telnet
{
.RS
.IP socket_type 20
= stream
.IP wait
= no
.IP nice
= 10
.IP user
= root
.IP server
= /usr/etc/in.telnetd
.IP rlimit_as
= 8M
.IP rlimit_cpu
= 20
.RE
}

#
.\"O # This entry and the next one specify internal services. Since
.\"O # this is the same service using a different socket type, the
.\"O # id attribute is used to uniquely identify each entry
# このエントリとその次は、内部サービスを指定する。
# 違うソケットタイプの同じサービスなので、
# 各エントリを唯一に識別するために id 属性を用いる
#
service echo
{
.RS
.IP id 20
= echo-stream
.IP type
= INTERNAL
.IP socket_type
= stream
.IP user
= root
.IP wait
= no
.RE
}

service echo
{
.RS
.IP id 20
= echo-dgram
.IP type
= INTERNAL
.IP socket_type
= dgram
.IP user
= root
.IP wait
= no
.RE
}

service servers
{
.RS
.IP type 20
= INTERNAL UNLISTED
.IP protocol
= tcp
.IP port
= 9099
.IP socket_type
= stream
.IP wait
= no
.RE
}

#
.\"O # Sample RPC service
# RPC サービスのサンプル
#
service rstatd
{
.RS
.IP type 20
= RPC
.IP socket_type
= dgram
.IP protocol
= udp
.IP server
= /usr/etc/rpc.rstatd
.IP wait
= yes
.IP user
= root
.IP rpc_version
= 2-4
.IP env
= LD_LIBRARY_PATH=/etc/securelib
.RE
}

#
.\"O # Sample unlisted service
# リストにないサービスのサンプル
#
service unlisted
{
.RS
.IP type 20
= UNLISTED
.IP socket_type
= stream
.IP protocol
= tcp
.IP wait
= no
.IP server
= /home/user/some_server
.IP port
= 20020
.RE
}
.RE
.PD
.\" *********************** SEE ALSO ****************************
.\"O .SH "SEE ALSO"
.SH 関連項目
.I "xinetd(1L),"
.LP
.I "xinetd.log(5)"
.LP
Postel J.,
.IR "Echo Protocol" ,
RFC 862,
May 1983
.LP
Postel J.,
.IR "Discard Protocol" ,
RFC 863,
May 1983
.LP
Postel J.,
.IR "Character Generator Protocol" ,
RFC 864,
May 1983
.LP
Postel J.,
.IR "Daytime Protocol" ,
RFC 867,
May 1983
.LP
Postel J., Harrenstien K.,
.IR "Time Protocol" ,
RFC 868,
May 1983
.LP
M. Lottor,
.IR "TCP Port Service Multiplexer (TCPMUX)" ,
RFC 1078,
Nov 1988
.LP
StJohns M.,
.IR " Identification Protocol" ,
RFC 1413,
February 1993
.\" *********************** BUGS ****************************
.\"O .SH BUGS
.SH バグ
.LP
.\"O If the
.\"O .B INTERCEPT
.\"O flag is not used,
.\"O access control on the address of the remote host is not performed when
.\"O \fIwait\fP is \fIyes\fP and \fIsocket_type\fP is \fIstream\fP.
.B INTERCEPT
フラグが使われなかった場合、
\fIwait\fP が \fIyes\fP で \fIsocket_type\fP が \fIstream\fP のときは、
リモートホストアドレスのアクセス制御は行われない。
.LP
.\"O If the 
.\"O .B INTERCEPT
.\"O flag is not used,
.\"O access control on the address of the remote host for
.\"O services where \fIwait\fP is \fIyes\fP and \fIsocket_type\fP is \fIdgram\fP
.\"O is performed only on the first packet. The server may then accept packets
.\"O from hosts not in the access control list. This can happen with 
.\"O .B RPC
.\"O services.
.B INTERCEPT
フラグが使われなかった場合、
\fIwait\fP が \fIyes\fP で \fIsocket_type\fP が \fIdgram\fP のサービスの
リモートホストアドレスによるアクセス制御は、最初のパケットにのみ行われる。
アクセス制御リストにないホストからのパケットをサーバは受け付けてしまう。
これは
.B RPC
サービスの場合に起きる。
.LP
.\"O There is no way to put a
.\"O .SM SPACE
.\"O in an environment variable.
環境変数に
.SM 空白
を入れる方法がない。
.LP
.\"O When \fIwait\fP is \fIyes\fP and \fIsocket_type\fP is \fIstream\fP,
.\"O the socket passed to the server can only accept connections.
\fIwait\fP が \fIyes\fP で \fIsocket_type\fP が \fIstream\fP のとき、
接続が受け付けられた場合のみ、ソケットがサーバへ渡される。
.LP
.\"O The
.\"O .B INTERCEPT
.\"O flag is not supported for internal services or multi-threaded services.
.B INTERCEPT
フラグは、内部サービスとマルチスレッドサービスではサポートされない。
