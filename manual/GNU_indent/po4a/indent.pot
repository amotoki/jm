# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-05-09 04:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: original/man1/indent.1:1
#, no-wrap
msgid "INDENT"
msgstr ""

#. type: SH
#: original/man1/indent.1:2
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:4
msgid ""
"indent - changes the appearance of a C program by inserting or deleting "
"whitespace."
msgstr ""

#. type: SH
#: original/man1/indent.1:4
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:7
msgid "B<indent > [options] [input-files]"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:10
msgid "B<indent > [options] [single-input-file] [-o output-file]"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:13
msgid "B<indent > --version"
msgstr ""

#. type: SH
#: original/man1/indent.1:13
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:17
msgid ""
"This man page is generated from the file I<indent.texinfo>.  This is Edition "
"2.2.9 of \"The B<indent> Manual\", for Indent Version 2.2.9, last updated 10 "
"November 2002."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:21
msgid ""
"The B<indent> program can be used to make code easier to read.  It can also "
"convert from one style of writing C to another."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:24
msgid ""
"B<indent> understands a substantial amount about the syntax of C, but it "
"also attempts to cope with incomplete and misformed syntax."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:27
msgid ""
"In version 1.2 and more recent versions, the GNU style of indenting is the "
"default."
msgstr ""

#. type: SH
#: original/man1/indent.1:27
#, no-wrap
msgid "OPTIONS"
msgstr ""

#. type: TP
#: original/man1/indent.1:29
#, no-wrap
msgid "B<-bad>, B<--blank-lines-after-declarations>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:32
msgid "Force blank lines after the declarations."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:34 original/man1/indent.1:39 original/man1/indent.1:44 original/man1/indent.1:217 original/man1/indent.1:222 original/man1/indent.1:322 original/man1/indent.1:401
msgid "See B<\\ BLANK\\ LINES>."
msgstr ""

#. type: TP
#: original/man1/indent.1:34
#, no-wrap
msgid "B<-bap>, B<--blank-lines-after-procedures>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:37
msgid "Force blank lines after procedure bodies."
msgstr ""

#. type: TP
#: original/man1/indent.1:39
#, no-wrap
msgid "B<-bbb>, B<--blank-lines-before-block-comments>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:42
msgid "Force blank lines before block comments."
msgstr ""

#. type: TP
#: original/man1/indent.1:44
#, no-wrap
msgid "B<-bbo>, B<--break-before-boolean-operator>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:47
msgid "Prefer to break long lines before boolean operators."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:49 original/man1/indent.1:176 original/man1/indent.1:197 original/man1/indent.1:227 original/man1/indent.1:272
msgid "See B<\\ BREAKING\\ LONG\\ LINES>."
msgstr ""

#. type: TP
#: original/man1/indent.1:49
#, no-wrap
msgid "B<-bc>, B<--blank-lines-after-commas>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:52
msgid "Force newline after comma in declaration."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:54 original/man1/indent.1:69 original/man1/indent.1:79 original/man1/indent.1:146 original/man1/indent.1:151 original/man1/indent.1:156 original/man1/indent.1:232 original/man1/indent.1:237 original/man1/indent.1:297 original/man1/indent.1:371 original/man1/indent.1:417
msgid "See B<\\ DECLARATIONS>."
msgstr ""

#. type: TP
#: original/man1/indent.1:54
#, no-wrap
msgid "B<-bl>, B<--braces-after-if-line>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:57
msgid "Put braces on line after B<if>, etc."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:59 original/man1/indent.1:64 original/man1/indent.1:74 original/man1/indent.1:84 original/man1/indent.1:94 original/man1/indent.1:119 original/man1/indent.1:124 original/man1/indent.1:135 original/man1/indent.1:247 original/man1/indent.1:252 original/man1/indent.1:257 original/man1/indent.1:282 original/man1/indent.1:287 original/man1/indent.1:292 original/man1/indent.1:302 original/man1/indent.1:307 original/man1/indent.1:312 original/man1/indent.1:328 original/man1/indent.1:354 original/man1/indent.1:366 original/man1/indent.1:376 original/man1/indent.1:381 original/man1/indent.1:386 original/man1/indent.1:391 original/man1/indent.1:407
msgid "See B<\\ STATEMENTS>."
msgstr ""

#. type: TP
#: original/man1/indent.1:59
#, no-wrap
msgid "B<-bli>I<n>, B<--brace-indent>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:62
msgid "Indent braces I<n> spaces."
msgstr ""

#. type: TP
#: original/man1/indent.1:64
#, no-wrap
msgid "B<-bls>, B<--braces-after-struct-decl-line>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:67
msgid "Put braces on the line after B<struct> declaration lines."
msgstr ""

#. type: TP
#: original/man1/indent.1:69
#, no-wrap
msgid "B<-br>, B<--braces-on-if-line>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:72
msgid "Put braces on line with B<if>, etc."
msgstr ""

#. type: TP
#: original/man1/indent.1:74
#, no-wrap
msgid "B<-brs>, B<--braces-on-struct-decl-line>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:77
msgid "Put braces on B<struct> declaration line."
msgstr ""

#. type: TP
#: original/man1/indent.1:79
#, no-wrap
msgid "B<-bs>, B<--Bill-Shannon>, B<--blank-before-sizeof>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:82
msgid "Put a space between B<sizeof> and its argument."
msgstr ""

#. type: TP
#: original/man1/indent.1:84
#, no-wrap
msgid "B<-c>I<n>, B<--comment-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:87
msgid "Put comments to the right of code in column I<n>."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:89 original/man1/indent.1:99 original/man1/indent.1:104 original/man1/indent.1:109 original/man1/indent.1:114 original/man1/indent.1:130 original/man1/indent.1:141 original/man1/indent.1:161 original/man1/indent.1:166 original/man1/indent.1:202 original/man1/indent.1:242 original/man1/indent.1:262 original/man1/indent.1:267 original/man1/indent.1:317 original/man1/indent.1:396
msgid "See B<\\ COMMENTS>."
msgstr ""

#. type: TP
#: original/man1/indent.1:89
#, no-wrap
msgid "B<-cbi>I<n>, B<--case-brace-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:92
msgid "Indent braces after a case label N spaces."
msgstr ""

#. type: TP
#: original/man1/indent.1:94
#, no-wrap
msgid "B<-cd>I<n>, B<--declaration-comment-column>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:97
msgid "Put comments to the right of the declarations in column I<n>."
msgstr ""

#. type: TP
#: original/man1/indent.1:99
#, no-wrap
msgid "B<-cdb>, B<--comment-delimiters-on-blank-lines>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:102
msgid "Put comment delimiters on blank lines."
msgstr ""

#. type: TP
#: original/man1/indent.1:104
#, no-wrap
msgid "B<-cdw>, B<--cuddle-do-while>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:107
msgid "Cuddle while of B<do {} while;> and preceeding \\`}\\'."
msgstr ""

#. type: TP
#: original/man1/indent.1:109
#, no-wrap
msgid "B<-ce>, B<--cuddle-else>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:112
msgid "Cuddle else and preceeding \\`}\\'."
msgstr ""

#. type: TP
#: original/man1/indent.1:114
#, no-wrap
msgid "B<-ci>I<n>, B<--continuation-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:117
msgid "Continuation indent of I<n> spaces."
msgstr ""

#. type: TP
#: original/man1/indent.1:119
#, no-wrap
msgid "B<-cli>I<n>, B<--case-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:122
msgid "Case label indent of I<n> spaces."
msgstr ""

#. type: TP
#: original/man1/indent.1:124
#, no-wrap
msgid "B<-cp>I<n>, B<--else-endif-column>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:128
msgid ""
"Put comments to the right of B<#else> and B< #endif> statements in column "
"I<n>."
msgstr ""

#. type: TP
#: original/man1/indent.1:130
#, no-wrap
msgid "B<-cs>, B<--space-after-cast>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:133
msgid "Put a space after a cast operator."
msgstr ""

#. type: TP
#: original/man1/indent.1:135
#, no-wrap
msgid "B<-d>I<n>, B<--line-comments-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:139
msgid "Set indentation of comments not to the right of code to I<n> spaces."
msgstr ""

#. type: TP
#: original/man1/indent.1:141
#, no-wrap
msgid "B<-bfda>, B<--break-function-decl-args>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:144
msgid "Break the line before all arguments in a declaration."
msgstr ""

#. type: TP
#: original/man1/indent.1:146
#, no-wrap
msgid "B<-bfde>, B<--break-function-decl-args>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:149
msgid "Break the line after the last argument in a declaration."
msgstr ""

#. type: TP
#: original/man1/indent.1:151
#, no-wrap
msgid "B<-di>I<n>, B<--declaration-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:154
msgid "Put variables in column I<n>."
msgstr ""

#. type: TP
#: original/man1/indent.1:156
#, no-wrap
msgid "B<-fc1>, B<--format-first-column-comments>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:159
msgid "Format comments in the first column."
msgstr ""

#. type: TP
#: original/man1/indent.1:161
#, no-wrap
msgid "B<-fca>, B<--format-all-comments>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:164
msgid "Do not disable all formatting of comments."
msgstr ""

#. type: TP
#: original/man1/indent.1:166
#, no-wrap
msgid "B<-gnu>, B<--gnu-style>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:169
msgid "Use GNU coding style.  This is the default."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:171 original/man1/indent.1:192 original/man1/indent.1:343
msgid "See B<\\ COMMON\\ STYLES>."
msgstr ""

#. type: TP
#: original/man1/indent.1:171
#, no-wrap
msgid "B<-hnl>, B<--honour-newlines>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:174
msgid "Prefer to break long lines at the position of newlines in the input."
msgstr ""

#. type: TP
#: original/man1/indent.1:176
#, no-wrap
msgid "B<-i>I<n>, B<--indent-level>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:179
msgid "Set indentation level to I<n> spaces."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:181 original/man1/indent.1:187 original/man1/indent.1:207 original/man1/indent.1:212 original/man1/indent.1:277 original/man1/indent.1:333 original/man1/indent.1:422 original/man1/indent.1:427
msgid "See B<\\ INDENTATION>."
msgstr ""

#. type: TP
#: original/man1/indent.1:181
#, no-wrap
msgid "B<-ip>I<n>, B<--parameter-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:185
msgid "Indent parameter types in old-style function definitions by I<n> spaces."
msgstr ""

#. type: TP
#: original/man1/indent.1:187
#, no-wrap
msgid "B<-kr>, B<--k-and-r-style>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:190
msgid "Use Kernighan & Ritchie coding style."
msgstr ""

#. type: TP
#: original/man1/indent.1:192
#, no-wrap
msgid "B<-l>I<n>, B<--line-length>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:195
msgid "Set maximum line length for non-comment lines to I<n>."
msgstr ""

#. type: TP
#: original/man1/indent.1:197
#, no-wrap
msgid "B<-lc>I<n>, B<--comment-line-length>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:200
msgid "Set maximum line length for comment formatting to I<n>."
msgstr ""

#. type: TP
#: original/man1/indent.1:202
#, no-wrap
msgid "B<-lp>, B<--continue-at-parentheses>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:205
msgid "Line up continued lines at parentheses."
msgstr ""

#. type: TP
#: original/man1/indent.1:207
#, no-wrap
msgid "B<-lps>, B<--leave-preprocessor-space>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:210
msgid "Leave space between \\`#\\' and preprocessor directive."
msgstr ""

#. type: TP
#: original/man1/indent.1:212
#, no-wrap
msgid "B<-nbad>, B<--no-blank-lines-after-declarations>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:215
msgid "Do not force blank lines after declarations."
msgstr ""

#. type: TP
#: original/man1/indent.1:217
#, no-wrap
msgid "B<-nbap>, B<--no-blank-lines-after-procedures>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:220
msgid "Do not force blank lines after procedure bodies."
msgstr ""

#. type: TP
#: original/man1/indent.1:222
#, no-wrap
msgid "B<-nbbo>, B<--break-after-boolean-operator>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:225
msgid "Do not prefer to break long lines before boolean operators."
msgstr ""

#. type: TP
#: original/man1/indent.1:227
#, no-wrap
msgid "B<-nbc>, B<--no-blank-lines-after-commas>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:230
msgid "Do not force newlines after commas in declarations."
msgstr ""

#. type: TP
#: original/man1/indent.1:232
#, no-wrap
msgid "B<-nbfda>, B<--dont-break-function-decl-args>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:235
msgid "Don\\'t put each argument in a function declaration on a seperate line."
msgstr ""

#. type: TP
#: original/man1/indent.1:237
#, no-wrap
msgid "B<-ncdb>, B<--no-comment-delimiters-on-blank-lines>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:240
msgid "Do not put comment delimiters on blank lines."
msgstr ""

#. type: TP
#: original/man1/indent.1:242
#, no-wrap
msgid "B<-ncdw>, B<--dont-cuddle-do-while>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:245
msgid "Do not cuddle B<}> and the B<while> of a B<do {} while;>."
msgstr ""

#. type: TP
#: original/man1/indent.1:247
#, no-wrap
msgid "B<-nce>, B<--dont-cuddle-else>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:250
msgid "Do not cuddle B<}> and B<else>."
msgstr ""

#. type: TP
#: original/man1/indent.1:252
#, no-wrap
msgid "B<-ncs>, B<--no-space-after-casts>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:255
msgid "Do not put a space after cast operators."
msgstr ""

#. type: TP
#: original/man1/indent.1:257
#, no-wrap
msgid "B<-nfc1>, B<--dont-format-first-column-comments>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:260
msgid "Do not format comments in the first column as normal."
msgstr ""

#. type: TP
#: original/man1/indent.1:262
#, no-wrap
msgid "B<-nfca>, B<--dont-format-comments>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:265
msgid "Do not format any comments."
msgstr ""

#. type: TP
#: original/man1/indent.1:267
#, no-wrap
msgid "B<-nhnl>, B<--ignore-newlines>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:270
msgid "Do not prefer to break long lines at the position of newlines in the input."
msgstr ""

#. type: TP
#: original/man1/indent.1:272
#, no-wrap
msgid "B<-nip>, B<--no-parameter-indentation>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:275
msgid "Zero width indentation for parameters."
msgstr ""

#. type: TP
#: original/man1/indent.1:277
#, no-wrap
msgid "B<-nlp>, B<--dont-line-up-parentheses>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:280
msgid "Do not line up parentheses."
msgstr ""

#. type: TP
#: original/man1/indent.1:282
#, no-wrap
msgid "B<-npcs>, B<--no-space-after-function-call-names>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:285
msgid "Do not put space after the function in function calls."
msgstr ""

#. type: TP
#: original/man1/indent.1:287
#, no-wrap
msgid "B<-nprs>, B<--no-space-after-parentheses>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:290
msgid "Do not put a space after every \\'(\\' and before every \\')\\'."
msgstr ""

#. type: TP
#: original/man1/indent.1:292
#, no-wrap
msgid "B<-npsl>, B<--dont-break-procedure-type>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:295
msgid "Put the type of a procedure on the same line as its name."
msgstr ""

#. type: TP
#: original/man1/indent.1:297
#, no-wrap
msgid "B<-nsaf>, B<--no-space-after-for>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:300
msgid "Do not put a space after every B<for>."
msgstr ""

#. type: TP
#: original/man1/indent.1:302
#, no-wrap
msgid "B<-nsai>, B<--no-space-after-if>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:305
msgid "Do not put a space after every B<if>."
msgstr ""

#. type: TP
#: original/man1/indent.1:307
#, no-wrap
msgid "B<-nsaw>, B<--no-space-after-while>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:310
msgid "Do not put a space after every B<while>."
msgstr ""

#. type: TP
#: original/man1/indent.1:312
#, no-wrap
msgid "B<-nsc>, B<--dont-star-comments>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:315
msgid "Do not put the \\`*\\' character at the left of comments."
msgstr ""

#. type: TP
#: original/man1/indent.1:317
#, no-wrap
msgid "B<-nsob>, B<--leave-optional-blank-lines>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:320
msgid "Do not swallow optional blank lines."
msgstr ""

#. type: TP
#: original/man1/indent.1:322
#, no-wrap
msgid "B<-nss>, B<--dont-space-special-semicolon>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:326
msgid ""
"Do not force a space before the semicolon after certain statements.  "
"Disables \\`-ss\\'."
msgstr ""

#. type: TP
#: original/man1/indent.1:328
#, no-wrap
msgid "B<-nut>, B<--no-tabs>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:331
msgid "Use spaces instead of tabs."
msgstr ""

#. type: TP
#: original/man1/indent.1:333
#, no-wrap
msgid "B<-nv>, B<--no-verbosity>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:336
msgid "Disable verbose mode."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:338 original/man1/indent.1:432 original/man1/indent.1:437
msgid "See B<\\ MISCELLANEOUS\\ OPTIONS>."
msgstr ""

#. type: TP
#: original/man1/indent.1:338
#, no-wrap
msgid "B<-orig>, B<--original>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:341
msgid "Use the original Berkeley coding style."
msgstr ""

#. type: TP
#: original/man1/indent.1:343
#, no-wrap
msgid "B<-npro>, B<--ignore-profile>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:346
msgid "Do not read \\`.indent.pro\\' files."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:348 original/man1/indent.1:412
msgid "See B<\\ INVOKING\\ INDENT>."
msgstr ""

#. type: TP
#: original/man1/indent.1:348
#, no-wrap
msgid "B<-pcs>, B<--space-after-procedure-calls>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:352
msgid ""
"Insert a space between the name of the procedure being called and the "
"\\`(\\'."
msgstr ""

#. type: TP
#: original/man1/indent.1:354
#, no-wrap
msgid "B<-pi>I<n>, B<--paren-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:358
msgid ""
"Specify the extra indentation per open parentheses \\'(\\' when a statement "
"is broken.See B<\\ STATEMENTS>."
msgstr ""

#. type: TP
#: original/man1/indent.1:358
#, no-wrap
msgid "B<-pmt>, B<--preserve-mtime>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:361
msgid ""
"Preserve access and modification times on output files.See B<\\ "
"MISCELLANEOUS\\ OPTIONS>."
msgstr ""

#. type: TP
#: original/man1/indent.1:361
#, no-wrap
msgid "B<-prs>, B<--space-after-parentheses>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:364
msgid "Put a space after every \\'(\\' and before every \\')\\'."
msgstr ""

#. type: TP
#: original/man1/indent.1:366
#, no-wrap
msgid "B<-psl>, B<--procnames-start-lines>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:369
msgid "Put the type of a procedure on the line before its name."
msgstr ""

#. type: TP
#: original/man1/indent.1:371
#, no-wrap
msgid "B<-saf>, B<--space-after-for>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:374
msgid "Put a space after each B<for>."
msgstr ""

#. type: TP
#: original/man1/indent.1:376
#, no-wrap
msgid "B<-sai>, B<--space-after-if>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:379
msgid "Put a space after each B<if>."
msgstr ""

#. type: TP
#: original/man1/indent.1:381
#, no-wrap
msgid "B<-saw>, B<--space-after-while>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:384
msgid "Put a space after each B<while>."
msgstr ""

#. type: TP
#: original/man1/indent.1:386
#, no-wrap
msgid "B<-sbi>I<n>, B<--struct-brace-indentation>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:389
msgid "Indent braces of a struct, union or enum N spaces."
msgstr ""

#. type: TP
#: original/man1/indent.1:391
#, no-wrap
msgid "B<-sc>, B<--start-left-side-of-comments>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:394
msgid "Put the \\`*\\' character at the left of comments."
msgstr ""

#. type: TP
#: original/man1/indent.1:396
#, no-wrap
msgid "B<-sob>, B<--swallow-optional-blank-lines>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:399
msgid "Swallow optional blank lines."
msgstr ""

#. type: TP
#: original/man1/indent.1:401
#, no-wrap
msgid "B<-ss>, B<--space-special-semicolon>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:405
msgid ""
"On one-line B<for> and B<while> statments, force a blank before the "
"semicolon."
msgstr ""

#. type: TP
#: original/man1/indent.1:407
#, no-wrap
msgid "B<-st>, B<--standard-output>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:410
msgid "Write to standard output."
msgstr ""

#. type: TP
#: original/man1/indent.1:412
#, no-wrap
msgid "B<-T>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:415
msgid "Tell B<indent> the name of typenames."
msgstr ""

#. type: TP
#: original/man1/indent.1:417
#, no-wrap
msgid "B<-ts>I<n>, B<--tab-size>I<n>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:420
msgid "Set tab size to I<n> spaces."
msgstr ""

#. type: TP
#: original/man1/indent.1:422
#, no-wrap
msgid "B<-ut>, B<--use-tabs>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:425
msgid "Use tabs. This is the default."
msgstr ""

#. type: TP
#: original/man1/indent.1:427
#, no-wrap
msgid "B<-v>, B<--verbose>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:430
msgid "Enable verbose mode."
msgstr ""

#. type: TP
#: original/man1/indent.1:432
#, no-wrap
msgid "B<-version>"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:435
msgid "Output the version number of B<indent>."
msgstr ""

#. type: SH
#: original/man1/indent.1:438
#, no-wrap
msgid "INVOKING INDENT"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:441
msgid "As of version 1.3, the format of the B<indent> command is:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:447
#, no-wrap
msgid "indent [I<options>] [I<input-files>]\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:449
#, no-wrap
msgid "indent [I<options>] [I<single-input-file>] [-o I<output-file>]\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:456
msgid ""
"This format is different from earlier versions and other versions of "
"B<indent>."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:461
msgid ""
"In the first form, one or more input files are specified.  B<indent> makes a "
"backup copy of each file, and the original file is replaced with its "
"indented version.  See B<BACKUP\\ FILES>, for an explanation of how backups "
"are made."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:465
msgid ""
"In the second form, only one input file is specified.  In this case, or when "
"the standard input is used, you may specify an output file after the "
"\\`-o\\' option."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:469
msgid ""
"To cause B<indent> to write to standard output, use the \\`-st\\' option.  "
"This is only allowed when there is only one input file, or when the standard "
"input is used."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:473
msgid ""
"If no input files are named, the standard input is read for input.  Also, if "
"a filename named \\`-\\' is specified, then the standard input is read."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:477
msgid ""
"As an example, each of the following commands will input the program "
"\\`slithy_toves.c\\' and write its indented text to \\`slithy_toves.out\\':"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:483
#, no-wrap
msgid "indent slithy_toves.c -o slithy_toves.out\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:485
#, no-wrap
msgid "indent -st slithy_toves.c E<gt> slithy_toves.out\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:487
#, no-wrap
msgid "cat slithy_toves.c | indent -o slithy_toves.out\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:502
#, no-wrap
msgid ""
"Most other options to B<indent> control how programs are formatted.\n"
"As of version 1.2, B<indent> also recognizes a long name for each\n"
"option name.  Long options are prefixed by either \\`--\\' or\n"
"\\`+\\'.\n"
"[ \\`+\\' is being superseded by \\`--\\' to\n"
"maintain consistency with the POSIX standard.]\n"
" In most of this document,\n"
"the traditional, short names are used for the sake of brevity.\n"
"See B<OPTION\\ SUMMARY>, for a list of options, including both long and\n"
"short names.\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:504
msgid "Here is another example:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:509
#, no-wrap
msgid "indent -br test/metabolism.c -l85\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:517
msgid ""
"This will indent the program \\`test/metabolism.c\\' using the \\`-br\\' and "
"\\`-l85\\' options, write the output back to \\`test/metabolism.c\\', and "
"write the original contents of \\`test/metabolism.c\\' to a backup file in "
"the directory \\`test\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:520
msgid "Equivalent invocations using long option names for this example would be:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:526
#, no-wrap
msgid "indent --braces-on-if-line --line-length185 test/metabolism.c\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:528
#, no-wrap
msgid "indent +braces-on-if-line +line-length185 test/metabolism.c\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:543
#, no-wrap
msgid ""
"If you find that you often use B<indent> with the same options, you\n"
"may put those options into a file named \\`.indent.pro\\'.\n"
"B<indent> will look for a profile file in three places. First it will "
"check\n"
"the environment variable B<INDENT_PROFILE>. If that exists its value \n"
"is expected to name the file that is to be used. If the environment variable "
"does \n"
"not exist, indent looks for \\`.indent.pro\\' in the current directory\n"
" and use that if found.  Finally B<indent> will search\n"
"your home directory for \\`.indent.pro\\' and use that file if it is\n"
"found.  This behaviour is different from that of other versions of\n"
"B<indent>, which load both files if they both exist.\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:548
msgid ""
"The format of \\`.indent.pro\\' is simply a list of options, just as they "
"would appear on the command line, separated by white space (tabs, spaces, "
"and newlines).  Options in \\`.indent.pro\\' may be surrounded by C or C++ "
"comments, in which case they are ignored."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:555
msgid ""
"Command line switches are handled I<after> processing \\`.indent.pro\\'.  "
"Options specified later override arguments specified earlier, with one "
"exception: Explicitly specified options always override background options "
"(See B<COMMON\\ STYLES>).  You can prevent B<indent> from reading an "
"\\`.indent.pro\\' file by specifying the \\`-npro\\' option."
msgstr ""

#. type: SH
#: original/man1/indent.1:556
#, no-wrap
msgid "BACKUP FILES"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:561
msgid ""
"As of version 1.3, GNU B<indent> makes GNU-style backup files, the same way "
"GNU Emacs does.  This means that either I<simple> or I<numbered> backup "
"filenames may be made."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:566
msgid ""
"Simple backup file names are generated by appending a suffix to the original "
"file name.  The default for this suffix is the one-character string \\`~\\' "
"(tilde).  Thus, the backup file for \\`python.c\\' would be \\`python.c~\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:570
msgid ""
"Instead of the default, you may specify any string as a suffix by setting "
"the environment variable B<SIMPLE_BACKUP_SUFFIX> to your preferred suffix."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:580
msgid ""
"Numbered backup versions of a file \\`momeraths.c\\' look like "
"\\`momeraths.c.~23~\\', where 23 is the version of this particular backup.  "
"When making a numbered backup of the file \\`src/momeraths.c\\', the backup "
"file will be named \\`src/momeraths.c.~I<V>~\\', where I<V> is one greater "
"than the highest version currently existing in the directory \\`src\\'.  The "
"environment variable B<VERSION_WIDTH> controls the number of digits, using "
"left zero padding when necessary.  For instance, setting this variable to "
"\"2\" will lead to the backup file being named \\`momeraths.c.~04~\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:590
msgid ""
"The type of backup file made is controlled by the value of the environment "
"variable B<VERSION_CONTROL>.  If it is the string \\`simple\\', then only "
"simple backups will be made.  If its value is the string \\`numbered\\', "
"then numbered backups will be made.  If its value is "
"\\`numbered-existing\\', then numbered backups will be made if there "
"I<already exist> numbered backups for the file being indented; otherwise, a "
"simple backup is made.  If B<VERSION_CONTROL> is not set, then B<indent> "
"assumes the behaviour of \\`numbered-existing\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:594
msgid ""
"Other versions of B<indent> use the suffix \\`.BAK\\' in naming backup "
"files.  This behaviour can be emulated by setting B<SIMPLE_BACKUP_SUFFIX> to "
"\\`.BAK\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:598
msgid ""
"Note also that other versions of B<indent> make backups in the current "
"directory, rather than in the directory of the source file as GNU B<indent> "
"now does."
msgstr ""

#. type: SH
#: original/man1/indent.1:599
#, no-wrap
msgid "COMMON STYLES"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:606
msgid ""
"There are several common styles of C code, including the GNU style, the "
"Kernighan & Ritchie style, and the original Berkeley style.  A style may be "
"selected with a single I<background> option, which specifies a set of values "
"for all other options.  However, explicitly specified options always "
"override options implied by a background option."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:611
msgid ""
"As of version 1.2, the default style of GNU B<indent> is the GNU style.  "
"Thus, it is no longer necessary to specify the option \\`-gnu\\' to obtain "
"this format, although doing so will not cause an error.  Option settings "
"which correspond to the GNU style are:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:618
#, no-wrap
msgid ""
"-nbad -bap -nbc -bbo -bl -bli2 -bls -ncdb -nce -cp1 -cs -di2\n"
"-ndj -nfc1 -nfca -hnl -i2 -ip5 -lp -pcs -nprs -psl -saf -sai\n"
"-saw -nsc -nsob\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:628
msgid ""
"The GNU coding style is that preferred by the GNU project.  It is the style "
"that the GNU Emacs C mode encourages and which is used in the C portions of "
"GNU Emacs.  (People interested in writing programs for Project GNU should "
"get a copy of \"The GNU Coding Standards\", which also covers semantic and "
"portability issues such as memory usage, the size of integers, etc.)"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:633
msgid ""
"The Kernighan & Ritchie style is used throughout their well-known book \"The "
"C Programming Language\".  It is enabled with the \\`-kr\\' option.  The "
"Kernighan & Ritchie style corresponds to the following set of options:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:640
#, no-wrap
msgid ""
"-nbad -bap -bbo -nbc -br -brs -c33 -cd33 -ncdb -ce -ci4 -cli0\n"
"-cp33 -cs -d0 -di1 -nfc1 -nfca -hnl -i4 -ip0 -l75 -lp -npcs\n"
"-nprs -npsl -saf -sai -saw -nsc -nsob -nss\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:648
msgid ""
"Kernighan & Ritchie style does not put comments to the right of code in the "
"same column at all times (nor does it use only one space to the right of the "
"code), so for this style B<indent> has arbitrarily chosen column 33."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:652
msgid ""
"The style of the original Berkeley B<indent> may be obtained by specifying "
"\\`-orig\\' (or by specifying \\`--original\\', using the long option "
"name).  This style is equivalent to the following settings:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:659
#, no-wrap
msgid ""
"-nbad -nbap -bbo -bc -br -brs -c33 -cd33 -cdb -ce -ci4 -cli0\n"
"-cp33 -di16 -fc1 -fca -hnl -i4 -ip4 -l75 -lp -npcs -nprs -psl\n"
"-saf -sai -saw -sc -nsob -nss -ts8\n"
msgstr ""

#. type: SH
#: original/man1/indent.1:663
#, no-wrap
msgid "BLANK LINES"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:668
msgid ""
"Various programming styles use blank lines in different places.  B<indent> "
"has a number of options to insert or delete blank lines in specific places."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:672
msgid ""
"The \\`-bad\\' option causes B<indent> to force a blank line after every "
"block of declarations.  The \\`-nbad\\' option causes B<indent> not to force "
"such blank lines."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:675
msgid ""
"The \\`-bap\\' option forces a blank line after every procedure body.  The "
"\\`-nbap\\' option forces no such blank line."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:679
msgid ""
"The \\`-bbb\\' option forces a blank line before every boxed comment (See "
"B<COMMENTS>.)  The \\`-nbbb\\' option does not force such blank lines."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:684
msgid ""
"The \\`-sob\\' option causes B<indent> to swallow optional blank lines (that "
"is, any optional blank lines present in the input will be removed from the "
"output).  If the \\`-nsob\\' is specified, any blank lines present in the "
"input file will be copied to the output file."
msgstr ""

#. type: SH
#: original/man1/indent.1:686
#, no-wrap
msgid "--blank-lines-after-declarations"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:691
msgid ""
"The \\`-bad\\' option forces a blank line after every block of "
"declarations.  The \\`-nbad\\' option does not add any such blank lines."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:693 original/man1/indent.1:736
msgid "For example, given the input"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:700 original/man1/indent.1:727
#, no-wrap
msgid ""
"char *foo;\n"
"char *bar;\n"
"/* This separates blocks of declarations.  */\n"
"int baz;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:705
msgid "B<indent -bad> produces"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:711
#, no-wrap
msgid ""
"char *foo;\n"
"char *bar;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:714
#, no-wrap
msgid ""
"/* This separates blocks of declarations.  */\n"
"int baz;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:719
msgid "and B<indent -nbad> produces"
msgstr ""

#. type: SH
#: original/man1/indent.1:731
#, no-wrap
msgid "--blank-lines-after-procedures"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:734
msgid "The \\`-bap\\' option forces a blank line after every procedure body."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:751
#, no-wrap
msgid ""
"int\n"
"foo ()\n"
"{\n"
"  puts(\"Hi\");\n"
"}\n"
"/* The procedure bar is even less interesting.  */\n"
"char *\n"
"bar ()\n"
"{\n"
"  puts(\"Hello\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:756
msgid "B<indent -bap> produces"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:765
#, no-wrap
msgid ""
"int\n"
"foo ()\n"
"{\n"
"  puts (\"Hi\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:772
#, no-wrap
msgid ""
"/* The procedure bar is even less interesting.  */\n"
"char *\n"
"bar ()\n"
"{\n"
"  puts (\"Hello\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:777
msgid "and B<indent -nbap> produces"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:792
#, no-wrap
msgid ""
"int\n"
"foo ()\n"
"{\n"
"  puts (\"Hi\");\n"
"}\n"
"/* The procedure bar is even less interesting.  */\n"
"char *\n"
"bar ()\n"
"{\n"
"  puts (\"Hello\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:797
msgid "No blank line will be added after the procedure B<foo>."
msgstr ""

#. type: SH
#: original/man1/indent.1:798
#, no-wrap
msgid "COMMENTS"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:803
msgid ""
"B<indent> formats both C and C++ comments. C comments are begun with "
"\\`/*\\', terminated with \\`*/\\' and may contain newline characters.  C++ "
"comments begin with the delimiter \\`//\\' and end at the newline."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:810
msgid ""
"B<indent> handles comments differently depending upon their context.  "
"B<indent> attempts to distinguish between comments which follow statements, "
"comments which follow declarations, comments following preprocessor "
"directives, and comments which are not preceded by code of any sort, i.e., "
"they begin the text of the line (although not neccessarily in column 1)."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:817
msgid ""
"B<indent> further distinguishes between comments found outside of procedures "
"and aggregates, and those found within them.  In particular, comments "
"beginning a line found within a procedure will be indented to the column at "
"which code is currently indented.  The exception to this a comment beginning "
"in the leftmost column; such a comment is output at that column."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:826
msgid ""
"B<indent> attempts to leave I<boxed comments> unmodified. The general idea "
"of such a comment is that it is enclosed in a rectangle or \\`\\`box\\'\\' "
"of stars or dashes to visually set it apart.  More precisely, boxed comments "
"are defined as those in which the initial \\`/*\\' is followed immediately "
"by the character \\`*\\', \\`=\\', \\`_\\', or \\`-\\', or those in which "
"the beginning comment delimiter (\\`/*\\')  is on a line by itself, and the "
"following line begins with a \\`*\\' in the same column as the star of the "
"opening delimiter."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:828
msgid "Examples of boxed comments are:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:835
#, no-wrap
msgid ""
"/**********************\n"
" * Comment in a box!! *\n"
" **********************/\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:840
#, no-wrap
msgid ""
"       /*\n"
"        * A different kind of scent,\n"
"        * for a different kind of comment.\n"
"        */\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:849
msgid ""
"B<indent> attempts to leave boxed comments exactly as they are found in the "
"source file.  Thus the indentation of the comment is unchanged, and its "
"length is not checked in any way.  The only alteration made is that an "
"embedded tab character may be converted into the appropriate number of "
"spaces."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:852
msgid ""
"If the \\`-bbb\\' option is specified, all such boxed comments will be "
"preceded by a blank line, unless such a comment is preceded by code."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:860
msgid ""
"Comments which are not boxed comments may be formatted, which means that the "
"line is broken to fit within a right margin and left-filled with "
"whitespace.  Single newlines are equivalent to a space, but blank lines (two "
"or more newlines in a row) are taken to mean a paragraph break.  Formatting "
"of comments which begin after the first column is enabled with the "
"\\`-fca\\' option.  To format those beginning in column one, specify "
"\\`-fc1\\'.  Such formatting is disabled by default."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:866
msgid ""
"The right margin for formatting defaults to 78, but may be changed with the "
"\\`-lc\\' option.  If the margin specified does not allow the comment to be "
"printed, the margin will be automatically extended for the duration of that "
"comment.  The margin is not respected if the comment is not being formatted."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:877
msgid ""
"If the comment begins a line (i.e., there is no program text to its left), "
"it will be indented to the column it was found in unless the comment is "
"within a block of code.  In that case, such a comment will be aligned with "
"the indented code of that block (unless the comment began in the first "
"column).  This alignment may be affected by the \\`-d\\' option, which "
"specifies an amount by which such comments are moved to the I<left>, or "
"unindented.  For example, \\`-d2\\' places comments two spaces to the left "
"of code.  By default, comments are aligned with code, unless they begin in "
"the first column, in which case they are left there by default --- to get "
"them aligned with the code, specify \\`-fc1\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:884
msgid ""
"Comments to the right of code will appear by default in column 33.  This may "
"be changed with one of three options.  \\`-c\\' will specify the column for "
"comments following code, \\`-cd\\' specifies the column for comments "
"following declarations, and \\`-cp\\' specifies the column for comments "
"following preprocessor directives B<#else> and B<#endif>."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:890
msgid ""
"If the code to the left of the comment exceeds the beginning column, the "
"comment column will be extended to the next tabstop column past the end of "
"the code, or in the case of preprocessor directives, to one space past the "
"end of the directive.  This extension lasts only for the output of that "
"particular comment."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:894
msgid ""
"The \\`-cdb\\' option places the comment delimiters on blank lines.  Thus, a "
"single line comment like B</* Loving hug */> can be transformed into:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:901
#, no-wrap
msgid ""
"/*\n"
"   Loving hug\n"
" */\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:908
msgid ""
"Stars can be placed at the beginning of multi-line comments with the "
"\\`-sc\\' option.  Thus, the single-line comment above can be transformed "
"(with \\`-cdb -sc\\') into:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:915
#, no-wrap
msgid ""
"/*\n"
" * Loving hug\n"
" */\n"
msgstr ""

#. type: SH
#: original/man1/indent.1:919
#, no-wrap
msgid "STATEMENTS"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:922
msgid "The \\`-br\\' or \\`-bl\\' option specifies how to format braces."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:924
msgid "The \\`-br\\' option formats statement braces like this:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:931
#, no-wrap
msgid ""
"if (x E<gt> 0) {\n"
"  x--;\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:936
msgid "The \\`-bl\\' option formats them like this:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:944
#, no-wrap
msgid ""
"if (x E<gt> 0)\n"
"  {\n"
"    x--;\n"
"  }\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:952
msgid ""
"If you use the \\`-bl\\' option, you may also want to specify the \\`-bli\\' "
"option.  This option specifies the number of spaces by which braces are "
"indented.  \\`-bli2\\', the default, gives the result shown above.  "
"\\`-bli0\\' results in the following:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:960
#, no-wrap
msgid ""
"if (x E<gt> 0)\n"
"{\n"
"  x--;\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:968
msgid ""
"If you are using the \\`-br\\' option, you probably want to also use the "
"\\`-ce\\' option.  This causes the B<else> in an if-then-else construct to "
"cuddle up to the immediately preceding \\`}\\'.  For example, with \\`-br "
"-ce\\' you get the following:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:977
#, no-wrap
msgid ""
"if (x E<gt> 0) {\n"
"  x--;\n"
"} else {\n"
"  fprintf (stderr, \"...something wrong?\\en\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:982
msgid "With \\`-br -nce\\' that code would appear as"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:992
#, no-wrap
msgid ""
"if (x E<gt> 0) {\n"
"  x--;\n"
"}\n"
"else {\n"
"  fprintf (stderr, \"...something wrong?\\en\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:999
msgid ""
"This causes the B<while> in a do-while loop to cuddle up to the immediately "
"preceding \\`}\\'.  For example, with \\`-cdw\\' you get the following:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1006
#, no-wrap
msgid ""
"do {\n"
"  x--;\n"
"} while (x);\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1011
msgid "With \\`-ncdw\\' that code would appear as"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1019
#, no-wrap
msgid ""
"do {\n"
"  x--;\n"
"}\n"
"while (x);\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1026
msgid ""
"The \\`-cli\\' option specifies the number of spaces that case labels should "
"be indented to the right of the containing B<switch> statement."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1028
msgid "The default gives code like:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1043
#, no-wrap
msgid ""
"switch (i)\n"
"  {\n"
"  case 0:\n"
"    break;\n"
"  case 1:\n"
"    {\n"
"      ++i;\n"
"    }\n"
"  default:\n"
"    break;\n"
"  }\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1048
msgid "Using the \\`-cli2\\' that would become:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1063
#, no-wrap
msgid ""
"switch (i)\n"
"  {\n"
"    case 0:\n"
"      break;\n"
"    case 1:\n"
"      {\n"
"        ++i;\n"
"      }\n"
"    default:\n"
"      break;\n"
"  }\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1070
msgid ""
"The indentation of the braces below a case statement can be controlled with "
"the \\`-cbiI<n>\\' option.  For example, using \\`-cli2 -cbi0\\' results in:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1085
#, no-wrap
msgid ""
"switch (i)\n"
"  {\n"
"    case 0:\n"
"      break;\n"
"    case 1:\n"
"    {\n"
"      ++i;\n"
"    }\n"
"    default:\n"
"      break;\n"
"  }\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1094
msgid ""
"If a semicolon is on the same line as a B<for> or B<while> statement, the "
"\\`-ss\\' option will cause a space to be placed before the semicolon.  This "
"emphasizes the semicolon, making it clear that the body of the B<for> or "
"B<while> statement is an empty statement.  \\`-nss\\' disables this feature."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1097
msgid ""
"The \\`-pcs\\' option causes a space to be placed between the name of the "
"procedure being called and the \\`(\\' (for example, B<puts\\ (\"Hi\");>.  "
"The \\`-npcs\\' option would give B<puts(\"Hi\");>)."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1101
msgid ""
"If the \\`-cs\\' option is specified, B<indent> puts a space after a cast "
"operator."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1105
msgid ""
"The \\`-bs\\' option ensures that there is a space between the keyword "
"B<sizeof> and its argument.  In some versions, this is known as the "
"\\`Bill_Shannon\\' option."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1108
msgid ""
"The \\`-saf\\' option forces a space between an B<for> and the following "
"parenthesis.  This is the default."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1111
msgid ""
"The \\`-sai\\' option forces a space between an B<if> and the following "
"parenthesis.  This is the default."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1114
msgid ""
"The \\`-saw\\' option forces a space between an B<while> and the following "
"parenthesis.  This is the default."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1118
msgid ""
"The \\`-prs\\' option causes all parentheses to be seperated with a space "
"from the what is between them.  For example, using \\`-prs\\' results in "
"code like:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1127
#, no-wrap
msgid ""
"  while ( ( e_code - s_code ) E<lt> ( dec_ind - 1 ) )\n"
"    {\n"
"      set_buf_break ( bb_dec_ind );\n"
"      *e_code++ = \\' \\';\n"
"    }\n"
msgstr ""

#. type: SH
#: original/man1/indent.1:1131
#, no-wrap
msgid "DECLARATIONS"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1136
msgid ""
"By default B<indent> will line up identifiers, in the column specified by "
"the \\`-di\\' option.  For example, \\`-di16\\' makes things look like:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1142
#, no-wrap
msgid ""
"int             foo;\n"
"char           *bar;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1149
msgid ""
"Using a small value (such as one or two) for the \\`-di\\' option can be "
"used to cause the identifiers to be placed in the first available position; "
"for example:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1155
#, no-wrap
msgid ""
"int foo;\n"
"char *bar;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1162
msgid ""
"The value given to the \\`-di\\' option will still affect variables which "
"are put on separate lines from their types, for example \\`-di2\\' will lead "
"to:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1168
#, no-wrap
msgid ""
"int\n"
"  foo;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1174
msgid ""
"If the \\`-bc\\' option is specified, a newline is forced after each comma "
"in a declaration.  For example,"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1181
#, no-wrap
msgid ""
"int a,\n"
"  b,\n"
"  c;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1186
msgid "With the \\`-nbc\\' option this would look like"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1191
#, no-wrap
msgid "int a, b, c;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1202
msgid ""
"The \\`-bfda\\' option causes a newline to be forced after the comma "
"separating the arguments of a function declaration.  The arguments will "
"appear at one indention level deeper than the function declaration.  This is "
"particularly helpful for functions with long argument lists.  The option "
"\\`-bfde\\' causes a newline to be forced before the closing bracket of the "
"function declaration. For both options the \\'n\\' setting is the default: "
"-nbdfa and -nbdfe."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1206
msgid "For example,"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1211
#, no-wrap
msgid "void foo (int arg1, char arg2, int *arg3, long arg4, char arg5);\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1215
msgid "With the \\`-bfda\\' option this would look like"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1225
#, no-wrap
msgid ""
"void foo (\n"
"    int arg1,\n"
"    char arg2,\n"
"    int *arg3,\n"
"    long arg4,\n"
"    char arg5);\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1230
msgid "With, in addition, the \\`-bfde\\' option this would look like"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1241
#, no-wrap
msgid ""
"void foo (\n"
"    int arg1,\n"
"    char arg2,\n"
"    int *arg3,\n"
"    long arg4,\n"
"    char arg5\n"
"    );\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1249
msgid ""
"The \\`-psl\\' option causes the type of a procedure being defined to be "
"placed on the line before the name of the procedure.  This style is required "
"for the B<etags> program to work correctly, as well as some of the B<c-mode> "
"functions of Emacs."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1255
msgid ""
"You must use the \\`-T\\' option to tell B<indent> the name of all the "
"typenames in your program that are defined by B<typedef>.  \\`-T\\' can be "
"specified more than once, and all names specified are used.  For example, if "
"your program contains"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1261
#, no-wrap
msgid ""
"typedef unsigned long CODE_ADDR;\n"
"typedef enum {red, blue, green} COLOR;\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1266
msgid "you would use the options \\`-T CODE_ADDR -T COLOR\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1270
msgid ""
"The \\`-brs\\' or \\`-bls\\' option specifies how to format braces in struct "
"declarations.  The \\`-brs\\' option formats braces like this:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1277
#, no-wrap
msgid ""
"struct foo {\n"
"  int x;\n"
"};\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1282
msgid "The \\`-bls\\' option formats them like this:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1290
#, no-wrap
msgid ""
"struct foo\n"
"{\n"
"  int x;\n"
"};\n"
msgstr ""

#. type: SH
#: original/man1/indent.1:1294
#, no-wrap
msgid "INDENTATION"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1310
msgid ""
"One issue in the formatting of code is how far each line should be indented "
"from the left margin.  When the beginning of a statement such as B<if> or "
"B<for> is encountered, the indentation level is increased by the value "
"specified by the \\`-i\\' option.  For example, use \\`-i8\\' to specify an "
"eight character indentation for each level.  When a statement is broken "
"across two lines, the second line is indented by a number of additional "
"spaces specified by the \\`-ci\\' option.  \\`-ci\\' defaults to 0.  "
"However, if the \\`-lp\\' option is specified, and a line has a left "
"parenthesis which is not closed on that line, then continuation lines will "
"be lined up to start at the character position just after the left "
"parenthesis.  This processing also applies to \\`[\\' and applies to \\`{\\' "
"when it occurs in initialization lists.  For example, a piece of continued "
"code might look like this with \\`-nlp -ci3\\' in effect:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1316
#, no-wrap
msgid ""
"  p1 = first_procedure (second_procedure (p2, p3),\n"
"     third_procedure (p4, p5));\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1321
msgid "With \\`-lp\\' in effect the code looks somewhat clearer:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1327
#, no-wrap
msgid ""
"  p1 = first_procedure (second_procedure (p2, p3),\n"
"                        third_procedure (p4, p5));\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1333
msgid ""
"When a statement is broken in between two or more paren pairs (...), each "
"extra pair causes the indentation level extra indentation:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1341
#, no-wrap
msgid ""
"if ((((i E<lt> 2 &&\n"
"        k E<gt> 0) || p == 0) &&\n"
"    q == 1) ||\n"
"  n = 0)\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1347
msgid ""
"The option \\`-ipI<N>\\' can be used to set the extra offset per paren.  For "
"instance, \\`-ip0\\' would format the above as:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1355
#, no-wrap
msgid ""
"if ((((i E<lt> 2 &&\n"
"  k E<gt> 0) || p == 0) &&\n"
"  q == 1) ||\n"
"  n = 0)\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1363
msgid ""
"B<indent> assumes that tabs are placed at regular intervals of both input "
"and output character streams.  These intervals are by default 8 columns "
"wide, but (as of version 1.2) may be changed by the \\`-ts\\' option.  Tabs "
"are treated as the equivalent number of spaces."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1368
msgid ""
"The indentation of type declarations in old-style function definitions is "
"controlled by the \\`-ip\\' parameter.  This is a numeric parameter "
"specifying how many spaces to indent type declarations.  For example, the "
"default \\`-ip5\\' makes definitions look like this:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1380
#, no-wrap
msgid ""
"char *\n"
"create_world (x, y, scale)\n"
"     int x;\n"
"     int y;\n"
"     float scale;\n"
"{\n"
"  . . .\n"
"}\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1386
msgid ""
"For compatibility with other versions of indent, the option \\`-nip\\' is "
"provided, which is equivalent to \\`-ip0\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1392
msgid ""
"ANSI C allows white space to be placed on preprocessor command lines between "
"the character \\`#\\' and the command name.  By default, B<indent> removes "
"this space, but specifying the \\`-lps\\' option directs B<indent> to leave "
"this space unmodified. The option \\`-ppi\\' overrides \\`-nlps\\' and "
"\\`-lps\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1395
msgid ""
"This option can be used to request that preprocessor conditional statements "
"can be indented by to given number of spaces, for example with the option "
"\\`-ppi 3\\'"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1406
#, no-wrap
msgid ""
"#if X\n"
"#if Y\n"
"#define Z 1\n"
"#else\n"
"#define Z 0\n"
"#endif\n"
"#endif\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1410
msgid "becomes"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1420
#, no-wrap
msgid ""
"#if X\n"
"#   if Y\n"
"#      define Z 1\n"
"#   else\n"
"#      define Z 0\n"
"#   endif\n"
"#endif\n"
msgstr ""

#. type: SH
#: original/man1/indent.1:1424
#, no-wrap
msgid "BREAKING LONG LINES"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1429
msgid ""
"With the option \\`-lI<n>\\', or \\`--line-lengthI<n>\\', it is possible to "
"specify the maximum length of a line of C code, not including possible "
"comments that follow it."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1433
msgid ""
"When lines become longer then the specified line length, GNU B<indent> tries "
"to break the line at a logical place.  This is new as of version 2.1 however "
"and not very intelligent or flexible yet."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1436
msgid ""
"Currently there are two options that allows one to interfere with the "
"algorithm that determines where to break a line."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1443
msgid ""
"The \\`-bbo\\' option causes GNU B<indent> to prefer to break long lines "
"before the boolean operators B<&&> and B<||>.  The \\`-nbbo\\' option causes "
"GNU B<indent> not have that preference.  For example, the default option "
"\\`-bbo\\' (together with \\`--line-length60\\' and \\`--ignore-newlines\\') "
"makes code look like this:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1451
#, no-wrap
msgid ""
"  if (mask\n"
"      && ((mask[0] == \\'\\e0\\')\n"
"          || (mask[1] == \\'\\e0\\'\n"
"              && ((mask[0] == \\'0\\') || (mask[0] == \\'*\\')))))\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1456
msgid "Using the option \\`-nbbo\\' will make it look like this:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1464
#, no-wrap
msgid ""
"  if (mask &&\n"
"      ((mask[0] == \\'\\e0\\') ||\n"
"       (mask[1] == \\'\\e0\\' &&\n"
"        ((mask[0] == \\'0\\') || (mask[0] == \\'*\\')))))\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1471
msgid ""
"The default \\`-hnl\\', however, honours newlines in the input file by "
"giving them the highest possible priority to break lines at.  For example, "
"when the input file looks like this:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1478
#, no-wrap
msgid ""
"  if (mask\n"
"      && ((mask[0] == \\'\\e0\\')\n"
"      || (mask[1] == \\'\\e0\\' && ((mask[0] == \\'0\\') || (mask[0] == "
"\\'*\\')))))\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1487
msgid ""
"then using the option \\`-hnl\\', or \\`--honour-newlines\\', together with "
"the previously mentioned \\`-nbbo\\' and \\`--line-length60\\', will cause "
"the output not to be what is given in the last example but instead will "
"prefer to break at the positions where the code was broken in the input "
"file:"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1495
#, no-wrap
msgid ""
"  if (mask\n"
"      && ((mask[0] == \\'\\e0\\')\n"
"          || (mask[1] == \\'\\e0\\' &&\n"
"              ((mask[0] == \\'0\\') || (mask[0] == \\'*\\')))))\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1503
msgid ""
"The idea behind this option is that lines which are too long, but are "
"already broken up, will not be touched by GNU B<indent>.  Really messy code "
"should be run through B<indent> at least once using the "
"\\`--ignore-newlines\\' option though."
msgstr ""

#. type: SH
#: original/man1/indent.1:1504
#, no-wrap
msgid "DISABLING FORMATTING"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1516
msgid ""
"Formatting of C code may be disabled for portions of a program by embedding "
"special I<control comments> in the program.  To turn off formatting for a "
"section of a program, place the disabling control comment B</* *INDENT-OFF* "
"*/> on a line by itself just before that section.  Program text scanned "
"after this control comment is output precisely as input with no "
"modifications until the corresponding enabling comment is scanned on a line "
"by itself.  The disabling control comment is B</* *INDENT-ON* */>, and any "
"text following the comment on the line is also output unformatted.  "
"Formatting begins again with the input line following the enabling control "
"comment."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1520
msgid ""
"More precisely, B<indent> does not attempt to verify the closing delimiter "
"(B<*/>) for these C comments, and any whitespace on the line is totally "
"transparent."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1523
msgid ""
"These control comments also function in their C++ formats, namely B<// "
"*INDENT-OFF*> and B<// *INDENT-ON*>."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1530
msgid ""
"It should be noted that the internal state of B<indent> remains unchanged "
"over the course of the unformatted section.  Thus, for example, turning off "
"formatting in the middle of a function and continuing it after the end of "
"the function may lead to bizarre results.  It is therefore wise to be "
"somewhat modular in selecting code to be left unformatted."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1536
msgid ""
"As a historical note, some earlier versions of B<indent> produced error "
"messages beginning with B<*INDENT**>.  These versions of B<indent> were "
"written to ignore any input text lines which began with such error "
"messages.  I have removed this incestuous feature from GNU B<indent>."
msgstr ""

#. type: SH
#: original/man1/indent.1:1537
#, no-wrap
msgid "MISCELLANEOUS OPTIONS"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1542
msgid ""
"To find out what version of B<indent> you have, use the command B<indent "
"-version>. This will report the version number of B<indent>, without doing "
"any of the normal processing."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1547
msgid ""
"The \\`-v\\' option can be used to turn on verbose mode.  When in verbose "
"mode, B<indent> reports when it splits one line of input into two more more "
"lines of output, and gives some size statistics at completion."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1554
msgid ""
"The \\`-pmt\\' option causes B<indent> to preserve the access and "
"modification times on the output files.  Using this option has the advantage "
"that running indent on all source and header files in a project won\\'t "
"cause B<make> to rebuild all targets.  This option is only available on "
"Operating Systems that have the POSIX B<utime(2)> function."
msgstr ""

#. type: SH
#: original/man1/indent.1:1555
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1558
msgid "Please report any bugs to bug-indent@gnu.org."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1563
msgid ""
"When B<indent> is run twice on a file, with the same profile, it should "
"I<never> change that file the second time.  With the current design of "
"B<indent>, this can not be guaranteed, and it has not been extensively "
"tested."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1569
msgid ""
"B<indent> does not understand C. In some cases this leads to the inability "
"to join lines.  The result is that running a file through B<indent> is "
"I<irreversible>, even if the used input file was the result of running "
"B<indent> with a given profile (\\`.indent.pro\\')."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1572
msgid ""
"While an attempt was made to get B<indent> working for C++, it will not do a "
"good job on any C++ source except the very simplest."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1578
msgid ""
"B<indent> does not look at the given \\`--line-length\\' option when writing "
"comments to the output file.  This results often in comments being put far "
"to the right.  In order to prohibit B<indent> from joining a broken line "
"that has a comment at the end, make sure that the comments start on the "
"first line of the break."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1582
msgid ""
"B<indent> does not count lines and comments (see the \\`-v\\' option) when "
"B<indent> is turned off with B</* *INDENT-OFF* */>."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1587
msgid ""
"Comments of the form B</*UPPERCASE*/> are not treated as comment but as an "
"identifier, causing them to be joined with the next line. This renders "
"comments of this type useless, unless they are embedded in the code to begin "
"with."
msgstr ""

#. type: SH
#: original/man1/indent.1:1588
#, no-wrap
msgid "COPYRIGHT"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1594
msgid ""
"The following copyright notice applies to the B<indent> program.  The "
"copyright and copying permissions for this manual appear near the beginning "
"of \\`indent.texinfo\\' and \\`indent.info\\', and near the end of "
"\\`indent.1\\'."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1605
#, no-wrap
msgid ""
"Copyright (c) 2001 David Ingamells.\n"
"Copyright (c) 1999 Carlo Wood.\n"
"Copyright (c) 1995, 1996 Joseph Arceneaux.\n"
"Copyright (c) 1989, 1992, 1993, 1994, 1995, 1996 Free Software Foundation\n"
"Copyright (c) 1985 Sun Microsystems, Inc.\n"
"Copyright (c) 1980 The Regents of the University of California.\n"
"Copyright (c) 1976 Board of Trustees of the University of Illinois.\n"
"All rights reserved.\n"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1619
#, no-wrap
msgid ""
"Redistribution and use in source and binary forms are permitted\n"
"provided that the above copyright notice and this paragraph are\n"
"duplicated in all such forms and that any documentation,\n"
"advertising materials, and other materials related to such\n"
"distribution and use acknowledge that the software was developed\n"
"by the University of California, Berkeley, the University of Illinois,\n"
"Urbana, and Sun Microsystems, Inc.  The name of either University\n"
"or Sun Microsystems may not be used to endorse or promote products\n"
"derived from this software without specific prior written permission.\n"
"THIS SOFTWARE IS PROVIDED \\`\\`AS IS\\'\\' AND WITHOUT ANY EXPRESS OR\n"
"IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED\n"
"WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR\n"
"PURPOSE.\n"
msgstr ""

#. type: SH
#: original/man1/indent.1:1622
#, no-wrap
msgid "Options\\' Cross Key"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1626
msgid ""
"Here is a list of options alphabetized by long option, to help you find the "
"corresponding short option."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1710
#, no-wrap
msgid ""
"--blank-lines-after-commas                      -bc             \n"
"--blank-lines-after-declarations                -bad            \n"
"--blank-lines-after-procedures                  -bap            \n"
"--blank-lines-before-block-comments             -bbb            \n"
"--braces-after-if-line                          -bl             \n"
"--brace-indent                                  -bli\n"
"--braces-after-struct-decl-line                 -bls\n"
"--braces-on-if-line                             -br             \n"
"--braces-on-struct-decl-line                    -brs\n"
"--break-after-boolean-operator                  -nbbo\n"
"--break-before-boolean-operator                 -bbo\n"
"--break-function-decl-args                      -bfda\n"
"--break-function-decl-args-end                  -bfde\n"
"--case-indentation                              -cliI<n>     \n"
"--case-brace-indentation                        -cbiI<n>\n"
"--comment-delimiters-on-blank-lines             -cdb            \n"
"--comment-indentation                           -cI<n>       \n"
"--continuation-indentation                      -ciI<n>      \n"
"--continue-at-parentheses                       -lp             \n"
"--cuddle-do-while                               -cdw\n"
"--cuddle-else                                   -ce             \n"
"--declaration-comment-column                    -cdI<n>      \n"
"--declaration-indentation                       -diI<n>      \n"
"--dont-break-function-decl-args                 -nbfda\n"
"--dont-break-function-decl-args-end             -nbfde\n"
"--dont-break-procedure-type                     -npsl           \n"
"--dont-cuddle-do-while                          -ncdw\n"
"--dont-cuddle-else                              -nce            \n"
"--dont-format-comments                          -nfca           \n"
"--dont-format-first-column-comments             -nfc1           \n"
"--dont-line-up-parentheses                      -nlp            \n"
"--dont-space-special-semicolon                  -nss\n"
"--dont-star-comments                            -nsc            \n"
"--else-endif-column                             -cpI<n>\n"
"--format-all-comments                           -fca            \n"
"--format-first-column-comments                  -fc1            \n"
"--gnu-style                                     -gnu            \n"
"--honour-newlines                               -hnl\n"
"--ignore-newlines                               -nhnl\n"
"--ignore-profile                                -npro           \n"
"--indent-level                                  -iI<n>       \n"
"--k-and-r-style                                 -kr             \n"
"--leave-optional-blank-lines                    -nsob           \n"
"--leave-preprocessor-space                      -lps\n"
"--line-comments-indentation                     -dI<n>       \n"
"--line-length                                   -lI<n>       \n"
"--no-blank-lines-after-commas                   -nbc            \n"
"--no-blank-lines-after-declarations             -nbad           \n"
"--no-blank-lines-after-procedures               -nbap           \n"
"--no-blank-lines-before-block-comments          -nbbb           \n"
"--no-comment-delimiters-on-blank-lines          -ncdb           \n"
"--no-space-after-casts                          -ncs            \n"
"--no-parameter-indentation                      -nip            \n"
"--no-space-after-for\t\t\t\t-nsaf\n"
"--no-space-after-function-call-names            -npcs           \n"
"--no-space-after-if\t\t\t\t-nsai\n"
"--no-space-after-parentheses                    -nprs\n"
"--no-space-after-while\t\t\t\t-nsaw\n"
"--no-tabs                                       -nut\n"
"--no-verbosity                                  -nv             \n"
"--original                                      -orig\n"
"--parameter-indentation                         -ipI<n>      \n"
"--paren-indentation                             -piI<n>\n"
"--preserve-mtime\t\t\t\t-pmt\n"
"--procnames-start-lines                         -psl            \n"
"--space-after-cast                              -cs             \n"
"--space-after-for\t\t\t\t-saf\n"
"--space-after-if\t\t\t\t-sai\n"
"--space-after-parentheses                       -prs\n"
"--space-after-procedure-calls                   -pcs            \n"
"--space-after-while\t\t\t\t-saw\n"
"--space-special-semicolon                       -ss             \n"
"--standard-output                               -st             \n"
"--start-left-side-of-comments                   -sc             \n"
"--struct-brace-indentation                      -sbiI<n>\n"
"--swallow-optional-blank-lines                  -sob            \n"
"--tab-size                                      -tsI<n>      \n"
"--use-tabs                                      -ut\n"
"--verbose                                       -v              \n"
msgstr ""

#. type: SH
#: original/man1/indent.1:1714
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1716
msgid "Unknown"
msgstr ""

#. type: SH
#: original/man1/indent.1:1716
#, no-wrap
msgid "FILES"
msgstr ""

#.  set tabstop to longest possible filename, plus a wee bit
#. type: ta
#: original/man1/indent.1:1720
#, no-wrap
msgid "\\w'$HOME/.indent.pro   'u"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1722
#, no-wrap
msgid "I<$HOME/.indent.pro>\tholds default options for indent.\n"
msgstr ""

#. type: SH
#: original/man1/indent.1:1722
#, no-wrap
msgid "AUTHORS"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1725
msgid "Carlo Wood"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1727
msgid "Joseph Arceneaux"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1729
msgid "Jim Kingdon"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1731
msgid "David Ingamells"
msgstr ""

#. type: SH
#: original/man1/indent.1:1731
#, no-wrap
msgid "HISTORY"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1733
msgid "Derived from the UCB program \"indent\"."
msgstr ""

#. type: SH
#: original/man1/indent.1:1733
#, no-wrap
msgid "COPYING"
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1738
msgid ""
"Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996 Free Software Foundation, "
"Inc.  Copyright (C) 1995, 1996 Joseph Arceneaux.  Copyright (C) 1999 Carlo "
"Wood.  Copyright (C) 2001 David Ingamells."
msgstr ""

#. type: Plain text
#: original/man1/indent.1:1742
msgid ""
"Permission is granted to make and distribute verbatim copies of this manual "
"provided the copyright notice and this permission notice are preserved on "
"all copies."
msgstr ""
