.\"   Copyright (C) 1996-1999 Free Software Foundation, Inc.
.\"
.\"   Permission is granted to make and distribute verbatim copies of
.\" this manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\"   Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided that
.\" the entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\"   Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that this permission notice may be stated in a
.\" translation approved by the Foundation.
.\"
.\" Copyright (C) 1996 Xavier Leroy.
.\" 
.\" Japanese Version Copyright (C) 1999 GOTO, Masanori
.\"         all rights reserved.
.\" Translated on Tue Dec 14 21:30:57 JST 1999
.\"         by GOTO, Masanori <gotom@debian.or.jp>.
.\" Modified Sun Feb  2 00:36:21 JST 2003
.\"         by Suzuki Takashi.
.\"
.\"WORD:    thread              スレッド
.\"WORD:    create              生成
.\"WORD:    attribute           属性
.\"WORD:    joinable            合流可能
.\"WORD:    detach              デタッチ
.\"WORD:    real-time           リアルタイム
.\"WORD:    identifier          識別子
.\"WORD:    error code          エラーコード
.TH PTHREAD_CREATE 3 LinuxThreads

.\"O .SH NAME
.\"O pthread_create \- create a new thread
.SH "名前"
pthread_create \- 新しいスレッドを生成する

.\"O .SH SYNOPSIS
.SH "書式"
.B #include <pthread.h>

.BI "int pthread_create(pthread_t * " thread ", pthread_attr_t * " attr ", void * (*" start_routine ")(void *), void * " arg ");"

.\"O .SH DESCRIPTION
.\"O .B "pthread_create"
.\"O creates a new thread of control that executes
.\"O concurrently with the calling thread. The new thread applies the
.\"O function 
.\"O .I "start_routine"
.\"O passing it 
.\"O .I "arg"
.\"O as first argument. The new
.\"O thread terminates either explicitly, by calling 
.\"O .BR "pthread_exit" (3),
.\"O or implicitly, by returning from the 
.\"O .I "start_routine"
.\"O function. The
.\"O latter case is equivalent to calling 
.\"O .BR "pthread_exit" (3)
.\"O with the result
.\"O returned by 
.\"O .I "start_routine"
.\"O as exit code.
.SH "説明"
.B "pthread_create"
は呼び出しスレッドと並行して実行する、新しい制御スレッドを生成する。
新しいスレッドは、
.I "arg"
を第 1 引数とする
.I "start_routine"
という関数になる。
新しいスレッドは、
.BR "pthread_exit" (3)
を呼び出すことによって明示的に終了するか、
関数
.I "start_routine"
から返ることで暗黙的に終了する。後者の場合は、
.I "start_routine"
の終了コードとして返す結果を引数として
.BR "pthread_exit" (3)
を呼び出すことに等しい。

.\"O The 
.\"O .I "attr"
.\"O argument specifies thread attributes to be applied to the
.\"O new thread. See 
.\"O .BR "pthread_attr_init" (3)
.\"O for a complete list of thread
.\"O attributes. The 
.\"O .I "attr"
.\"O argument can also be 
.\"O .BR "NULL" ,
.\"O in which case
.\"O default attributes are used: the created thread is joinable (not
.\"O detached) and has default (non real-time) scheduling policy.
引数
.I "attr"
には、その新しいスレッドに適用するスレッド属性を指定する。
スレッド属性に関する完全なリストは
.BR "pthread_attr_init" (3)
に見つけることができる。
引数
.I "attr"
はまた
.B "NULL"
をとることができ、その時はデフォルトの属性が用いられる:
生成したスレッドは合流可能で (つまりデタッチされない)、
デフォルト (つまりリアルタイムではない) のスケジューリング方針になる。

.\"O .SH "RETURN VALUE"
.SH "返り値"
.\"O On success, the identifier of the newly created thread is stored in
.\"O the location pointed by the 
.\"O .I "thread"
.\"O argument, and a 0 is returned. On
.\"O error, a non-zero error code is returned.
成功すると新しく作成したスレッドの識別子が
引数
.I "thread"
の指す領域へ格納され、 0 が返る。
エラーの場合、非 0 のエラーコードが返る。

.\"O .SH ERRORS
.SH "エラー"
.\"O .TP
.\"O .B "EAGAIN"
.\"O not enough system resources to create a process for the new thread.
.\"O .TP
.\"O .B "EAGAIN"
.\"O more than 
.\"O .B "PTHREAD_THREADS_MAX"
.\"O threads are already active.
.TP
.B "EAGAIN"
新しいスレッドのプロセスを生成するための十分なシステム資源がない。
.TP
.B "EAGAIN"
.B "PTHREAD_THREADS_MAX"
よりも多くのスレッドが既にアクティブである。

.\"O .SH AUTHOR
.SH "著者"
Xavier Leroy <Xavier.Leroy@inria.fr>

.\"O .SH "SEE ALSO"
.SH "関連項目"
.BR "pthread_exit" (3),
.BR "pthread_join" (3),
.BR "pthread_detach" (3),
.BR "pthread_attr_init" (3).
