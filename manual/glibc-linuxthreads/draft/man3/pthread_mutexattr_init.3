.\"   Copyright (C) 1996-1999 Free Software Foundation, Inc.
.\"
.\"   Permission is granted to make and distribute verbatim copies of
.\" this manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\"   Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided that
.\" the entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\"   Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that this permission notice may be stated in a
.\" translation approved by the Foundation.
.\"
.\" Copyright (C) 1996 Xavier Leroy.
.\"
.\" Japanese Version Copyright (C) 2002-2003 Suzuki Takashi
.\"         all rights reserved.
.\" Translated Sat Jan  4 14:23:32 JST 2003
.\"         by Suzuki Takashi.
.\"
.\"WORD:    mutex creation attribute    mutex作成時の属性
.\"WORD:    mutex attribute object  mutex属性オブジェクト
.\"WORD:    mutex kind          mutex種別
.\"WORD:    mutex kind attribute    mutex種別を表す属性
.\"WORD:    mutex type          mutex型
.\"WORD:    timed               時刻情報つき
.\"
.\"
.TH PTHREAD_MUTEXATTR 3 LinuxThreads


.\"O .SH NAME
.SH "名前"
.\"O pthread_mutexattr_init, pthread_mutexattr_destroy, pthread_mutexattr_settype, pthread_mutexattr_gettype 
.\"O \- mutex creation attributes
pthread_mutexattr_init, pthread_mutexattr_destroy, pthread_mutexattr_settype, pthread_mutexattr_gettype 
\- mutex 作成時の属性

.\"O .SH SYNOPSIS
.SH "書式"
.B #include <pthread.h>

.BI "int pthread_mutexattr_init(pthread_mutexattr_t *" attr ");"

.BI "int pthread_mutexattr_destroy(pthread_mutexattr_t *" attr ");"

.BI "int pthread_mutexattr_settype(pthread_mutexattr_t *" attr ", int " kind ");"

.BI "int pthread_mutexattr_gettype(const pthread_mutexattr_t *" attr ", int *" kind ");"

.\"O .SH DESCRIPTION
.SH "説明"

.\"O Mutex attributes can be specified at mutex creation time, by passing a
.\"O mutex attribute object as second argument to 
.\"O .BR "pthread_mutex_init" (3).
.\"O Passing 
.\"O .B "NULL"
.\"O is equivalent to passing a mutex attribute object with
.\"O all attributes set to their default values.
mutex の属性は mutex 作成時に、
.BR "pthread_mutex_init" (3)
の第 2 引数として mutex 属性オブジェクトを渡すことで
指定することができる。
.B "NULL"
を渡すことは、すべての属性がデフォルト値に
設定された mutex 属性オブジェクトを渡すことと同等である。

.\"O .B "pthread_mutexattr_init"
.\"O initializes the mutex attribute object 
.\"O .I "attr"
.\"O and fills it with default values for the attributes.
.B "pthread_mutexattr_init"
は mutex 属性オブジェクト
.I "attr"
を初期化し、すべての属性をデフォルトの値に設定する。

.\"O .B "pthread_mutexattr_destroy"
.\"O destroys a mutex attribute object, which
.\"O must not be reused until it is reinitialized. 
.\"O .B "pthread_mutexattr_destroy"
.\"O does nothing in the LinuxThreads implementation. 
.B "pthread_mutexattr_destroy"
は mutex 属性オブジェクトを破壊する。
破壊された mutex 属性オブジェクトは
再び初期化されるまで再使用してはならない。
.B "pthread_mutexattr_destroy"
は LinuxThreads の実装では何もしない。

.\"O LinuxThreads supports only one mutex attribute: the mutex kind, which
.\"O is either 
.\"O .B "PTHREAD_MUTEX_FAST_NP"
.\"O for ``fast'' mutexes,
.\"O .B "PTHREAD_MUTEX_RECURSIVE_NP"
.\"O for ``recursive'' mutexes,
.\"O or 
.\"O .B "PTHREAD_MUTEX_ERRORCHECK_NP"
.\"O for ``error checking'' mutexes.
.\"O As the 
.\"O .B "NP"
.\"O suffix indicates, this is a non-portable extension to the
.\"O POSIX standard and should not be employed in portable programs.
LinuxThreads はただ 1 つの mutex 属性に対応している。
それは mutex 種別 (mutex kind) で、
「速い (fast) 」 mutex を表す
.B "PTHREAD_MUTEX_FAST_NP"
か、「再帰的な (recursive) 」 mutex を表す
.B "PTHREAD_MUTEX_RECURSIVE_NP"
、「エラー検査を行なう (error checking) 」 mutex を表す
.B "PTHREAD_MUTEX_ERRORCHECK_NP"
のいずれかの値をとる。
.B "NP"
という接尾辞が示すように、
これは POSIX 標準に対するポータブルでない拡張で、
ポータブルなプログラムでは用いるべきでない。

.\"O The mutex kind determines what happens if a thread attempts to lock a
.\"O mutex it already owns with 
.\"O .BR "pthread_mutex_lock" (3).
.\"O If the mutex is of
.\"O the ``fast'' kind, 
.\"O .BR "pthread_mutex_lock" (3)
.\"O simply suspends the calling
.\"O thread forever.  If the mutex is of the ``error checking'' kind,
.\"O .BR "pthread_mutex_lock" (3)
.\"O returns immediately with the error code
.\"O .BR "EDEADLK" .
.\"O If the mutex is of the ``recursive'' kind, the call to
.\"O .BR "pthread_mutex_lock" (3)
.\"O returns immediately with a success return
.\"O code. The number of times the thread owning the mutex has locked it is
.\"O recorded in the mutex. The owning thread must call
.\"O .BR "pthread_mutex_unlock" (3)
.\"O the same number of times before the mutex
.\"O returns to the unlocked state.
mutex 種別は、
あるスレッドが自分自身で
.BR "pthread_mutex_lock" (3)
ですでに保持している mutex をロックしようとしたときに、
何が起こるかを決定する。
mutex が「速い (fast) 」という種別の場合、
.BR "pthread_mutex_lock" (3)
は単に呼び出しスレッドを永遠に停止させる。
mutex が「エラー検査を行なう (error checking) 」という種別の場合、
.BR "pthread_mutex_lock" (3)
はエラーコード
.B "EDEADLK"
とともに直ちに返る。
mutex が「再帰的な (recursive) 」という種別の場合、
.BR "pthread_mutex_lock" (3)
の呼び出しは成功の返り値とともに直ちに返る。
mutex を保持しているスレッドが何回ロックしたかがその mutex に記録される。
保持しているスレッドがロック解除状態に戻るためには、
同じ回数だけ
.BR "pthread_mutex_unlock" (3)
を呼び出さなければならない。

.\"O The default mutex kind is ``fast'', that is, 
.\"O .BR "PTHREAD_MUTEX_FAST_NP" .
デフォルトの mutex 種別は「速い (fast) 」、
すなわち
.B "PTHREAD_MUTEX_FAST_NP"
である。

.\"O .B "pthread_mutexattr_settype"
.\"O sets the mutex kind attribute in 
.\"O .I "attr"
.\"O to the value specified by 
.\"O .IR "kind" .
.B "pthread_mutexattr_settype"
は
.I "attr"
の mutex 種別を表す属性を
.I "kind"
で示される値に設定する。

.\"O .B "pthread_mutexattr_gettype"
.\"O retrieves the current value of the
.\"O mutex kind attribute in 
.\"O .I "attr"
.\"O and stores it in the location pointed
.\"O to by 
.\"O .IR "kind" .
.B "pthread_mutexattr_gettype"
は
.I "attr"
の mutex 種別を表す属性を取得し、
.I "kind"
で指し示される領域に格納する。

.\"O .SH "RETURN VALUE"
.\"O .BR "pthread_mutexattr_init" ,
.\"O .B "pthread_mutexattr_destroy"
.\"O and
.\"O .B "pthread_mutexattr_gettype"
.\"O always return 0.
.SH "返り値"
.B "pthread_mutexattr_init"
および
.B "pthread_mutexattr_destroy"
、
.B "pthread_mutexattr_gettype"
は常に 0 を返す。

.\"O .B "pthread_mutexattr_settype"
.\"O returns 0 on success and a non-zero
.\"O error code on error.
.B "pthread_mutexattr_settype"
は成功すると 0 を、エラーの場合非 0 のエラーコードを返す。

.\"O .SH ERRORS
.SH "エラー"

.\"O On error, 
.\"O .B "pthread_mutexattr_settype"
.\"O returns the following error code:
.\"O .TP
.\"O .B "EINVAL"
.\"O .I "kind"
.\"O is neither 
.\"O .B "PTHREAD_MUTEX_FAST_NP"
.\"O nor 
.\"O .B "PTHREAD_MUTEX_RECURSIVE_NP"
.\"O nor 
.\"O .B "PTHREAD_MUTEX_ERRORCHECK_NP"
エラーのとき、
.B "pthread_mutexattr_settype"
は次のようなエラーコードを返す:
.TP
.B "EINVAL"
.I "kind"
が
.B "PTHREAD_MUTEX_FAST_NP"
および
.B "PTHREAD_MUTEX_RECURSIVE_NP"
、
.B "PTHREAD_MUTEX_ERRORCHECK_NP"
のいずれでもない。

.\"O .SH AUTHOR
.SH "著者"
Xavier Leroy <Xavier.Leroy@inria.fr>

.\"O .SH "SEE ALSO"
.SH "関連項目"
.BR "pthread_mutex_init" (3),
.BR "pthread_mutex_lock" (3),
.BR "pthread_mutex_unlock" (3).


[訳注1] glibc-linuxthreads の最新のドキュメントは Texinfo 形式で提供されている。
上の記述は glibc-linuxthreads-2.2 以降では正しくない。
以下は glibc-linuxthreads-2.3.1 の Texinfo ファイルからの引用である。
種別 (kind) が型 (type) に変更されている。

.\"O ---from glibc-linuxthreads-2.3.1/linuxthreads/linuxthreads.texi
.\"O LinuxThreads supports only one mutex attribute: the mutex type, which is
.\"O either @code{PTHREAD_MUTEX_ADAPTIVE_NP} for ``fast'' mutexes,
.\"O @code{PTHREAD_MUTEX_RECURSIVE_NP} for ``recursive'' mutexes,
.\"O @code{PTHREAD_MUTEX_TIMED_NP} for ``timed'' mutexes, or
.\"O @code{PTHREAD_MUTEX_ERRORCHECK_NP} for ``error checking'' mutexes.  As
.\"O the @code{NP} suffix indicates, this is a non-portable extension to the
.\"O POSIX standard and should not be employed in portable programs.
LinuxThreads はただ 1 つの mutex 属性に対応している。
それは mutex 型 (mutex type) で、
「速い (fast) 」 mutex を表す
.B "PTHREAD_MUTEX_ADAPTIVE_NP"
か、「再帰的な (recursive) 」 mutex を表す
.B "PTHREAD_MUTEX_RECURSIVE_NP"
、「時刻情報つき (timed) 」 mutex を表す
.B "PTHREAD_MUTEX_TIMED_NP"
、「エラー検査を行なう (error checking) 」 mutex を表す
.B "PTHREAD_MUTEX_ERRORCHECK_NP"
のいずれかの値をとる。
.B "NP"
という接尾辞が示すように、
これは POSIX 標準に対するポータブルでない拡張で、
ポータブルなプログラムでは用いるべきでない。

.\"O The mutex type determines what happens if a thread attempts to lock a
.\"O mutex it already owns with @code{pthread_mutex_lock}. If the mutex is of
.\"O the ``fast'' type, @code{pthread_mutex_lock} simply suspends the calling
.\"O thread forever.  If the mutex is of the ``error checking'' type,
.\"O @code{pthread_mutex_lock} returns immediately with the error code
.\"O @code{EDEADLK}.  If the mutex is of the ``recursive'' type, the call to
.\"O @code{pthread_mutex_lock} returns immediately with a success return
.\"O code. The number of times the thread owning the mutex has locked it is
.\"O recorded in the mutex. The owning thread must call
.\"O @code{pthread_mutex_unlock} the same number of times before the mutex
.\"O returns to the unlocked state.
mutex 型は、
あるスレッドが自分自身で
.BR "pthread_mutex_lock" (3)
ですでに保持している mutex をロックしようとしたときに、
何が起こるかを決定する。
mutex が「速い (fast) 」という型の場合、
.BR "pthread_mutex_lock" (3)
は単に呼び出しスレッドを永遠に停止させる。
mutex が「エラー検査を行なう (error checking) 」という型の場合、
.BR "pthread_mutex_lock" (3)
はエラーコード
.B "EDEADLK"
とともに直ちに返る。
mutex が「再帰的な (recursive) 」という型の場合、
.BR "pthread_mutex_lock" (3)
の呼び出しは成功の返り値とともに直ちに返る。
mutex を保持しているスレッドが何回ロックしたかがその mutex に記録される。
保持しているスレッドがロック解除状態に戻るためには、
同じ回数だけ
.BR "pthread_mutex_unlock" (3)
を呼び出さなければならない。

.\"OThe default mutex type is ``timed'', that is, @code{PTHREAD_MUTEX_TIMED_NP}.
.\"O@c This doesn't describe how a ``timed'' mutex behaves. FIXME
デフォルトの mutex 型は「時刻情報つき (timed) 」、
すなわち
.B "PTHREAD_MUTEX_TIMED_NP"
である。


[訳注2] LinuxThreads では mutex をプロセス間で共有することはできない。
glibc-linuxthreads-2.2 以降、次の 2 つの関数が追加されている。

.BI "int pthread_mutexattr_getpshared(const pthread_mutexattr_t *" attr ", int *" pshared ");"

.I "pshared"
で指し示される領域に
.B "PTHREAD_PROCESS_PRIVATE"
を格納し、常に 0 を返す。

.BI "int pthread_mutexattr_setpshared(pthread_mutexattr_t *" attr ", int " pshared ");"

.I "pshared"
が
.B "PTHREAD_PROCESS_PRIVATE"
および
.B "PTHREAD_PROCESS_SHARED"
のいずれでもない場合、
.B "EINVAL"
を返す。
.I "pshared"
が
.B "PTHREAD_PROCESS_SHARED"
の場合、
.B "ENOSYS"
を返す。
それ以外の場合、 0 を返す。
