.\"
.\" Japanese Version Copyright (c) 2000-2003 Yuichi SATO
.\"         all rights reserved.
.\" Translated Wed Dec 20 19:01:03 JST 2000
.\"         by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Updated & Modified Tue Apr 29 20:36:04 JST 2003
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.\"WORD:	compress	圧縮
.\"WORD:	decompress	伸長
.\"
.PU
.TH bzip2 1
.\"O .SH NAME
.SH 名前
.\"O bzip2, bunzip2 \- a block-sorting file compressor, v1.0.2
bzip2, bunzip2 \- ブロックソートによってファイルを圧縮・伸長する。バージョン 1.0.2
.br
.\"O bzcat \- decompresses files to stdout
bzcat \- ファイルを標準出力に伸長する
.br
.\"O bzip2recover \- recovers data from damaged bzip2 files
bzip2recover \- 破損した bzip2 ファイルからデータを復元する

.\"O .SH SYNOPSIS
.SH 書式
.ll +8
.B bzip2
.RB [ " \-cdfkqstvzVL123456789 " ]
[
.I "filenames \&..."
]
.ll -8
.br
.B bunzip2
.RB [ " \-fkvsVL " ]
[ 
.I "filenames \&..."
]
.br
.B bzcat
.RB [ " \-s " ]
[ 
.I "filenames \&..."
]
.br
.B bzip2recover
.I "filename"

.\"O .SH DESCRIPTION
.SH 説明
.\"O .I bzip2
.\"O compresses files using the Burrows-Wheeler block sorting
.\"O text compression algorithm, and Huffman coding.  Compression is
.\"O generally considerably better than that achieved by more conventional
.\"O LZ77/LZ78-based compressors, and approaches the performance of the PPM
.\"O family of statistical compressors.
.I bzip2
は、Burrows-Wheeler ブロックソートテキスト圧縮アルゴリズムと
Huffman コード化を使ってファイルを圧縮する。
圧縮率は、一般的な LZ77/LZ78 ベースの圧縮率に比べると、大抵の場合でとても良い。
また、圧縮速度は、統計的圧縮法である PPM 圧縮の速度に近づいている。

.\"O The command-line options are deliberately very similar to 
.\"O those of 
.\"O .I GNU gzip, 
.\"O but they are not identical.
コマンドラインオプションは
.I GNU gzip
のオプションにわざと似せてあるが、同じではない。

.\"O .I bzip2
.\"O expects a list of file names to accompany the
.\"O command-line flags.  Each file is replaced by a compressed version of
.\"O itself, with the name "original_name.bz2".  
.\"O Each compressed file
.\"O has the same modification date, permissions, and, when possible,
.\"O ownership as the corresponding original, so that these properties can
.\"O be correctly restored at decompression time.  File name handling is
.\"O naive in the sense that there is no mechanism for preserving original
.\"O file names, permissions, ownerships or dates in filesystems which lack
.\"O these concepts, or have serious file name length restrictions, such as
.\"O MS-DOS.
.I bzip2
はコマンドラインのフラグを伴ったファイル名のリストを受け取る。
各ファイルは、"original_name.bz2" という名前の
圧縮されたファイルに置き換えられる。
圧縮ファイルの修正日・アクセス権・(設定可能な場合の) 所有者は、
元のファイルと同じになる。
これにより、伸長時に属性が正しく復元される。
ファイル名の操作は、
元のファイル名・アクセス権・所有者を保存する仕組みが
ファイルシステムになかったり、
MS-DOS のように深刻なファイル名の長さ制限があるために、
とても面倒である。

.\"O .I bzip2
.\"O and
.\"O .I bunzip2
.\"O will by default not overwrite existing
.\"O files.  If you want this to happen, specify the \-f flag.
.I bzip2
と
.I bunzip2
はデフォルトでは既存のファイルを上書きしない。
上書きしたい場合は \-f フラグを指定すること。

.\"O If no file names are specified,
.\"O .I bzip2
.\"O compresses from standard
.\"O input to standard output.  In this case,
.\"O .I bzip2
.\"O will decline to
.\"O write compressed output to a terminal, as this would be entirely
.\"O incomprehensible and therefore pointless.
ファイル名が指定されない場合、
.I bzip2
標準入力を圧縮して標準出力に書き出す。
この場合、
.I bzip2
は圧縮された出力を端末には書き出さない。
なぜなら、この出力は全く分かりにくくて、無駄なものだからである。

.\"O .I bunzip2
.\"O (or
.\"O .I bzip2 \-d) 
.\"O decompresses all
.\"O specified files.  Files which were not created by 
.\"O .I bzip2
.\"O will be detected and ignored, and a warning issued.  
.\"O .I bzip2
.\"O attempts to guess the filename for the decompressed file 
.\"O from that of the compressed file as follows:
.I bunzip2
(または
.IR "bzip2 \-d" ) 
は、指定された全てのファイルを伸長する。
.I bzip2
で圧縮されていないファイルは検知され、無視される。
さらに警告が出される。
.I bzip2
は、以下のようにして圧縮ファイルの名前から伸長後のファイル名を推測する。

.\"O        filename.bz2    becomes   filename
.\"O        filename.bz     becomes   filename
.\"O        filename.tbz2   becomes   filename.tar
.\"O        filename.tbz    becomes   filename.tar
.\"O        anyothername    becomes   anyothername.out
       filename.bz2    は   filename         になる。
       filename.bz     は   filename         になる。
       filename.tbz2   は   filename.tar     になる。
       filename.tbz    は   filename.tar     になる。
       anyothername    は   anyothername.out になる。

.\"O If the file does not end in one of the recognised endings, 
.\"O .I .bz2, 
.\"O .I .bz, 
.\"O .I .tbz2
.\"O or
.\"O .I .tbz, 
.\"O .I bzip2 
.\"O complains that it cannot
.\"O guess the name of the original file, and uses the original name
.\"O with
.\"O .I .out
.\"O appended.
ファイル名が
.IR .bz2 , 
.IR .bz , 
.IR .tbz2 ,
.I .tbz
のような認識される拡張子のいずれかで終っていない場合、
.I bzip2
は元のファイル名が推測できないという警告を出し、
.I .out
を付加した名前を元のファイル名として使う。

.\"O As with compression, supplying no
.\"O filenames causes decompression from 
.\"O standard input to standard output.
圧縮の場合と同様に、
ファイル名が指定されない場合は、
標準入力を伸長して標準出力に書き出す。

.\"O .I bunzip2 
.\"O will correctly decompress a file which is the
.\"O concatenation of two or more compressed files.  The result is the
.\"O concatenation of the corresponding uncompressed files.  Integrity
.\"O testing (\-t) 
.\"O of concatenated 
.\"O compressed files is also supported.
.I bunzip2 
は 2 つ以上の圧縮ファイルを連結したファイルでも正しく伸長する。
伸長して得られるファイルは、圧縮前のファイルを連結したものになる。
連結した圧縮ファイルの完全性テスト (\-t) もサポートされている。

.\"O You can also compress or decompress files to the standard output by
.\"O giving the \-c flag.  Multiple files may be compressed and
.\"O decompressed like this.  The resulting outputs are fed sequentially to
.\"O stdout.  Compression of multiple files 
.\"O in this manner generates a stream
.\"O containing multiple compressed file representations.  Such a stream
.\"O can be decompressed correctly only by
.\"O .I bzip2 
.\"O version 0.9.0 or
.\"O later.  Earlier versions of
.\"O .I bzip2
.\"O will stop after decompressing
.\"O the first file in the stream.
\-c フラグを指定することにより、
圧縮・伸長されたファイルを標準出力に書き出すこともできる。
このフラグを指定して、複数のファイルを圧縮・伸長することができる。
結果の出力は標準出力に順番に書き出される。
この方式による複数ファイルの圧縮では、
複数圧縮ファイル表現を含むストリームが生成される。
このようなストリームは、
バージョン 0.9.0 以降の
.I bzip2 
でしか正しく伸長できない。
これより前のバージョンの
.I bzip2
ではストリーム中の最初のファイルを伸長した後に停止する。

.\"O .I bzcat
.\"O (or
.\"O .I bzip2 -dc) 
.\"O decompresses all specified files to
.\"O the standard output.
.I bzcat
(または
.IR "bzip2 -dc" ) 
は指定した全てのファイルを伸長し、標準出力に書き出す。

.\"O .I bzip2
.\"O will read arguments from the environment variables
.\"O .I BZIP2
.\"O and
.\"O .I BZIP,
.\"O in that order, and will process them
.\"O before any arguments read from the command line.  This gives a 
.\"O convenient way to supply default arguments.
.I bzip2
は環境変数
.IR BZIP2 ,
.I BZIP
からこの順番で引き数を読み込み、
コマンドラインから読み込まれた引き数よりも先に処理する。
これはデフォルトの引き数を与える便利な方法である。

.\"O Compression is always performed, even if the compressed 
.\"O file is slightly
.\"O larger than the original.  Files of less than about one hundred bytes
.\"O tend to get larger, since the compression mechanism has a constant
.\"O overhead in the region of 50 bytes.  Random data (including the output
.\"O of most file compressors) is coded at about 8.05 bits per byte, giving
.\"O an expansion of around 0.5%.
圧縮後のファイルが元のファイルより少し大きくなる場合であっても、
圧縮は常に行われる。
100 バイトより小さいぐらいのファイルは、圧縮によって大きくなる傾向がある。
なぜなら、この圧縮メカニズムが
定常的に 50 バイトのオーバーヘッドを持つためである。
(大部分のファイル圧縮法による出力を含む) ランダムなデータは、
1 バイト当たり約 8.05 ビットでコード化され、約 0.5% 大きくなる。

.\"O As a self-check for your protection, 
.\"O .I 
.\"O bzip2
.\"O uses 32-bit CRCs to
.\"O make sure that the decompressed version of a file is identical to the
.\"O original.  This guards against corruption of the compressed data, and
.\"O against undetected bugs in
.\"O .I bzip2
.\"O (hopefully very unlikely).  The
.\"O chances of data corruption going undetected is microscopic, about one
.\"O chance in four billion for each file processed.  Be aware, though, that
.\"O the check occurs upon decompression, so it can only tell you that
.\"O something is wrong.  It can't help you 
.\"O recover the original uncompressed
.\"O data.  You can use 
.\"O .I bzip2recover
.\"O to try to recover data from
.\"O damaged files.
データ保護のための自己チェックとして、
.I bzip2
は 32 ビット CRC を破損したファイルを元のファイルと同じにするために使う。
これにより、圧縮データの破損とまだ見つかっていない
.I bzip2
のバグ (とても少ないことを期待する) からデータを保護することができる。
データの破損が検知されない確率は非常に少なく、
各ファイル処理につき 40 億回に 1 回程度である。
しかし、このチェックは伸長のときにしか行われないので、
何か間違いがあることを知らせるだけである点に注意すること。
オリジナルの圧縮されていないデータを復元する助けにはならない。
破損したファイルからデータを復元するためには、
.I bzip2recover
を使うことができる。

.\"O Return values: 0 for a normal exit, 1 for environmental problems (file
.\"O not found, invalid flags, I/O errors, &c), 2 to indicate a corrupt
.\"O compressed file, 3 for an internal consistency error (eg, bug) which
.\"O caused
.\"O .I bzip2
.\"O to panic.
返り値:
正常終了の場合、0 が返される。
実行環境の問題 (ファイルがない・不正なフラグ・
I/O エラーなど) がある場合、1 が返される。
破損した圧縮ファイルの場合、2 が返される。
.I bzip2
にパニックを引き起こす内部整合性エラー (例えば、バグ) の場合、3 が返される。

.\"O .SH OPTIONS
.SH オプション
.TP
.B \-c --stdout
.\"O Compress or decompress to standard output.
圧縮・伸長した結果を標準出力に書き出す。
.TP
.\"O .B \-d --decompress
.\"O Force decompression.  
.\"O .I bzip2, 
.\"O .I bunzip2 
.\"O and
.\"O .I bzcat 
.\"O are
.\"O really the same program, and the decision about what actions to take is
.\"O done on the basis of which name is used.  This flag overrides that
.\"O mechanism, and forces 
.\"O .I bzip2
.\"O to decompress.
.B \-d --decompress
ファイルの伸長をさせる。
.IR bzip2 , 
.IR bunzip2 ,
.I bzcat 
は実際には同じプログラムである。
どの動作をするのかは、どの名前が使われたかに基づいて決められる。
このフラグは、その動作決定機構より優先され、
.I bzip2
にファイルの伸長をさせる。
.TP
.B \-z --compress
.\"O The complement to \-d: forces compression, regardless of the
.\"O invocation name.
\-d の反対。
起動された名前にかかわらず、ファイルの圧縮をさせる。
.TP
.B \-t --test
.\"O Check integrity of the specified file(s), but don't decompress them.
.\"O This really performs a trial decompression and throws away the result.
指定されたファイルの完全性のチェックをするが、伸長はしない。
伸長テストを行い、結果を破棄する。
.TP
.B \-f --force
.\"O Force overwrite of output files.  Normally,
.\"O .I bzip2 
.\"O will not overwrite
.\"O existing output files.  Also forces 
.\"O .I bzip2 
.\"O to break hard links
.\"O to files, which it otherwise wouldn't do.
出力ファイルの上書きをさせる。
通常、
.I bzip2 
は既存の出力ファイルを上書きしない。
さらに
.I bzip2 
にファイルへのハードリンクを削除させる。
このオプションが指定されていない場合は、ハードリンクの削除もされない。

.\"O bzip2 normally declines to decompress files which don't have the
.\"O correct magic header bytes.  If forced (-f), however, it will pass
.\"O such files through unmodified.  This is how GNU gzip behaves.
通常 bzip2 は正しいマジックヘッダバイトを持たないファイルを伸長しない。
ただし (-f) で強制すれば、これらのファイルも修正せずに通過させる。
これは GNU gzip の動作と同じである。
.TP
.B \-k --keep
.\"O Keep (don't delete) input files during compression
.\"O or decompression.
伸長・展開の後でも入力ファイルを保存する (削除しない)。
.TP
.B \-s --small
.\"O Reduce memory usage, for compression, decompression and testing.  Files
.\"O are decompressed and tested using a modified algorithm which only
.\"O requires 2.5 bytes per block byte.  This means any file can be
.\"O decompressed in 2300k of memory, albeit at about half the normal speed.
圧縮・伸長・テストの際のメモリ使用量を減らす。
1 ブロックバイト当たり 2.5 バイトしか必要としない
修正されたアルゴリズムを使って、
ファイルの伸長・テストが行われる。
全てのファイルが 2300kB のメモリで伸長できるが、
通常の速度の約半分の速度になってしまう。

.\"O During compression, \-s selects a block size of 200k, which limits
.\"O memory use to around the same figure, at the expense of your compression
.\"O ratio.  In short, if your machine is low on memory (8 megabytes or
.\"O less), use \-s for everything.  See MEMORY MANAGEMENT below.
圧縮の場合、\-s フラグを使うと 200kB のブロックサイズが選択される。
メモリ使用量はこれと同じくらいになるが、圧縮率が犠牲になる。
つまり、計算機にメモリが少ない (8 MB 以下) 場合は、
全てのファイルについて \-s フラグを使うこと。
以下の「メモリ管理」セクションを参照すること。
.TP
.B \-q --quiet
.\"O Suppress non-essential warning messages.  Messages pertaining to
.\"O I/O errors and other critical events will not be suppressed.
本質的でない警告メッセージを抑制する。
I/O エラーと致命的なイベントに関係するメッセージは抑制されない。
.TP
.B \-v --verbose
.\"O Verbose mode -- show the compression ratio for each file processed.
.\"O Further \-v's increase the verbosity level, spewing out lots of
.\"O information which is primarily of interest for diagnostic purposes.
詳細表示モード -- 各ファイル処理について圧縮率を表示する。
さらに \-v の数を増やすと、詳細表示のレベルも上がり、
主に診断を目的とする多くの情報を書き出す。
.TP
.B \-L --license -V --version
.\"O Display the software version, license terms and conditions.
ソフトウェアのバージョン・ライセンス・配布条件を表示する。
.TP
.\"O .B \-1 (or \-\-fast) to \-9 (or \-\-best)
.\"O Set the block size to 100 k, 200 k ..  900 k when compressing.  Has no
.\"O effect when decompressing.  See MEMORY MANAGEMENT below.
.B \-1 (または \-\-fast) から \-9 (または \-\-best)
圧縮の場合、ブロックサイズを 100 k, 200 k ..  900 k に設定する。
伸長の場合、何も影響を及ぼさない。
以下の「メモリ管理」セクションを参照すること。
.\"O The \-\-fast and \-\-best aliases are primarily for GNU gzip 
.\"O compatibility.  In particular, \-\-fast doesn't make things
.\"O significantly faster.  
.\"O And \-\-best merely selects the default behaviour.
\-\-fast と \-\-best エイリアスは、
主として GNU gzip との互換性のためにある。
特に \-\-fast オプションで目に見えて速くなる訳ではない。
また \-\-best は単にデフォルトの動作を選択するだけである。
.TP
.B \--
.\"O Treats all subsequent arguments as file names, even if they start
.\"O with a dash.  This is so you can handle files with names beginning
.\"O with a dash, for example: bzip2 \-- \-myfilename.
これ以降の引き数が、たとえダッシュで始まるものであっても、
ファイル名として扱う。
これにより、ダッシュで始まる名前のファイルを扱うことができる。
例を挙げる: bzip2 \-- \-myfilename
.TP
.B \--repetitive-fast --repetitive-best
.\"O These flags are redundant in versions 0.9.5 and above.  They provided
.\"O some coarse control over the behaviour of the sorting algorithm in
.\"O earlier versions, which was sometimes useful.  0.9.5 and above have an
.\"O improved algorithm which renders these flags irrelevant.
これらのフラグは、バージョン 0.9.5 以降では余計なものである。
これらのフラグは、以前のバージョンでソートアルゴリズムの動作を
大雑把に制御するために提供されたもので、時々は役立ったものである。
0.9.5 以降では、これらのフラグが無関係になる
改良されたアルゴリズムが使われている。

.\"O .SH MEMORY MANAGEMENT
.SH メモリ管理
.\"O .I bzip2 
.\"O compresses large files in blocks.  The block size affects
.\"O both the compression ratio achieved, and the amount of memory needed for
.\"O compression and decompression.  The flags \-1 through \-9
.\"O specify the block size to be 100,000 bytes through 900,000 bytes (the
.\"O default) respectively.  At decompression time, the block size used for
.\"O compression is read from the header of the compressed file, and
.\"O .I bunzip2
.\"O then allocates itself just enough memory to decompress
.\"O the file.  Since block sizes are stored in compressed files, it follows
.\"O that the flags \-1 to \-9 are irrelevant to and so ignored
.\"O during decompression.
.I bzip2
はブロック毎に大きなファイルを圧縮する。
ブロックサイズは、実行された結果の圧縮率と
圧縮・伸長に必要なメモリ使用量の両方に影響を及ぼす。
フラグ \-1 から \-9 は、それぞれブロックサイズ
100,000 バイトから (デフォルトの) 900,000 バイトを指定する。
伸長時には、圧縮に使われたブロックサイズが圧縮ファイルのヘッダから読み込まれ、
.I bunzip2
はファイルを伸長するのにちょうど十分なメモリを確保する。
ブロックサイズは圧縮ファイルに格納されているので、
伸長時にはフラグ \-1 から \-9 は関係なく無視される。

.\"O Compression and decompression requirements, 
.\"O in bytes, can be estimated as:
.\"O 
.\"O        Compression:   400k + ( 8 x block size )
.\"O 
.\"O        Decompression: 100k + ( 4 x block size ), or
.\"O                       100k + ( 2.5 x block size )
圧縮・伸縮に必要なメモリ使用量 (バイト単位) は、
以下のように計算できる:

       圧縮:   400k + ( 8 x ブロックサイズ )

       伸長:   100k + ( 4 x ブロックサイズ ), または
               100k + ( 2.5 x ブロックサイズ )

.\"O Larger block sizes give rapidly diminishing marginal returns.  Most of
.\"O the compression comes from the first two or three hundred k of block
.\"O size, a fact worth bearing in mind when using
.\"O .I bzip2
.\"O on small machines.
.\"O It is also important to appreciate that the decompression memory
.\"O requirement is set at compression time by the choice of block size.
大きいブロックサイズにすると、境界の返り値をすぐに減少させる。
大部分の圧縮は、最初の 200kB から 300kB のブロックサイズでつくられる。
.I bzip2
をメモリの少ない計算機で使う場合は、
このことを覚えておく価値がある。
さらに、伸長に必要なメモリは、圧縮時にブロックサイズを選択することで
設定される点を知っておくことも重要である。

.\"O For files compressed with the default 900k block size,
.\"O .I bunzip2
.\"O will require about 3700 kbytes to decompress.  To support decompression
.\"O of any file on a 4 megabyte machine, 
.\"O .I bunzip2
.\"O has an option to
.\"O decompress using approximately half this amount of memory, about 2300
.\"O kbytes.  Decompression speed is also halved, so you should use this
.\"O option only where necessary.  The relevant flag is -s.
デフォルトの 900kB ブロックサイズで圧縮されたファイルに対して、
.I bunzip2
は伸長時に約 3700kB のメモリを必要とする。
4MB のメモリの計算機でファイル伸長をサポートするには、
.I bunzip2
このメモリ量の約半分、約 2300kB を使って伸長するオプションがある。
伸長速度も半分になるので、このオプションは必要な場合にのみ使うべきである。
関連するフラグとして -s がある。

.\"O In general, try and use the largest block size memory constraints allow,
.\"O since that maximises the compression achieved.  Compression and
.\"O decompression speed are virtually unaffected by block size.
一般的には、メモリの制限が許す限り一番大きなブロックサイズを使うこと。
こうすることで圧縮率が最も良くなる。
圧縮・伸長の速度は事実上ブロックサイズに影響されない。

.\"O Another significant point applies to files which fit in a single block
.\"O -- that means most files you'd encounter using a large block size.  The
.\"O amount of real memory touched is proportional to the size of the file,
.\"O since the file is smaller than a block.  For example, compressing a file
.\"O 20,000 bytes long with the flag -9 will cause the compressor to
.\"O allocate around 7600k of memory, but only touch 400k + 20000 * 8 = 560
.\"O kbytes of it.  Similarly, the decompressor will allocate 3700k but only
.\"O touch 100k + 20000 * 4 = 180 kbytes.
他に重要な点が単一のブロックに適用される。
-- つまり、入手する大部分のファイルは、
大きいブロックサイズを使っているということである。
このファイルのサイズはブロックサイズより小さいので、
実際のメモリ使用量はファイルサイズに比例する。
例えば、20,000 バイト (20kB) のファイルを -9 フラグで圧縮する場合、
7600kB のメモリが確保されるが、400k + 20000 * 8 = 560kB しか使用しない。
同様に、伸長時には 3700kB が確保されるが、
100k + 20000 * 4 = 180 kB しか使用しない。

.\"O Here is a table which summarises the maximum memory usage for different
.\"O block sizes.  Also recorded is the total compressed size for 14 files of
.\"O the Calgary Text Compression Corpus totalling 3,141,622 bytes.  This
.\"O column gives some feel for how compression varies with block size.
.\"O These figures tend to understate the advantage of larger block sizes for
.\"O larger files, since the Corpus is dominated by smaller files.
異なるブロックサイズに対しての最大メモリ使用量をまとめたテーブルを以下に示す。
カルガリー大学のテキスト圧縮コーパス
(14 個のファイル、合計 3,141,622 バイト) を
圧縮したサイズも記録されている。
行毎に比べると、ブロックサイズによって圧縮が
どのように変わるかを知ることができる。
この数字は、大きなファイルに対して大きなブロックサイズを使うことの利点を、
控え目にしか述べていない。
なぜなら、このコーパスが小さめのファイルで占められているためである。

.\"O            Compress   Decompress   Decompress   Corpus
.\"O     Flag     usage      usage       -s usage     Size
            圧縮時の   伸長時の  -s 伸長時の  コーパスの
   フラグ    使用量     使用量      使用量      サイズ

     -1      1200k       500k         350k      914704
     -2      2000k       900k         600k      877703
     -3      2800k      1300k         850k      860338
     -4      3600k      1700k        1100k      846899
     -5      4400k      2100k        1350k      845160
     -6      5200k      2500k        1600k      838626
     -7      6100k      2900k        1850k      834096
     -8      6800k      3300k        2100k      828642
     -9      7600k      3700k        2350k      828642

.\"O .SH RECOVERING DATA FROM DAMAGED FILES
.SH 破損したファイルからのデータ復元
.\"O .I bzip2
.\"O compresses files in blocks, usually 900kbytes long.  Each
.\"O block is handled independently.  If a media or transmission error causes
.\"O a multi-block .bz2
.\"O file to become damaged, it may be possible to
.\"O recover data from the undamaged blocks in the file.
.I bzip2
は、通常 900kB のブロックでファイルを圧縮する。
各ブロックは独立に操作される。
メディアのエラーや転送エラーにより、
複数ブロックからなる .bz2 ファイルが破損しても、
ファイルの破損していないブロックからデータを復元できる可能性がある。

.\"O The compressed representation of each block is delimited by a 48-bit
.\"O pattern, which makes it possible to find the block boundaries with
.\"O reasonable certainty.  Each block also carries its own 32-bit CRC, so
.\"O damaged blocks can be distinguished from undamaged ones.
各ブロックの圧縮された表現は、48 ビットのパターンで区切られる。
このパターンにより、論理的な確実性を持ってブロック境界を見つけることができる。
各ブロックにはそれぞれの 32 ビット CRC があるので、
破損したブロックは破損していないものと区別できる。

.\"O .I bzip2recover
.\"O is a simple program whose purpose is to search for
.\"O blocks in .bz2 files, and write each block out into its own .bz2 
.\"O file.  You can then use
.\"O .I bzip2 
.\"O \-t
.\"O to test the
.\"O integrity of the resulting files, and decompress those which are
.\"O undamaged.
.I bzip2recover
は、.bz2 ファイルの各ブロックを検索し、
それ独自の .bz2 ファイルに各ブロックを書き出す。
ユーザーは、
.I bzip2 
\-t
を使って得られたファイルの完全性をテストし、
破損していないファイルとして伸長できる。

.\"O .I bzip2recover
.\"O takes a single argument, the name of the damaged file, 
.\"O and writes a number of files "rec00001file.bz2",
.\"O "rec00002file.bz2", etc, containing the  extracted  blocks.
.\"O The  output  filenames  are  designed  so  that the use of
.\"O wildcards in subsequent processing -- for example,  
.\"O "bzip2 -dc  rec*file.bz2 > recovered_data" -- processes the files in
.\"O the correct order.
.I bzip2recover
は、破損したファイルを唯一の引き数として受け取り、
抽出されたブロックを含んだ "rec00001file.bz2", "rec00002file.bz2", ...,
という多くのファイルを書き出す。
出力ファイルの名前は、
その後の処理でワイルドカードが使えるように設計されている
-- 例えば、
"bzip2 -dc  rec*file.bz2 > recovered_data" 
-- とすれば、ファイルを正しい順番で処理することができる。

.\"O .I bzip2recover
.\"O should be of most use dealing with large .bz2
.\"O files,  as  these will contain many blocks.  It is clearly
.\"O futile to use it on damaged single-block  files,  since  a
.\"O damaged  block  cannot  be recovered.  If you wish to minimise 
.\"O any potential data loss through media  or  transmission errors, 
.\"O you might consider compressing with a smaller
.\"O block size.
大きな .bz2 ファイルには多くのブロックが含まれているので、
.I bzip2recover
は、ほとんどの場合、このようなファイルを扱うために使われる。
1 ブロックが全て破損したブロックは復元できないので、
このようなファイルに対して使うのは明らかに無駄である。
メディアエラーや転送エラーによる潜在的なデータ損失を少なくしたいなら、
小さいブロックサイズで圧縮することを考えた方が良い。

.\"O .SH PERFORMANCE NOTES
.SH 性能に関する注意
.\"O The sorting phase of compression gathers together similar strings in the
.\"O file.  Because of this, files containing very long runs of repeated
.\"O symbols, like "aabaabaabaab ..."  (repeated several hundred times) may
.\"O compress more slowly than normal.  Versions 0.9.5 and above fare much
.\"O better than previous versions in this respect.  The ratio between
.\"O worst-case and average-case compression time is in the region of 10:1.
.\"O For previous versions, this figure was more like 100:1.  You can use the
.\"O \-vvvv option to monitor progress in great detail, if you want.
圧縮のソートフェーズでは、ファイル中の同一の文字列を集める。
そのため、"aabaabaabaab ..." のように (数百回)
同じシンボルが長く繰り返されているファイルは、
通常のものより圧縮が遅くなる。
バージョン 0.9.5 以降では以前のバージョンに比べると、この点が良くなっている。
圧縮時間の最も悪い場合と平均の場合の比率は、10:1 の範囲である。
以前のバージョンでは、この比率は 100:1 であった。
もし見てみたいなら、\-vvvv オプションを使って、
詳細な圧縮過程の進行を見ることができる。

.\"O Decompression speed is unaffected by these phenomena.
伸長は、この現象に影響されない。

.\"O .I bzip2
.\"O usually allocates several megabytes of memory to operate
.\"O in, and then charges all over it in a fairly random fashion.  This means
.\"O that performance, both for compressing and decompressing, is largely
.\"O determined by the speed at which your machine can service cache misses.
.\"O Because of this, small changes to the code to reduce the miss rate have
.\"O been observed to give disproportionately large performance improvements.
.\"O I imagine 
.\"O .I bzip2
.\"O will perform best on machines with very large caches.
.I bzip2
は通常、操作のために数メガバイトのメモリを確保し、
とてもランダムな方法で確保されたメモリを変更する。
これは、「圧縮・伸長の両方の性能は、
キャッシュにない場合に計算機が対応する速度に大きく依存する」
ということを意味する。
そのため、キャッシュにない割合を減らすためのちょっとしたコードの変更が、
非常に大きな性能の向上をもたらしたのを見たことがある。
.I bzip2
は、非常に大きなキャッシュを持った計算機で、
最も良い性能を発揮すると考えられる。

.\"O .SH CAVEATS
.SH 警告
.\"O I/O error messages are not as helpful as they could be.
.\"O .I bzip2
.\"O tries hard to detect I/O errors and exit cleanly, but the details of
.\"O what the problem is sometimes seem rather misleading.
I/O エラーのメッセージは、それほど役立たない。
.I bzip2
は、できるだけ I/O エラーを検知して正しく終了しようとする。
しかし、何が問題なのかの詳細は、ときどきかなり間違ったものに見える。

.\"O Compressed data created by this version is entirely forwards and
.\"O backwards compatible with the previous public releases, versions
.\"O 0.1pl2, 0.9.0, 0.9.5, 1.0.0 and 1.0.1, but with the following
.\"O exception: 0.9.0 and above can correctly decompress multiple
.\"O concatenated compressed files.  0.1pl2 cannot do this; it will stop
.\"O after decompressing just the first file in the stream.
この man ページは、バージョン 1.0.2 の
.I bzip2
について述べている。
このバージョンで生成された圧縮データは、
以前のパブリックリリースであるバージョン
0.1pl2, 0.9.0, 0.9.5, 1.0.0, 1.0.1 に対して、
前方互換と後方互換がある。
ただし、次のような例外がある:
0.9.0 以降では複数のファイルを連結して圧縮したファイルを伸長できるが、
0.1pl2 では伸長できず、ストリームの最初にあるファイルを伸長した後に停止する。

.\"O .I bzip2recover
.\"O versions prior to this one, 1.0.2, used 32-bit integers to represent
.\"O bit positions in compressed files, so it could not handle compressed
.\"O files more than 512 megabytes long.  
このバージョン 1.0.2 以前の
.I bzip2recover
は、圧縮ファイルでのビット位置を表現するために、32 ビットの整数を使う。
そのため 512MB 以上の圧縮ファイルを扱えない。
.\"O Version 1.0.2 and above uses
.\"O 64-bit ints on some platforms which support them (GNU supported
.\"O targets, and Windows).  
バージョン 1.0.2 とそれ以前のものでも、
サポート可能なプラットフォーム
(GNU がサポートするターゲットと Windows) では、
64 ビット int を使用していた。
.\"O To establish whether or not bzip2recover was
.\"O built with such a limitation, run it without arguments.  
この制限を付けて bzip2recover がビルドされているかを確認するには、
引き数なしで実行すれば良い。
.\"O In any event
.\"O you can build yourself an unlimited version if you can recompile it
.\"O with MaybeUInt64 set to be an unsigned 64-bit integer.
少なくとも MaybeUInt64 を符号なし 64 ビット整数型に設定して
再コンパイルすることにより、
非制限バージョンをビルドすることができる。



.\"O .SH AUTHOR
.SH 著者
Julian Seward, jseward@acm.org.

http://sources.redhat.com/bzip2

.\"O The ideas embodied in
.\"O .I bzip2
.\"O are due to (at least) the following
.\"O people: Michael Burrows and David Wheeler (for the block sorting
.\"O transformation), David Wheeler (again, for the Huffman coder), Peter
.\"O Fenwick (for the structured coding model in the original
.\"O .I bzip,
.\"O and many refinements), and Alistair Moffat, Radford Neal and Ian Witten
.\"O (for the arithmetic coder in the original
.\"O .I bzip).  
.I bzip2
に含まれているアイディアは、(少なくとも) 以下の方々のおかげである:
Michael Burrows, David Wheeler (ブロックソート変換),
David Wheeler (Huffman コード化についても), 
Peter Fenwick (オリジナルの
.I bzip
における構造化コード化モデル、そして多くの改良), 
Alistair Moffat, Radford Neal, Ian Witten (オリジナルの
.I bzip
における算術コード化)。  
.\"O I am much
.\"O indebted for their help, support and advice.  See the manual in the
.\"O source distribution for pointers to sources of documentation.  Christian
.\"O von Roques encouraged me to look for faster sorting algorithms, so as to
.\"O speed up compression.  Bela Lubkin encouraged me to improve the
.\"O worst-case compression performance.  
.\"O The bz* scripts are derived from those of GNU gzip.
.\"O Many people sent patches, helped
.\"O with portability problems, lent machines, gave advice and were generally
.\"O helpful.
私は、彼らの助け・サポート・助言に対して感謝している。
ドキュメントのソースの場所については、
ソース配布の中のマニュアルを参照すること。
Christian von Roques は、圧縮速度の向上のために、
より速いソートアルゴリズムを探すことを勧めてくれた。
Bela Lubkin は、圧縮速度が最も遅い場合の改良を勧めてくれた。
bz* スクリプトは GNU gzip のものに由来している。
多くの方々がパッチを送り、軽便性の問題について助けてくれた。
また、計算機を貸してくれたり、アドバイスをしてくれた人達もいた。
これらは全て助けになった。
