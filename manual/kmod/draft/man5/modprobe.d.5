'\" t
.\"     Title: modprobe.d
.\"    Author: Jon Masters <jcm@jonmasters.org>
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 01/29/2021
.\"    Manual: modprobe.d
.\"    Source: kmod
.\"  Language: English
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" translated for 29, 2022-05-31 ribbon <ribbon@users.osdn.me>
.\"
.TH MODPROBE\&.D 5 2021/01/29 kmod modprobe.d
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH 名前
modprobe.d \- modprobe 向けの設定ディレクトリ
.SH 書式
.PP
/lib/modprobe\&.d/*\&.conf
.PP
/usr/local/lib/modprobe\&.d/*\&.conf
.PP
/run/modprobe\&.d/*\&.conf
.PP
/etc/modprobe\&.d/*\&.conf
.SH 説明
.PP
\fBmodprobe\fP コマンドでは、 複数のモジュールに対する追加や削除ができます。 そもそもモジュールには依存関係があるため、
そのようなモジュールに対しては、 どのようなオプションを適用するのかを示す必要があります。 /etc/modprobe\&.d
ディレクトリに置くファイルは、 すべて \&.conf という拡張子を持つものであり、 必要となるオプションを指定します。 同時にこれらのファイルでは、
便利なエイリアス、 つまりモジュールに対する別名を生成するものとしても利用されます。 また、 特別な要件 (たとえば複数モジュールの挿入を要するなど)
がある場合に、 通常の \fBmodprobe\fP の動作を上書きすることができます。
.PP
なお、 モジュール名や (別モジュール名である) エイリアス名においては、 \- や _ を名称に含めることができます。 そして両者は、
あらゆるモジュールコマンドを通じて区別なく用いられ、 アンダースコアへの変換は自動的に行われます。
.PP
modprobe\&.d 配下にあるファイルのフォーマットは単純です。 1 行に 1 つのコマンドを記述します。空行や \*(Aq#\*(Aq
で始まる行は無視されます (コメント行として利用できます)。 行末に \*(Aq\e\*(Aq を記述すれば、 次の行への継続を表します。
これを使えば、ファイルが多少すっきりします。
.SH コマンド
.PP
alias \fIwildcard\fP \fImodulename\fP
.RS 4
これは、 モジュールに対する別名指定を可能にします。 たとえば、 "alias my\-mod really_long_modulename" とすると、
"modprobe really_long_modulename" でなく "modprobe my\-mod" とすることができます。
またシェルのようなワイルドカードの利用もできるため、 "alias my\-mod* really_long_modulename" とすると、
"modprobe my\-mod\-something" でも同じことになります。 他のエイリアスに対するエイリアスを作ることはできません
(これを行うとおかしくなります)。 エイリアスはオプションを含めることができるため、 他のオプションに加えて利用することができます。
.sp
なお、 モジュールにはそれ独自のエイリアスを含めることができます。 これは \fBmodinfo\fP を使って確認することができます。
こういったエイリアスは、 最後の手段として用いられます (実際のモジュール, \fBinstall\fP, \fBremove\fP, \fBalias\fP
の各コマンドが設定内にない場合など)。
.RE
.PP
blacklist \fImodulename\fP
.RS 4
モジュールにはそれ独自のエイリアスを含めることができます。 通常そういったエイリアスは、 "pci:123\&.\&.\&." などのように、
サポートしているデバイスを表すものです。 こういった「内部の」エイリアスは、 通常のキーワード "alias" を使って上書きすることができます。
というのも、 2 つ以上のモジュールが同一デバイスをサポートしている場合があります。 あるいはモジュールがサポートしているといいつつ、
対象デバイスが存在しないような不適切な状況があります。 キーワード \fBblacklist\fP は、 特定のモジュールにおける内部エイリアスを、
無効なものとして指示するためにあります。
.RE
.PP
install \fImodulename\fP \fIcommand\&.\&.\&.\fP
.RS 4
このコマンドは \fBmodprobe\fP に対して、 カーネルに対して普通にモジュールを登録するのではなく、 指定したコマンドの実行を指示するものです。
コマンドにはシェルコマンドが指定できます。 これによって、 どのような複雑な処理であっても、 必要であれば実現することができます。 たとえば、
"fred" というモジュールが、 すでにインストール済みの "barney" というモジュールを使って適切に動作するとします
(ただし依存関係にはないことから、 \fBmodprobe\fP は自動的にはロードしないものとします)。 その場合には、 "install fred
/sbin/modprobe barney; /sbin/modprobe \-\-ignore\-install fred" を実行します。
こうすれば適切に実現されます。 なお、 ここにある \fB\-\-ignore\-install\fP は、 2 つめの \fBmodprobe\fP コマンドが、 同じ
\fBinstall\fP コマンドを再度実行することがないようにしています。 以下の \fBremove\fP も参照してください。
.sp
モジュール追加によって依存関係を維持する対処として、 このコマンドが、 今後も長期的にその解決策となる保証はありません。 このコマンドは、
将来のリリースのある時点において、 最終的には削除か非推奨として、 警告する形に置き換わる予定です。 このコマンドを利用すると、 mkinitrd
などのような配布ユーティリティーが行っているモジュール依存関係の自動検出の処理が複雑になります (なぜなら、 \fBinstall\fP
コマンドが行っている処理内容を、 ある程度解釈しておかなければならないためです)。 理想的には、 本コマンドを用いずに、
モジュールが依存関係をすべて提供するようになるはずであり、 Linux カーネル内部において、 ソフトな依存関係を実装する作業が、 現在進行中です。
.sp
コマンド内に文字列 "$CMDLINE_OPTS" を用いると、 これは modprobe コマンドラインに指定されたオプションに置き換えられます。
これが役に立つのは、 "modprobe fred opt=1" とした場合に、 モジュールに対しては、 "opt=1"
という引数が受け渡されることが期待されるためです。 たとえ設定ファイル内に install コマンドがあったとしても実現できます。
したがって先に示したコマンド例は "install fred /sbin/modprobe barney; /sbin/modprobe
\-\-ignore\-install fred $CMDLINE_OPTS" となります。
.RE
.PP
options \fImodulename\fP \fIoption\&.\&.\&.\fP
.RS 4
このコマンドは、 モジュール \fImodulename\fP (エイリアスを含む) がカーネルに登録される際に、 その都度追加するオプションを指定します。
その場合は、 (\fBmodprobe \fP \fImodulename\fP を使って) 直接指定する場合と、
そのモジュールに依存したモジュールが登録される場合があります。
.sp
オプションは、 すべてまとめて追加されます。 つまりオプションは、 モジュール自体への指定、 エイリアスへの指定、 コマンドラインからの指定すべてです。
.RE
.PP
remove \fImodulename\fP \fIcommand\&.\&.\&.\fP
.RS 4
これは上で示した \fBinstall\fP コマンドに似ていますが、 違うところは、 "modprobe \-r" が実行されている際に呼び出される点です。
.RE
.PP
softdep \fImodulename\fP pre: \fImodules\&.\&.\&.\fP post: \fImodules\&.\&.\&.\fP
.RS 4
\fBsoftdep\fP コマンドは、 ソフトな、 つまり任意のモジュール依存関係の指定を行います。 \fImodulename\fP は、
そのような任意のモジュールがインストールされていなくても、 用いることができます。 ただし普通は、 何かの機能が失われることがあります。 たとえば、
ストレージ HBA に対するドライバーは、 管理機能を利用するために、 別のモジュールがロードされている必要があります。
.sp
pre\-deps モジュールと post\-deps モジュールは、 \fImodulename\fP 引数として与えられたメインのモジュールの前後において、
modprobe がインストール (または削除) しようとする別のモジュール名、 あるいはエイリアス名のリストです。
.sp
例: 設定として "softdep c pre: a b post: d e" が与えられたとします。 "modprobe c"
を実行するということは、 softdep がなかった場合には、 "modprobe a b c d e" を実行することと同じになります。
\-\-use\-blacklist などのフラグは、 指定されたモジュールすべてに適用されます。 一方で、 モジュールパラメーターは、 モジュール c
にのみ適用されます。
.sp
注意: 同一の \fImodulename\fP を引数とする \fBinstall\fP コマンドまたは \fBremove\fP コマンドがある場合、
\fBsoftdep\fP が優先されます。
.RE
.SH 互換性
.PP
kmod の将来版においては、 上で説明した \fBinstall\fP の利用を避けるような警告を含めるつもりでいます。 これは、
カーネル内でのソフトな依存関係のサポートが完成した際に行います。 そういった依存関係は直接モジュール内で行われるようになるため、 そのサポートは、
本ユーティリティーの既存の softdep サポート機能を補助するものとなります。
.SH 著作権
.PP
この man ページの元々の著作権表記は Copyright 2004, Rusty Russell, IBM Corporation です。 現在は
Jon Masters その他により保守されています。
.SH 関連項目
.PP
\fBmodprobe\fP(8), \fBmodules.dep\fP(5)
.SH 著者
.PP
\fBJon Masters\fP <\&jcm@jonmasters\&.org\&>
.RS 4
開発者
.RE
.PP
\fBRobby Workman\fP <\&rworkman@slackware\&.com\&>
.RS 4
開発者
.RE
.PP
\fBLucas De Marchi\fP <\&lucas\&.de\&.marchi@gmail\&.com\&>
.RS 4
開発者
.RE
