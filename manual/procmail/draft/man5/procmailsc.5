.\"WORD:        mail            メール
.\"WORD:        processor       プロセッサ
.\"
.\" Japanese Version Tue Sep 09 02:25:00 JST 2003
.\"         by MATSUDA Yoh-ichi (yoh@flcl.org)
.\" References: http://www.jaist.ac.jp/~fjt/procmail.html
.\"
.\"if n .pl +(135i-\n(.pu)
.de Id
.ds Rv \\$3
.ds Dt \\$4
..
.Id $Id: procmailsc.5,v 1.1 2003/06/16 17:06:43 motoki Exp $
.TH PROCMAILSC 5 \*(Dt BuGless
.rn SH Sh
.de SH
.br
.ne 11
.Sh "\\$1"
..
.rn SS Ss
.de SS
.br
.ne 10
.Ss "\\$1"
..
.rn TP Tp
.de TP
.br
.ne 9
.Tp \\$1
..
.rn RS Rs
.de RS
.na
.nf
.Rs
..
.rn RE Re
.de RE
.Re
.fi
.ad
..
.de Sx
.PP
.ne \\$1
.RS
..
.de Ex
.RE
.PP
..
.na
.\"O .SH NAME
.SH 名前
.\"O procmailsc \- procmail weighted scoring technique
procmailsc \- procmail の重みつきスコアリング手法
.\"O .SH SYNOPSIS
.SH 書式
.RB [ * ]
.\"O .B "w^x condition"
.B "w^x 条件文"
.ad
.\"O .SH DESCRIPTION
.SH 説明
.\"O In addition to the traditional true or false conditions you can specify
.\"O on a recipe, you can use a weighted scoring technique to decide if
.\"O a certain recipe matches or not.  When weighted scoring is used in a
.\"O recipe, then the final score for that recipe must be positive for it
.\"O to match.
レシピには伝統的な真偽条件を指定できるが、
それに加えてマッチする -- あるいはマッチしない -- 条件に対して、
重みつきスコアリング手法を採り入れることもできる。
レシピに重みつきスコアリング手法を使う場合、
あるレシピがマッチするということは、その最終スコアは必ず正の値である。

.\"O A certain condition can contribute to the score if you allocate it
.\"O a `weight'
.\"O .RB ( w )
.\"O and an `exponent'
.\"O .RB ( x ).
その条件に `weight' 【訳注: 重み】
.RB ( w )
及び `exponent' 【訳注: 指数】
.RB ( x )
を置くことで、スコアが適用される。
.\"O You do this by preceding the condition (on the same line) with:
.\"O .RS
.\"O .B w^x
.\"O .RE
条件(の同一行)に
.RS
.B w^x
.RE
を前置すればスコアリング手法を適用できる。
.\"O Whereas both
.\"O .B w
.\"O and
.\"O .B x
.\"O are real numbers between -2147483647.0 and 2147483647.0 inclusive.
但し、
.B w
及び
.B x
は
\-2147483647.0 〜 2147483647.0 の範囲内(両端を含む)の実数である。
.\"O .SH "Weighted regular expression conditions"
.SH "重み付き正規表現条件"
.\"O The first time the regular expression is found, it will add
.\"O .I w
.\"O to the score.  The second time it is found,
.\"O .I w*x
.\"O will be added.  The third time it is found,
.\"O .I w*x*x
.\"O will be added.  The fourth time
.\"O .I w*x*x*x
.\"O will be added.  And so forth.
最初に正規表現を見つけると、スコアに
.I w
を加算する。二番目を見つけると、
.I w*x
を加算する。三番目を見つけると、
.I w*x*x
を加算する。四番目を見つけると、
.I w*x*x*x
を加算する。以下同様。
.\"O This can be described by the following concise formula:
これは以下の簡単な公式で記述できる:
.\"O .Sx 4
.\"O                      n
.\"O      n   k\-1        x \- 1
.\"O w * Sum x    = w * \-\-\-\-\-\-\-
.\"O     k=1             x \- 1
.\"O .Ex
.Sx 4
                       n
     n    k\-1         x \- 1
 w * Σ  x     = w * ───
     k=1              x \- 1

.Ex
\"O It represents the total added score for this condition if
.\"O .B n
.\"O matches are found.
これは上記の条件において
.B n
回マッチする際のスコアの合計を表す。
.\"O Note that the following case distinctions can be made:
以下の場合は区別されるので注意されたい:
.TP 8
x=0
.\"O Only the first match will contribute w to the score.  Any subsequent
.\"O matches are ignored.
最初のマッチのみがスコア w に影響する。後続のマッチは無視される。
.TP
x=1
.\"O Every match will contribute the same w to the score.  The score grows
.\"O linearly with the number of matches found.
全てのマッチはスコア w に等しく影響する。スコアはマッチする度毎にその数に
比例して線形的に増加する。
.TP
0<x<1
.\"O Every match will contribute less to the score than the previous one.
.\"O The score will asymptotically approach a certain value (see the
.\"O .B NOTES
.\"O section below).
全てのマッチはそれ以前のスコアに対してより少なく影響する。
スコアはある値に向けて漸近線状に変化する (後述の
.B 注意
の章を参照のこと。)
.TP
1<x
.\"O Every match will contribute more to the score than the previous one.
.\"O The score will grow exponentially.
全てのマッチはそれ以前のスコアに対してより多く影響する。
スコアは指数的に増加する。
.TP
x<0
.\"O Can be utilised to favour odd or even number of matches.
奇数あるいは偶数番目のマッチを与えるのに便利である。
.PP
.\"O If the regular expression is negated (i.e., matches if it isn't found),
.\"O then
.\"O .B n
.\"O obviously can either be zero or one.
正規表現が否定された場合(例: マッチしなかった場合)、
.B n
は明らかに 0 あるいは 1となる。
.\"O .SH "Weighted program conditions"
.SH "重み付きプログラム条件"
.\"O If the program returns an exitcode of EXIT_SUCCESS (=0), then the total
.\"O added score will be
.\"O .BR w .
.\"O If it returns any other exitcode (indicating failure), the total added
.\"O score will be
.\"O .BR x .
プログラムが正常終了の結果として終了コード EXIT_SUCCESS (=0) を返す
場合、スコアの合計は
.BR w
となる。
上記以外の(実行失敗を示す)終了コードを返す場合、スコアの合計は
.BR x
となる。
.PP
.\"O If the exitcode of the program is negated, then, the exitcode will
.\"O be considered as if it were a virtual number of matches.  Calculation
.\"O of the added score then proceeds as if it had been a normal regular
.\"O expression with
.\"O .B n=`exitcode'
.\"O matches.
プログラムの終了コードが否定される場合、終了コードはあたかもマッチした
数であったかの如く見倣される。
そして、スコアの合計は通常の正規表現が
.B n=`exitcode'
回数マッチしたものとして処理される。
.\"O .SH "Weighted length conditions"
.SH "重み付き長さ条件"
.\"O If the length of the actual mail is
.\"O .B M
.\"O then:
現在のメールの長さが
.B M
である場合:
.Sx 1
* w^x  > L
.Ex
.\"O will generate an additional score of:
という条件式は以下のような式でスコアに加算する:
.Sx 4
           x
    /  M  \e
w * | \-\-\- |
    \e  L  /
.Ex
.\"O And:
また:
.Sx 1
* w^x  < L
.Ex
.\"O will generate an additional score of:
という条件式は以下のような式でスコアに加算する:
.Sx 4
           x
    /  L  \e
w * | \-\-\- |
    \e  M  /
.Ex
.PP
.\"O In both cases, if L=M, this will add w to the score.  In the former case
.\"O however, larger mails will be favoured, in the latter case, smaller
.\"O mails will be favoured.  Although x can be varied to fine-tune the
.\"O steepness of the function, typical usage sets x=1.
両者共、 L=M であればスコアに w を加算する。
しかしながら前者の場合は大きいメールが有利であり、後者の場合は
小さいメールが有利である。
x の値によって関数の勾配を微調整することができるが、
典型的には x=1 である。
.\"O .SH MISCELLANEOUS
.SH その他
.\"O You can query the final score of all the conditions on a recipe from the
.\"O environment variable
.\"O .BR $= .
.\"O This variable is set
.\"O .I every
.\"O time just after procmail has parsed all conditions on a recipe (even if the
.\"O recipe is not being executed).
レシピの全ての条件の最終的な合計スコアを問い合わせるには、環境変数
.BR $=
を用いる。
この変数は procmail がレシピ内の全ての条件をパースした後はいつでも参照可能である。
(例えレシピが実行されなかったとしても。)
.\"O .SH EXAMPLES
.SH 例
.\"O The following recipe will ditch all mails having more than 150 lines in the
.\"O body.
以下のレシピは本文が150行以上のメールを全て捨てる。
.\"O The first condition contains an empty regular expression which, because
.\"O it always matches, is used to give our score a negative offset.
最初の条件は空の正規表現を含む。
すなわち、この条件は全てにマッチし、予めスコアに負の値のオフセットを与える為に使われる。
.\"O The second condition then matches every line in the mail, and consumes
.\"O up the previous negative offset we gave (one point per line).  In the end,
.\"O the score will only be positive if the mail contained more than 150 lines.
2番目の条件はメール中の全ての行にマッチし、1行毎に+1ポイントずつ加算することで、直前に設定していた負のオフセット値を消費する。
最後の条件では、メールが150行以上である場合のみにスコアが正の値になる。
.Sx 5
:0 Bh
* \-150^0
*    1^1  ^.*$
/dev/null
.Ex
.\"O Suppose you have a priority folder which you always read first.  The next
.\"O recipe picks out the priority mail and files them in this special folder.
.\"O The first condition is a regular one, i.e., it doesn't contribute to the
.\"O score, but simply has to be satisfied.  The other conditions describe things
.\"O like: john and claire usually have something important to say, meetings
.\"O are usually important, replies are favoured a bit, mails about Elvis
.\"O (this is merely an example :\-) are favoured (the more he is mentioned, the
.\"O more the mail is favoured, but the maximum extra score due to Elvis will
.\"O be 4000, no matter how often he is mentioned), lots of quoted lines are
.\"O disliked, smileys are appreciated (the score for those will reach a maximum
.\"O of 3500), those three people usually don't send
.\"O interesting mails, the mails should preferably be small (e.g., 2000 bytes long
.\"O mails will score \-100, 4000 bytes long mails do \-800).
あなたがいつも真っ先に読む優先度の高いフォルダがあると仮定しよう。
次のレシピは重要度の高いメールを抜き出して特別なフォルダに放り込む。
最初の条件は定型的なものであり、スコアには何ら作用しないが、今回のケースにおいてはこの条件が満たされていなければならない。【訳注: Precedence: 行は各種メイリングリストや vacation 等の自動応答ソフト等、人手を介さない配送ソフトがメールを配送する際に付加したり、配送すべきか否かを判断するヘッダである。】
これ以外の条件は以下のような状況を記述する:
John と Claire はいつも何らかの重要な発言をする。
会議は大概重要である。
彼らに対する返答はやや優先する。
Elvis に関するメール (これはあくまでも単なる一例に過ぎないのであしからず :\-)
は優先する (更に言えば、そのメールはもっと優先するが、 Elvis に割り当てられる特別なスコアは、彼がどれほど頻繁に言及しても、最大 4000 である)。
沢山の引用行は忌み嫌われ、顔マークは評価される (これらのスコアは最大 3500 に達する)。
彼ら3人は通常は興味深いメールを送信しないし、短いメールを好むはずだ (例えば、 2000バイトの長いメールはスコアを \-100 、 4000バイトの長いメールはスコアを \-800 減じる。)。
.\"O As you see, if some of the uninteresting people send mail, then the mail
.\"O still has a chance of landing in the priority folder, e.g., if it is about
.\"O a meeting, or if it contains at least two smileys.
ご覧の通り、重要でない誰かがメールを送信すると、まだ優先度の高いフォルダに
格納される機会がある。
例えば、会議に関するメールや、少なくとも2つの顔マークを含んでいる場合である。
.Sx 11
:0 HB
*         !^Precedence:.*(junk|bulk)
* 2000^0   ^From:.*(john@home|claire@work)
* 2000^0   ^Subject:.*meeting
*  300^0   ^Subject:.*Re:
* 1000^.75 elvis|presley
* \-100^1   ^>
*  350^.9  :\-\e)
* \-500^0   ^From:.*(boss|jane|henry)@work
* \-100^3   > 2000
priority_folder
.Ex
.\"O If you are subscribed to a mailinglist, and just would like to read
.\"O the quality mails, then the following recipes could do the trick.
.\"O First we make sure that the mail is coming from the mailinglist.
.\"O Then we check if it is from certain persons of whom we value
.\"O the opinion, or about a subject we absolutely want to know everything
.\"O about.  If it is, file it.  Otherwise, check if the ratio of quoted lines
.\"O to original lines is at most 1:2.  If it exceeds that, ditch the mail.
.\"O Everything that survived the previous test, is filed.
仮にあなたがメイリングリストに加入して、そして良質のメールだけを
読みたければ、以下のレシピが目的に適うはずだ。
先ず、当該メールがメイリングリストからのものであることを確認する。
次に、評価に値する意見を述べる重要人物からのメールであるか、あるいは
確実に全ての内容を知りたい表題に関するものであるかをチェックする。
もしそうならば、当該メールを前述のフォルダへファイリングする。
さもなくば、引用行と原文行の比率が最大 1:2 であるかチェックする。
もしこの比率を越えるものであれば、当該メールを捨てる。
これらのテストを通過した全てのメールはファイリングする。
.Sx 15
:0
^From mailinglist-request@some.where
{
  :0:
  * ^(From:.*(paula|bill)|Subject:.*skiing)
  mailinglist

  :0 Bh
  *  20^1 ^>
  * \-10^1 ^[^>]
  /dev/null

  :0:
  mailinglist
}
.Ex
.\"O For further examples you should look in the
.\"O .BR procmailex (5)
.\"O man page.
更なる実例は
.BR procmailex (5)
を参照されたい。
.\"O .SH CAVEATS
.SH 警告
.\"O Because this speeds up the search by an order of magnitude,
.\"O the procmail internal egrep will always search for the leftmost
.\"O .I shortest
.\"O match, unless it is determining what to assign to
.\"O .BR MATCH ,
.\"O in which case it searches the leftmost
.\"O .I longest
.\"O match.
.\"O E.g. for the leftmost
.\"O .I shortest
.\"O match, by itself, the regular expression:
重みの順番による検索スピードを高速化させるために、
procmail の内部 egrep エンジンは常に最左の
.I 最短
のマッチを探す。
ただし、変数
.BR MATCH
への割り当てを【訳注: \e/によって】行っている最中は、最左の
.I 最長
のマッチを探す。
例えば、それ自身による最左の
.I 最短
のマッチに用いる正規表現は:
.TP
.B .*
.\"O will always match a zero length string at the same spot.
は常に同じ点でゼロ長さの文字列にマッチする。
.TP
.B .+
.\"O will always match one character (except newlines of course).
は常に(勿論、改行を除く)任意の1文字にマッチする。
.\"O .SH "SEE ALSO"
.SH "関連項目"
.na
.nh
.BR procmail (1),
.BR procmailrc (5),
.BR procmailex (5),
.BR sh (1),
.BR csh (1),
.BR egrep (1),
.BR grep (1),
.hy
.ad
.\"O .SH BUGS
.SH バグ
.\"O If, in a length condition, you specify an
.\"O .B x
.\"O that causes an overflow, procmail is at the mercy of the
.\"O .BR pow (3)
.\"O function in your mathematical library.
もし、長さ条件において、指定した
.B x
がオーバフローを起こした場合、 procmail は数学ライブラリの関数
.BR pow (3)
のなすがままとなる。
.PP
.\"O Floating point numbers in `engineering' format (e.g., 12e5) are not accepted.
`工学'フォーマットの浮動小数点数値 (例: 12e5) は認められない。
.\"O .SH MISCELLANEOUS
.SH その他
.\"O As soon as `plus infinity' (2147483647) is reached, any subsequent
.\"O .I weighted
.\"O conditions will simply be skipped.
`正の極大値' (2147483647) に到達すると、直ちにそれ以降の
.I 重み付けされた
条件は単純に読み飛ばされる。
.PP
.\"O As soon as `minus infinity' (-2147483647) is reached, the condition will
.\"O be considered as `no match' and the recipe will terminate early.
`負の極大値' (-2147483647) に到達すると、直ちにそれ以降の
条件は `マッチしないもの' として見倣され、レシピは早々に終了する。
.\"O .SH NOTES
.SH 注意
.\"O If in a regular expression weighted formula
.\"O .BR 0<x<1 ,
.\"O the total added score for this condition will asymptotically approach:
もし、正規表現重み付け公式
.BR 0<x<1
において、この条件におけるスコア加算の総和は漸近的に変化する:
.Sx 3
   w
\-\-\-\-\-\-\-
 1 \- x
.Ex
.\"O In order to reach half the maximum value you need
最大値の半分に至る為には、
.Sx 3
     \- ln 2
n = \-\-\-\-\-\-\-\-
       ln x
.Ex
.\"O matches.
というマッチが必要になる。
.\"O .SH AUTHORS
.SH 著者
Stephen R. van den Berg
.RS
<srb@cuci.nl>
.RE
Philip A. Guenther
.RS
<guenther@sendmail.com>
.RE
.\".if n .pl -(\n(.tu-1i)
.rm SH
.rn Sh SH
.rm SS
.rn Ss SS
.rm TP
.rn Tp TP
.rm RS
.rn Rs RS
.rm RE
.rn Re RE
