.\"WORD:	mail		メール
.\"WORD:	processor	プロセッサ
.\"
.\" Japanese Version Copyright (C)COOL WEB 1998
.\"          ALL RIGHTS RESERVED
.\" Modified Sun Jun 15 09:07:37 JST 2003
.\"         by MATSUDA Yoh-ichi (yoh@flcl.org)
.\" References: http://www.jaist.ac.jp/~fjt/procmail.html
.\"
.\"if n .pl +(135i-\n(.pu)
.de Id
.ds Rv \\$3
.ds Dt \\$4
..
.Id $Id: procmailrc.man,v 1.85 2001/08/04 06:08:21 guenther Exp $
.TH PROCMAILRC 5 \*(Dt BuGless
.rn SH Sh
.de SH
.br
.ne 11
.Sh "\\$1"
..
.rn SS Ss
.de SS
.br
.ne 10
.Ss "\\$1"
..
.rn TP Tp
.de TP
.br
.ne 9
.Tp \\$1
..
.rn RS Rs
.de RS
.na
.nf
.Rs
..
.rn RE Re
.de RE
.Re
.fi
.ad
..
.de Sx
.PP
.ne \\$1
.RS
..
.de Ex
.RE
.PP
..
.na
.\"O .SH NAME
.SH 名前
.\"O procmailrc \- procmail rcfile
procmailrc \- procmail の rcfile 【訳注: 設定ファイル】
.\"O .SH SYNOPSIS
.SH 書式
.B $HOME/.procmailrc
.ad
.\"O .SH DESCRIPTION
.SH 説明
.\"O For a quick start, see
.\"O .B NOTES
.\"O at the end of the
.\"O .BR procmail (1)
.\"O man page.
取り敢えずすぐ始めたい場合は、
.B procmail (1)
マニュアルの後の
.B 注意
章を参照されたい。
.PP
.\"O The rcfile can contain a mixture of environment variable assignments (some
.\"O of which have special meanings to procmail), and recipes.  In their most
.\"O simple appearance, the recipes are simply one line regular expressions
.\"O that are searched for in the header of the arriving mail.  The first recipe
.\"O that matches is used to determine where the mail has to go (usually a file).
.\"O If processing falls off the end of the rcfile, procmail will deliver the mail
.\"O to
.\"O .BR $DEFAULT .
rcfile は (procmail にとって特別な意味を持つものもある) いくつもの
環境変数への値の設定とレシピを含めることができる。
最も簡単な形式は、到着したメールのヘッダを検索する、一行におさまる
正規表現よりなるレシピである。
マッチした最初のレシピは、メールの行き先
(通常はファイル)を決定する為に使われる。
もし、処理が rcfile の終りに到達すると、 procmail はメールを
.BR $DEFAULT
へ配送する。
【訳注: procmail では、受信するメールに対する様々な処理の命令を
recipe (レシピ/処方)と呼んでいる。】
.PP
.\"O There are two kinds of recipes: delivering and non-delivering recipes.
.\"O If a
.\"O .I delivering recipe
.\"O is found to match, procmail considers the mail (you guessed it) delivered and
.\"O will
.\"O .I cease processing
.\"O the rcfile after having successfully executed the action line of the recipe.
.\"O If a
.\"O .I non-delivering recipe
.\"O is found to match, processing of the rcfile will
.\"O .I continue
.\"O after the action line of this recipe has been executed.
レシピは2種類存在する: 配送指示と非配送指示である。
マッチする
.I 配送の指示
がある場合、 procmail は (推測した) メールが配送されたと見なす。
そして、レシピの動作指示を首尾良く完遂した後、rcfile の
.I 処理を終了する。
.I 非配送の指示
がある場合、レシピの動作指示を首尾良く完遂した後、rcfile の処理は
.I 続行される。
.PP
.\"O Delivering recipes are those that cause header and/or body of the mail to
.\"O be: written into a file, absorbed by a program or forwarded to a mailaddress.
配送レシピはメールのヘッダ及び/又は本文に以下の作用を引き起こす:
ファイルへ書き込まれる、プログラムに呑み込まれる、あるいはメールアドレスへ転送される。
.PP
.\"O Non-delivering recipes are: those that cause the output of a program or
.\"O filter to be captured back by procmail or those that start a nesting block.
非配送の指示は以下の通り: 
プログラムあるいはフィルタの出力の procmail による
取り込み 【訳注: capturing: キャプチャリング、原文は captured back】 を実行するもの、あるいは入れ子構造【訳注: nesting block: ネストされたブロック】のブロックを開始させるもの。
.PP
.\"O You can tell procmail to treat a
.\"O .I delivering recipe
.\"O as if it were a non-delivering recipe by specifying the `c' flag on
.\"O such a recipe.  This will make procmail generate a
.\"O .I carbon copy
.\"O of the mail by delivering it to this recipe, yet continue processing the
.\"O rcfile.
procmail に対し、
.I 配送レシピ
をあたかも非配送レシピであるかのように
取り扱うように命令することもできる。
その際には、該当するレシピに `c' フラグを指定する。
こうすると procmail は当該レシピへ配送する為のメールの
.I カーボンコピー
を作成し、 rcfile の処理を続行する。
.PP
.\"O By using any number of recipes you can presort your mail extremely
.\"O straightforward into several mailfolders.  Bear in mind though that the mail
.\"O can arrive concurrently in these mailfolders (if several procmail programs
.\"O happen to run at the same time, not unlikely if a lot of mail arrives).  To
.\"O make sure this does not result in a mess, proper use of lockfiles is highly
.\"O recommended.
沢山のレシピを使うことによって、受信したメールを、幾つかのメールフォルダへ
とても簡単に振り分けることができる。
但し、メールはそれらメールフォルダに同時に到達するかも知れない、ということも
心に留めておいて欲しい。(幾つかの procmail プログラムが同時に起動する場合を
想定している。沢山のメールが到着するなら、あり得ないことではない。)
このことでぐちゃくちゃにならない為に、是非ともロックファイルを正しく使って
頂きたい。
.PP
.\"O The environment variable
.\"O .B assignments
.\"O and
.\"O .B recipes
.\"O can be freely intermixed in the rcfile. If any environment variable has
.\"O a special meaning to procmail, it will be used appropriately the moment
.\"O it is parsed (i.e., you can change the current directory whenever you
.\"O want by specifying a new
.\"O .BR MAILDIR ,
.\"O switch lockfiles by specifying a new
.\"O .BR LOCKFILE ,
.\"O change the umask at any time, etc., the possibilities are endless :\-).
環境変数の
.B 指定
と
.B レシピ
は rcfile 中に自由に配置できる。
procmail にとって特別な意味を持つ環境変数は全て、解析された瞬間に、適切に
使われる。(すなわち、必要なときにはいつでも新たに 
.BR MAILDIR
を指定すれば、カレントディレクトリを変更できるし、新たに
.BR LOCKFILE
を指定すればロックファイルを切替えることができるし、いつでも umask を
変更できる等々。可能性は無限である :\-) 。
.PP
.\"O The assignments and substitutions of these environment variables are handled
.\"O exactly like in
.\"O .BR sh (1)
.\"O (that includes all possible quotes and escapes),
.\"O with the added bonus that blanks around the '=' sign are ignored and that,
.\"O if an environment variable appears without a trailing '=', it will be
.\"O removed from the environment.  Any program in backquotes started by procmail
.\"O will have the entire mail at its stdin.
これら環境変数の設定や値の置換は
.BR sh (1)
における処理と完全に等しい。(これはあらゆる引用符やエスケープを含む。)
更に特典として、 '=' の前後の空白は無視してくれるし、
環境変数の後に '=' がない場合はその環境変数自体を環境から消去してくれる。
procmail から起動される、バッククォートで囲まれたプログラムは、
メール全体を標準入力から受け取る。
.PP
.\"O .SS Comments
.SS コメント
.\"O A word beginning with # and all the following characters up to a NEWLINE
.\"O are ignored.  This does not apply to condition lines, which cannot be
.\"O commented.
# から始まる行は、全ての文字が改行まで無視される。
但し、条件行には当てはまらない。
条件行にはコメントが付けられない。
.\"O .SS Recipes
.SS レシピ
.PP
.\"O A line starting with ':' marks the beginning of a recipe.  It has the
.\"O following format:
\(cq:'で始まる行はレシピの開始を示す。
書式は以下の通り:
.Sx 3
:0 [\fIflags\fP] [ : [\fIlocallockfile\fP] ]
.\"O <zero or more conditions (one per line)>
.\"O <exactly one action line>
<ゼロあるいはそれ以上の条件 (1行に1つ)>
<アクション行は厳密に1つ>
.Ex
.\"O Conditions start with a leading `*', everything after that character
.\"O is passed on to the internal egrep
.\"O .BR literally ,
.\"O except for leading and trailing whitespace.
.\"O These regular expressions are
.\"O .B completely
.\"O compatible to the normal
.\"O .BR egrep (1)
.\"O extended regular expressions.  See also
.\"O .BR "Extended regular expressions" .
条件行は先頭に `*' が付く。この文字に続く全ての文字は、先頭と末尾の
空白を除き、procmail 内部の egrep へ
.BR 正確に
渡される。これらの正規表現は一般的な
.BR egrep (1)
の拡張正規表現と
.B 完全に
互換性がある。
.BR "拡張正規表現"
の章も参照されたい。
.PP
.\"O Conditions are anded; if there are no conditions the result will be true
.\"O by default.
条件行は論理積で評価される; 条件がない時はデフォルトで全て真となる。
.PP
.\"O .I Flags
.\"O can be any of the following:
使用可能な
.I フラグ
は以下の通り:
.TP 0.5i
.B H
.\"O Egrep the header (default).
ヘッダを egrep する (デフォルト)。
【訳注: "egrep と同じ正規表現の解釈にて検索を行う" がより正確な意味になる。フラグを省略すると、この `H' フラグが付されたものと見倣され、続く条件行はヘッダが対象となる。】
.TP
.B B
.\"O Egrep the body.
本文を egrep する。
.TP
.B D
.\"O Tell the internal egrep to distinguish between upper and lower case (contrary
.\"O to the default which is to ignore case).
内部の egrep に対して大文字と小文字を区別するよう指示する。
(デフォルトでは逆に大小文字を区別しない。)
.TP
.B A
.\"O This recipe will not be executed unless the conditions on the last preceding
.\"O recipe (on the current block-nesting level) without the `A' or
.\"O `a' flag matched as well.  This allows you to chain actions
.\"O that depend on a common condition.
このレシピは、(現在のネスト構造の段階における) `A' あるいは `a' フラグが
付されていない直前のレシピも同様にマッチしない限り、実行されない。
.\"O 【訳注: この文章の意味に自信なし。unless は "without the `A' or `a' flag" と "matched as well" のどちらの状態を指すのか?】
これによって、ある条件が成立した時に実行されるアクションを複数列挙できる。
.TP
.B a
.\"O Has the same meaning as the `A' flag, with the additional
.\"O condition that the immediately preceding recipe must have been
.\"O .I successfully
.\"O completed before this recipe is executed.
は `A' と同じ意味を持つが、更に追加される条件として、現在のレシピが
実行される前に、直前のレシピは必ず
.I 正常終了
しなければならない、という制約がある。
.TP
.B E
.\"O This recipe only executes if the immediately preceding recipe was not
.\"O executed.  Execution of this recipe also disables any immediately
.\"O following recipes with the 'E' flag.  This allows you to specify
.\"O `else if' actions.
このレシピは直前のレシピが実行されなかった時にだけ実行される。
このレシピの実行はまた、直後に `E' フラグを伴う全てのレシピの実行が禁止される。
これにより、 `else if' アクションを構築することができる。
.TP
.B e
.\"O This recipe only executes if the immediately preceding recipe
.\"O .IR failed
.\"O (i.e., the action line was attempted, but resulted in an error).
このレシピは直前のレシピの実行が
.IR 失敗した
時にだけ実行される。(すなわち、直前のアクション行の実行結果がエラーを伴う終了であった場合である。)
.TP
.B h
.\"O Feed the header to the pipe, file or mail destination (default).
メールのヘッダをパイプ、ファイルあるいはメール配送先(デフォルト)に渡す。
.TP
.B b
.\"O Feed the body to the pipe, file or mail destination (default).
メールの本文をパイプ、ファイルあるいはメール配送先(デフォルト)に渡す。
.TP
.B f
.\"O Consider the pipe as a filter.
パイプをフィルタと見なす。
.TP
.B c
.\"O Generate a
.\"O .B carbon copy
.\"O of this mail.  This only makes sense on
.\"O .I delivering
.\"O recipes.  The only non-delivering recipe this flag has an effect on is
.\"O on a nesting block, in order to generate a carbon copy this will
.\"O .B clone
.\"O the running procmail process (lockfiles will not be inherited), whereby
.\"O the clone will proceed as usual and the parent will jump across the block.
受信したメールの
.B カーボンコピー
を作成する。
これは
.I 配送
レシピにだけ意味がある。
このフラグが唯一有効な非配送レシピは入れ子構造
にて使われる場合である。
この時、カーボンコピーを生成する為に、実行中の procmail プロセスの
.B クローン
が作成される。(ロックファイルは継承されない。)
これによってクローンは普通に実行され、親プロセスはこの時点のブロックの
処理を飛ばして次に進む。
.TP
.B w
.\"O Wait for the filter or program to finish and check its exitcode (normally
.\"O ignored); if the filter is unsuccessful, then the text will not have been
.\"O filtered.
フィルタあるいはプログラムの実行終了を待ち、その終了コードをチェックする
(通常は無視される); フィルタが正常終了しなかった場合、テキストは
フィルタされず、フィルタに渡す以前の状態のままになる。
.TP
.B W
.\"O Has the same meaning as the `w' flag, but will suppress any
.\"O `Program failure' message.
は `w' フラグと同じ意味を持つが、あらゆる `プログラムの失敗' の
メッセージは抑止され、出力されない。
.TP
.B i
.\"O Ignore any write errors on this recipe (i.e., usually due to an early closed
.\"O pipe).
このレシピにおけるあらゆる書き込みエラーを無視する
(すなわち、通常は早期に閉じられたパイプに起因する)。
.TP
.B r
.\"O Raw mode, do not try to ensure the mail ends with an empty line, write
.\"O it out as is.
Raw mode である。メールの最後が空行となるような処理を行わず、
メールが入力されたとおりに書き出す。
.PP
.\"O There are some special conditions you can use that are not straight regular
.\"O expressions.  To select them, the condition must start with:
正しい正規表現ではないものの、特殊な条件を設定するものがある。
使用する際に、下記の条件記号は先頭になければならない:
.\"O 【訳注: この訳に自信なし。必ず先頭になければならないものばかりなのか? $ は先頭でなくても使えるのではないだろうか? 未検証。】
.TP 0.5i
.B !
.\"O Invert the condition.
条件の論理否定。
.TP
.B $
.\"O Evaluate the remainder of this condition according to
.\"O .BR sh (1)
.\"O substitution rules inside double quotes, skip leading whitespace,
.\"O then reparse it.
この条件の直後に続くダブルクォートで囲まれた中身を
.BR sh (1)
の置換ルールに従って置換する。
そして先頭の空白を読み飛ばした後、再度解析する。
.TP
.B ?
.\"O Use the exitcode of the specified program.
指定したプログラムの終了コードを使う。
.TP
.B <
.\"O Check if the total length of the mail is shorter than the specified (in
.\"O decimal) number of bytes.
指定したバイト数(10進数)よりメール全体のバイト数が小さいか否か比較する。
.TP
.B >
.\"O Analogous to '<'.
\(cq<' の反対。
.TP
.\"O .B "variablename \fI??\fP"
.B "変数名 \fI??\fP"
.\"O Match the remainder of this condition against the value of this environment
.\"O variable (which cannot be a pseudo variable).  A special case is if
.\"O variablename is equal to `B', `H', `HB' or `BH'; this merely overrides the
.\"O default header/body search area defined by the initial flags on this recipe.
この環境変数の値に対し、この条件の後に続く項目と照合する (疑似変数は指定できない)。
特殊なケースとして、環境変数名が `B', `H', `HB' および `BH' の場合は;
このレシピの初期フラグによって定義されたデフォルトのヘッダ/本文検索領域を単に上書きする。
.TP
.B \e
.\"O To quote any of the above at the start of the line.
上述の条件記号の意味を消す為に、記号の直前に置いて使われる。
【訳注: この `\e' (バッククォート) は、条件記号の意味を消して通常の文字 (literal character: リテラル文字) として扱う機能を持つものであり、条件記号ではない。よって、本来は条件記号と同列に扱われて説明されるべきものではない。また、このマニュアルの後半に例示があるが、これら条件記号の先頭に使われるだけに留まらないので、注意が必要である。】
.\"O .SS "Local lockfile"
.SS "ローカルロックファイル"
.PP
.\"O If you put a second (trailing) ':' on the first recipe line, then procmail
.\"O will use a
.\"O .I locallockfile
.\"O (for this recipe only).  You can optionally specify the locallockfile
.\"O to use; if you don't however, procmail will use the destination filename
.\"O (or the filename following the first '>>') and will append $LOCKEXT to it.
最初のレシピ行に2個目の ':' をレシピの末尾に付加すると、 procmail は
.I ローカルロックファイル
を (このレシピに対してのみ) 使用する。
':' の後に、オプションとして任意のローカルロックファイル名を指定できる;
もし、 ':' の後にローカルロックファイル名を指定しない場合は、配送先のファイル名 (あるいは '>>' 【訳注: 追加リダイレクタ】 の後に指定されるファイル名) に拡張子 $LOCKEXT を付加したファイル名がローカルロックファイル名として使われる。
.\"O 【訳注: この英文は良くない。多分この訳で合っていると思う。こう訳さないと意味が通らない。】
.\"O .SS "Recipe action line"
.SS "レシピのアクション行"
.PP
.\"O The action line can start with the following characters:
アクション行は以下に記す文字で開始する:
.TP
.B !
.\"O Forwards to all the specified mail addresses.
この後に指定される全てのメールアドレスにメールを転送する。
【訳注: メールアドレスはスペースで区切って列挙可能。】
.TP
.B |
.\"O Starts the specified program, possibly in $SHELL if any
.\"O of the characters $SHELLMETAS are spotted.  You can optionally prepend this
.\"O pipe symbol with
.\"O .IR variable= ,
.\"O which will cause stdout of the program to be captured in the environment
.\"O .I variable
.\"O (procmail will
.\"O .B not
.\"O terminate processing the rcfile at this point).
.\"O If you specify just this pipe symbol, without any program, then procmail will
.\"O pipe the mail to stdout.
指定したプログラムを実行し、そのプログラムの標準入力にメールをパイプで渡す。
.\"O 【訳注: この訳に自信がない。多分合っているとは思うのだが。】
もし、 $SHELLMETAS に含まれる文字が '|' 直後に指定されるプログラムのコマンドライン中にあれば、プログラムは $SHELL を介して起動される。
オプションとして、このパイプ記号の前に
.IR variable=
を指定すると、プログラムの標準出力が環境変数
.I variable
に取り込まれる。
(この時点において procmail は rcfile の処理を終了
.B しない
。)
【訳注: すなわち、パイプ記号の後に指定されるプログラムが終了しないと、 procmail のプロセスは終了できない。】
このパイプ記号だけを指定し、パイプ記号の後にプログラム等の記述を一切しない場合には、 procmail はメールを標準出力に書き出す。
.TP
.B {
.\"O Followed by at least one space, tab or newline will mark the start of a
.\"O nesting block.  Everything up till the next closing brace will depend on
.\"O the conditions specified for this recipe.  Unlimited nesting is permitted.
.\"O The closing brace exists merely to delimit the block, it will
.\"O .I not
.\"O cause procmail to terminate in any way.  If the end of a block is reached
.\"O processing will continue as usual after the block.
.\"O On a nesting block, the flags `H' and `B' only affect
.\"O the conditions leading up to the block, the flags `h' and
.\"O `b' have no effect whatsoever.
の後にスペース、タブ、改行のいずれか一つ以上を伴うことにより、入れ子構造の開始を示す。
次の閉じ括弧までの全ては、このレシピにて指定される条件に依存する。
ネストの数は無制限である。
閉じ括弧は単にブロックの終りを示す為だけに存在し、どのような状態であっても閉じ括弧に procmail を終了させる機能はない。
ブロックの終了に到達すれば、そのブロックの後の処理を続行する。
ネストされたブロック上において、フラグ `H' と `B' だけがブロックを導く条件として作用し、逆にフラグ `h' と `b' はブロック内においては全く意味をなさない。
.PP
.\"O Anything else will be taken as a mailbox name (either a filename or a
.\"O directory, absolute or relative to the current directory (see MAILDIR)).
.\"O If it is a (possibly yet nonexistent) filename, the mail will be appended to
.\"O it.
以上に示した以外のものは全てメールボックス名 (ファイル名、ディレクトリ、絶対パスあるいはカレントディレクトリからの相対パス(MAILDIR を参照のこと)) として解釈される。
ファイル名の場合 (まだ存在していない可能性もある) は、メールはそのファイルに追加される。
.PP
.\"O If it is a directory, the mail will be delivered to a newly created,
.\"O guaranteed to be unique file named $MSGPREFIX* in the specified directory.
.\"O If the mailbox name ends in "/.", then this directory is
.\"O presumed to be an MH folder; i.e., procmail will use the next number it
.\"O finds available.  If the mailbox name ends in "/", then this
.\"O directory is presumed to be a maildir folder; i.e., procmail will deliver
.\"O the message to a file in a subdirectory named "tmp" and rename it to be
.\"O inside a subdirectory named "new".  If the mailbox is specified to be an MH
.\"O folder or maildir folder, procmail will create the necessary directories if
.\"O they don't exist, rather than treat the mailbox as a non-existent
.\"O filename.  When procmail is delivering to directories, you can specify
.\"O multiple directories to deliver to (procmail will do so utilising
.\"O hardlinks).
ディレクトリ名の場合、メールは指定されたディレクトリ内に重複しないことを保証されたファイル名 $MSGPREFIX* として新たに作成され、配送される。
メールボックスのディレクトリ名が "/." で終っていると、当該ディレクトリは MH フォルダと見なされる; すなわち、 procmail はそのディレクトリ内に存在する有効な最終メッセージ番号のファイル名を探し、その次の番号を新たなメールのファイル名とする。
メールボックスのディレクトリが "/" で終っていると、当該ディレクトリは maildir フォルダと見なされる; すなわち、 procmail は一旦メッセージを "tmp" というサブディレクトリにファイルとして配送した後、 "new" というサブディレクトリへリネーム (rename) する。
メールボックスを MH フォルダあるいは maildir フォルダとして指定した際に、もし指定されたディレクトリがない場合は、 procmail はそのディレクトリを新たに作成する。
メールボックスの作成規則として、当該ディレクトリ名をその時点で存在していないファイル名として置き換えるような処理は行わない。
procmail がディレクトリに配送している時には、配送先に複数のディレクトリを指定できる。( procmail は複数ディレクトリへの配送をハードリンクを用いて行う。)
.\"O .SS "Environment variable defaults"
.SS "環境変数のデフォルト値"
.TP 2.2i
.\"O .B "LOGNAME, HOME and SHELL"
.B "LOGNAME, HOME およびSHELL"
.\"O Your (the recipient's) defaults
あなた (受信者) のデフォルト値
.TP
.B PATH
.na
\&$HOME/bin\h'-\w' 'u' :/usr/local/bin\h'-\w' 'u' :/usr/bin\h'-\w' 'u' :/bin
.\"O (Except
(但し、
.ad
.\"O during the processing of an /etc/procmailrc file, when it will be set
.\"O to
/etc/procmailrc を除く。 /etc/procmailrc の場合は、次のようになる: 
.na
`\&/usr/local/bin\h'-\w' 'u' :/usr/bin\h'-\w' 'u' :/bin'.)
.ad
.TP
.B SHELLMETAS
\&&\h'-\w' 'u' |<>~;?*[
.TP
.B SHELLFLAGS
\&-c
.TP
.BR ORGMAIL
\&/var/mail/$LOGNAME
.br
.\"O (Unless
.\"O .B \-m
.\"O has been specified, in which case it is unset)
(オプション \-m を指定していない場合に限る。 \-m を指定すると設定されない。)
.TP
.B MAILDIR
\&$HOME
.br
.\"O (Unless the name of the first successfully opened rcfile starts with
.\"O `./' or if
.\"O .B \-m
.\"O has been specified, in which case it defaults to `.')
(但し、最初の読み込みに成功した rcfile のファイル名が `./' で始まっているか、 
.B \-m
オプションが指定されている場合を除く。これらの場合、 MAILDIR のデフォルト値は `.' になる。)
.TP
.B DEFAULT
\&$ORGMAIL
.TP
.B MSGPREFIX
\&msg.
.TP
.B SENDMAIL
\&/usr/sbin/sendmail
.TP
.B SENDMAILFLAGS
\&-oi
.TP
.B HOST
.\"O The current hostname
現在のホスト名
.TP
.B COMSAT
\&no
.br
.\"O (If an rcfile is specified on the command line)
(rcfile がコマンド行で指定されている場合)
.TP
.B PROCMAIL_VERSION
\&3.22
.TP
.B LOCKEXT
\&.lock
.na
.PP
.\"O Other cleared or preset environment variables are IFS, ENV and PWD.
上記以外に、 procmail の実行の際に初期化されるか予め設定される環境変数
として、 IFS, ENV, PWD がある。
.ad
.PP
.\"O For security reasons, upon startup procmail will wipe out all environment variables that are suspected of modifying the behavior of the runtime linker.
セキュリティ上の理由により、 procmail の実行開始の際に procmail プログラムにリンクされているランタイムリンカの動作を変更する恐れのある環境変数は全て除去される。
.\"O .SS Environment
.SS 環境変数
.PP
.\"O Before you get lost in the multitude of environment variables, keep in mind
.\"O that all of them have reasonable defaults.
沢山の環境変数に面食らってしまう前に、これらは全て妥当なデフォルト値を備えていることを忘れないでいて欲しい。
.TP 1.2i
.B MAILDIR
.\"O Current directory while procmail is executing (that means that all paths
.\"O are relative to $MAILDIR).
procmail が動作する際のカレントディレクトリ。
(すなわち、全てのパスは $MAILDIR からの相対指定であることを意味する。)
.TP
.B DEFAULT
.\"O Default
.\"O .B mailbox
.\"O file (if not told otherwise, procmail will dump mail in this mailbox).
.\"O Procmail will automatically use $DEFAULT$LOCKEXT as lockfile prior to writing
.\"O to this mailbox.  You do not need to set this variable, since it already
.\"O points to the standard system mailbox.
デフォルトの
.B メールボックス
ファイル。
(特に指定しない場合、 procmail はこのメールボックスへメールを追記する。)
このメールボックスファイルへの書き込みに先立ち、 procmail は $DEFAULT$LOCKEXT というロックファイルを自動的に作成して用いる。
この変数を明示的に設定する必要はない。デフォルトでシステム標準のメールボックスが設定されているからである。
【訳注: 但し、 qmail にて /var/mail/useraccountname から 
$HOME/Mailbox へのシンボリックリンクが張られている環境下では、 
src/authenticate.c の MAILSPOOLHOME のコメントアウトを外し、
#define MAILSPOOLHOME "/Mailbox"
と定義させてビルドした上で、 ~/.procmailrc では
DEFAULT=$HOME/Mailbox に設定する必要がある。
そうしないと、シンボリックリンクは /var/mail/BOGUS.useraccountname.PID
にリネームされてしまう。
シンボリックリンクのファイル名を書き換える理由は procmail.1 を参照されたい。】
.TP
.B LOGFILE
.\"O This file will also contain any error or diagnostic messages from procmail
.\"O (normally none :\-) or any other programs started by procmail.  If this file
.\"O is not specified, any diagnostics or error messages will
.\"O be mailed back to the sender.
.\"O See also
.\"O .BR LOGABSTRACT .
このファイルには procmail から発生したエラーメッセージあるいは診断メッセージ
(通常は何もない :\-) あるいは procmail から起動された任意のプログラムのメッセージ
も含まれる。 
このファイルが設定されない場合、診断メッセージあるいはエラーメッセージは送信者へメールにて返送される。
.BR LOGABSTRACT
も参照のこと。
.TP
.B VERBOSE
.\"O You can turn on
.\"O .I extended diagnostics
.\"O by setting this variable to `yes' or `on', to turn it off again set it to `no'
.\"O or `off'.
この変数に `yes' または `on' を書き込むと、
.I 拡張診断メッセージ
機能が有効になる。
再度これを無効にするには、 `no' または `off' を設定する。
.TP
.B LOGABSTRACT
.\"O Just before procmail exits it logs an abstract of the delivered message in
.\"O $LOGFILE showing the `From ' and `Subject:' fields of the header, what folder
.\"O it finally went to and how long (in bytes) the message was.  By setting this
.\"O variable to `no', generation of this abstract is suppressed.  If you set
.\"O it to `all', procmail will log an abstract for every successful
.\"O .I delivering recipe
.\"O it processes.
実行終了する直前に、 procmail は配送メッセージの要約を $LOGFILE にログ記録する。
ログにはヘッダの `From ' と 'Subject:' 、最終的に送達されたフォルダ、
メッセージのバイト数が記録される。
この環境変数に `no' を設定すると、このような要約の生成が抑止される。
この環境変数に `all' を設定すると、実行に成功した
.I 配送レシピ
の処理結果の要約をログ記録する。
.TP
.B LOG
.\"O Anything assigned to this variable will be appended to $LOGFILE.
この変数に割り当てられたものはすべて $LOGFILE に追加される。
.TP
.B ORGMAIL
.\"O Usually the system mailbox (\fBOR\fPi\fBG\fPinal \fBMAIL\fPbox).  If, for
.\"O some obscure reason (like `\fBfilesystem full\fP') the mail could not be
.\"O delivered, then this mailbox will be the last resort.  If procmail
.\"O fails to save the mail in here (deep, deep trouble :\-), then the mail
.\"O will bounce back to the sender.
通常、システムメールボックス (\fBOR\fPi\fBG\fPinal \fBMAIL\fPbox の略)
を指す。
(`\fBfilesystem full\fP' 等の) 何らかの原因でメールを配送できない場合、
このメールボックスが最後の手段となる。
procmail がこのメールボックスへの保存に失敗した場合
(深刻な、深刻なトラブルである :\-)、メールは送信元に返送される。
.TP
.B LOCKFILE
.\"O Global semaphore file.  If this file already exists, procmail
.\"O will wait until it has gone before proceeding, and will create it itself
.\"O (cleaning it up when ready, of course).  If more than one
.\"O .I lockfile
.\"O are specified, then the previous one will be removed before trying to create
.\"O the new one.  The use of a global lockfile is discouraged, whenever possible
.\"O use locallockfiles (on a per recipe basis) instead.
グローバルなロックファイル。
このファイルが既に存在している場合、 procmail は処理を進める前にこのファイルが除去される迄待ち、 (当該ファイルが除去されたら) 処理に先立って同様のロックファイルを自ら作成しようとする。
グローバルロックファイルの使用はできるだけ控えて欲しい。
可能な限り、代わりに (レシピ毎に) ローカルロックファイルを使って欲しい。
.TP
.B LOCKEXT
.\"O Default extension that is appended to a destination file to determine
.\"O what local
.\"O .I lockfile
.\"O to use (only if turned on, on a per-recipe basis).
ローカル
.I ロックファイル
を識別する為に、配送先ファイルのファイル名に付加する拡張子。
(オン設定されている時のみ、レシピ毎に。)
.\"O 【訳注: この括弧の部分の意味が不明であると共に、このLOCKEXTの機能の説明
.\"O 自体に疑問あり。
.\"O 
.\"O    リンク名 Procmail / Set Up
.\"O         URL: http://www.akatsuki.ne.jp/daemon/procmail/setup.html
.\"O    リンク名 Linux my Tips
.\"O         URL:
.\"O           http://web.kyoto-inet.or.jp/people/jeanne/linux/linuxtips.html
.\"O    リンク名 Ryosuke KATSU's Page: Diary: Jan (2), 2002
.\"O         URL: http://seri.gr.jp/~katsu/diary/200201_2.html
.\"O 等の説明では、この変数にフルパスのディレクトリ名を格納することで、ロック
.\"O ファイルの作成場所を指定できる、とある。
.\"O これは "default extension" という説明とは整合しない。
.\"O 現在未検証。】
.TP
.B LOCKSLEEP
.\"O Number of seconds procmail will sleep before retrying on a
.\"O .I lockfile
.\"O (if it already existed); if not specified, it defaults to 8
.\"O seconds.
もし、 procmail が処理に先立って
.I ロックファイル
を作成しようとした際に、
.I ロックファイル
が既に存在していた場合、 procmail が
.I ロックファイル
の再作成を待つ秒数。
特に指定なき場合、デフォルトとして8秒が設定されている。
.\"O 【訳注: やや訳に自信なし。多分合っているのではないかと思うが。
.\"O この文章には、 lockfile をどうする為に待つ秒数なのかの明確な説明が
.\"O ない。良い文章とは言えない。】
.TP
.B LOCKTIMEOUT
.\"O Number of seconds that have to have passed since a
.\"O .I lockfile
.\"O was last modified/created before procmail decides that this must be an
.\"O erroneously leftover lockfile that can be removed by force now.  If zero,
.\"O then no timeout will be used and procmail will wait forever until the
.\"O lockfile is removed; if not specified, it defaults to 1024 seconds.
.\"O This variable is useful to prevent indefinite hangups of
.\"O .BR sendmail /procmail.
.\"O Procmail is immune to clock skew across machines.
.I ロックファイル
が最後に変更された/作成された時点から、procmail が
「これは誤って残ったロックファイルであり、今、強制的に削除できる」
と決定する前に経過しなければならない秒数。
これにゼロを設定すると、タイムアウトは生じない。
すなわち、 procmail はロックファイルが取り除かれる迄永遠に待つこととなる。
特に指定なき場合、デフォルトとして1024秒が設定されている。
この変数は
.BR sendmail /procmail
の不明瞭なハングアップを防ぐ為に有用である。
procmail はマシンを跨ったクロックずれに影響されない。
.TP
.B TIMEOUT
.\"O Number of seconds that have to have passed before procmail decides that
.\"O some child it started must be hanging.  The offending program will receive
.\"O a TERMINATE signal from procmail, and processing of the rcfile will continue.
.\"O If zero, then no timeout will be used and procmail will wait forever until the
.\"O child has terminated; if not specified, it defaults to 960 seconds.
procmail が、「いくつか起動した子プロセスのどれかがハングしている」と決定する迄に経過しなければならない秒数。
この変数に設定された時間が経過すると、問題となるプログラムは procmail から TERMINATE シグナルを受け、 rcfile の処理は続行される。
これにゼロを設定すると、タイムアウトは生じない。
すなわち、 procmail は子プロセスが終了する迄永遠に待つこととなる。
特に指定なき場合、デフォルトとして960秒が設定されている。
.TP
.B MSGPREFIX
.\"O Filename prefix that is used when delivering to a directory (not used when
.\"O delivering to a maildir or an MH directory).
メッセージをディレクトリに配送する際に使用する、ファイル名の接頭辞。
(但し、 maildir 或いは MH ディレクトリに配送する際には使われない。)
.TP
.B HOST
.\"O If this is not the
.\"O .I hostname
.\"O of the machine, processing of the current
.\"O .I rcfile
.\"O will immediately cease. If other rcfiles were specified on the
.\"O command line, processing will continue with the next one.  If all rcfiles
.\"O are exhausted, the program will terminate, but will not generate an error
.\"O (i.e., to the mailer it will seem that the mail has been delivered).
これがマシンの
.I ホスト名
と異なる場合、現在の rcfile の処理を直ちに中断する。
この他にも rcfile がコマンドラインにて指定された場合は、処理は次の rcfile
へ続行される。
全ての rcfile が使い尽くされると、プログラムは終了するが、エラーは生成されない。
(すなわち、メイラにとってみればメールは配送されたかのように見える。)
.TP
.B UMASK
.\"O The name says it all (if it doesn't, then forget about this one :\-).
.\"O Anything assigned to UMASK is taken as an
.\"O .B octal
.\"O number.  If not specified, the umask defaults to 077.  If the umask
.\"O permits o+x, all the mailboxes procmail delivers to directly will receive
.\"O an o+x mode change.  This can be used to check if new mail arrived.
この変数名が全てを物語っている。 (わからないなら気にしないで欲しい:\-)
UMASK への指定は全て
.B 8進数
の数値として取り扱われる。
特に指定なき場合、デフォルトとして077が設定されている。
umask の指定が o+x を許可する設定になっている場合、 procmail が直接配送する全てのメールボックスは o+x モード変更を受け入れる。
これは新着メールの有無のチェックに役立つ。
.\"O 【訳注: この意味が不明。 UMASK による o+x モード変更にて、どのように
.\"O 新着メールの確認が出来るのだろうか?
.\"O 】
.TP
.B SHELLMETAS
.\"O If any of the characters in SHELLMETAS appears in the line specifying
.\"O a filter or program, the line will be fed to $SHELL
.\"O instead of being executed directly.
もし、 SHELLMETAS に含まれる文字が指定されるフィルタやプログラムの
コマンドライン中にあれば、プログラムは直接実行されず、コマンドラインは
$SHELL に渡され、$SHELL を介して起動される。
.TP
.B SHELLFLAGS
.\"O Any invocation of $SHELL will be like:
$SHELL の実行は以下のようなコマンドラインにて実行される:
.br
"$SHELL" "$SHELLFLAGS" "$*";
.TP
.B SENDMAIL
.\"O If you're not using the
.\"O .I forwarding
.\"O facility don't worry about this one.  It specifies the program being
.\"O called to forward any mail.
.I 転送
機能を使っていない場合、気にする必要はない。
この変数には、あらゆるメールを転送する為に呼び出されるプログラムを指定する。
.br
.\"O It gets invoked as: "$SENDMAIL" $SENDMAILFLAGS "$@";
起動方法は次の通り: "$SENDMAIL" $SENDMAILFLAGS "$@";
.TP
.B NORESRETRY
.\"O Number of retries that are to be made if any `\fBprocess table full\fP',
.\"O `\fBfile table full\fP', `\fBout of memory\fP' or
.\"O `\fBout of swap space\fP' error should occur.  If this number is negative,
.\"O then procmail will retry indefinitely; if not specified, it defaults to
.\"O 4 times.  The retries occur with a $SUSPEND second interval.  The
.\"O idea behind this is that if, e.g., the
.\"O .I swap
.\"O .I space
.\"O has been exhausted or the
.\"O .I process
.\"O .I table
.\"O is full, usually several other programs will either detect this as well
.\"O and abort or crash 8\-), thereby freeing valuable
.\"O .I resources
.\"O for procmail.
`\fBprocess table full\fP',
`\fBfile table full\fP', `\fBout of memory\fP' あるいは
`\fBout of swap space\fP' というエラーが発生した際の、再試行の回数。
この変数に設定する数が負の値の場合、 procmail は無限に再試行する;
特に指定なき場合、デフォルトとして4回が設定されている。
再試行は $SUSPEND 秒の間隔を伴って実行される。
これは、元々以下のようなアイディアから端を発している。
例えば、
.I スワップ
.I スペース
が使い尽くされたか、あるいは
.I プロセス
.I テーブル
が一杯になった場合、大概は他の幾つかのプログラムもこの状態を同様に検出して中断するか、クラッシュするだろう。8\-)
このことにより、貴重な
.I リソース
が procmail の為に開放されるであろうことを期待している。
.TP
.B SUSPEND
.\"O Number of seconds that procmail will pause if it has to wait for something
.\"O that is currently unavailable (memory, fork, etc.); if not specified, it will
.\"O default to 16 seconds.  See also:
.\"O .BR LOCKSLEEP .
何らかの利用できないもの (メモリ、 fork 【訳注: 子プロセスの生成】等) の為に procmail が待たなければならない際に、一時停止する秒数。
特に指定なき場合、デフォルトとして16秒が設定されている。
.BR LOCKSLEEP
も参照のこと。
.TP
.B LINEBUF
.\"O Length of the internal line buffers, cannot be set smaller than 128.
.\"O All lines read from the
.\"O .I rcfile
.\"O should not exceed $LINEBUF characters before and after expansion.  If not
.\"O specified, it defaults to 2048.  This limit, of course, does
.\"O .I not
.\"O apply to the mail itself, which can have arbitrary line lengths, or could
.\"O be a binary file for that matter.  See also PROCMAIL_OVERFLOW.
内部ラインバッファの大きさ。
128未満には設定できない。
.I rcfile
から読み込む行は、展開前後にかかわらず $LINEBUF を越えてはならない。
特に指定なき場合、デフォルトとして2048バイトが設定されている。
勿論、この制限はメール自身の読み込みには
.I 適用されない。
メールの行は任意の長さになり得るし、バイナリファイルもあり得る。
PROCMAIL_OVERFLOW も参照のこと。
.TP
.B DELIVERED
.\"O If set to `yes' procmail will pretend (to the mail agent) the mail
.\"O has been delivered.  If mail cannot be delivered after having met this
.\"O assignment (set to `yes'), the mail will be lost (i.e., it will not bounce).
これに `yes' が設定されていると、 procmail は (メールエージェントに対し)
メールが配送されたかの如く振舞う。
この変数に `yes' が設定された後にメールの配送に失敗した場合、メールは
失われる。(すなわち、送信元に返送されない。)
.TP
.B TRAP
.\"O When procmail terminates of its own accord and not because it
.\"O received a signal, it will execute the contents of this variable.
.\"O A copy of the mail can be read from stdin.  Any output produced by this
.\"O command will be appended to $LOGFILE.  Possible uses for TRAP are: removal
.\"O of temporary files, logging customised abstracts, etc.  See also
.\"O .B EXITCODE
.\"O and
.\"O .BR LOGABSTRACT .
procmail の処理がシグナルの受信によらず、一致によって正常終了する時、
この変数の内容を実行する。
メールのコピーは標準入力から読み込める。
このコマンドにて生成される全ての出力は $LOGFILE へ追記される。
TRAP の用途としては: 一時ファイルの消去、カスタマイズした要約のログ記録等。
.B EXITCODE
及び
.BR LOGABSTRACT
も参照されたい。
.TP
.B EXITCODE
.\"O By default, procmail returns an exitcode of zero (success) if it
.\"O successfully delivered the message or if the
.\"O .B HOST
.\"O variable was misset and there were no more rcfiles on the command
.\"O line; otherwise it returns failure.  Before doing so, procmail
.\"O examines the value of this variable.  If it is set to a positive
.\"O numeric value, procmail will instead use that value as its exitcode.
.\"O If this variable is set but empty and
.\"O .B TRAP
.\"O is set, procmail will set the exitcode to whatever the
.\"O .B TRAP
.\"O program returns.  If this variable is not set, procmail will set
.\"O it shortly before calling up the
.\"O .B TRAP
.\"O program.
デフォルトでは、 procmail は以下の場合において終了コード "0" (正常終了)
を返す:
メッセージを正常に配送できた場合。
変数
.B HOST
が設定されておらず、コマンドラインにて rcfile が全く指定されていなかった場合。
上記以外の場合、 procmail は失敗を示す終了コードを返す。
上述のデフォルト動作を実行する前に、 procmail はこの変数の値を調べる。
この変数に正の値が設定されている場合、 procmail は正常終了時の終了コードとして
この値を用いる。
この変数が設定されていながらその値が空であり、且つ変数
.B TRAP
が設定されている場合は、 procmail は変数
.B TRAP
に記述されているプログラムの帰り値を終了コードとして返す。
この変数が設定されていない場合、変数
.B TRAP
に記述されているプログラムを実行する直前に、終了コードを設定する。
【訳注: すなわち、 TRAP プログラムの終了コードは用いられない。】
.TP
.B LASTFOLDER
.\"O This variable is assigned to by procmail whenever it is delivering
.\"O to a folder or program.  It always contains the name of the last file
.\"O (or program) procmail delivered to.  If the last delivery was to
.\"O several directory folders together then $LASTFOLDER will contain
.\"O the hardlinked filenames as a space separated list.
procmail がメールをフォルダやプログラムに配送する際には、必ず
この変数に値が設定される。
この変数の値は、 procmail がメールを配送した最後のファイル (あるいはプログラム)
の名前である。
最終配送が複数のディレクトリフォルダに対するものであるなら、
$LASTFOLDER にはスペースで区切られたハードリンクのファイル名リストが格納される。
.TP
.B MATCH
.\"O This variable is assigned to by procmail whenever it is told to extract
.\"O text from a matching regular expression.  It will contain all text
.\"O matching the regular expression past the `\fB\e/\fP' token.
レシピ中に正規表現のマッチング文字列を抽出する指示があると、この変数が
設定される。
`\fB\e/\fP' トークン以後の正規表現に合致するテキストが全て格納される。
.TP
.B SHIFT
.\"O Assigning a positive value to this variable has the same effect as
.\"O the `shift' command in
.\"O BR sh (1).
.\"O This command is most useful to extract extra arguments passed to procmail
.\"O when acting as a generic mailfilter.
この変数に正の値を設定すると、
.BR sh (1)
の `shift' コマンドと同じ効果が得られる。
このコマンドは procmail を一般的なメールフィルタとして使う際に、 procmail
に渡された引数を抽出する時に最も有用である。
.TP
.B INCLUDERC
.\"O Names an rcfile (relative to the current directory) which will be
.\"O included here as if it were part of the current rcfile.  Nesting is
.\"O permitted and only limited by systems resources (memory and file
.\"O descriptors).  As no checking is done on the permissions or ownership
.\"O of the rcfile, users of
.\"O .B INCLUDERC
.\"O should make sure that only trusted users have write access to the included
.\"O rcfile or the directory it is in.  Command line assignments to
.\"O .B INCLUDERC
.\"O have no effect.
(カレントディレクトリからの相対指定で) rcfile のファイル名を指定すると、
そのファイルを現在の rcfile の一部として組み込む。【訳注: include: インクルード】
入れ子構造ができ、その数はシステムリソース (メモリ及びファイルディスクリプタ)
によってのみ制限される。
インクルードされる rcfile のパーミッション及び所有者はチェックされないので、
.B INCLUDERC
を使用する場合には、インクルードされる rcfile あるいは rcfile
のあるディレクトリへの書き込み権限を、信用できる
ユーザだけが持つことを確認すべきである。
なお、
.B INCLUDERC
に対するコマンドライン引数の指定は無意味であり、何の効果も持たない。
.TP
.B SWITCHRC
.\"O Names an rcfile (relative to the current directory) to which processing
.\"O will be switched.  If the named rcfile doesn't exist or is not a normal
.\"O file or /dev/null then an error will be logged and processing will
.\"O continue in the current rcfile.  Otherwise, processing of the current
.\"O rcfile will be aborted and the named rcfile started.  Unsetting
.\"O .B SWITCHRC
.\"O aborts processing of the current rcfile as if it had ended at the
.\"O assignment.  As with
.\"O .BR INCLUDERC ,
.\"O no checking is done on the permissions or ownership of the rcfile
.\"O and command line assignments have no effect.
(カレントディレクトリからの相対指定で) rcfile のファイル名を指定すると、
procmail の処理はそのファイルへ切替えられる。
この変数に指定された rcfile のファイル名が存在しないものであるか、
通常のファイルでないか、あるいは /dev/null である場合は、エラーがログ記録
され、それ以降の現在の rcfile の処理が継続される。
そうでない場合、 procmail による現在の rcfile の処理は中断され、この
変数に記述された rcfile の処理が開始される。
変数
.B SWITCHRC
の内容を消去すると、その時点で割り当てが終了したかの如く、それまで
実行していた現在の rcfile の処理を中断する。
.\"O 【訳注: この訳が駄目。at the assignment は何の割り当て?】
.BR INCLUDERC
と同様、 rcfile のパーミッション及び所有者はチェックされず、また
コマンドライン引数の指定は無意味であり、何の効果も持たない。
.TP
.B PROCMAIL_VERSION
.\"O The version number of the running procmail binary.
実行中の procmail バイナリのバージョン番号。
.TP
.B PROCMAIL_OVERFLOW
.\"O This variable will be set to a non-empty value if procmail detects a
.\"O buffer overflow.  See the
.\"O .B BUGS
.\"O section below for other details of operation when overflow occurs.
procmail がバッファオーバフローを検出すると、この変数に何らかの値が設定される。
オーバフロー発生時の操作の詳細は、
.B バグ
の章を参照のこと。
.TP
.B COMSAT
.\"O .BR Comsat (8)/ biff (1)
.\"O notification is on by default, it can be turned off by setting this variable
.\"O to `no'.  Alternatively the biff-service can be customised by setting it to
.\"O either `service@', `@hostname', or
.\"O `service@hostname'.  When not specified it defaults
.\"O to biff@localhost.
デフォルトでは
.BR Comsat (8)/ biff (1)
によるメール到着時の通知が有効になっている。
この変数に `no' を設定すると、この機能をオフにできる。
別の方法として、この変数に `service@', `@hostname' あるいは `service@hostname'
と設定することにより、 biff サービスをカスタマイズできる。
特に指定なき場合、デフォルトは `biff@localhost' である。
.TP
.B DROPPRIVS
.\"O If set to `yes' procmail will drop all privileges it might have had (suid or sgid).  This is only useful if you want to guarantee that the bottom half of the /etc/procmailrc file is executed on behalf of the recipient.
この変数に `yes' を設定すると、 procmail は本来持っている権限
(suid あるいは sgid) を全て放棄する。
これは /etc/procmailrc ファイルの後半を確実に受信者の権限にて実行させたい
時にのみ役立つ。
.\"O 【訳注: この訳にやや自信なし。】
.\"O .SS "Extended regular expressions"
.SS "拡張正規表現"
.\"O The following tokens are known to both the procmail internal egrep and the
standard
.\"O .BR egrep (1)
.\"O (beware that some egrep implementations include other non-standard extensions):
次のトークンは procmail 内部の egrep および標準的な egrep(1) の両方で
知られた表現である
(egrep の一部には非標準の拡張を含む実装があることに注意されたい):
.TP 1.0i
.B ^
.\"O Start of a line.
行頭
.TP
.B $
.\"O End of a line.
行末
.TP
.B .
.\"O Any character except a newline.
改行以外のすべての１文字とマッチする
.TP
.B a*
.\"O Any sequence of zero or more a's.
*の直前の文字aの0回以上の繰り返し
.TP
.B a+
.\"O Any sequence of one or more a's.
*の直前の文字aの1回以上の繰り返し
.TP
.B a?
.\"O Either zero or one a.
0個あるいは1個のa
.TP
.B [^-a-d]
.\"O Any character which is
.\"O .B not
.\"O either a dash, a, b, c, d or newline.
ハイフン(dash)でもなく、aからdまででもなく、改行でもない、任意の1文字
.TP
.B de|abc
.\"O Either the sequence `de' or `abc'.
`de'あるいは`abc'の文字列のいずれか
.TP
.B (abc)*
.\"O Zero or more times the sequence `abc'.
文字列 `abc' の0回以上の繰り返し
.TP
.B \e.
.\"O Matches a single dot; use \e to quote any of the magic characters to get
.\"O rid of their special meaning.  See also $\e variable substitution.
単一のドット; あらゆる特殊文字の特別な意味付けを除去し、リテラル文字として
マッチングさせたい場合には、\e を先頭に置いて使う。
$\e の変数代入も参照のこと。
.PP
.\"O These were only samples, of course, any more complex combination is valid
.\"O as well.
勿論、これらは単なる一例でしかないので、より複雑な組合せも有効である。
.PP
.\"O The following token meanings are special procmail extensions:
次のトークンの意味は procmail 特有の拡張定義である:
.TP 1.0i
\fB^\fP or \fB$\fP
.\"O Match a newline (for multiline matches).
改行 とマッチする (複数行にわたるマッチング用)
.TP
.B ^^
.\"O Anchor the expression at the very start of the search area, or if encountered
.\"O at the end of the expression, anchor it at the very end of the search area.
正規表現の先頭に記述することにより、検索領域の一番最初の部分にマッチする。
あるいは、正規表現の末尾に記述することにより、検索領域の一番最後の部分にマッチする。
.TP
\fB\e<\fP or \fB\e>\fP
.\"O Match the character before or after a word.  They are merely a shorthand
.\"O for `[^a-zA-Z0-9_]', but can also match newlines.
.\"O Since they match actual characters, they are only suitable to delimit
.\"O words, not to delimit inter-word space.
単語の直前あるいは直後の文字にマッチする。
これらは単に `[^a-zA-Z0-9_]' の省略形でしかないが、但し、改行にもマッチする。
これらは実際の文字にマッチするので、単語の区切りにのみ有用であり、
単語間のスペースを区切るものではない。
.\"O 【訳注: この訳に自信なし。 inter-word space とは?】
.TP
.B \e/
.\"O Splits the expression in two parts.  Everything matching the right part
.\"O will be assigned to the MATCH environment variable.
正規表現を、 \e/ を境にして二つに分ける。
\e/ の右側の正規表現にマッチした文字列は、環境変数 MATCH に格納される。
.\"O .SH EXAMPLES
.SH 例
.\"O Look in the
.\"O .BR procmailex (5)
.\"O man page.
procmailex(5) man page を参照されたい。
.\"O .SH CAVEATS
.SH 注意
.\"O Continued lines in an action line that specifies a program always have to end
.\"O in a backslash, even if the underlying shell would not need or want the
.\"O backslash to indicate continuation.  This is due to the two pass parsing
.\"O process needed (first procmail, then the shell (or not, depending on
.\"O .BR SHELLMETAS )).
例え環境の基礎となるシェルがコマンドラインの継続行【訳注: continued line: 
連続する行】の指示にバックスラッシュを必要としないものであったとしても、
プログラム名を指定するアクション行における継続行は、常にバックスラッシュで
終っていなければならない。
これは二段階の構文解析処理が必要だからである
(第一に procmail, 次にシェル (あるいはそうでない場合は、変数
.BR SHELLMETAS
の内容に依存する))。
.PP
.\"O Don't put comments on the regular expression condition lines in a
.\"O recipe, these lines are fed to the internal egrep
.\"O .I literally
.\"O (except for continuation backslashes at the end of a line).
レシピ中の正規表現の条件行にコメントを入れないこと。
それらの行は内部の egrep に
.I 文字通りそのまま
渡される(但し、行末の継続行指定の為のバックスラッシュを除く)。
.PP
.\"O Leading whitespace on continued regular expression condition lines
.\"O is usually ignored (so that they can be indented), but
.\"O .B not
.\"O on continued condition lines that are evaluated according to the
.\"O .BR sh (1)
.\"O substitution rules inside double quotes.
複数行にわたる正規表現条件行における行頭の空白は、通常無視される
(すなわち、インデント可能である)。
但し、連続する条件行がダブルクォーテーション内の
.BR sh (1)
の置換規則に従って評価される場合を除く。
.PP
.\"O Watch out for deadlocks when doing unhealthy things like forwarding mail
.\"O to your own account.  Deadlocks can be broken by proper use of
.\"O .BR LOCKTIMEOUT .
あなた自身のアカウントへメールを転送する等の危険な行為を行う際には、
デッドロックを見張っていて頂きたい。
デッドロックは変数
.BR LOCKTIMEOUT
に指定されている時間が経過すると、正常終了の結果としてなくなってしまう。
.PP
.\"O Any default values that procmail has for some environment variables will
.\"O .B always
.\"O override the ones that were already defined.  If you really want to
.\"O override the defaults, you either have to put them in the
.\"O .B rcfile
.\"O or on the command line as arguments.
幾つかの環境変数のデフォルト値は、 procmail 内部に定義済のデフォルト値にて
.B 常に
上書きされる。
このデフォルト値を更に上書きしたい場合は、
.B rcfile
にて直接指定するか、あるいはコマンドラインの引数にて指定しなければならない。
.\"O 【訳注: この原文は論理的に変ではないだろうか? procmail has は一体どこに
.\"O かかるのだろうか?
.\"O Any default values of some environment variables will always be
.\"O overridden by procmail internal default values that were already defined.
.\"O 】
.PP
.\"O The /etc/procmailrc file cannot change the PATH setting seen by user rcfiles
.\"O as the value is reset when procmail finishes the /etc/procmailrc file.  While
.\"O future enhancements are expected in this area, recompiling procmail
.\"O with the desired value is currently the only correct solution.
/etc/procmailrc は、ユーザ rcfile を処理する時点の PATH 設定を変更することは
できない。
/etc/procmailrc にて PATH を設定しても、 /etc/procmailrc の処理を終了した
時点でリセットされてしまう。
この領域における将来の拡張が望まれるが、 procmail を所望の値にて定義して
再コンパイルするのが、現時点での唯一の解決法である。
.PP
.\"O Environment variables set
.\"O .B inside
.\"O the shell-interpreted-`|' action part of a recipe will
.\"O .B not
.\"O retain their value after the recipe has finished since they are set in a
.\"O subshell of procmail.  To make sure the value of an environment variable is
.\"O retained you have to put the assignment to the variable before the leading `|'
.\"O of a recipe, so that it can capture stdout of the program.
レシピの一部分においてシェルが解釈する `|' によるパイプ動作の内部で設定する環境変数は、
レシピの終了後にその値は保持
.B されない
。
何故なら、それら環境変数の指定は procmail のサブシェル上で行われるからである。
環境変数の設定を確実に保持したいなら、レシピの `|' の前に環境変数を
設定しなければならない。
そうすれば、プログラムの標準出力がその環境変数の値としてキャプチャされる。
.PP
.\"O If you specify only a `h' or a `b' flag on a delivering
.\"O recipe, and the recipe matches, then, unless the `c' flag is
.\"O present as well, the body respectively the header of the mail will be silently
.\"O lost.
もし、配送指示で `h' あるいは `b' フラグのみ指定され、且つレシピがマッチ
し、そして更に `c' フラグがない場合、各々のフラグに対応するメールの本文
あるいはヘッダは、エラーメッセージ等を伴うことなく静かに消え去る。
【訳注: すなわち、レシピの指示行が `c' フラグを伴わない `h' のみの場合はメール本文が、同様に `b' のみの場合はメールヘッダが、各々失われる。】
.\"O 【訳注: この原文も曖昧な表現に見える。】
.\"O .SH "SEE ALSO"
.SH "参照"
.na
.nh
.BR procmail (1),
.BR procmailsc (5),
.BR procmailex (5),
.BR sh (1),
.BR csh (1),
.BR mail (1),
.BR mailx (1),
.BR binmail (1),
.BR uucp (1),
.BR aliases (5),
.BR sendmail (8),
.BR egrep (1),
.BR regexp (5),
.BR grep (1),
.BR biff (1),
.BR comsat (8),
.BR lockfile (1),
.BR formail (1)
.hy
.ad
.\"O .SH BUGS
.SH バグ
.\"O The only substitutions of environment variables that can be handled by
.\"O procmail itself are of the type $name, ${name}, ${name:-text}, ${name:+text},
.\"O ${name-text}, ${name+text}, $\ename, $#, $n, $$, $?, $_, $\- and $=;
.\"O whereby $\ename will be substituted by the
.\"O all-magic-regular-expression-characters-disarmed
.\"O equivalent of $name, $_ by the name of the current rcfile, $\- by
.\"O $LASTFOLDER and $= will contain the score of the last recipe.
.\"O Furthermore, the result of $\ename substitution will never be split on
.\"O whitespace.  When the
.\"O .B \-a
.\"O or
.\"O .B \-m
.\"O options are used, $# will expand to the number of arguments so
.\"O specified and "$@" (the quotes are required) will expand to the
.\"O specified arguments.  However, "$@" will only be expanded when
.\"O used in the argument list to a program, and
.\"O then only one such occurrence will be expanded.
procmail 自身が処理できる環境変数の置換機能は以下の通り:
$name, ${name}, ${name:-text}, ${name:+text},
${name-text}, ${name+text}, $\ename, $#, $n, $$, $?, $_, $\-,  $=;
procmail の置換機能によれば、上述の置換機能は以下のように置換される:
$\ename は $name 内に存在する全ての特殊正規表現文字の機能を \e で無効化した
文字列に等しく置換される。
$_ は現在の rcfile のファイル名に置換される。
$\- は $LASTFOLDER に置換される。
$= は最後のレシピのスコアを含む。
更に、 $\ename の置換結果は決して空白文字では分割されない。
.B \-a
あるいは
.B \-m
オプションが用いられる時、 $# は指定した引数の数に展開される。
そして、 "$@" (ダブルクォーテーションは必須) は指定した引数に
展開される。
しかしながら、 "$@" はプログラムの引数リストに使う時にだけ展開され、
且つこの展開動作は一回だけである。
.PP
.\"O Unquoted variable expansions performed by procmail are always split on
.\"O space, tab, and newline characters; the IFS variable is not used internally.
procmail によって行われるクォートされない変数展開は、常にスペース、タブ、
及び改行文字によって分割される;
IFS 変数は内部では用いられない。
【訳注: Internal Field Separator: 内部フィールドセパレータ。ある文字列を
指定した文字毎に分割し、配列変数に格納する際に指定する区切り文字。
sh や bash 等のコマンドライン展開に用いられるが、この環境変数に異常な値を
設定すると、セキュリティが脅かされる可能性が指摘されている。】
.PP
.\"O Procmail does not support the expansion of `~'.
procmail は `~'の展開をサポートしない。
.PP
.\"O A line buffer of length $LINEBUF is used when processing the
.\"O .IR rcfile ,
.\"O any expansions that don't fit within this limit will be truncated and
.\"O PROCMAIL_OVERFLOW will be set.  If the overflowing line is a condition
.\"O or an action line, then it will be considered failed and procmail will
.\"O continue processing.  If it is a variable assignment or recipe start
.\"O line then procmail will abort the entire rcfile.
ラインバッファ長 $LINEBUF は
.IR rcfile
の処理の際に用いられる。
$LINEBUF の制限からはみ出てしまう変数展開は切り詰められ、その時点で
PROCMAIL_OVERFLOW が設定される。
オーバフローした行が条件行あるいはアクション行である場合、当該行は解析あるいは処理に
失敗したものと見倣され、 procmail はそれ以降の処理を継続する。
オーバーフローした行が変数設定あるいはレシピの開始行である場合、 procmail は
その時点で当該 rcfile 全体の処理を中断する。
.PP
.\"O If the global lockfile has a
.\"O .I relative
.\"O path, and the current directory
.\"O is not the same as when the global lockfile was created, then the global
.\"O lockfile will not be removed if procmail exits at that point (remedy:
.\"O use
.\"O .I absolute
.\"O paths to specify global lockfiles).
グローバルロックファイルが
.I 相対
パスであり、且つカレントディレクトリがグローバルロックファイルが作成された
時点とは異なる時に procmail が終了した場合、グローバルロックファイルは消去
されない (処方箋: グローバルロックファイルは
.I 絶対
パスにて指定すべし)。
.PP
.\"O If an rcfile has a
.\"O .I relative
.\"O path and when the rcfile is first opened
.\"O .B MAILDIR
.\"O contains a relative path, and if at one point procmail is instructed to
.\"O clone itself and the current directory has changed since the rcfile was
.\"O opened, then procmail will not be able to clone itself (remedy: use an
.\"O .I absolute
.\"O path to reference the rcfile or make sure MAILDIR contains an absolute
.\"O path as the rcfile is opened).
rcfile が
.I 相対
パスであり、 rcfile 中にて最初に開いた
.B MAILDIR
が相対パスを含んでおり、且つ、 rcfile を開いた時からカレントディレクトリが
変更された後に procmail に自身のクローンを作成する指示がなされた場合、
procmail は自身のクローンを作成できない (処方箋: rcfile の指定は
.I 絶対
パスにて行うか、 rcfile 中の MAILDIR の指定に絶対パスが含まれるように
注意すべし)。
.PP
.\"O A locallockfile on the recipe that marks the start of a non-forking nested
.\"O block does not work as expected.
レシピ上で fork しないネストされたブロックの先頭に記すローカルロックファイルは、
期待通りには動作しない。
.\"O 【訳注: この意味が不明。具体的にどのようなレシピの記述において、
.\"O どのような動作になるのかが全くわからない。】
.PP
.\"O When capturing stdout from a recipe into an environment variable, exactly
.\"O one trailing newline will be stripped.
レシピから標準出力を環境変数へ取り込む時、必ず最後の改行が一つだけ取り除かれる。
.\"O 【訳注: from a recipe ? on a recipe ではないか?
.\"O あるいは from a program specified on a recipe ではないか?】
.PP
.\"O Some non-optimal and non-obvious regexps set MATCH to an incorrect
.\"O value.  The regexp can be made to work by removing one or more unneeded
.\"O '*', '+', or '?' operator on the left-hand side of the \e/ token.
幾つかの適切でない、あるいは不明瞭な正規表現は変数 MATCH に不正な値を設定してしまう。
その際、正規表現中の \e/ トークンの左側にある一つ以上の不要な '*', '+',
あるいは '?' 記述子は正常動作の為に除去される。
.\"O 【訳注: この訳に自信なし。原文が曖昧で、本当にこの訳で良いのか
.\"O わからない。】
.\"O .SH MISCELLANEOUS
.SH その他
.\"O If the regular expression contains `\fB^TO_\fP' it will be substituted by
正規表現に `^TO_' とある場合、
.na
.nh
.\"O `\fB(^((Original-)?(Resent-)?(To\h'-\w' 'u' |Cc\h'-\w' 'u' |Bcc)\h'-\w' 'u' |(X-Envelope\h'-\w' 'u' |Apparently(-Resent)?)-To)\h'-\w' 'u' :(.*[^-a-zA-Z0-9_.])?)\fP',
`\fB(^((Original-)?(Resent-)?(To\h'-\w' 'u' |Cc\h'-\w' 'u' |Bcc)\h'-\w' 'u' |(X-Envelope\h'-\w' 'u' |Apparently(-Resent)?)-To)\h'-\w' 'u' :(.*[^-a-zA-Z0-9_.])?)\fP'
.\"O which should catch all destination specifications containing a specific
.\"O .IR address .
と置換される。
これにより、特定の
.IR アドレス
を含む送付先の記述を全て捕捉できるだろう。
.hy
.ad
.PP
.\"O If the regular expression contains `\fB^TO\fP' it will be substituted by
正規表現に `^TO' とある場合、
.na
.nh
.\"O `\fB(^((Original-)?(Resent-)?(To\h'-\w' 'u' |Cc\h'-\w' 'u' |Bcc)\h'-\w' 'u' |(X-Envelope\h'-\w' 'u' |Apparently(-Resent)?)-To)\h'-\w' 'u' :(.*[^a-zA-Z])?)\fP',
`\fB(^((Original-)?(Resent-)?(To\h'-\w' 'u' |Cc\h'-\w' 'u' |Bcc)\h'-\w' 'u' |(X-Envelope\h'-\w' 'u' |Apparently(-Resent)?)-To)\h'-\w' 'u' :(.*[^a-zA-Z])?)\fP'
.\"O which should catch all destination specifications containing a specific
.\"O .IR word .
と置換される。
これにより、特定の
.IR 単語
を含む送付先の記述を全て捕捉できるだろう。
.hy
.ad
.PP
.\"O If the regular expression contains `\fB^FROM_DAEMON\fP' it will be
.\"O substituted by
正規表現に `^FROM_DAEMON' とある場合、
.na
.nh
`\fB(^(Mailing-List\h'-\w' 'u' :\h'-\w' 'u' |Precedence\h'-\w' 'u' :.*(junk\h'-\w' 'u' |bulk\h'-\w' 'u' |list)\h'-\w' 'u' |To\h'-\w' 'u' : Multiple recipients of |(((Resent-)?(From\h'-\w' 'u' |Sender)\h'-\w' 'u' |X-Envelope-From)\h'-\w' 'u' :\h'-\w' 'u' |>?From )([^>]*[^(.%@a-z0-9])?(Post(ma?(st(e?r)?\h'-\w' 'u' |n)\h'-\w' 'u' |office)\h'-\w' 'u' |(send)?Mail(er)?\h'-\w' 'u' |daemon\h'-\w' 'u' |m(mdf\h'-\w' 'u' |ajordomo)\h'-\w' 'u' |n?uucp\h'-\w' 'u' |LIST(SERV\h'-\w' 'u' |proc)\h'-\w' 'u' |NETSERV\h'-\w' 'u' |o(wner\h'-\w' 'u' |ps)\h'-\w' 'u' |r(e(quest\h'-\w' 'u' |sponse)\h'-\w' 'u' |oot)\h'-\w' 'u' |b(ounce\h'-\w' 'u' |bs\e.smtp)\h'-\w' 'u' |echo\h'-\w' 'u' |mirror\h'-\w' 'u' |s(erv(ices?\h'-\w' 'u' |er)\h'-\w' 'u' |mtp(error)?\h'-\w' 'u' |ystem)\h'-\w' 'u' |A(dmin(istrator)?\h'-\w' 'u' |MMGR\h'-\w' 'u' |utoanswer))(([^).!\h'-\w' 'u' :a-z0-9][-_a-z0-9]*)?[%@>\\t ][^<)]*(\e(.*\e).*)?)?$([^>]\h'-\w' 'u' |$)))\fP',
.\"O which should catch mails coming from most daemons (how's that for a regular
.\"O expression :\-).
と置換される。
これにより、大多数のデーモンから来るメールを捕捉できるだろう。
(正規表現としていかがかな? :\-)
.hy
.ad
.PP
.\"O If the regular expression contains `\fB^FROM_MAILER\fP' it will be
.\"O substituted by
正規表現に `^FROM_MAILER' とある場合、
.na
.nh
`\fB(^(((Resent-)?(From\h'-\w' 'u' |Sender)\h'-\w' 'u' |X-Envelope-From)\h'-\w' 'u' :\h'-\w' 'u' |>?From )([^>]*[^(.%@a-z0-9])?(Post(ma(st(er)?\h'-\w' 'u' |n)\h'-\w' 'u' |office)\h'-\w' 'u' |(send)?Mail(er)?\h'-\w' 'u' |daemon\h'-\w' 'u' |mmdf\h'-\w' 'u' |n?uucp\h'-\w' 'u' |ops\h'-\w' 'u' |r(esponse\h'-\w' 'u' |oot)\h'-\w' 'u' |(bbs\e.)?smtp(error)?\h'-\w' 'u' |s(erv(ices?\h'-\w' 'u' |er)\h'-\w' 'u' |ystem)\h'-\w' 'u' |A(dmin(istrator)?\h'-\w' 'u' |MMGR))(([^).!\h'-\w' 'u' :a-z0-9][-_a-z0-9]*)?[%@>\\t ][^<)]*(\e(.*\e).*)?)?$([^>]\h'-\w' 'u' |$))\fP'
.\"O (a stripped down version of `\fB^FROM_DAEMON\fP'),
.\"O which should catch mails coming from most mailer-daemons.
と置換される (`\fB^FROM_DAEMON\fP' の機能制約バージョンである)。
これにより、大多数のメイラデーモンから来るメールを捕捉できるだろう。
.hy
.ad
.PP
.\"O When assigning boolean values to variables like VERBOSE, DELIVERED or COMSAT,
.\"O procmail accepts as true every string starting with: a non-zero value, `on',
.\"O `y', `t' or `e'.  False is every string starting with: a zero value, `off',
.\"O `n', `f' or `d'.
.\"O When assigning boolean values to variables like 
VERBOSE, DELIVERED あるいは COMSAT のような、変数にブール値を割り当てる時、
procmail は以下の文字列から始まる文字列を論理真と認識する: 非ゼロの数、
`on', `y', `t' あるいは `e' 。
同様に、procmail は以下の文字列から始まる文字列を論理偽と認識する: ゼロ、
`off', `n', `f' あるいは `d' 。
.PP
.\"O If the action line of a recipe specifies a program, a sole backslash-newline
.\"O pair in it on an otherwise empty line will be converted into a newline.
レシピのアクション行がプログラムを指定している場合、空行に唯一
「バックスラッシュ-改行」の組合せのみ存在する行は、改行へ変換される。
.PP
.\"O The regular expression engine built into procmail does not support named
.\"O character classes.
procmail に組み込まれている正規表現エンジンは名前付けされた文字クラスを
サポートしない。
.\"O 【訳注: この意味が不明。 named character classes とは具体的に
.\"O どのようなものなのかが全くわからない。】
.\"O .SH NOTES
.SH 注意
.\"O Since unquoted leading whitespace is generally ignored in the rcfile you can
.\"O indent everything to taste.
rcfile 内において、囲み記号等で囲まれていない行頭の空白は、通常無視される。
よって、好みに応じてインデント可能である。
.\"O 【訳注: この原文も単語が不足しているように見える。】
.PP
.\"O The leading `|' on the action line to specify a program or filter is stripped
.\"O before checking for $SHELLMETAS.
プログラムあるいはフィルタを指定する、アクション行の先頭の `|' は $SHELLMETAS
のチェックの前に除去される。
.PP
.\"O Files included with the INCLUDERC directive containing only environment
.\"O variable assignments can be shared with sh.
環境変数の指定だけを含む、INCLUDERC ディレクティブに含まれるファイルは
sh と共有されうる。
.\"O 【訳注: この意味が不明。共有されるのはファイルなのか、それとも環境変数
.\"O なのか? どのような場合において共有されるのか?】
.PP
.\"O The current behavior of assignments on the command line to
.\"O .B INCLUDERC
.\"O and
.\"O .B SWITCHRC
.\"O is not guaranteed, has been changed once already, and may be changed
.\"O again or removed in future releases.
現在のコマンドラインにおける
.B INCLUDERC
及び
.B SWITCHRC
の動作の仕様は未確定である。
既に動作仕様は一度変更されており、将来には変更あるいは除去される可能性がある。
.\"O 【訳注: この訳が今一つ自信なし。
.\"O The current behavior of assignments on the command line とは、
.\"O どのように訳せば良いのだろうか?
.\"O 「コマンドラインの割当の現在の振るまい」?】
.PP
.\"O For
.\"O .I really
.\"O complicated processing you can even consider calling
.\"O .B procmail
.\"O recursively.
.I 本当に
複雑な処理を行いたいなら、
.B procmail
を再帰的に呼び出すことも検討すると良いだろう。
.PP
.\"O In the old days, the `:0' that marks the beginning of a recipe, had to
.\"O be changed to `:n', whereby `n' denotes the number of conditions that
.\"O follow.
かつて、レシピの始まりを示す `:0' は、条件の数 n に応じて `:n' と
書き換える必要があった。
.\"O 【訳注: 上記訳は以下より引用した:
.\"O    リンク名 横着プログラミング: scmail: Scheme によるメールフィルタ
.\"O         URL: http://www.namazu.org/~satoru/unimag/10/
.\"O 】
.SH AUTHORS
Stephen R. van den Berg
.RS
<srb@cuci.nl>
.RE
Philip A. Guenther
.RS
<guenther@sendmail.com>
.RE
.\".if n .pl -(\n(.tu-1i)
.rm SH
.rn Sh SH
.rm SS
.rn Ss SS
.rm TP
.rn Tp TP
.rm RS
.rn Rs RS
.rm RE
.rn Re RE
