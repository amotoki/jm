.\" Copyright (C) 1994, 1995 by Daniel Quinlan (quinlan@yggdrasil.com)
.\" and Copyright (C) 2002-2008 Michael Kerrisk <mtk.manpages@gmail.com>
.\" with networking additions from Alan Cox (A.Cox@swansea.ac.uk)
.\" and scsi additions from Michael Neuffer (neuffer@mail.uni-mainz.de)
.\" and sysctl additions from Andries Brouwer (aeb@cwi.nl)
.\" and System V IPC (as well as various other) additions from
.\" Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Modified 1995-05-17 by faith@cs.unc.edu
.\" Minor changes by aeb and Marty Leisner (leisner@sdsp.mc.xerox.com).
.\" Modified 1996-04-13, 1996-07-22 by aeb@cwi.nl
.\" Modified 2001-12-16 by rwhron@earthlink.net
.\" Modified 2002-07-13 by jbelton@shaw.ca
.\" Modified 2002-07-22, 2003-05-27, 2004-04-06, 2004-05-25
.\"    by Michael Kerrisk <mtk.manpages@gmail.com>
.\" 2004-11-17, mtk -- updated notes on /proc/loadavg
.\" 2004-12-01, mtk, rtsig-max and rtsig-nr went away in 2.6.8
.\" 2004-12-14, mtk, updated 'statm', and fixed error in order of list
.\" 2005-05-12, mtk, updated 'stat'
.\" 2005-07-13, mtk, added /proc/sys/fs/mqueue/*
.\" 2005-09-16, mtk, Added /proc/sys/fs/suid_dumpable
.\" 2005-09-19, mtk, added /proc/zoneinfo
.\" 2005-03-01, mtk, moved /proc/sys/fs/mqueue/* material to mq_overview.7.
.\" 2008-06-05, mtk, Added /proc/[pid]/oom_score, /proc/[pid]/oom_adj,
.\"     /proc/[pid]/limits, /proc/[pid]/mountinfo, /proc/[pid]/mountstats,
.\"     and /proc/[pid]/fdinfo/*.
.\" 2008-06-19, mtk, Documented /proc/[pid]/status.
.\" 2008-07-15, mtk, added /proc/config.gz
.\"
.\" FIXME 2.6.13 seems to have /proc/vmcore implemented
.\" in the source code, but there is no option available under
.\" 'make xconfig'; eventually this should be fixed, and then info
.\" from the patch-2.6.13 and change log could be used to write an
.\" entry in this man page.
.\" Needs CONFIG_VMCORE
.\"
.\" FIXME cross check against Documentation/filesystems/proc.txt
.\" to see what information could be imported from that file
.\" into this file.
.\"
.\" Japanese Version Copyright (c) 1998,1999 Hiroaki Nagoya,
.\"     Copyright (c) 2001-2005 Yuichi SATO,
.\"     and Copyright (c) 2005-2008 Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 1998-07-09, Hiroaki Nagoya <nagoya@cc.hit-u.ac.jp>
.\" Proofreaded 1998-07-24, Hiroaki Nagoya <nagoya@cc.hit-u.ac.jp> ,
.\"                         Nakano Takeo <nakano@apm.seikei.ac.jp> and
.\"                         Shinya Hanataka <hanataka@abyss.rim.or.jp>.
.\" Matched with man-pages-1.22 1999-01-21, Hiroaki Nagoya
.\" Updated 1999-12-04, Kentaro Shirakata <argrath@yo.rim.or.jp>
.\" Updated 2001-04-24, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated 2002-01-14, Yuichi SATO
.\" Updated 2002-11-04, Yuichi SATO
.\" Updated 2003-03-01, Yuichi SATO
.\" Updated 2003-10-18, Yuichi SATO
.\" Updated 2003-11-27, Yuichi SATO
.\" Updated 2005-01-22, Yuichi SATO
.\" Updated 2005-09-14, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2005-11-19, Akihiro MOTOKI, LDP v2.14
.\" Updated 2006-01-18, Akihiro MOTOKI, LDP v2.21
.\" Updated 2006-02-15, Akihiro MOTOKI, LDP v2.23
.\" Updated 2006-03-05, Akihiro MOTOKI, LDP v2.25
.\" Updated 2006-04-15, Akihiro MOTOKI, LDP v2.29
.\" Updated 2007-01-05, Akihiro MOTOKI, LDP v2.43
.\" Updated 2007-07-04, Akihiro MOTOKI, LDP v2.58
.\" Updated 2007-09-03, Akihiro MOTOKI, LDP v2.64
.\" Updated 2007-10-11, Akihiro MOTOKI, LDP v2.65
.\" Updated 2008-02-06, Akihiro MOTOKI, LDP v2.76
.\" Updated 2008-09-21, Akihiro MOTOKI, LDP v3.09
.\" Updated 2009-03-03, Akihiro MOTOKI, LDP v3.19
.\" Updated 2009-03-13, Akihiro MOTOKI, LDP v3.20
.\"
.\"WORD:        pseudo-filesystem       擬似ファイルシステム
.\"WORD:        major                   メジャーデバイス番号
.\"WORD:        minor                   マイナーデバイス番号
.\"WORD:        inode                   iノード番号
.\"WORD:        executable              実行形式
.\"WORD:        file descriptor         ファイルディスクリプタ
.\"WORD:        swap in/out             スワップイン/アウト
.\"WORD:        page in/out             ページイン/アウト
.\"WORD:        minor/major fault       マイナー/メジャーフォールト
.\"WORD:        demand-loaded in        要求時ロードイン
.\"WORD:        channels                チャネル
.\"WORD:        core file               コアファイル
.\"WORD:        loadable module         ローダブルモジュール
.\"WORD:        hotplugged              活線挿抜
.\"WORD:        context switches        コンテクスト・スイッチ
.\"
.TH PROC 5 2009-09-30 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O proc \- process information pseudo-file system
proc \- プロセスの情報を含む擬似ファイルシステム
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .I proc
.\"O file system is a pseudo-file system which is used as an interface to
.\"O kernel data structures.
.\"O It is commonly mounted at
.\"O .IR /proc .
.\"O Most of it is read-only, but some files allow kernel variables to be
.\"O changed.
.I proc
ファイルシステムは擬似的なファイルシステムであり、
カーネル内のデータへのインターフェースとして使用される。
一般的には
.I /proc
にマウントされる。
大部分のファイルは読み出し専用 (read-only) であるが、
いくつかのファイルは書き込み可能であり、
そのファイルに書き込めばカーネルの内部変数を変更できる。
.LP
.\"O The following outline gives a quick tour through the
.\"O .I /proc
.\"O hierarchy.
以下は
.I /proc
階層の簡単なあらましである。
.PD 1
.TP
.I /proc/[pid]
.\"O There is a numerical subdirectory for each running process; the
.\"O subdirectory is named by the process ID.
.\"O Each such subdirectory contains the following
.\"O pseudo-files and directories.
実行中のプロセスについてのサブディレクトリ。
サブディレクトリ名は (そのプロセスの) プロセス ID である。
各サブディレクトリは、以下の擬似ファイルとディレクトリを含む。
.\" FIXME Describe /proc/[pid]/attr and
.\"       /proc/[pid]/task/[tid]/attr
.\"	  This is a directory
.\"       Added in ???
.\"	  CONFIG_SECURITY
.\"
.TP
.\"O .IR /proc/[pid]/auxv " (since 2.6.0-test7)"
.IR /proc/[number]/auxv " (カーネル 2.6.0-test7 以降)"
.\"O This contains the contents of the ELF interpreter information passed
.\"O to the process at exec time.
.\"O The format is one \fIunsigned long\fP ID
.\"O plus one \fIunsigned long\fP value for each entry.
.\"O The last entry contains two zeros.
実行時にプロセスに渡された ELF インタプリタ情報が格納されている。
個々のエントリは、\fIunsigned long\fP 型の ID 1 個に
\fIunsigned long\fP 型の値 1 個が続くフォーマットである。
最後のエントリには 0 が 2 個入っている。
.\" FIXME Describe /proc/[pid]/cgroup and
.\"       /proc/[pid]/task/[tid]/cgroup
.\" 	  Info in Documentation/cgroups.txt
.\"       Added in 2.6.24
.\"	  CONFIG_CGROUPS
.\"
.\" FIXME Describe /proc/[pid]/clear_refs
.\"       Added in 2.6.22
.\"       "Clears page referenced bits shown in smaps output"
.\"       write-only
.\"       CONFIG_PROC_PAGE_MONITOR
.TP
.I /proc/[pid]/cmdline
.\"O This holds the complete command line for the process,
.\"O unless the process is a zombie.
.\"O .\" In 2.3.26, this also used to be true if the process was swapped out.
.\"O In the latter case, there is nothing in this file:
.\"O that is, a read on this file will return 0 characters.
.\"O The command-line arguments appear in this file as a set of
.\"O null-separated strings,
.\"O with a further null byte (\(aq\\0\(aq) after the last string.
プロセスの完全なコマンド行を保持する。
ただし、そのプロセスがゾンビプロセスの場合は、このファイルは空となる。
.\" Linux 2.3.26 では、プロセスがスワップアウトされている場合も、
.\" このファイルは空となっていた。
つまり、このファイルを読み出しても一文字も返らない。
このファイルではコマンドライン引き数が、
ヌル文字で区切られた文字列として書かれており、
最後の文字列の後にヌルバイト (\(aq\\0\(aq) が一つ置かれる。
.TP
.\"O .IR /proc/[pid]/coredump_filter " (since kernel 2.6.23)"
.IR /proc/[pid]/coredump_filter " (kernel 2.6.23 以降)"
.\"O See
.\"O .BR core (5).
.BR core (5)
参照。
.TP
.\"O .IR /proc/[pid]/cpuset " (since kernel 2.6.12)"
.IR /proc/[pid]/cpuset " (kernel 2.6.12 以降)"
.\" and/proc/[pid]/task/[tid]/cpuset
.\"O See
.\"O .BR cpuset (7).
.BR cpuset (7)
参照。
.TP
.I /proc/[pid]/cwd
.\"O This is a symbolic link to the current working directory of the process.
.\"O To find out the current working directory of process 20,
.\"O for instance, you can do this:
プロセスのカレントワーキングディレクトリへのシンボリックリンク。
例えば、プロセス 20 のカレントワーキングディレクトリを見つけるためには、
次のようにすればよい。

.in +4n
.nf
.RB "$" " cd /proc/20/cwd; /bin/pwd"
.fi
.in

.\"O Note that the
.\"O .I pwd
.\"O command is often a shell built-in, and might
.\"O not work properly.
.\"O In
.\"O .BR bash (1),
.\"O you may use
.\"O .IR "pwd\ \-P" .
.I pwd
コマンドはシェルの内部コマンドのことがよくあり、
うまく動作しないかもしれない。
.BR bash (1)
では
.I "pwd \-P"
を使ってもよい。

.\"O .\" The following was still true as at kernel 2.6.13
.\" 以下の内容は カーネル 2.6.13 ではまだ正しい。
.\"O In a multithreaded process, the contents of this symbolic link
.\"O are not available if the main thread has already terminated
.\"O (typically by calling
.\"O .BR pthread_exit (3)).
マルチスレッドプロセスでは、メインスレッドがすでに終了している場合、
このシンボリックリンクの内容は参照できない
(スレッドの終了は通常
.BR pthread_exit (3)
を呼び出しにより行われる)。
.TP
.I /proc/[pid]/environ
.\"O This file contains the environment for the process.
.\"O The entries are separated by null bytes (\(aq\\0\(aq),
.\"O and there may be a null byte at the end.
.\"O Thus, to print out the environment of process 1, you would do:
このファイルはプロセスの環境変数を含んでいる。
各エントリは NULL バイト (\(aq\\0\(aq) で区切られていて、
末尾に NULL バイトがあるかもしれない。
したがって、プロセス 1 の環境変数を表示するためには
次のようにすればよい。
.in +4n
.nf

.ft CW
.RB "$" " (cat /proc/1/environ; echo) | tr \(aq\e000\(aq \(aq\en\(aq"
.fi
.ft P
.in
.TP
.I /proc/[pid]/exe
.\"O Under Linux 2.2 and later, this file is a symbolic link
.\"O containing the actual pathname of the executed command.
Linux 2.2 以降では、このファイルはシンボリックリンクで、
実行可能コマンドの実際のパス名を格納している。
.\"O This symbolic link can be dereferenced normally; attempting to open
.\"O it will open the executable.
.\"O You can even type
.\"O .I /proc/[pid]/exe
.\"O to run another copy of the same executable as is being run by
.\"O process [pid].
このシンボリックリンクは通常のように辿ることができる;
これをオープンすると実行可能ファイルがオープンされる。
(コマンドラインで)
.I /proc/[pid]/exe
と入力すると、プロセス番号 [pid] で実行されている
実行可能ファイルをもう一つ実行することができる。
.\"O .\" The following was still true as at kernel 2.6.13
.\" 以下の内容は カーネル 2.6.13 ではまだ正しい。
.\"O In a multithreaded process, the contents of this symbolic link
.\"O are not available if the main thread has already terminated
.\"O (typically by calling
.\"O .BR pthread_exit (3)).
マルチスレッドプロセスでは、メインスレッドがすでに終了している場合、
このシンボリックリンクの内容は参照できない
(スレッドの終了は通常
.BR pthread_exit (3)
を呼び出しにより行われる)。

.\"O Under Linux 2.0 and earlier
.\"O .I /proc/[pid]/exe
.\"O is a pointer to the binary which was executed,
.\"O and appears as a symbolic link.
.\"O A
.\"O .BR readlink (2)
.\"O call on this file under Linux 2.0 returns a string in the format:
.\"O 
.\"O     [device]:inode
.\"O 
Linux 2.0 以前では、
.I /proc/[pid]/exe
は実行されたバイナリへのポインタで、シンボリックリンクのように見える。
Linux 2.0 以前では、このファイルに対して
.BR readlink (2)
を実行すると、

    [デバイス番号]:iノード番号

というフォーマットの文字列が返る。

.\"O For example, [0301]:1502 would be inode 1502 on device major 03 (IDE,
.\"O MFM, etc. drives) minor 01 (first partition on the first drive).
たとえば、[0301]:1502 はメジャーデバイス番号 03 (IDE, MFM などのドライブ)
マイナーデバイス番号 01 (最初のドライブの最初のパーティション) の
デバイス上の iノード番号 1502 である。

.\"O .BR find (1)
.\"O with the
.\"O .I \-inum
.\"O option can be used to locate the file.
.I \-inum
オプションをつけて
.BR find (1)
を使うと、このファイルの所在を探すことができる。
.TP
.I /proc/[pid]/fd
.\"O This is a subdirectory containing one entry for each file which the
.\"O process has open, named by its file descriptor, and which is a
.\"O symbolic link to the actual file.
.\"O Thus, 0 is standard input, 1 standard output, 2 standard error, etc.
プロセスがオープンしたファイル各々に対するエントリを含むサブディレクトリ。
ファイルディスクリプタがファイル名で、
実際のファイルへのシンボリックリンクになっている。
したがって 0 は標準入力、1 は標準出力、2 は標準エラー出力、などとなる。

.\"O .\" The following was still true as at kernel 2.6.13
.\" 以下の内容は カーネル 2.6.13 ではまだ正しい。
.\"O In a multithreaded process, the contents of this directory
.\"O are not available if the main thread has already terminated
.\"O (typically by calling
.\"O .BR pthread_exit (3)).
マルチスレッドプロセスでは、メインスレッドがすでに終了している場合、
このディレクトリの内容は参照できない
(スレッドの終了は通常
.BR pthread_exit (3)
を呼び出しにより行われる)。

.\"O Programs that will take a filename as a command-line argument,
.\"O but will not take input from standard input if no argument is supplied,
.\"O or that write to a file named as a command-line argument,
.\"O but will not send their output to standard output
.\"O if no argument is supplied, can nevertheless be made to use
.\"O standard input or standard out using
.\"O .IR /proc/[pid]/fd .
.\"O For example, assuming that
.\"O .I \-i
.\"O is the flag designating an input file and
.\"O .I \-o
.\"O is the flag designating an output file:
コマンドライン引き数としてファイル名を受け取るが、引き数が
渡されなかった場合に標準入力から入力を受け取らないようなプログラムや、
コマンドライン引き数として書き込みファイルを受け取るが、引き数が
渡されなかった場合に標準出力に出力を行わないようなプログラムであっても、
.I /proc/[pid]/fd
を使うことで標準入力や標準出力を使用できるようになる。
例えば、
.I \-i
を入力ファイルを指定するフラグ、
.I \-o
を出力ファイルを指定するフラグと仮定すると、以下のコマンドを
実行することにより、フィルタとして動作させることができる。
.in +4n
.nf

.RB "$" " foobar \-i /proc/self/fd/0 \-o /proc/self/fd/1 ..."
.fi
.in

.\"O and you have a working filter.
.\"O motoki: 対応する訳はコマンドの上側にある。
.\"O .\" The following is not true in my tests (MTK):
.\"O .\" Note that this will not work for
.\"O .\" programs that seek on their files, as the files in the fd directory
.\"O .\" are not seekable.
.\" 私のテストでは、以下は正しくなかった (MTK):
.\" ただし fd ディレクトリ内のファイルはシーク (seek) できないので、
.\" この方法はファイルをシークするようなプログラムではうまく働かない。

.\"O .I /proc/self/fd/N
.\"O is approximately the same as
.\"O .I /dev/fd/N
.\"O in some Unix and Unix-like systems.
.\"O Most Linux MAKEDEV scripts symbolically link
.\"O .I /dev/fd
.\"O to
.\"O .IR /proc/self/fd ,
.\"O in fact.
.I /proc/self/fd/N
は、ある種の Unix や Unix 風のシステムにある
.I /dev/fd/N
とだいたい同じである。
事実 Linux のたいていの MAKEDEV スクリプトは、
.I /dev/fd
を
.I /proc/self/fd
へのシンボリックリンクにしている。

.\"O Most systems provide symbolic links
.\"O .IR /dev/stdin ,
.\"O .IR /dev/stdout ,
.\"O and
.\"O .IR /dev/stderr ,
.\"O which respectively link to the files
.\"O .IR 0 ,
.\"O .IR 1 ,
.\"O and
.\"O .IR 2
.\"O in
.\"O .IR /proc/self/fd .
ほとんどのシステムでは、シンボリックリンク
.IR /dev/stdin ,
.IR /dev/stdout ,
.IR /dev/stderr
が提供されており、それぞれ
.I /proc/self/fd
内のファイル
.IR 0 ,
.IR 1 ,
.IR 2
にリンクされている。
.\"O Thus the example command above could be written as:
したがって、上述のサンプルコマンドは次のようにも書くことができる。
.in +4n
.nf

.RB "$" " foobar \-i /dev/stdin \-o /dev/stdout ..."
.fi
.in
.\" FIXME Describe /proc/[pid]/loginuid
.\"       Added in 2.6.11; updating requires CAP_AUDIT_CONTROL
.\"       CONFIG_AUDITSYSCALL
.TP
.\"O .IR /proc/[pid]/fdinfo/ " (since kernel 2.6.22)"
.IR /proc/[pid]/fdinfo/ " (kernel 2.6.22 以降)"
.\"O This is a subdirectory containing one entry for each file which the
.\"O process has open, named by its file descriptor.
.\"O The contents of each file can be read to obtain information
.\"O about the corresponding file descriptor, for example:
このサブディレクトリには、そのプロセスがオープンしているファイル毎の
エントリが入っており、ファイルディスクリプタがファイル名となっている。
各ファイルの内容を読み出すことで、対応するファイルディスクリプタに関する
情報を得ることができる。以下に例を示す。
.in +4n
.nf

.RB "$" " cat /proc/12015/fdinfo/4"
pos:    1000
flags:  01002002
.fi
.in

.\"O The
.\"O .I pos
.\"O field is a decimal number showing the current file offset.
.\"O The
.\"O .I flags
.\"O field is an octal number that displays the
.\"O file access mode and file status flags (see
.\"O .BR open (2)).
.I pos
フィールドは 10 進数で、現在のファイルオフセットを示す。
.I flags
フィールドは 8 進数で、
ファイルのアクセスモードとファイル状態フラグを示す
.RB ( open (2)
参照)。

.\"O The files in this directory are readable only by the owner of the process.
このディレクトリのファイルは、プロセスの所有者だけが読み出すことができる。
.\" FIXME document /proc/[pid]/io
.\" .TP
.\" .IR /proc/[pid]/io " (since kernel 2.6.20)"
.TP
.\"O .IR /proc/[pid]/limits " (since kernel 2.6.24)"
.IR /proc/[pid]/limits " (kernel 2.6.24 以降)"
.\"O This file displays the soft limit, hard limit, and units of measurement
.\"O for each of the process's resource limits (see
.\"O .BR getrlimit (2)).
.\"O The file is protected to only allow reading by the real UID of the process.
このファイルは、そのプロセスの各リソース制限について、
ソフト・リミット、ハード・リミット、計測単位を表示する
.RB ( getrlimit (2)
参照)。
このファイルは、プロセスの実 UID を持つものだけが読み出すことができる。
.TP
.I /proc/[pid]/maps
.\"O A file containing the currently mapped memory regions and their access
.\"O permissions.
現在マップされているメモリ領域とそのアクセスパーミッションを含む。

.\"O The format is:
フォーマットは以下のとおり:

.nf
.ft CW
address           perms offset  dev   inode   pathname
08048000-08056000 r-xp 00000000 03:0c 64593   /usr/sbin/gpm
08056000-08058000 rw-p 0000d000 03:0c 64593   /usr/sbin/gpm
08058000-0805b000 rwxp 00000000 00:00 0
40000000-40013000 r-xp 00000000 03:0c 4165    /lib/ld-2.2.4.so
40013000-40015000 rw-p 00012000 03:0c 4165    /lib/ld-2.2.4.so
4001f000-40135000 r-xp 00000000 03:0c 45494   /lib/libc-2.2.4.so
40135000-4013e000 rw-p 00115000 03:0c 45494   /lib/libc-2.2.4.so
4013e000-40142000 rw-p 00000000 00:00 0
bffff000-c0000000 rwxp 00000000 00:00 0
.ft
.fi

.\"O where "address" is the address space in the process that it occupies,
.\"O "perms" is a set of permissions:
ここで "address" はプロセスのアドレス空間でそのメモリ領域が占めている
アドレスで、"perms" はパーミッションのセットである。

.nf
.in +5
r = read
w = write
x = execute
s = shared
p = private (copy on write)
.fi
.in

.\"O "offset" is the offset into the file/whatever, "dev" is the device
.\"O (major:minor), and "inode" is the inode on that device.
.\"O 0 indicates that no inode is associated with the memory region,
.\"O as the case would be with BSS (uninitialized data).
\&"offset" はファイル (などの) 中でのオフセット、
\&"dev" はデバイス (メジャーデバイス番号:マイナーデバイス番号)、
\&"inode" はそのデバイスの i ノード番号である。
これが 0 のときは、bss (初期化されていないデータ領域) の場合のように
このメモリ領域にはどの i ノードも割り当てられていないことを意味している。

.\"O Under Linux 2.0 there is no field giving pathname.
Linux 2.0 ではパス名を書いたフィールドがない。
.TP
.I /proc/[pid]/mem
.\"O This file can be used to access the pages of a process's memory through
.\"O .BR open (2),
.\"O .BR read (2),
.\"O and
.\"O .BR lseek (2).
このファイルは、
.BR open (2),
.BR read (2),
.BR lseek (2)
を通して、プロセスのメモリのページにアクセスするために使われる。
.TP
.\"O .IR /proc/[pid]/mountinfo " (since Linux 2.6.26)"
.IR /proc/[pid]/mountinfo " (Linux 2.6.26 以降)"
.\" This info adapted from Documentation/filesystems/proc.txt
.\"O This file contains information about mount points.
.\"O It contains lines of the form:
このファイルには、マウントポイントについての情報が入っている。
以下のような形式の行から構成される。
.nf
.ft CW

36 35 98:0 /mnt1 /mnt2 rw,noatime master:1 - ext3 /dev/root rw,errors=continue
(1)(2)(3)   (4)   (5)      (6)      (7)   (8) (9)   (10)         (11)
.ft
.fi
.IP
.\"O The numbers in parentheses are labels for the descriptions below:
括弧付きの数字は、以下の説明のためのものである。
.RS 7
.TP 5
(1)
.\"O mount ID: unique identifier of the mount (may be reused after
.\"O .BR umount (2)).
マウント ID: マウントの一意な識別子
.RB ( umount (2)
の後は再利用されるかもしれない)。
.TP
(2)
.\"O parent ID: ID of parent mount (or of self for the top of the mount tree).
parent ID: 親マウントの ID
(マウントツリーの最上位の場合は自分自身の ID となる)。
.TP
(3)
.\"O major:minor: value of
.\"O .I st_dev
.\"O for files on file system (see
.\"O .BR stat (2)).
major:minor: ファイルシステム上のファイルの
.I st_dev
の値
.RB ( stat (2)
参照)。
.TP
(4)
.\"O root: root of the mount within the file system.
ルート: そのファイルシステム内のマウントのルート。
.TP
(5)
.\"O mount point: mount point relative to the process's root.
マウントポイント: マウントポイントのそのプロセスのルートからの相対パス。
.TP
(6)
.\"O mount options: per-mount options.
マウントオプション: 各マウントのオプション。
.TP
(7)
.\"O optional fields: zero or more fields of the form "tag[:value]".
オプションフィールド: "tag[:value]" 形式のフィールドが 0 個以上並ぶ。
.TP
(8)
.\"O separator: marks the end of the optional fields.
セパレータ: オプションフィールドの終わりを示す。
.TP
(9)
.\"O file system type: name of file system in the form "type[.subtype]".
ファイルシステム種別: ファイルシステムの名前。
"type[.subtype]" という形式となる。
.TP
(10)
.\"O mount source: file system-specific information or "none".
マウント元: ファイルシステム固有の情報。ない場合は "none" となる。
.TP
(11)
.\"O super options: per-super block options.
super options: スーパーブロック単位のオプション。
.RE
.IP
.\"O Parsers should ignore all unrecognized optional fields.
.\"O Currently the possible optional fields are:
解釈する側は認識できないオプションフィールドは全て無視すべきである。
現在のところ、オプションフィールドとしては以下のようなものがある。
.RS 12
.TP 18
shared:X
.\"O mount is shared in peer group X
マウントはピアグループ (peer group) X で共有されている。
.TP
master:X
.\"O mount is slave to peer group X
マウントはピアグループ (peer group) X のスレーブである。
.TP
propagate_from:X
.\"O mount is slave and receives propagation from peer group X (*)
マウントはスレーブであり、ピアグループ X (*) から
mount propagation を受信する。
.TP
unbindable
.\"O mount is unbindable
マウントは unbind できない。
.RE
.IP
.\"O (*) X is the closest dominant peer group under the process's root.
.\"O If X is the immediate master of the mount,
.\"O or if there is no dominant peer group under the same root,
.\"O then only the "master:X" field is present
.\"O and not the "propagate_from:X" field.
(*) X は、プロセスの root で直近の dominant peer group である。
X がマウントの直接のマスターである場合や、
同じ root に dominant peer group がない場合は、
"master:X" フィールドだけが存在し、
"propagate_from:X" フィールドは存在しない。

.\"O For more information on mount propagation see:
.\"O .I Documentation/filesystems/sharedsubtree.txt
.\"O in the kernel source tree.
mount propagation の詳細については、カーネルソースツリー内の
.I Documentation/filesystems/sharedsubtree.txt
を参照。
.TP
.\"O .IR /proc/[pid]/mounts " (since Linux 2.4.19)"
.IR /proc/[pid]/mounts " (Linux 2.4.19 以降)"
.\"O This is a list of all the file systems currently mounted in the
.\"O process's mount namespace.
.\"O The format of this file is documented in
.\"O .BR fstab (5).
そのプロセスのマウント名前空間に現在マウントされている
全ファイルシステムのリスト。
このファイルのフォーマットは
.BR fstab (5)
に載っている。
.\"O Since kernel version 2.6.15, this file is pollable:
.\"O after opening the file for reading, a change in this file
.\"O (i.e., a file system mount or unmount) causes
.\"O .BR select (2)
.\"O to mark the file descriptor as readable, and
.\"O .BR poll (2)
.\"O and
.\"O .BR epoll_wait (2)
.\"O mark the file as having an error condition.
カーネル 2.6.15 以降では、このファイルを監視することができる (pollable)。
このファイルを読み出し用にオープンした後で、このファイルに変更があると
(つまりファイルシステムのマウントやアンマウントがあると)、
.BR select (2)
ではそのファイルディスクリプタは読み出し可能となり、
.BR poll (2)
と
.BR epoll_wait (2)
ではそのファイルはエラー状態として通知される。
.TP
.\"O .IR /proc/[pid]/mountstats " (since Linux 2.6.17)"
.IR /proc/[pid]/mountstats " (Linux 2.6.17 以降)"
.\"O This file exports information (statistics, configuration information)
.\"O about the mount points in the process's name space.
.\"O Lines in this file have the form:
このファイルを通じて、そのプロセスの名前空間内のマウントポイントに関する
各種情報 (統計、設定情報) を参照できる。
ファイルの各行は以下のフォーマットである。
.nf

device /dev/sda7 mounted on /home with fstype ext3 [statistics]
(       1      )            ( 2 )             (3 ) (4)
.fi
.IP
.\"O The fields in each line are:
各行のフィールドは以下の通りである。
.RS 7
.TP 5
(1)
.\"O The name of the mounted device
.\"O (or "nodevice" if there is no corresponding device).
マウントされているデバイス名
(対応するデバイスがない場合は "nodevice" となる)。
.TP
(2)
.\"O The mount point within the file system tree.
マウントポイントのファイルシステムツリーにおけるパス名。
.TP
(3)
.\"O The file system type.
ファイルシステム種別。
.TP
(4)
.\"O Optional statistics and configuration information.
.\"O Currently (as at Linux 2.6.26), only NFS file systems export
.\"O information via this field.
追加の統計や設定情報。
現在のところ (Linux 2.6.26 時点では)、
このフィールドで情報が提供されているのは NFS ファイルシステムだけである。
.RE
.IP
.\"O This file is only readable by the owner of the process.
このファイルはプロセスの所有者だけが読み出すことができる。
.TP
.\"O .IR /proc/[pid]/numa_maps " (since Linux 2.6.14)"
.IR /proc/[pid]/numa_maps " (Linux 2.6.14 以降)"
.\"O See
.\"O .BR numa (7).
.BR numa (7)
を参照。
.TP
.\"O .IR /proc/[pid]/oom_adj " (since Linux 2.6.11)"
.IR /proc/[pid]/oom_adj " (Linux 2.6.11 以降)"
.\"O This file can be used to adjust the score used to select which process
.\"O should be killed in an out-of-memory (OOM) situation.
このファイルは、メモリ不足 (OOM) の状況下で
どのプロセスを殺すべきかを選択するのに使用されるスコアを
調整するのに使用される。
.\"O The kernel uses this value for a bit-shift operation of the process's
.\"O .IR oom_score
.\"O value:
.\"O valid values are in the range \-16 to +15,
.\"O plus the special value \-17,
.\"O which disables OOM-killing altogether for this process.
カーネルは、プロセスの
.I oom_score
値のビットシフト操作に、この値を使用する。
この値として有効な値は \-16 から +15 までと、
特別な意味を持つ \-17 である。
\-17 はそのプロセスに対する OOM-killing を完全に無効にすることを意味する。
.\"O A positive score increases the likelihood of this
.\"O process being killed by the OOM-killer;
.\"O a negative score decreases the likelihood.
正の値ほど、そのプロセスが OOM-killer により殺される可能性が高くなり、
負の値ほど可能性が低くなる。
.\"O The default value for this file is 0;
.\"O a new process inherits its parent's
.\"O .I oom_adj
.\"O setting.
このファイルのデフォルト値は 0 である。
新しいプロセスは親プロセスの
.I oom_adj
の設定を継承する。
.\"O A process must be privileged
.\"O .RB ( CAP_SYS_RESOURCE )
.\"O to update this file.
このファイルを変更するためには、プロセスは特権
.RB ( CAP_SYS_RESOURCE )
を持っていなければならない。
.TP
.\"O .IR /proc/[pid]/oom_score " (since Linux 2.6.11)"
.IR /proc/[pid]/oom_score " (Linux 2.6.11 以降)"
.\" See mm/oom_kill.c::badness() in the 2.6.25 sources
.\"O This file displays the current score that the kernel gives to
.\"O this process for the purpose of selecting a process
.\"O for the OOM-killer.
.\"O A higher score means that the process is more likely to be
.\"O selected by the OOM-killer.
.\"O The basis for this score is the amount of memory used by the process,
.\"O with increases (+) or decreases (\-) for factors including:
このファイルは、OOM-killer のプロセス選択用として、カーネルが
このプロセスに対して与えた現在のスコアを表示する。
高いスコアは、そのプロセスが OOM-killer により選択される
可能性が高いことを意味する。
このスコアの基本はそのプロセスが使用しているメモリ量であり、
以下の要因により加算 (+) 減算 (\-) が行われる。
.\" See mm/oom_kill.c::badness() in the 2.6.25 sources
.RS
.IP * 2
.\"O whether the process creates a lot of children using
.\"O .BR fork (2)
.\"O (+);
そのプロセスが多くの子プロセスを
.BR fork (2)
を使って作成しているか (+)。
.IP *
.\"O whether the process has been running a long time,
.\"O or has used a lot of CPU time (\-);
そのプロセスが長時間実行されて来たか、もしくは
多くの CPU 時間を使用しているか (\-)。
.IP *
.\"O whether the process has a low nice value (i.e., > 0) (+);
そのプロセスが低い nice 値 (> 0) を持っているか (+)。
.IP *
.\"O whether the process is privileged (\-); and
.\"O .\" More precisely, if it has CAP_SYS_ADMIN or CAP_SYS_RESOURCE
そのプロセスが特権を持っているか (\-)。
.\" より正確には、CAP_SYS_ADMIN か CAP_SYS_RESOURCE を持っているか。
.IP *
.\"O whether the process is making direct hardware access (\-).
.\"O .\" More precisely, if it has CAP_SYS_RAWIO
そのプロセスが direct hardware access を行っているか (\-)。
.\" より正確には、CAP_SYS_RAWIO を持っているか。
.RE
.IP
.\"O The
.\"O .I oom_score
.\"O also reflects the bit-shift adjustment specified by the
.\"O .I oom_adj
.\"O setting for the process.
.I oom_score
は、そのプロセスの
.I oom_adj
設定で規定されるビットシフト調整にも影響を与える。
.\" FIXME Describe /proc/[pid]/pagemap
.\"       Added in 2.6.25
.\"       CONFIG_PROC_PAGE_MONITOR
.TP
.I /proc/[pid]/root
.\"O Unix and Linux support the idea of a per-process root of the
.\"O file system, set by the
.\"O .BR chroot (2)
.\"O system call.
.\"O This file is a symbolic link that points to the process's
.\"O root directory, and behaves as exe, fd/*, etc. do.
Unix と Linux では、
ファイルシステムのルート (/) をプロセスごとに別々にできる。
これはシステムコール
.BR chroot (2)
によって設定する。
このファイルはプロセスのルートディレクトリを指すシンボリックリンクで、
exe や fd/* などと同じような動作をする。

.\"O .\" The following was still true as at kernel 2.6.13
.\" 以下の内容は カーネル 2.6.13 ではまだ正しい。
.\"O In a multithreaded process, the contents of this symbolic link
.\"O are not available if the main thread has already terminated
.\"O (typically by calling
.\"O .BR pthread_exit (3)).
マルチスレッドプロセスでは、メインスレッドがすでに終了している場合、
このシンボリックリンクの内容は参照できない
(スレッドの終了は通常
.BR pthread_exit (3)
を呼び出しにより行われる)。
.\" FIXME Describe /proc/[pid]/seccomp
.\"       Added in 2.6.12
.\" FIXME Describe /proc/[pid]/sessionid
.\"       Added in 2.6.25; read-only; only readable by real UID
.\"       CONFIG_AUDITSYSCALL
.\" FIXME Describe /proc/[pid]/sched
.\"       Added in 2.6.23
.\"       CONFIG_SCHED_DEBUG, and additional fields if CONFIG_SCHEDSTATS
.\"       Displays various scheduling parameters
.\"       This file can be written, to reset stats
.\" FIXME Describe /proc/[pid]/schedstats and
.\"       /proc/[pid]/task/[tid]/schedstats
.\"       Added in 2.6.9
.\"       CONFIG_SCHEDSTATS
.TP
.\"O .IR /proc/[pid]/smaps " (since Linux 2.6.14)"
.IR /proc/[pid]/smaps " (Linux 2.6.14 以降)"
.\"       CONFIG_PROC_PAGE_MONITOR
.\"O This file shows memory consumption for each of the process's mappings.
.\"O For each of mappings there is a series of lines such as the following:
このファイルは、そのプロセスの各マッピングのメモリ消費量を表示する。
マッピングのそれぞれについて、以下のような内容が表示される。
.in +4n
.nf

08048000-080bc000 r-xp 00000000 03:02 13130      /bin/bash
Size:               464 kB
Rss:                424 kB
Shared_Clean:       424 kB
Shared_Dirty:         0 kB
Private_Clean:        0 kB
Private_Dirty:        0 kB

.fi
.in
.\"O The first of these lines shows the same information as is displayed
.\"O for the mapping in
.\"O .IR /proc/[pid]/maps .
.\"O The remaining lines show the size of the mapping,
.\"O the amount of the mapping that is currently resident in RAM,
.\"O the number of clean and dirty shared pages in the mapping,
.\"O and the number of clean and dirty private pages in the mapping.
最初の行には、
.I /proc/[pid]/maps
で表示されるマッピングと同じ情報が表示される。
残りの行には、マッピングのサイズ、現在 RAM 上に存在するマッピングの量、
マッピング内の共有ページのうちクリーンなページ数、ダーティなページ数、
マッピング内のプライベートページのうちクリーンなページ数、
ダーティなページ数、を示す。

.\"O This file is only present if the
.\"O .B CONFIG_MMU
.\"O kernel configuration
.\"O option is enabled.
このファイルが存在するのは、カーネルのコンフィギュレーション・オプション
.B CONFIG_MMU
を有効にした場合だけである。
.TP
.I /proc/[pid]/stat
.\"O Status information about the process.
.\"O This is used by
.\"O .BR ps (1).
.\"O It is defined in
.\"O .IR /usr/src/linux/fs/proc/array.c "."
プロセスの状態についての情報。
これは
.BR ps (1)
で使われ、
.I /usr/src/linux/fs/proc/array.c
で定義されている。

.\"O The fields, in order, with their proper
.\"O .BR scanf (3)
.\"O format specifiers, are:
各フィールドを順番に、
.BR scanf (3)
のフォーマット指定子付きで以下に示す。
.RS
.TP 12
\fIpid\fP %d
.\"O The process ID.
プロセス ID。
.TP
\fIcomm\fP %s
.\"O The filename of the executable, in parentheses.
.\"O This is visible whether or not the executable is swapped out.
括弧でくくられた実行形式のファイル名。
実行形式がスワップアウトされているかどうかによらず、見ることができる。
.TP
\fIstate\fP %c
.\"O One character from the string "RSDZTW" where R is running, S is
.\"O sleeping in an interruptible wait, D is waiting in uninterruptible
.\"O disk sleep, Z is zombie, T is traced or stopped (on a signal),
.\"O and W is paging.
"RSDZTW" のどれか 1 文字。
R は実行中 (running)、
S は割り込み可能な休眠状態 (sleeping in an interruptible wait)、
D は割り込み不可能なディスクスリープの待機状態
(waiting in uninterruptible disk sleep)、
Z はゾンビ状態 (zombie)、
T はトレースされている (traced) か
(シグナルにより) 停止している状態 (stopped)、
W はページング中 (paging) を表している。
.TP
\fIppid\fP %d
.\"O The PID of the parent.
親プロセスの PID。
.TP
\fIpgrp\fP %d
.\"O The process group ID of the process.
プロセスのプロセスグループ ID。
.TP
\fIsession\fP %d
.\"O The session ID of the process.
プロセスのセッション ID。
.TP
\fItty_nr\fP %d
.\"O The controlling terminal of the process.
.\"O (The minor device number is contained in the combination of bits
.\"O 31 to 20 and 7 to 0;
.\"O the major device number is in bits 15 t0 8.)
プロセスの制御端末
(マイナー・デバイス番号はビット 31〜20 と 7〜0 にまたがって格納され、
メジャー・デバイス番号はビット 15〜8 に格納される)。
.TP
\fItpgid\fP %d
.\"O .\" This field and following, up to and including wchan added 0.99.1
.\" このフィールドから wchan までは 0.99.1 で追加された。
.\"O The ID of the foreground process group of the controlling
.\"O terminal of the process.
プロセスの制御端末のフォアグランド・プロセス・グループの ID。
.TP
.\"O \fIflags\fP %u (%lu before Linux 2.6.22)
\fIflags\fP %u (Linux 2.6.22 より前は %lu)
.\"O The kernel flags word of the process.
.\"O For bit meanings,
.\"O see the PF_* defines in
.\"O .IR <linux/sched.h> .
.\"O Details depend on the kernel version.
プロセスのカーネルフラグワード。
ビットの意味は、
.I <linux/sched.h>
で定義されている PF_* を参照すること。
詳細はカーネルのバージョンに依存する。
.TP
\fIminflt\fP %lu
.\"O The number of minor faults the process has made which have not
.\"O required loading a memory page from disk.
プロセスが引き起こしたマイナーフォールト (minor fault、ディスクから
メモリページへのロードを必要としないフォールト) の回数。
.TP
.\" field 11
\fIcminflt\fP %lu
.\"O The number of minor faults that the process's
.\"O waited-for children have made.
(そのプロセスが終了を待っている)
子プロセスが引き起こしたマイナーフォールトの回数。
.TP
\fImajflt\fP %lu
.\"O The number of major faults the process has made which have
.\"O required loading a memory page from disk.
プロセスが引き起こしたメジャーフォールト (major fault、ディスクから
メモリページへのロードを必要とするフォールト) の回数。
.TP
\fIcmajflt\fP %lu
.\"O The number of major faults that the process's
.\"O waited-for children have made.
(そのプロセスが終了を待っている)
子プロセスが引き起こしたメジャーフォールトの回数。
.TP
\fIutime\fP %lu
.\"O Amount of time that this process has been scheduled in user mode,
.\"O measured in clock ticks (divide by
.\"O .IR sysconf(_SC_CLK_TCK) .
.\"O This includes guest time, \fIguest_time\fP
.\"O (time spent running a virtual CPU, see below),
.\"O so that applications that are not aware of the guest time field
.\"O do not lose that time from their calculations.
このプロセスがユーザーモードでスケジューリングされた時間の合計。
clock tick 単位で計測される
.RI ( sysconf(_SC_CLK_TCK)
で割った値が表示される)。
この値にはゲスト時間 \fIguest_time\fP (仮想 CPU の実行に消費された時間)
も含まれる。これは、ゲスト時間のフィールドを認識しないアプリケーション
において、ゲスト時間分を計算に入れ損ねないようにするためである。
.TP
\fIstime\fP %lu
.\"O Amount of time that this process has been scheduled in kernel mode,
.\"O measured in clock ticks (divide by
.\"O .IR sysconf(_SC_CLK_TCK) .
プロセスのカーネルモードでの実行時間 (単位 jiffies)。
このプロセスがカーネルモードでスケジューリングされた時間の合計。
clock tick 単位で計測される
.RI ( sysconf(_SC_CLK_TCK)
で割った値が表示される)。
.TP
\fIcutime\fP %ld
.\"O Amount of time that this process's
.\"O waited-for children have been scheduled in user mode,
.\"O measured in clock ticks (divide by
.\"O .IR sysconf(_SC_CLK_TCK) .
.\"O (See also
.\"O .BR times (2).)
.\"O This includes guest time, \fIcguest_time\fP
.\"O (time spent running a virtual CPU, see below).
.\"O motoki: waited-for children の訳に自信なし。
このプロセスの子プロセスで、終了待ち (waited-for) のプロセスが、
ユーザモードでスケジューリングされた時間の合計。
clock tick 単位で計測される
.RI ( sysconf(_SC_CLK_TCK)
で割った値が表示される)。
.RB ( times (2)
も参照すること。)
この値にはゲスト時間 \fIcguest_time\fP
(仮想 CPU を実行するのに消費した時間、下記参照) も含まれる。
.TP
\fIcstime\fP %ld
.\"O Amount of time that this process's
.\"O waited-for children have been scheduled in kernel mode,
.\"O measured in clock ticks (divide by
.\"O .IR sysconf(_SC_CLK_TCK) .
.\"O motoki: waited-for children の訳に自信なし。
このプロセスの子プロセスで、終了待ち (waited-for) のプロセスが、
カーネルモードでスケジューリングされた時間の合計。
clock tick 単位で計測される
.RI ( sysconf(_SC_CLK_TCK)
で割った値が表示される)。
.TP
\fIpriority\fP %ld
.\"O (Explanation for Linux 2.6)
(Linux 2.6 の場合の説明)
.\"O For processes running a real-time scheduling policy
.\"O .RI ( policy
.\"O below; see
.\"O .BR sched_setscheduler (2)),
.\"O this is the negated scheduling priority, minus one;
.\"O that is, a number in the range \-2 to \-100,
.\"O corresponding to real-time priorities 1 to 99.
リアルタイム・スケジューリングポリシー
(下記の
.I policy ;
.BR sched_setscheduler (2)
参照) で動作しているプロセスでは、
この値はスケジューリング優先度を反転した値 (スケジューリング優先度を
マイナスにした値) となる。値は \-2 から \-100 までの範囲の数値で、
それぞれリアルタイム優先度の 1 から 9 に対応する。
.\"O For processes running under a non-real-time scheduling policy,
.\"O this is the raw nice value
.\"O .RB ( setpriority (2))
.\"O as represented in the kernel.
.\"O The kernel stores nice values as numbers
.\"O in the range 0 (high) to 39 (low),
.\"O corresponding to the user-visible nice range of \-20 to 19.
リアルタイム以外のスケジューリングポリシーで動作しているプロセスでは、
この値はカーネル内で管理されている nice 値そのもの
.RB ( setpriority (2))
となる。
カーネルは nice 値を 0 (高) から 39 (低) の範囲の値として保持しており、
それぞれユーザに見える nice 値の \-20 から 19 に対応する。

.\"O Before Linux 2.6, this was a scaled value based on
.\"O the scheduler weighting given to this process.
Linux 2.6 より前では、このプロセスに割り当てられたスケジューリング
重みを変換した値が表示されていた。
.\" And back in kernel 1.2 days things were different again.
.TP
\fInice\fP %ld
.\"O The nice value (see
.\"O .BR setpriority (2)),
.\"O a value in the range 19 (low priority) to \-20 (high priority).
nice 値
.RB ( setpriority (2)
参照)。
19 (最低優先) から \-20 (最高優先) の範囲の値である。
.\" Back in kernel 1.2 days things were different.
.TP
.\" .TP
.\" \fIcounter\fP %ld
.\"O .\" The current maximum size in jiffies of the process's next timeslice,
.\"O .\" or what is currently left of its current timeslice, if it is the
.\"O .\" currently running process.
.\" このプロセスが現在実行中である場合、
.\" 次のタイムスライスにおける現時点でのプロセスの最大使用時間 (単位 jiffies)、
.\" または現在のタイムスライスにおける残り時間を表す。
.\" .TP
.\" \fItimeout\fP %u
.\"O .\" The time in jiffies of the process's next timeout.
.\" プロセスの次のタイムアウト時間(単位 jiffies)。
.\"O .\" timeout was removed sometime around 2.1/2.2
\fInum_threads\fP %ld
.\"O Number of threads in this process (since Linux 2.6).
このプロセスのスレッド数 (Linux 2.6 以降)。
.\"O Before kernel 2.6, this field was hard coded to 0 as a placeholder
.\"O for an earlier removed field.
カーネル 2.6 より前では、このフィールドは削除されたフィールドの
場所埋めとして 0 にハードコードされていた。
.TP
.\" field 21
\fIitrealvalue\fP %ld
.\"O The time in jiffies before the next
.\"O .B SIGALRM
.\"O is sent to the process due to an interval timer.
.\"O Since kernel 2.6.17, this field is no longer maintained,
.\"O and is hard coded as 0.
インターバルタイマによって、次に
.B SIGALRM
がプロセスへ送られるまでの時間 (単位 jiffies)。
カーネル 2.6.17 以降では、このフィールドはメンテナンスされなくなり、
0 にハードコードされている。
.TP
.\"O \fIstarttime\fP %llu (was %lu before Linux 2.6)
\fIstarttime\fP %llu (Linux 2.6 より前は %lu)
.\"O The time in jiffies the process started after system boot.
プロセスの起動時刻。システムが起動した時刻が起点 (単位 jiffies)。
.TP
\fIvsize\fP %lu
.\"O Virtual memory size in bytes.
仮想メモリのサイズ。単位はバイト。
.TP
\fIrss\fP %ld
.\"O Resident Set Size: number of pages the process has in real memory.
.\"O This is just the pages which
.\"O count towards text, data, or stack space.
.\"O This does not include pages
.\"O which have not been demand-loaded in, or which are swapped out.
Resident Set Size。プロセスが持っている実メモリ上のページ数。
これはちょうどテキスト、データ、スタック空間に使われているページ数である。
デマンドロードされていないページや
スワップアウトされたページの数は含んでいない。
.TP
\fIrsslim\fP %lu
.\"O Current soft limit in bytes on the rss of the process;
.\"O see the description of
.\"O .B RLIMIT_RSS
.\"O in
.\"O .BR getpriority (2).
このプロセスの rss の現在のソフト・リミット (バイト単位)。
.BR getpriority (2)
の
.B RLIMIT_RSS
の説明を参照。
.TP
\fIstartcode\fP %lu
.\"O The address above which program text can run.
プログラムテキストが実行可能であるような領域の先頭アドレス。
.TP
\fIendcode\fP %lu
.\"O The address below which program text can run.
プログラムテキストが実行可能であるような領域の末尾アドレス。
.TP
\fIstartstack\fP %lu
.\"O The address of the start (i.e., bottom) of the stack.
スタックの開始アドレス (すなわち、スタックの底)。
.TP
\fIkstkesp\fP %lu
.\"O The current value of ESP (stack pointer), as found in the
.\"O kernel stack page for the process.
現在の ESP (スタックポインタ) の値。
プロセスのカーネルスタックページにある。
.TP
\fIkstkeip\fP %lu
.\"O The current EIP (instruction pointer).
現在の EIP (インストラクションポインタ) の値。
.TP
.\" field 31
\fIsignal\fP %lu
.\"O The bitmap of pending signals, displayed as a decimal number.
.\"O Obsolete, because it does not provide information on real-time signals; use
.\"O .I /proc/[pid]/status
.\"O instead.
処理待ちのシグナルのビットマップ。
10 進数で表示される。
このフィールドは廃止予定である。
リアルタイム・シグナルに関する情報は表示されないからである。
代わりに
.I /proc/[pid]/status
を使うこと。
.TP
\fIblocked\fP %lu
.\"O The bitmap of blocked signals, displayed as a decimal number.
.\"O Obsolete, because it does not provide information on real-time signals; use
.\"O .I /proc/[pid]/status
.\"O instead.
ブロックされた (blocked) シグナルのビットマップ。
10 進数で表示される。
このフィールドは廃止予定である。
リアルタイム・シグナルに関する情報は表示されないからである。
代わりに
.I /proc/[pid]/status
を使うこと。
.TP
\fIsigignore\fP %lu
.\"O The bitmap of ignored signals, displayed as a decimal number.
.\"O Obsolete, because it does not provide information on real-time signals; use
.\"O .I /proc/[pid]/status
.\"O instead.
無視された (ignored) シグナルのビットマップ。
10 進数で表示される。
このフィールドは廃止予定である。
リアルタイム・シグナルに関する情報は表示されないからである。
代わりに
.I /proc/[pid]/status
を使うこと。
.TP
\fIsigcatch\fP %lu
.\"O The bitmap of caught signals, displayed as a decimal number.
.\"O Obsolete, because it does not provide information on real-time signals; use
.\"O .I /proc/[pid]/status
.\"O instead.
捕捉された (caught) シグナルのビットマップ。
10 進数で表示される。
このフィールドは廃止予定である。
リアルタイム・シグナルに関する情報は表示されないからである。
代わりに
.I /proc/[pid]/status
を使うこと。
.TP
\fIwchan\fP %lu
.\"O This is the "channel" in which the process is waiting.
.\"O It is the
.\"O address of a system call, and can be looked up in a namelist if you
.\"O need a textual name.
.\"O (If you have an up-to-date
.\"O .IR /etc/psdatabase ,
.\"O then
.\"O try \fIps \-l\fP to see the WCHAN field in action.)
プロセスが待っている「チャネル」。
これはシステムコールのアドレスであり、文字名が必要ならば
(アドレスとシステムコール名との) 対応表から見つけられる
(もし
.I /etc/psdatabase
[訳注: このファイル名はパッケージによる] を更新しているならば、
\fIps \-l\fP して WCHAN フィールドを見よ)。
.TP
\fInswap\fP %lu
.\" nswap was added in 2.0
.\"O Number of pages swapped (not maintained).
スワップされたページ数 (メンテナンスされていない)。
.TP
\fIcnswap\fP %lu
.\" cnswap was added in 2.0
.\"O Cumulative \fInswap\fP for child processes (not maintained).
子プロセスの \fInswap\fP の累計 (メンテナンスされていない)。
.TP
.\"O \fIexit_signal\fP %d (since Linux 2.1.22)
\fIexit_signal\fP %d (Linux 2.1.22 以降)
.\"O Signal to be sent to parent when we die.
プロセスが死んだときに親プロセスに送られるシグナル。
.TP
.\"O \fIprocessor\fP %d (since Linux 2.2.8)
\fIprocessor\fP %d (Linux 2.2.8 以降)
.\"O CPU number last executed on.
このプロセスを最後に実行した CPU の番号。
.TP
.\"O \fIrt_priority\fP %u (since Linux 2.5.19; was %lu before Linux 2.6.22)
\fIrt_priority\fP %u (Linux 2.5.19 以降; Linux 2.6.22 より前は %lu)
.\"O Real-time scheduling priority, a number in the range 1 to 99 for
.\"O processes scheduled under a real-time policy,
.\"O or 0, for non-real-time processes (see
.\"O .BR sched_setscheduler (2)).
リアルタイム・スケジューリングの優先度。
リアルタイム・ポリシーの元でスケジューリングされるプロセスでは
1 から 99 の範囲の値となり、
リアルタイム以外のスケジューリングポリシーのプロセスでは 0 となる
.RB ( sched_setscheduler (2)
参照)。
.TP
.\" field 41
.\"O \fIpolicy\fP %u (since Linux 2.5.19; was %lu before Linux 2.6.22)
\fIpolicy\fP %u (Linux 2.5.19 以降; Linux 2.6.22 より前は %lu)
.\"O Scheduling policy (see
.\"O .BR sched_setscheduler (2)).
.\"O Decode using the SCHED_* constants in
.\"O .IR linux/sched.h .
スケジューリング・ポリシー
.RB ( sched_setscheduler (2)
参照)。
値は、
.I linux/sched.h
の SCHED_* 定数を使ってデコードすればよい。
.TP
.\"O \fIdelayacct_blkio_ticks\fP %llu (since Linux 2.6.18)
\fIdelayacct_blkio_ticks\fP %llu (Linux 2.6.18 以降)
.\"O Aggregated block I/O delays, measured in clock ticks (centiseconds).
(clock tick (100分の1秒) 単位での) ブロック I/O の総遅延量。
.TP
.\"O \fIguest_time\fP %lu (since Linux 2.6.24)
\fIguest_time\fP %lu (Linux 2.6.24 以降)
.\"O Guest time of the process (time spent running a virtual CPU
.\"O for a guest operating system), measured in clock ticks (divide by
.\"O .IR sysconf(_SC_CLK_TCK) .
プロセスのゲスト時間 (ゲスト OS の仮想 CPU を実行するのに消費された時間)。
clock tick 単位で計測される
.RI ( sysconf(_SC_CLK_TCK)
で割った値が表示される)。
.TP
.\"O \fIcguest_time\fP %ld (since Linux 2.6.24)
\fIcguest_time\fP %ld (Linux 2.6.24 以降)
.\"O Guest time of the process's children, measured in clock ticks (divide by
.\"O .IR sysconf(_SC_CLK_TCK) .
プロセスの子プロセスのゲスト時間。
clock tick 単位で計測される
.RI ( sysconf(_SC_CLK_TCK)
で割った値が表示される)。
.RE
.TP
.I /proc/[pid]/statm
.\"O Provides information about memory usage, measured in pages.
(ページ単位で計測した) メモリ使用量についての情報を提供する。
.\"O The columns are:
各列は以下の通りである。
.in +4n
.nf

.\"O size       total program size
.\"O            (same as VmSize in \fI/proc/[pid]/status\fP)
.\"O resident   resident set size
.\"O            (same as VmRSS in \fI/proc/[pid]/status\fP)
.\"O share      shared pages (from shared mappings)
.\"O text       text (code)
.\"O .\" (not including libs; broken, includes data segment)
.\"O lib        library (unused in Linux 2.6)
.\"O data       data + stack
.\"O .\" (including libs; broken, includes library text)
.\"O dt         dirty pages (unused in Linux 2.6)
size       プログラムサイズの総計
           (\fI/proc/[pid]/status\fP の VmSize と同じ)
resident   実メモリ上に存在するページ
           (\fI/proc/[pid]/status\fP の VmRSS と同じ)
share      共有ページ (共有マッピングされているページ)
text       テキスト (コード)
.\" (libs は含まれない; おかしなことに、data セグメントは含まれる)
lib        ライブラリ (Linux 2.6 では未使用)
data       データ + スタック
.\" (libs を含む; おかしなことに、library text も含まれる)
dt         ダーティページ (Linux 2.6 では未使用)
.fi
.in
.TP
.I /proc/[pid]/status
.\"O Provides much of the information in
.\"O .I /proc/[pid]/stat
.\"O and
.\"O .I /proc/[pid]/statm
.\"O in a format that's easier for humans to parse.
.I /proc/[pid]/stat
と
.I /proc/[pid]/statm
にある多くの情報を、人間が解析しやすい形式で提供する。
.\"O Here's an example:
以下に例を示す。
.in +4n
.nf

.RB "$" " cat /proc/$$/status"
Name:   bash
State:  S (sleeping)
Tgid:   3515
Pid:    3515
PPid:   3452
TracerPid:      0
Uid:    1000    1000    1000    1000
Gid:    100     100     100     100
FDSize: 256
Groups: 16 33 100
VmPeak:     9136 kB
VmSize:     7896 kB
VmLck:         0 kB
VmHWM:      7572 kB
VmRSS:      6316 kB
VmData:     5224 kB
VmStk:        88 kB
VmExe:       572 kB
VmLib:      1708 kB
VmPTE:        20 kB
Threads:        1
SigQ:   0/3067
SigPnd: 0000000000000000
ShdPnd: 0000000000000000
SigBlk: 0000000000010000
SigIgn: 0000000000384004
SigCgt: 000000004b813efb
CapInh: 0000000000000000
CapPrm: 0000000000000000
CapEff: 0000000000000000
CapBnd: ffffffffffffffff
Cpus_allowed:   00000001
Cpus_allowed_list:      0
Mems_allowed:   1
Mems_allowed_list:      0
voluntary_ctxt_switches:        150
nonvoluntary_ctxt_switches:     545
.fi
.in
.IP
.\"O The fields are as follows:
フィールドの詳細は以下の通りである。
.RS
.IP * 2
.IR Name :
.\"O Command run by this process.
このプロセスにより実行されたコマンド。
.IP *
.IR State :
.\"O Current state of the process.  One of
.\"O "R (running)",
.\"O "S (sleeping)",
.\"O "D (disk sleep)",
.\"O "T (stopped)",
.\"O "T (tracing stop)",
.\"O "Z (zombie)",
.\"O or
.\"O "X (dead)".
プロセスの現在の状態。
"R (running; 実行中)",
"S (sleeping; 休眠状態)",
"D (disk sleep; ディスク待ちの休眠状態)",
"T (stopped; 停止状態)",
"T (tracing stop; トレースによる停止)",
"Z (zombie; ゾンビ状態)",
"X (dead; 死亡)"
のいずれかである。
.IP *
.IR Tgid :
.\"O Thread group ID (i.e., Process ID).
スレッドグループ ID (すなわち、プロセス ID)。
.IP *
.IR Pid :
.\"O Thread ID (see
.\"O .BR gettid (2)).
スレッド ID
.RB ( gettid (2)
参照)。
.IP *
.IR TracerPid :
.\"O PID of process tracing this process (0 if not being traced).
このプロセスをトレースしているプロセスの PID
(トレースされていない場合は 0)。
.IP *
.IR Uid ", " Gid :
.\"O Real, effective, saved set, and file system UIDs (GIDs).
実 UID/GID、実効 UID/GID、保存 set-UID/GID、ファイルシステム UID/GID。
.IP *
.IR FDSize :
.\"O Number of file descriptor slots currently allocated.
現在割り当てられているファイルディスクリプタのスロット数。
.IP *
.IR Groups :
.\"O Supplementary group list.
補助グループのリスト。
.IP *
.IR VmPeak :
.\"O Peak virtual memory size.
仮想メモリサイズのピーク値。
.IP *
.IR VmSize :
.\"O Virtual memory size.
仮想メモリサイズ。
.IP *
.IR VmLck :
.\"O Locked memory size (see
.\"O .BR mlock (3)).
ロックされているメモリサイズ
.RB ( mlock (3)
参照)。
.IP *
.IR VmHWM :
.\"O Peak resident set size ("high water mark").
実メモリ上に存在するページサイズ (resident set size)
のピーク値 ("high water mark")。
.IP *
.IR VmRSS :
.\"O Resident set size.
実メモリ上に存在するページサイズ。
.IP *
.IR VmData ", " VmStk ", " VmExe :
.\"O Size of data, stack, and text segments.
データ、スタック、テキストセグメントのサイズ。
.IP *
.IR VmLib :
.\"O Shared library code size.
共有ライブラリ・コードのサイズ。
.IP *
.IR VmPTE :
.\"O Page table entries size (since Linux 2.6.10).
ページ・テーブル・エントリのサイズ (Linux 2.6.10 以降)。
.IP *
.IR Threads :
.\"O Number of threads in process containing this thread.
このスレッドが属するプロセスのスレッド数。
.IP *
.IR SigPnd ", " ShdPnd :
.\"O Number of signals pending for thread and for process as a whole (see
.\"O .BR pthreads (7)
.\"O and
.\"O .BR signal (7)).
スレッド宛およびプロセス全体宛の処理待ちシグナルの数
.RB ( pthreads (7),
.BR signal (7)
参照)。
.IP *
.IR SigBlk ", " SigIgn ", " SigCgt :
.\"O Masks indicating signals being blocked, ignored, and caught (see
.\"O .BR signal (7)).
ブロックされるシグナル、無視されるシグナル、捕捉待ちのシグナルを
示すマスク値
.RB ( signal (7))。
.IP *
.IR CapInh ", " CapPrm ", " CapEff :
.\"O Masks of capabilities enabled in inheritable, permitted, and effective sets
.\"O (see
.\"O .BR capabilities (7)).
継承可能 (inheritable)、許可 (permitted)、実効 (effective)
の各ケーパビリティセットで有効になっているケーパビリティのマスク値
.RB ( capabilities (7)
参照)。
.IP *
.IR CapBnd :
.\"O Capability Bounding set
.\"O (since kernel 2.6.26, see
.\"O .BR capabilities (7)).
ケーパビリティ・バウンディングセット
(カーネル 2.6.26 以降、
.BR capabilities (7)
参照)。
.IP *
.IR Cpus_allowed :
.\"O Mask of CPUs on which this process may run
.\"O (since Linux 2.6.24, see
.\"O .BR cpuset (7)).
このプロセスが実行を許可されている CPU のマスク値
(Linux 2.6.24 以降、
.BR cpuset (7)
参照)。
.IP *
.IR Cpus_allowed_list :
.\"O Same as previous, but in "list format"
.\"O (since Linux 2.6.26, see
.\"O .BR cpuset (7)).
前項と同じだが、「リスト形式」での表示
(Linux 2.6.26 以降、
.BR cpuset (7)
参照)。
.IP *
.IR Mems_allowed :
.\"O Mask of memory nodes allowed to this process
.\"O (since Linux 2.6.24, see
.\"O .BR cpuset (7)).
このプロセスが使用できるメモリノードのマスク値
(Linux 2.6.24 以降、
.BR cpuset (7)
参照)。
.IP *
.IR Mems_allowed_list :
.\"O Same as previous, but in "list format"
.\"O (since Linux 2.6.26, see
.\"O .BR cpuset (7)).
前項と同じだが、「リスト形式」での表示
(Linux 2.6.26 以降、
.BR cpuset (7)
参照)。
.IP *
.IR voluntary_context_switches ", " nonvoluntary_context_switches :
.\"O Number of voluntary and involuntary context switches (since Linux 2.6.23).
自発的/非自発的なコンテキストスイッチの回数
(Linux 2.6.23 以降)。
.RE
.TP
.\"O .IR /proc/[pid]/task " (since Linux 2.6.0-test6)"
.IR /proc/[pid]/task " (Linux 2.6.0-test6 以降)"
.\"O This is a directory that contains one subdirectory
.\"O for each thread in the process.
このディレクトリには、そのプロセスのスレッド情報を含む
サブディレクトリが 1 スレッドにつき 1 つ置かれる。
.\"O The name of each subdirectory is the numerical thread ID
.\"O .RI ( [tid] )
.\"O of the thread (see
.\"O .BR gettid (2)).
各サブディレクトリの名前はスレッドのスレッド ID
.RI ( [tid] )
を示す数字である
.BR ( gettid (2)
を参照)。
.\"O Within each of these subdirectories, there is a set of
.\"O files with the same names and contents as under the
.\"O .I /proc/[pid]
.\"O directories.
これらの各サブディレクトリには、
.I /proc/[pid]
ディレクトリ以下と同じ名前と内容のファイル群がある。
.\"O For attributes that are shared by all threads, the contents for
.\"O each of the files under the
.\"O .I task/[tid]
.\"O subdirectories will be the same as in the corresponding
.\"O file in the parent
.\"O .I /proc/[pid]
.\"O directory
.\"O (e.g., in a multithreaded process, all of the
.\"O .I task/[tid]/cwd
.\"O files will have the same value as the
.\"O .I /proc/[pid]/cwd
.\"O file in the parent directory, since all of the threads in a process
.\"O share a working directory).
すべてのスレッドで共有される属性の場合、
.I task/[tid]
サブディレクトリ以下の各ファイルの内容は
親ディレクトリ
.I /proc/[pid]
の対応するファイルと同じになることだろう
(例えば、マルチスレッド・プロセスではファイル
.I task/[tid]/cwd
はいずれも親ディレクトリ内の
.I /proc/[pid]/cwd
と同じ値を持つことになる。なぜなら、一つのプロセスに属すすべての
スレッドは作業ディレクトリを共有するからである)。
.\"O For attributes that are distinct for each thread,
.\"O the corresponding files under
.\"O .I task/[tid]
.\"O may have different values (e.g., various fields in each of the
.\"O .I task/[tid]/status
.\"O files may be different for each thread).
スレッド毎に独立な属性の場合、
.I task/[tid]
サブディレクトリ以下の各ファイルは異なる値を持つことがある
(例えば、ファイル
.I task/[tid]/status
はスレッド毎に異なる値を持つ可能性がある)。

.\"O .\" The following was still true as at kernel 2.6.13
.\" 以下の内容は カーネル 2.6.13 ではまだ正しい。
.\"O In a multithreaded process, the contents of the
.\"O .I /proc/[pid]/task
.\"O directory are not available if the main thread has already terminated
.\"O (typically by calling
.\"O .BR pthread_exit (3)).
マルチスレッドプロセスでは、メインスレッドがすでに終了している場合、
.I /proc/[pid]/task
ディレクトリの内容は参照できない
(スレッドの終了は通常
.BR pthread_exit (3)
を呼び出しにより行われる)。
.TP
.I /proc/apm
.\"O Advanced power management version and battery information when
.\"O .B CONFIG_APM
.\"O is defined at kernel compilation time.
Advanced Power Management のバージョンとバッテリ情報。
カーネルのコンパイル時に
.B CONFIG_APM
を定義したときに存在する。
.TP
.I /proc/bus
.\"O Contains subdirectories for installed busses.
インストールされている各バス用にサブディレクトリがある。
.TP
.I /proc/bus/pccard
.\"O Subdirectory for PCMCIA devices when
.\"O .B CONFIG_PCMCIA
.\"O is set at kernel compilation time.
PCMCIA デバイスの情報が書かれるサブディレクトリ。
カーネルのコンパイル時に
.B CONFIG_PCMCIA
を定義したときに存在する。
.TP
.I /proc/bus/pccard/drivers
.TP
.I /proc/bus/pci
.\"O Contains various bus subdirectories and pseudo-files containing
.\"O information about PCI busses, installed devices, and device
.\"O drivers.
.\"O Some of these files are not ASCII.
いくつかのサブディレクトリがあり、
PCI バス・インストールされているデバイス・
デバイスドライバの情報が書かれた仮想ファイルがある。
これらのファイルのうちいくつかは ASCII フォーマットではない。
.TP
.I /proc/bus/pci/devices
.\"O Information about PCI devices.
.\"O They may be accessed through
.\"O .BR lspci (8)
.\"O and
.\"O .BR setpci (8).
PCI デバイスの情報。
.BR lspci (8)
や
.BR setpci (8)
でアクセスすることができる。
.TP
.I /proc/cmdline
.\"O Arguments passed to the Linux kernel at boot time.
.\"O Often done via a boot manager such as
.\"O .BR lilo (8)
.\"O or
.\"O .BR grub (8).
ブート時に Linux カーネルに渡された引き数。
引き数の受け渡しは、たいてい
.BR lilo (8)
や
.BR grub (8)
といったブートマネージャを使って行われる。
.TP
.\"O .IR /proc/config.gz " (since Linux 2.6)"
.IR /proc/config.gz " (Linux 2.6 以降)"
.\"O This file exposes the configuration options that were used
.\"O to build the currently running kernel,
.\"O in the same format as they would be shown in the
.\"O .I .config
.\"O file that resulted when configuring the kernel (using
.\"O .IR "make xconfig" ,
.\"O .IR "make config" ,
.\"O or similar).
このファイルでは、現在実行中のカーネルの構築時に使用された
設定オプションを参照できる。
書式は、
.RI ( "make xconfig" ,
.IR "make config"
などを使って) カーネルの設定を変更した際に生成される
.I .config
ファイルのものと同じである。
.\"O The file contents are compressed; view or search them using
.\"O .BR zcat (1),
.\"O .BR zgrep (1),
.\"O etc.
.\"O As long as no changes have been made to the following file,
.\"O the contents of
.\"O .I /proc/config.gz
.\"O are the same as those provided by :
ファイルの内容は圧縮されており、
.BR zcat (1),
.BR zgrep (1)
などを使うと、表示や検索ができる。
ファイルが変更されていない限り、
.I /proc/config.gz
の内容は次のコマンドで得られる内容と同じである。
.in +4n
.nf

cat /lib/modules/$(uname -r)/build/.config
.fi
.in
.IP
.\"O .I /proc/config.gz
.\"O is only provided if the kernel is configured with
.\"O .BR CONFIG_IKCONFIG_PROC .
.I /proc/config.gz
が提供されるのは、カーネルの設定で
.B CONFIG_IKCONFIG_PROC
が有効になっている場合のみである。
.TP
.I /proc/cpuinfo
.\"O This is a collection of CPU and system architecture dependent items,
.\"O for each supported architecture a different list.
.\"O Two common entries are \fIprocessor\fP which gives CPU number and
.\"O \fIbogomips\fP; a system constant that is calculated
.\"O during kernel initialization.
.\"O SMP machines have information for
.\"O each CPU.
このファイルは、CPU およびシステムアーキテクチャに依存する項目を
集めたもので、リストの内容はサポートされているアーキテクチャ毎に異なる。
2 つだけ共通の項目がある。
\fIprocessor\fP はプロセッサ番号で、
\fIbogomips\fP はカーネルの初期化時に計算されるシステム定数である。
SMP マシンでは各 CPU についての情報が書かれている。
.TP
.I /proc/devices
.\"O Text listing of major numbers and device groups.
.\"O This can be used by MAKEDEV scripts for consistency with the kernel.
メジャーデバイス番号とデバイスグループのテキスト形式のリスト。
MAKEDEV スクリプトはこのファイルを使って、
カーネルとの整合性を保つことができる。
.TP
.\"O .IR /proc/diskstats " (since Linux 2.5.69)"
.IR /proc/diskstats " (Linux 2.5.69 以降)"
.\"O This file contains disk I/O statistics for each disk device.
.\"O See the kernel source file
.\"O .I Documentation/iostats.txt
.\"O for further information.
このファイルには各ディスクデバイスのディスク I/O 統計情報が書かれている。
更に詳しい情報は、カーネルソースファイル
.I Documentation/iostats.txt
を参照すること。
.TP
.I /proc/dma
.\"O This is a list of the registered \fIISA\fP DMA (direct memory access)
.\"O channels in use.
登録されている \fIISA\fP DMA (direct memory access) チャネルのリスト。
.TP
.I /proc/driver
.\"O Empty subdirectory.
空のサブディレクトリ。
.TP
.I /proc/execdomains
.\"O List of the execution domains (ABI personalities).
実行ドメインのリスト (ABI パーソナリティ)。
.TP
.I /proc/fb
.\"O Frame buffer information when
.\"O .B CONFIG_FB
.\"O is defined during kernel compilation.
カーネルのコンパイル時に
.B CONFIG_FB
が定義されている場合、フレームバッファの情報が書かれる。
.TP
.I /proc/filesystems
.\"O A text listing of the file systems which are supported by the kernel,
.\"O namely file systems which were compiled into the kernel or whose kernel
.\"O modules are currently loaded.
.\"O (See also
.\"O .BR filesystems (5).)
.\"O If a file system is marked with "nodev",
.\"O this means that it does not require a block device to be mounted
.\"O (e.g., virtual file system, network file system).
カーネルが対応しているファイルシステムのテキスト形式のリスト。
カーネルに組み込まれてコンパイルされたファイルシステムと、
カーネルモジュールが現在ロードされているファイルシステムが列挙される
.RB ( filesystems (5)
参照)。
ファイルシステムに "nodev" という印が付いている場合、
そのファイルシステムがマウントするためのブロックデバイスを
必要としないことを意味する (例えば、
仮想ファイルシステム、ネットワークファイルシステムなど)。

.\"O Incidentally, this file may be used by
.\"O .BR mount (8)
.\"O when no file system is specified and it didn't manage to determine the
.\"O file system type.
.\"O Then file systems contained in this file are tried
.\"O (excepted those that are marked with "nodev").
ちなみに、マウント時にファイルシステムが指定されず、
どうやってもファイルシステムの種類を判定できなかった際に、
このファイルを
.BR mount (8)
が使用するかもしれない。
その場合、このファイルに含まれるファイルシステムが試される
(ただし、"nodev" の印がついたものは除く)。
.TP
.I /proc/fs
.\"O Empty subdirectory.
空のサブディレクトリ。
.TP
.I /proc/ide
.\"O This directory
.\"O exists on systems with the IDE bus.
.\"O There are directories for each IDE channel and attached device.
.\"O Files include:
このディレクトリは IDE バスをもつシステムに存在する。
各 IDE チャネルとそれに取り付けられている各デバイスごとにディレクトリがあり、
以下のファイルが含まれている。

.in +4n
.nf
.\"O cache              buffer size in KB
cache              バッファサイズ (KB)
.\"O capacity           number of sectors
capacity           セクタ数
.\"O driver             driver version
driver             ドライバのバージョン
.\"O geometry           physical and logical geometry
geometry           物理ジオメトリと論理ジオメトリ
.\"O identify           in hexadecimal
identify           16 進数表記
.\"O media              media type
media              メディアのタイプ
.\"O model              manufacturer's model number
model              製造者のモデル番号
.\"O settings           drive settings
settings           ドライブの設定
.\"O smart_thresholds   in hexadecimal
smart_thresholds   16 進数表記
.\"O smart_values       in hexadecimal
smart_values       16 進数表記
.fi
.in

.\"O The
.\"O .BR hdparm (8)
.\"O utility provides access to this information in a friendly format.
.BR hdparm (8)
ユーティリティは、分かりやすい形式で
この情報にアクセスするための手段を提供する。
.TP
.I /proc/interrupts
.\"O This is used to record the number of interrupts per CPU per IO device.
.\"O Since Linux 2.6.24,
.\"O for the i386 and x86_64 architectures, at least, this also includes
.\"O interrupts internal to the system (that is, not associated with a device
.\"O as such), such as NMI (nonmaskable interrupt), LOC (local timer interrupt),
.\"O and for SMP systems, TLB (TLB flush interrupt), RES (rescheduling
.\"O interrupt), CAL (remote function call interrupt), and possibly others.
.\"O Very easy to read formatting, done in ASCII.
IO デバイス毎の CPU 別の割り込み回数の記録に使われる。
Linux 2.6.24 以降、少なくとも i386 と x86_64 アーキテクチャでは、
(デバイスと関連がない) システム内部の割り込みについても記録される。
システム内部の割り込みには、NMI (nonmaskable interrupt),
LOC (local timer interrupt) や、SMP システムでは TLB (TLB flush interrupt),
RES (rescheduling interrupt), CAL (remote function call interrupt)
などがある。
簡単に読むことのできるフォーマットで、ASCII で表記されている。
.TP
.I /proc/iomem
.\"O I/O memory map in Linux 2.4.
Linux 2.4 における I/O メモリマップ。
.TP
.I /proc/ioports
.\"O This is a list of currently registered Input-Output port regions that
.\"O are in use.
現在登録され使われている I/O ポート領域のリスト。
.TP
.\"O .IR /proc/kallsyms " (since Linux 2.5.71)"
.IR /proc/kallsyms " (Linux 2.5.71 以降)"
.\"O This holds the kernel exported symbol definitions used by the
.\"O .BR modules (X)
.\"O tools to dynamically link and bind loadable modules.
カーネルの外部シンボル定義を保持する。
.BR modules (X)
関係のツールがローダブルモジュールを動的にリンクしたり
バインド (bind) するのに使われる。
.\"O In Linux 2.5.47 and earlier, a similar file with slightly different syntax
.\"O was named
.\"O .IR ksyms .
Linux 2.5.47 以前では、微妙に異なる書式の似たようなファイルが
.I ksyms
という名前であった。
.TP
.I /proc/kcore
.\"O This file represents the physical memory of the system and is stored
.\"O in the ELF core file format.
.\"O With this pseudo-file, and an unstripped
.\"O kernel
.\"O .RI ( /usr/src/linux/vmlinux )
.\"O binary, GDB can be used to
.\"O examine the current state of any kernel data structures.
このファイルはシステムの物理メモリを表現しており、
ELF コアファイル形式 (core file format) で保持されている。
この擬似ファイルと strip されていないカーネルのバイナリ
.RI ( /usr/src/linux/vmlinux )
[訳注: パッケージに依存する]) があれば、
GDB はカーネル内の任意のデータ構造の現在の状態を調べられる。

.\"O The total length of the file is the size of physical memory (RAM) plus
.\"O 4KB.
このファイルの大きさは物理メモリ (RAM) のサイズに 4KB を加えた値である。
.TP
.I /proc/kmsg
.\"O This file can be used instead of the
.\"O .BR syslog (2)
.\"O system call to read kernel messages.
.\"O A process must have superuser
.\"O privileges to read this file, and only one process should read this
.\"O file.
.\"O This file should not be read if a syslog process is running
.\"O which uses the
.\"O .BR syslog (2)
.\"O system call facility to log kernel messages.
このファイルは
.BR syslog (2)
システムコールでカーネルメッセージを読み出す代りに使える。
プロセスがこのファイルを読むためにはスーパーユーザー権限が必要であり、
ファイルを読み出すのは 1 つのプロセスのみに限るべきである。
カーネルメッセージを記録するために、
.BR syslog (2)
システムコールの機能を使う syslog プロセスが稼働している場合、
このファイルを読み出すべきではない。

.\"O Information in this file is retrieved with the
.\"O .BR dmesg (1)
.\"O program.
このファイルの中の情報は
.BR dmesg (1)
によって表示される。
.TP
.IR /proc/ksyms " (Linux 1.1.23-2.5.47)"
.\"O See
.\"O .IR /proc/kallsyms .
.I /proc/kallsyms
を参照。
.TP
.I /proc/loadavg
.\"O The first three fields in this file are load average figures
.\"O giving the number of jobs in the run queue (state R)
.\"O or waiting for disk I/O (state D) averaged over 1, 5, and 15 minutes.
.\"O They are the same as the load average numbers given by
.\"O .BR uptime (1)
.\"O and other programs.
このファイルの最初の 3 つのフィールドはロードアベレージの数値で、
1, 5, 15 分あたりの実行キュー内 (state R) または
ディスク I/O 待ち (state D) のジョブ数を与える。
これは
.BR uptime (1)
などのプログラムによって得られる値と同じである。
.\"O The fourth field consists of two numbers separated by a slash (/).
4 番目のフィールドはスラッシュ (/) で区切られた 2 つの数値から構成される。
.\"O The first of these is the number of currently executing kernel
.\"O scheduling entities (processes, threads);
.\"O this will be less than or equal to the number of CPUs.
この数値のうち最初のものは、現在実行されている
カーネルスケジュールエンティティ (プロセス、スレッド) の数である。
この数値は CPU の数以下になる。
.\"O The value after the slash is the number of kernel scheduling entities
.\"O that currently exist on the system.
スラッシュの後の数値は、現在システム上に存在する
カーネルスケジュールエンティティの数である。
.\"O The fifth field is the PID of the process that was most
.\"O recently created on the system.
5 番目のフィールドはシステム上に最も最近生成されたプロセスの PID である。
.TP
.I /proc/locks
.\"O This file shows current file locks
.\"O .RB ( flock "(2) and " fcntl (2))
.\"O and leases
.\"O .RB ( fcntl (2)).
このファイルは現在のファイルロック
.RB ( flock "(2) と " fcntl (2))
とリース
.RB ( fcntl (2))
を表示する。
.TP
.\"O .IR /proc/malloc " (only up to and including Linux 2.2)"
.IR /proc/malloc " (Linux 2.2 以前のみ)"
.\" It looks like this only ever did something back in 1.0 days
.\"O This file is only present if
.\"O .B CONFIG_DEBUG_MALLOC
.\"O was defined during compilation.
コンパイルのときに
.B CONFIGDEBUGMALLOC
が定義されているときのみ、このファイルは存在する。
.TP
.I /proc/meminfo
.\"O This file reports statistics about memory usage on the system.
.\"O It is used by
.\"O .BR free (1)
.\"O to report the amount of free and used memory (both physical and swap)
.\"O on the system as well as the shared memory and buffers used by the
.\"O kernel.
このファイルはシステム上のメモリ使用量に関する統計情報を表示する。
.BR free (1)
は、このファイルを参照し、
システムの未使用および使用中のメモリ量 (物理メモリとスワップ) と、
カーネルに使われている共有メモリとバッファの情報を報告する。
.TP
.I /proc/modules
.\"O A text list of the modules that have been loaded by the system.
現在システムにロードされているモジュールのテキスト形式のリスト。
.\"O See also
.\"O .BR lsmod (8).
.BR lsmod (8)
も参照。
.TP
.I /proc/mounts
.\"O Before kernel 2.4.19, this file was a list
.\"O of all the file systems currently mounted on the system.
.\"O With the introduction of per-process mount namespaces in
.\"O Linux 2.4.19, this file became a link to
.\"O .IR /proc/self/mounts ,
.\"O which lists the mount points of the process's own mount namespace.
.\"O The format of this file is documented in
.\"O .BR fstab (5).
カーネル 2.4.19 より前では、このファイルは現在システムにマウントされている
全てのファイルシステムのリストであった。
Linux 2.4.19 でプロセス単位のマウント名前空間が導入されたことに伴い、
このファイルは
.I /proc/self/mounts
へのリンクとなった。
.I /proc/self/mounts
はそのプロセス自身のマウント名前空間のマウントポイントのリストである。
このファイルのフォーマットは
.BR fstab (5)
に記述されている。
.TP
.I /proc/mtrr
.\"O Memory Type Range Registers.
.\"O See the kernel source file
.\"O .I Documentation/mtrr.txt
.\"O for details.
Memory Type Range Registers。
詳細は、カーネルソースファイル
.I Documentation/mtrr.txt
を参照すること。
.TP
.I /proc/net
.\"O various net pseudo-files, all of which give the status of some part of
.\"O the networking layer.
.\"O These files contain ASCII structures and are,
.\"O therefore, readable with
.\"O .BR cat (1).
.\"O However, the standard
.\"O .BR netstat (8)
.\"O suite provides much cleaner access to these files.
さまざまなネットワークについての擬似ファイルで、
それぞれがネットワーク層の各種の状態を与える。
これらのファイルの内容は ASCII 形式なので、
.BR cat (1)
で読み出せる。
とはいえ基本コマンドの
.BR netstat (8)
はこれらのファイルの内容のよりすっきりとした表示を提供する。
.TP
.I /proc/net/arp
.\"O This holds an ASCII readable dump of the kernel ARP table used for
.\"O address resolutions.
.\"O It will show both dynamically learned and preprogrammed ARP entries.
.\"O The format is:
アドレス解決に使われるカーネルの ARP テーブルの
ASCII 可読なダンプを保持している。
動的結合されたものと固定 (preprogrammed) の両方の
APP エントリを見ることができる。フォーマットは以下のとおり:

.nf
.ft CW
.in 8n
IP address     HW type   Flags     HW address          Mask   Device
192.168.0.50   0x1       0x2       00:50:BF:25:68:F3   *      eth0
192.168.0.250  0x1       0xc       00:00:00:00:00:00   *      eth0
.ft
.fi
.in

.\"O Here "IP address" is the IPv4 address of the machine and the "HW type"
.\"O is the hardware type of the address from RFC\ 826.
.\"O The flags are the internal
.\"O flags of the ARP structure (as defined in
.\"O .IR /usr/include/linux/if_arp.h )
.\"O and
.\"O the "HW address" is the data link layer mapping for that IP address if
.\"O it is known.
ここで IP address はマシンの IPv4 アドレス、
HW type はそのアドレスの RFC\ 826 で定められているハードウェアの形式、
Flags は ARP 構造体
.RI ( /usr/include/linux/if_arp.h
内で定義されている) の内部フラグ、
HW address はその IP アドレスにマップされているデータリンク層のアドレス
(もしわかっていれば) である。
.TP
.I /proc/net/dev
.\"O The dev pseudo-file contains network device status information.
.\"O This gives
.\"O the number of received and sent packets, the number of errors and
.\"O collisions
.\"O and other basic statistics.
.\"O These are used by the
.\"O .BR ifconfig (8)
.\"O program to report device status.
.\"O The format is:
擬似ファイル dev はネットワークデバイスの状態情報を含んでいる。
これは送受信したパケット数、エラーとコリジョン (collision) の回数、
その他の基本的な統計を与える。
これらは
.BR ifconfig (8)
がデバイスの状態を報告するのに使われる。
フォーマットは以下のとおり:

.nf
.ft CW
.in 1n
Inter-|   Receive                                                |  Transmit
 face |bytes    packets errs drop fifo frame compressed multicast|bytes    packets errs drop fifo colls carrier compressed
    lo: 2776770   11307    0    0    0     0          0         0  2776770   11307    0    0    0     0       0          0
  eth0: 1215645    2751    0    0    0     0          0         0  1782404    4324    0    0    0   427       0          0
  ppp0: 1622270    5552    1    0    0     0          0         0   354130    5669    0    0    0     0       0          0
  tap0:    7714      81    0    0    0     0          0         0     7714      81    0    0    0     0       0          0
.in
.ft
.fi
.\" .TP
.\" .I /proc/net/ipx
.\"O .\" No information.
.\" 情報なし。
.\" .TP
.\" .I /proc/net/ipx_route
.\"O .\" No information.
.\" 情報なし。
.TP
.I /proc/net/dev_mcast
.\"O Defined in
.\"O .IR /usr/src/linux/net/core/dev_mcast.c :
.I /usr/src/linux/net/core/dev_mcast.c
で定義されており、以下の形式である。
.nf
.in +5
indx interface_name  dmi_u dmi_g dmi_address
2    eth0            1     0     01005e000001
3    eth1            1     0     01005e000001
4    eth2            1     0     01005e000001
.in
.fi
.TP
.I /proc/net/igmp
.\"O Internet Group Management Protocol.
.\"O Defined in
.\"O .IR /usr/src/linux/net/core/igmp.c .
Internet Group Management Protocol (インターネットグループ管理プロトコル)。
.I /usr/src/linux/net/core/igmp.c
で定義されている。
.TP
.I /proc/net/rarp
.\"O This file uses the same format as the
.\"O .I arp
.\"O file and contains the current reverse mapping database used to provide
.\"O .BR rarp (8)
.\"O reverse address lookup services.
.\"O If RARP is not configured into the
.\"O kernel,
.\"O this file will not be present.
このファイルは
.I arp
と同じフォーマットで
逆アドレス解決サービス (reverse address lookup services)
.BR rarp (8)
に提供するために使われる現在の逆マップデータベースの内容を含んでいる。
RARP がカーネルコンフィグレーションに設定されていなければ、
このファイルは存在しない。
.TP
.I /proc/net/raw
.\"O Holds a dump of the RAW socket table.
.\"O Much of the information is not of
.\"O use
.\"O apart from debugging.
.\"O The "sl" value is the kernel hash slot for the
.\"O socket,
.\"O the "local_address" is the local address and protocol number pair.
.\"O \&"St" is
.\"O the internal status of the socket.
.\"O The "tx_queue" and "rx_queue" are the
.\"O outgoing and incoming data queue in terms of kernel memory usage.
.\"O The "tr", "tm\->when", and "rexmits" fields are not used by RAW.
.\"O The "uid"
.\"O field holds the effective UID of the creator of the socket.
RAW ソケットテーブルのダンプを保持している。
ほとんどの情報はデバッグ以外では使われない。
\&"sl" の値はソケットのカーネルハッシュスロット、
\&"local_address" はローカルアドレスとプロトコル番号のペア
[訳者追加: "rem_address" はリモートアドレスとプロトコル番号のペア]。
\&"st" はソケットの内部状態。
\&"tx_queue" と "rx_queue" はカーネルメモリを消費している
送信/受信データキューのサイズ。
\&"tr" と "tm\->when" と "rexmits" フィールドは RAW では使われていない。
\&"uid" フィールドはソケット生成者の実効 UID を保持している。
.\" .TP
.\" .I /proc/net/route
.\"O .\" No information, but looks similar to
.\"O .\" .BR route (8).
.\" 情報なし。
.\" .BR route (8)
.\" (の出力) のように見える。
.TP
.I /proc/net/snmp
.\"O This file holds the ASCII data needed for the IP, ICMP, TCP, and UDP
.\"O management
.\"O information bases for an SNMP agent.
このファイルは SNMP エージェントが必要とする
IP, ICMP, TCP, UDP 管理情報を ASCII データとして保持している。
.TP
.I /proc/net/tcp
.\"O Holds a dump of the TCP socket table.
.\"O Much of the information is not
.\"O of use apart from debugging.
.\"O The "sl" value is the kernel hash slot
.\"O for the socket, the "local_address" is the local address and port number pair.
.\"O The "rem_address" is the remote address and port number pair
.\"O (if connected).
.\"O \&"St" is the internal status of the socket.
.\"O The "tx_queue" and "rx_queue" are the
.\"O outgoing and incoming data queue in terms of kernel memory usage.
.\"O The "tr", "tm\->when", and "rexmits" fields hold internal information of
.\"O the kernel socket state and are only useful for debugging.
.\"O The "uid"
.\"O field holds the effective UID of the creator of the socket.
TCP ソケットテーブルのダンプを保持している。
大部分の情報はデバッグ以外には使われない。
sl はソケットのカーネルハッシュスロットの値、
\&"local_address" はローカルアドレスとポート番号のペアである。
(ソケットが接続している場合は)
\&"rem_address" はリモートアドレスとポート番号の対である。
\&"st" はソケットの内部状態である。
\&"tx_queue" と "rx_queue" はカーネルメモリを消費している
送信/受信データキューのサイズ。
\&"tr" と "tm\->when" と "rexmits" フィールドはソケット状態のカーネル
内部情報を保持しているが、これらはデバッグのときにしか役に立たない。
\&"uid" フィールドはソケット生成者の実効 UID を保持している。
.TP
.I /proc/net/udp
.\"O Holds a dump of the UDP socket table.
.\"O Much of the information is not of
.\"O use apart from debugging.
.\"O The "sl" value is the kernel hash slot for the
.\"O socket, the "local_address" is the local address and port number pair.
.\"O The "rem_address" is the remote address and port number pair
.\"O (if connected). "St" is the internal status of the socket.
.\"O The "tx_queue" and "rx_queue" are the outgoing and incoming data queue
.\"O in terms of kernel memory usage.
.\"O The "tr", "tm\->when", and "rexmits" fields
.\"O are not used by UDP.
.\"O The "uid"
.\"O field holds the effective UID of the creator of the socket.
.\"O The format is:
UDP ソケットテーブルのダンプを保持している。
大部分の情報はデバッグ以外には使われない。
sl はソケットのカーネルハッシュスロットの値、
"local_address" はローカルアドレスとポート番号のペアである。
(ソケットが接続している場合は)
"rem_address" はリモートアドレスとポート番号のペアである。
"st" はソケットの内部状態である。
"tx_queue" と "rx_queue" はカーネルメモリを消費している
送信/受信データキューのサイズ。
"tr" と "tm\->when" と "rexmits" フィールドは UDP では使われていない。
"uid" フィールドはソケット生成者の実効 UID を保持している。
フォーマットは以下のとおり:

.nf
.ft CW
.in 1n
sl  local_address rem_address   st tx_queue rx_queue tr rexmits  tm\->when uid
 1: 01642C89:0201 0C642C89:03FF 01 00000000:00000001 01:000071BA 00000000 0
 1: 00000000:0801 00000000:0000 0A 00000000:00000000 00:00000000 6F000100 0
 1: 00000000:0201 00000000:0000 0A 00000000:00000000 00:00000000 00000000 0
.in
.ft
.fi
.TP
.I /proc/net/unix
.\"O Lists the Unix domain sockets present within the system and their
.\"O status.
.\"O The format is:
Unix ドメインソケットのリスト。
フォーマットは以下のとおり:
.nf
.sp .5
.ft CW
Num RefCount Protocol Flags    Type St Path
 0: 00000002 00000000 00000000 0001 03
 1: 00000001 00000000 00010000 0001 01 /dev/printer
.ft
.sp .5
.fi

.\"O Here "Num" is the kernel table slot number, "RefCount" is the number
.\"O of users of the socket, "Protocol" is currently always 0, "Flags"
.\"O represent the internal kernel flags holding the status of the
.\"O socket.
.\"O Currently, type is always "1" (Unix domain datagram sockets are
.\"O not yet supported in the kernel).
.\"O \&"St" is the internal state of the
.\"O socket and Path is the bound path (if any) of the socket.
ここで、Num はカーネルのテーブルスロット数、
RefCount はソケットを使用しているユーザー数、
Protocol はいまのところいつも 0 で、Flags はソケットの状態を保持している
カーネル内部のフラグである。
Type はいまのところいつも 1
(UNIX ドメインのデータグラムソケットは、現在のカーネルではサポートされていない
[訳注: 2.0.34 ではサポートされているようだ])。
St はソケットの内部状態で、Path は (もしあれば) ソケットのパス名である。
.TP
.I /proc/partitions
.\"O Contains major and minor numbers of each partition as well as number
.\"O of blocks and partition name.
各パーティションのメジャー番号とマイナー番号が書かれている。
さらに、ブロック数とパーティション名も書かれている。
.TP
.I /proc/pci
.\"O This is a listing of all PCI devices found during kernel initialization
.\"O and their configuration.
カーネルの初期化時に見つかったすべての PCI デバイスのリストと
その設定。

.\"O This file has been deprecated in favor of a new
.\"O .I /proc
.\"O interface for PCI
.\"O .RI ( /proc/bus/pci ).
.\"O It became optional in Linux 2.2 (available with
.\"O .B CONFIG_PCI_OLD_PROC
.\"O set at kernel compilation).
.\"O It became once more nonoptionally enabled in Linux 2.4.
.\"O Next, it was deprecated in Linux 2.6 (still available with
.\"O .B CONFIG_PCI_LEGACY_PROC
.\"O set), and finally removed altogether since Linux 2.6.17.
このファイルは非推奨であり、新しい PCI 用の
.I /proc
インターフェイス
.RI ( /proc/bus/pci )
を使うこと。
このファイルは Linux 2.2 でオプションになった (カーネルのコンパイル時に
.B CONFIG_PCI_OLD_PROC
をセットすると利用可能であった)。
Linux 2.4 で再びオプションなしで有効に戻った。
さらに、Linux 2.6 で非推奨となり
.RB ( CONFIG_PCI_LEGACY_PROC
をセットするとまだ利用可能であった)、
最終的に Linux 2.6.17 以降で完全に削除された。
.\" FIXME /proc/sched_debug
.\" .TP
.\" .IR /proc/sched_debug " (since Linux 2.6.23)"
.\" See also /proc/[pid]/sched
.TP
.I /proc/scsi
.\"O A directory with the
.\"O .I scsi
.\"O mid-level pseudo-file and various SCSI low-level
.\"O driver directories,
.\"O which contain a file for each SCSI host in this system, all of
.\"O which give the status of some part of the SCSI IO subsystem.
.\"O These files contain ASCII structures and are, therefore, readable with
.\"O .BR cat (1).
.I scsi
中間レベル擬似ファイルといくつかの SCSI 低レベルドライバの
ディレクトリを含むディレクトリ。
これらのファイルは ASCII で表現されているので
.BR cat (1)
で読める。

.\"O You can also write to some of the files to reconfigure the subsystem or
.\"O switch certain features on or off.
いくつかのファイルは書き込み可能で、サブシステムの設定を変更したり、
特定の機能をオン/オフすることができる。
.TP
.I /proc/scsi/scsi
.\"O This is a listing of all SCSI devices known to the kernel.
.\"O The listing is similar to the one seen during bootup.
.\"O scsi currently supports only the \fIadd-single-device\fP command which
.\"O allows root to add a hotplugged device to the list of known devices.
カーネルが知っているすべての SCSI デバイスのリスト。
このリストは起動時に (コンソールで) 見られるものとほぼ同じである。
scsi は現在のところ \fIadd-single-device\fP コマンドのみをサポートしている。
これによりルート (root) は既知のデバイスリストへ活線挿抜 (hotplugged)
デバイスを加えることができる。

.\"O The command
.\"O .in +4n
.\"O .nf
.\"O 
.\"O echo \(aqscsi add-single-device 1 0 5 0\(aq > /proc/scsi/scsi
.\"O 
.\"O .fi
.\"O .in
.\"O will cause
.\"O host scsi1 to scan on SCSI channel 0 for a device on ID 5 LUN 0.
.\"O If there
.\"O is already a device known on this address or the address is invalid, an
.\"O error will be returned.
次のコマンドを実行すると、
.in +4n
.nf

echo \(aqscsi add-single-device 1 0 5 0\(aq > /proc/scsi/scsi
 
.fi
.in
ホストアダプタ scsi1 は SCSI チャネル 0 で
ID 5 LUN 0 のデバイスを探す。
もしこのアドレスに既知のデバイスがあるか、
不正なアドレスであったならばエラーが返る。
.TP
.I /proc/scsi/[drivername]
.\"O \fI[drivername]\fP can currently be NCR53c7xx, aha152x, aha1542, aha1740,
.\"O aic7xxx, buslogic, eata_dma, eata_pio, fdomain, in2000, pas16, qlogic,
.\"O scsi_debug, seagate, t128, u15-24f, ultrastore, or wd7000.
.\"O These directories show up for all drivers that registered at least one
.\"O SCSI HBA.
.\"O Every directory contains one file per registered host.
.\"O Every host-file is named after the number the host was assigned during
.\"O initialization.
いまのところ \fI[drivername]\fP は NCR53c7xx, aha152x, aha1542, aha1740,
aic7xxx, buslogic, eata_dma, eata_pio, fdomain, in2000, pas16, qlogic,
scsi_debug, seagate, t128, u15-24f, ultrastore, wd7000
のどれかである。
少なくとも 1 つの SCSI ホストバスアダプタ (HBA) に
ドライバが割り当てられていると、そのドライバに対応したディレクトリが現れる。
それぞれのディレクトリには、
登録されたホストアダプタに対応してファイルが作られる。
このファイルの名前は、システムの初期化の際に
ホストアダプタに割り当てられた番号になる。

.\"O Reading these files will usually show driver and host configuration,
.\"O statistics, etc.
これらのファイルを読めばドライバとホストアダプタの設定や
統計などを見ることができる。

.\"O Writing to these files allows different things on different hosts.
.\"O For example, with the \fIlatency\fP and \fInolatency\fP commands,
.\"O root can switch on and off command latency measurement code in the
.\"O eata_dma driver.
.\"O With the \fIlockup\fP and \fIunlock\fP commands,
.\"O root can control bus lockups simulated by the scsi_debug driver.
これらのファイルへの書き込みはホストアダプタごとに異なる動作を引き起こす。
たとえば \fIlatency\fP と \fInolatency\fP コマンドを用いると、
ルート (root、スーパーユーザー) は eata_dma ドライバの隠し測定コードの
オン/オフを切り替えることができる。
また \fI lockup\fP と \fIunlock\fP コマンドを用いると、ルートは
scsi_debug ドライバがシミュレートするバスロックアップ (bus lockup) を
制御することができる。
.TP
.I /proc/self
.\"O This directory refers to the process accessing the
.\"O .I /proc
.\"O file system,
.\"O and is identical to the
.\"O .I /proc
.\"O directory named by the process ID of the same process.
このディレクトリはプロセスに (プロセス自身の)
.I /proc
ファイルシステムへのアクセスを参照させる。
これは
.I /proc
内の (このプロセスの) プロセス ID が名前となっている
ディレクトリと全く同一である。
.TP
.I /proc/slabinfo
.\"O Information about kernel caches.
.\"O Since Linux 2.6.16 this file is only present if the
.\"O .B CONFIG_SLAB
.\"O kernel configuration option is enabled.
Linux 2.6.16 以降では、
カーネル設定オプション
.B CONFIG_SLAB
が有効の場合にのみ、このファイルは存在する。
.\"O The columns in
.\"O .I /proc/slabinfo
.\"O are:
カーネルキャッシュの情報。
.I /proc/slabinfo
のフィールドは以下のとおり。
.in +4n
.nf

cache-name
num-active-objs
total-objs
object-size
num-active-slabs
total-slabs
num-pages-per-slab
.fi
.in

.\"O See
.\"O .BR slabinfo (5)
.\"O for details.
詳細は
.BR slabinfo (5)
を参照すること。
.TP
.I /proc/stat
.\"O kernel/system statistics.
.\"O Varies with architecture.
.\"O Common
.\"O entries include:
カーネル/システムの統計。
アーキテクチャによって異なる。
共通エントリには以下のものが含まれる。
.RS
.TP
\fIcpu  3357 0 4313 1362393\fP
.\"O The amount of time, measured in units of
.\"O USER_HZ (1/100ths of a second on most architectures, use
.\"O .IR sysconf(_SC_CLK_TCK)
.\"O to obtain the right value),
.\"O .\" 1024 on Alpha and ia64
.\"O that the system spent in user mode,
.\"O user mode with low priority (nice), system mode, and the
.\"O idle task, respectively.
.\"O .\" FIXME Actually, the following info about the /proc/stat 'cpu' field
.\"O .\"       does not seem to be quite right (at least in 2.6.12)
.\"O The last value should be USER_HZ times the
.\"O second entry in the uptime pseudo-file.
ユーザーモード、
低い優先度 (nice) でのユーザーモード、
システムモード、
タスク待ち (idle task)、
でそれぞれシステムが消費した時間を
USER_HZ を単位として計測した積算値。
(ほとんどのアーキテクチャでは USER_HZ は 1/100 秒である。
正しい値は
.I sysconf(_SC_CLK_TCK)
を使って取得できる。)
.\" Alpha と ia64 では 1024 である。
.\" FIXME: 実際には、/proc/stat の 'cpu' フィールドについての以下の情報は
.\"        正しいとは言えないようである (少なくとも 2.6.12 では)。
最後の値 (タスク待ち) は疑似ファイル uptime の 2番目のエントリの値を
USER_HZ 倍したものである。

.\"O In Linux 2.6 this line includes three additional columns:
.\"O .I iowait
.\"O \- time waiting for I/O to complete (since 2.5.41);
.\"O .I irq
.\"O \- time servicing interrupts (since 2.6.0-test4);
.\"O .I softirq
.\"O \- time servicing softirqs (since 2.6.0-test4).
Linux 2.6 では、この行に 3つの欄が追加されている:
.I iowait
(I/O の完了を待っていた時間; 2.5.41 以降);
.I irq
(割り込み処理を行った時間; 2.6.0-test4 以降);
.I softirq
(ソフト割り込みの処理を行った時間; 2.6.0-test4 以降)。

.\"O Since Linux 2.6.11, there is an eighth column,
.\"O .I steal
.\"O \- stolen time, which is the time spent in other operating systems when
.\"O running in a virtualized environment
Linux 2.6.11 以降では、8 個目の欄として
.I steal
(盗まれた時間; stolen time) が存在する。
これは、仮想化環境での動作時に他のオペレーティングシステムにより
消費された時間である。

.\"O Since Linux 2.6.24, there is a ninth column,
.\"O .IR guest ,
.\"O which is the time spent running a virtual CPU for guest
.\"O operating systems under the control of the Linux kernel.
Linux 2.6.24 以降では、9 個目の欄として、
.I guest
がある。これは、
Linux カーネルの制御下のゲストオペレーティングシステムの仮想 CPU の
実行に消費された時間である。
.\" See Changelog entry for 5e84cfde51cf303d368fcb48f22059f37b3872de
.TP
\fIpage 5741 1808\fP
.\"O The number of pages the system paged in and the number that were paged
.\"O out (from disk).
システムが (ディスクから) ページイン/ページアウトしたページ数。
.TP
\fIswap 1 0\fP
.\"O The number of swap pages that have been brought in and out.
スワップイン/スワップアウトされたページ数。
.TP
.\"O .\" FIXME The following is not the full picture for the 'intr' of
.\"O .\"       /proc/stat on 2.6:
.\" FIXME 以下の説明は、カーネル 2.6 の /proc/stat 'intr' フィールドの
.\"       完全な説明ではない。書かれていないことがある。
\fIintr 1462898\fP
.\"O This line shows counts of interrupts serviced since boot time,
.\"O for each of the possible system interrupts.
.\"O The first column is the total of all interrupts serviced;
.\"O each subsequent column is the total for a particular interrupt.
この行はシステム起動時以降に処理された割り込みの回数を示す。
最初の欄は処理された割り込み全ての合計であり、それ以降の欄は
個々の割り込みについての合計数である。
.TP
\fIdisk_io: (2,0):(31,30,5764,1,2) (3,0):\fP...
.\"O (major,disk_idx):(noinfo, read_io_ops, blks_read, write_io_ops, blks_written)
.\"O .br
.\"O (Linux 2.4 only)
(メジャー番号, ディスクインデックス番号):(情報なし (noinfo), 読み込み回数,
読み込みブロック数, 書き出し回数, 書き出しブロック数)
.br
(Linux 2.4 のみ)
.TP
\fIctxt 115315\fP
.\"O The number of context switches that the system underwent.
コンテクスト・スイッチの延べ回数。
.TP
\fIbtime 769041601\fP
.\"O boot time, in seconds since the Epoch, 1970-01-01 00:00:00 +0000 (UTC).
起動時刻、紀元 (Epoch; 1970-01-01 00:00:00 +0000 (UTC)) からの秒数。
.TP
\fIprocesses 86031\fP
.\"O Number of forks since boot.
システム起動時からの延べフォーク (fork) 数。
.TP
\fIprocs_running 6\fP
.\"O Number of processes in runnable state.
.\"O (Linux 2.5.45 onwards.)
実行中状態のプロセス数 (Linux 2.5.45 以降)。
.TP
\fIprocs_blocked 2\fP
.\"O Number of processes blocked waiting for I/O to complete.
.\"O (Linux 2.5.45 onwards.)
I/O 完了待ちで停止 (blocked) しているプロセス数
(Linux 2.5.45 以降)。
.RE
.TP
.I /proc/swaps
.\"O Swap areas in use.
.\"O See also
.\"O .BR swapon (8).
使用中のスワップ領域。
.BR swapon (8)
も参照すること。
.TP
.I /proc/sys
.\"O This directory (present since 1.3.57) contains a number of files
.\"O and subdirectories corresponding to kernel variables.
.\"O These variables can be read and sometimes modified using
.\"O the \fI/proc\fP file system, and the (deprecated)
.\"O .BR sysctl (2)
.\"O system call.
.\"O Presently, there are subdirectories
.\"O .IR abi ", " debug ", " dev ", " fs ", " kernel ", " net ", " proc ", "
.\"O .IR rxrpc ", " sunrpc " and " vm
.\"O that each contain more files and subdirectories.
このディレクトリ (1.3.57 以降に存在) はカーネル変数に対応するいくつかの
ファイルとサブディレクトリを含む。
これらの変数は読み出し可能である。
また場合によっては \fI/proc\fP ファイルシステムや、
(非推奨の) システムコール
.BR sysctl (2)
を用いて書き換えることもできる。
いまのところ
.IR abi ", " debug ", " dev ", " fs ", " kernel ", " net ", " proc ", "
.IR rxrpc ", " sunrpc ", " vm
というサブディレクトリがあって、
それぞれがファイルとサブディレクトリを含んでいる。
.TP
.\"O .IR /proc/sys/abi " (since Linux 2.4.10)"
.IR /proc/sys/abi " (Linux 2.4.10 以降)"
.\"O This directory may contain files with application binary information.
.\"O .\" On some systems, it is not present.
.\"O See the kernel source file
.\"O .I Documentation/sysctl/abi.txt
.\"O for more information.
このディレクトリにはアプリケーションのバイナリ情報が入ったファイルが置かれる。
.\" このファイルが存在しないシステムもある。
更に詳しい情報は、カーネルソースファイル
.I Documentation/sysctl/abi.txt
を参照すること。
.TP
.I /proc/sys/debug
.\"O This directory may be empty.
このディレクトリは空の場合もある。
.TP
.I /proc/sys/dev
.\"O This directory contains device-specific information (e.g.,
.\"O .IR dev/cdrom/info ).
.\"O On
.\"O some systems, it may be empty.
このディレクトリにはデバイス特有の情報 (たとえば
.IR dev/cdrom/info )
が含まれる。
このディレクトリが空になっているシステムもある。
.TP
.I /proc/sys/fs
.\"O This contains the subdirectories
.\"O .IR binfmt_misc ", " epoll ", " inotify ", and " mqueue ,
.\"O and files
.\"O .IR dentry-state ", " dir-notify-enable ", " dquot-nr ", " file-max ", "
.\"O .IR file-nr ", " inode-max ", " inode-nr ", " inode-state ", "
.\"O .IR lease-break-time ", " leases-enable ", "
.\"O .IR overflowgid ", " overflowuid ", "
.\"O .IR suid_dumpable ", "
.\"O .IR super-max ", and " super-nr .
このディレクトリには、サブディレクトリ
.IR binfmt_misc ", " epoll ", " inotify ", " mqueue
と以下のファイルがある:
.IR dentry-state ", " dir-notify-enable ", " dquot-nr ", " file-max ", "
.IR file-nr ", " inode-max ", " inode-nr ", " inode-state ", "
.IR lease-break-time ", " leases-enable ", "
.IR overflowgid ", " overflowuid ", "
.IR suid_dumpable ", "
.IR super-max ", " super-nr .
.TP
.I /proc/sys/fs/binfmt_misc
.\"O Documentation for files in this directory can be found
.\"O in the kernel sources in
.\"O .IR Documentation/binfmt_misc.txt .
このディレクトリ以下のファイルについてのドキュメントは、
カーネルソースの
.I Documentation/binfmt_misc.txt
にある。
.TP
.\"O .IR /proc/sys/fs/dentry-state " (since Linux 2.2)"
.IR /proc/sys/fs/dentry-state " (Linux 2.2 以降)"
.\"O This file contains information about the status of the
.\"O directory cache (dcache).
.\"O The file contains six numbers,
.\"O .IR nr_dentry ", " nr_unused ", " age_limit " (age in seconds), "
.\"O .I want_pages
.\"O (pages requested by system) and two dummy values.
このファイルには、ディレクトリキャッシュ (dcache) の状態に関する情報が
入っている。ファイルには、
.IR nr_dentry ", " nr_unused ", " age_limit " (秒単位の age), " want_pages
(システムがリクエストしたページ数), ダミーの 2 つの値、
という 6 つの数字が書かれている。
.RS
.IP * 2
.\"O .I nr_dentry
.\"O is the number of allocated dentries (dcache entries).
.\"O This field is unused in Linux 2.2.
.I nr_dentry
は割り当てられた dentry (dcache エントリ) の数である。
このフィールドは Linux 2.2 では使用されない。
.IP *
.\"O .I nr_unused
.\"O is the number of unused dentries.
.I nr_unused
は未使用の dentry 数である。
.IP *
.\"O .I age_limit
.\"O .\" looks like this is unused in kernels 2.2 to 2.6
.\"O is the age in seconds after which dcache entries
.\"O can be reclaimed when memory is short.
.I age_limit
は、メモリが不足している場合に次に dcache entry を再要求できるように
なるまでの残り時間 (秒数) である。
.IP *
.\"O .I want_pages
.\" looks like this is unused in kernels 2.2 to 2.6
.\"O is nonzero when the kernel has called shrink_dcache_pages() and the
.\"O dcache isn't pruned yet.
.I want_pages
は、カーネルが shrink_dcache_pages() を呼び出したが
dcache がまだ縮小されていない場合に、0 以外の値となる。
.RE
.TP
.I /proc/sys/fs/dir-notify-enable
.\"O This file can be used to disable or enable the
.\"O .I dnotify
.\"O interface described in
.\"O .BR fcntl (2)
.\"O on a system-wide basis.
このファイルは
.BR fcntl (2)
に記述されている
.I dnotify
インターフェースをシステム全体で無効にしたり有効にしたりする。
.\"O A value of 0 in this file disables the interface,
.\"O and a value of 1 enables it.
このファイルに値 0 が書かれている場合はインターフェースが無効になり、
値 1 の場合は有効になる。
.TP
.I /proc/sys/fs/dquot-max
.\"O This file shows the maximum number of cached disk quota entries.
このファイルにはキャッシュされるディスク quota エントリの最大数が書かれている。
.\"O On some (2.4) systems, it is not present.
(2.4 系の) システムの中には、このファイルが存在しないものもある。
.\"O If the number of free cached disk quota entries is very low and
.\"O you have some awesome number of simultaneous system users,
.\"O you might want to raise the limit.
キャッシュされるディスク quota エントリの空きが非常に少なく、
とても多くのシステムユーザーが同時に存在する場合、
この制限を上げるといいかもしれない。
.TP
.I /proc/sys/fs/dquot-nr
.\"O This file shows the number of allocated disk quota
.\"O entries and the number of free disk quota entries.
このファイルには割り当てられているディスク quota のエントリ数と、
空いているディスク quota のエントリ数が書かれている。
.TP
.\"O .IR /proc/sys/fs/epoll " (since Linux 2.6.28)"
.IR /proc/sys/fs/epoll " (Linux 2.6.28 以降)"
.\"O This directory contains the file
.\"O .IR max_user_watches ,
.\"O which can be used to limit the amount of kernel memory consumed by the
.\"O .I epoll
.\"O interface.
.\"O For further details, see
.\"O .BR epoll (7).
このディレクトリには、ファイル
.I max_user_watches
がある。
これらは、
.I epoll
インタフェースが消費するカーネルメモリ量を制限するのに使用できる。
詳細は
.BR epoll (7)
を参照。
.TP
.I /proc/sys/fs/file-max
.\"O This file defines
.\"O a system-wide limit on the number of open files for all processes.
このファイルはシステム全体でプロセスがオープンできる
ファイル数の上限を定義する。
.\"O (See also
.\"O .BR setrlimit (2),
.\"O which can be used by a process to set the per-process limit,
.\"O .BR RLIMIT_NOFILE ,
.\"O on the number of files it may open.)
(各プロセスがオープンできるファイル数の上限を
.B RLIMIT_NOFILE
によって設定する
.BR setrlimit (2)
も参照すること。)
.\"O If you get lots
.\"O of error messages about running out of file handles,
.\"O try increasing this value:
ファイルハンドルを使い果たして大量にエラーメッセージが出る場合は、
以下のようにしてこの値を増加させてみよ:
.br

.br
.nf
.ft CW
echo 100000 > /proc/sys/fs/file-max
.fi
.ft

.\"O The kernel constant
.\"O .B NR_OPEN
.\"O imposes an upper limit on the value that may be placed in
.\"O .IR file-max .
.I file-max
に書かれている値は、カーネル定数
.B NR_OPEN
に制限される。

.\"O If you increase
.\"O .IR /proc/sys/fs/file-max ","
.\"O be sure to increase
.\"O .I /proc/sys/fs/inode-max
.\"O to 3-4 times the new
.\"O value of
.\"O .IR /proc/sys/fs/file-max ","
.\"O or you will run out of inodes.
.I /proc/sys/fs/file-max
を増やした場合は、
.I /proc/sys/fs/inode-max
を新しい
.I /proc/sys/fs/file-max
の値の 3-4 倍に増やしておくこと。
こうしないと inode を使い果たしてしまうだろう。
.TP
.I /proc/sys/fs/file-nr
.\"O This (read-only) file gives the number of files presently opened.
(このファイルは読み出し専用で) 読み出すと
現在オープンされているファイルの数が得られる。
.\"O It contains three numbers: the number of allocated file handles;
.\"O the number of free file handles; and the maximum number of file handles.
.\"O The kernel allocates file handles dynamically, but it
.\"O doesn't free them again.
.\"O If the number of allocated files is close to the
.\"O maximum, you should consider increasing the maximum.
このファイルには、割り当てられているファイルハンドル数・
空いているファイルハンドル数・ファイルハンドル数の最大値、
という 3 つの数値が書かれている。
カーネルはファイルハンドルを動的に割り当てるが、
それを再び解放しない。
割り当てられているファイル数が最大値に近づいた場合は、
最大値を大きくすることを考慮すべきである。
.\"O When the number of free file handles is
.\"O large, you've encountered a peak in your usage of file
.\"O handles and you probably don't need to increase the maximum.
空いているファイルハンドル数が多い場合は、
ファイルハンドルの使用のピークを経験したことがあり、
最大値を大きくする必要はないだろう。
.TP
.I /proc/sys/fs/inode-max
.\"O This file contains the maximum number of in-memory inodes.
このファイルには、メモリ内 inode の最大値が書かれている。
.\"O On some (2.4) systems, it may not be present.
.\"O This value should be 3-4 times larger
.\"O than the value in
.\"O .IR file-max ,
.\"O since \fIstdin\fP, \fIstdout\fP
.\"O and network sockets also need an inode to handle them.
.\"O When you regularly run out of inodes, you need to increase this value.
(2.4 系の) システムによっては、このファイルが存在しないかもしれない。
この値は
.I file-max
の値の 3-4 倍にすべきである。
これは \fIstdin\fP, \fIstdout\fP, ネットワークソケットを扱うにも
inode が必要なためである。
日常的に inode を使い果たしている場合は、この値を増やす必要がある。
.TP
.I /proc/sys/fs/inode-nr
.\"O This file contains the first two values from
.\"O .IR inode-state .
このファイルには、
.I inode-state
の最初の 2 つの値が書かれている。
.TP
.I /proc/sys/fs/inode-state
.\"O This file
.\"O contains seven numbers:
.\"O .IR nr_inodes ,
.\"O .IR nr_free_inodes ,
.\"O .IR preshrink ,
.\"O and four dummy values.
.\"O .I nr_inodes
.\"O is the number of inodes the system has allocated.
.\"O This can be slightly more than
.\"O .I inode-max
.\"O because Linux allocates them one page full at a time.
.\"O .I nr_free_inodes
.\"O represents the number of free inodes.
.\"O .I preshrink
.\"O is nonzero when the
.\"O .I nr_inodes
.\"O >
.\"O .I inode-max
.\"O and the system needs to prune the inode list instead of allocating more.
このファイルには 7 個の値が書かれている:
.IR nr_inodes,
.IR nr_free_inodes ,
.IR preshrink
と 4 つのダミーの値である。
.I nr_inodes
はシステムが確保する inode の数である。
Linux は 1 度に 1 ページ分いっぱいに nr_inode を確保するので、この値が
.I inode-max
より幾分大きくなることもある。
.\"Osato: pageful の意味がよく分からない。
.I nr_free_inodes
は空いている inode の数を表す。
.IR nr_inodes " > " inode-max
の場合、
.I preshrink
は 0 以外の値になる。
この場合システムは inode をさらに確保するのではなく、
inode リストを切り詰める必要がある。
.TP
.\"O .IR /proc/sys/fs/inotify " (since Linux 2.6.13)"
.IR /proc/sys/fs/inotify " (Linux 2.6.13 以降)"
.\"O This directory contains files
.\"O .IR max_queued_events ", " max_user_instances ", and " max_user_watches ,
.\"O that can be used to limit the amount of kernel memory consumed by the
.\"O .I inotify
.\"O interface.
.\"O For further details, see
.\"O .BR inotify (7).
このディレクトリには、ファイル
.IR max_queued_events ", " max_user_instances ", and " max_user_watches
がある。これらは、
.I inotify
インタフェースが消費するカーネルメモリ量を制限するのに利用できる。
詳細は
.BR inotify (7)
を参照。
.TP
.I /proc/sys/fs/lease-break-time
.\"O This file specifies the grace period that the kernel grants to a process
.\"O holding a file lease
.\"O .RB ( fcntl (2))
.\"O after it has sent a signal to that process notifying it
.\"O that another process is waiting to open the file.
このファイルは、ファイルを保持しているプロセスに対して
カーネルがシグナルを送り、
他のプロセスがそのファイルをオープンするのを待っていることを通知してから、
そのプロセスに対してカーネルがファイルのリース (lease, 貸し出し)
.RB ( fcntl (2)
を参照) を許す猶予期間を指定する。
.\"O If the lease holder does not remove or downgrade the lease within
.\"O this grace period, the kernel forcibly breaks the lease.
リースホルダ (lease holder: ファイルの貸し出しを受けているプロセス) が
猶予期間中にリースを削除するか階級を低くしない場合、
カーネルはファイルのリースを強制的に止める。
.TP
.I /proc/sys/fs/leases-enable
.\"O This file can be used to enable or disable file leases
.\"O .RB ( fcntl (2))
.\"O on a system-wide basis.
このファイルはシステム全体でのファイルリース
.RB ( fcntl (2)
を参照) を有効または無効にする。
.\"O If this file contains the value 0, leases are disabled.
.\"O A nonzero value enables leases.
ファイルに値 0 が書き込まれている場合、リースは無効である。
0 以外の場合にはリースは有効である。
.TP
.\"O .IR /proc/sys/fs/mqueue " (since Linux 2.6.6)"
.IR /proc/sys/fs/mqueue " (Linux 2.6.6 以降)"
.\"O This directory contains files
.\"O .IR msg_max ", " msgsize_max ", and " queues_max ,
.\"O controlling the resources used by POSIX message queues.
このディレクトリにはファイル
.IR msg_max ", " msgsize_max ", and " queues_max
がある。これらは POSIX メッセージキューで使用されるリソースの
制御を行う。
.\"O See
.\"O .BR mq_overview (7)
.\"O for details.
詳細は
.BR mq_overview (7)
を参照。
.TP
.\"O .IR /proc/sys/fs/overflowgid " and " /proc/sys/fs/overflowuid
.IR /proc/sys/fs/overflowgid " と " /proc/sys/fs/overflowuid
.\"O These files
.\"O allow you to change the value of the fixed UID and GID.
.\"O The default is 65534.
これらのファイルにより、ユーザーは固定 UID と固定 GID の値を変更できる。
デフォルトは 65534 である。
.\"O Some file systems only support 16-bit UIDs and GIDs, although in Linux
.\"O UIDs and GIDs are 32 bits.
.\"O When one of these file systems is mounted
.\"O with writes enabled, any UID or GID that would exceed 65535 is translated
.\"O to the overflow value before being written to disk.
Linux の UID と GID は 32 ビットであるが、
16 ビットの UID と GID しかサポートしないファイルシステムもある。
このようなファイルシステムが書き込みを許可してマウントされた場合、
65535 を超える UID と GID は、
ディスクに書き込まれる前にオーバーフロー値に変換される。
.TP
.\"O .IR /proc/sys/fs/suid_dumpable " (since Linux 2.6.13)"
.IR /proc/sys/fs/suid_dumpable " (Linux 2.6.13 以降)"
.\"O .\" The following is based on text from Documentation/sysctl/kernel.txt
.\"O The value in this file determines whether core dump files are
.\"O produced for set-user-ID or otherwise protected/tainted binaries.
.\"O Three different integer values can be specified:
.\" 以下は Documentation/sysctl/kernel.txt の内容に基いている。
このファイルの値により、set-user-ID されたバイナリや、
保護がかかった (protected) バイナリ / tainted な (汚染された;
ライセンスがカーネルと適合しない) バイナリに対して、コアダンプファイルを
生成するかどうかが決定される。
以下の 3つの値を指定することができる:
.sp
\fI0\ (default)\fP
.\"O This provides the traditional (pre-Linux 2.6.13) behavior.
.\"O A core dump will not be produced for a process which has
.\"O changed credentials (by calling
.\"O .BR seteuid (2),
.\"O .BR setgid (2),
.\"O or similar, or by executing a set-user-ID or set-group-ID program)
.\"O or whose binary does not have read permission enabled.
この値を指定すると、以前と同じ (Linux 2.6.13 より前の) 動作をする。
.RB ( seteuid (2),
.BR setgid (2)
などを呼び出すことや、set-user-ID や set-group-ID されたプログラムを
実行することで) 資格情報 (credentials) が変更されているプロセスや、
プロセスの実行バイナリの読み出し許可がないプロセスに対して、
コアダンプを生成しない。
.sp
\fI1\ ("debug")\fP
.\"O All processes dump core when possible.
.\"O The core dump is owned by the file system user ID of the dumping process
.\"O and no security is applied.
.\"O This is intended for system debugging situations only.
.\"O Ptrace is unchecked.
すべてのプロセスで、可能であればコアダンプを行う。
コアダンプファイルの所有者は、ダンプを行うプロセスのファイルシステム UID
となり、セキュリティ上の考慮は行われない。
この値は、システムデバッグの場面だけを想定して設けられている。
ptrace のチェックも行われない。
.sp
\fI2\ ("suidsafe")\fP
.\"O Any binary which normally would not be dumped (see "0" above)
.\"O is dumped readable by root only.
.\"O This allows the user to remove the core dump file but not to read it.
.\"O For security reasons core dumps in this mode will not overwrite one
.\"O another or other files.
.\"O This mode is appropriate when administrators are
.\"O attempting to debug problems in a normal environment.
.\"O
.\"Omotoki: "overwrite one another or other files" の訳に自信なし。
.\"O
通常はダンプされないようなバイナリ (上記の "0" 参照) を
root だけが読み出し可能な形でダンプする。
この場合、ユーザはそのコアダンプファイルを削除することはできるが、
読むことはできない。
セキュリティ上の理由から、このモードのコアダンプでは、
既存のダンプファイルや他のファイルを上書きすることはない。
このモードは、管理者が通常の環境で問題を解析しようとする際に
適している。
.TP
.\"O .I /proc/sys/fs/super-max
.\"O This file
.\"O controls the maximum number of superblocks, and
.\"O thus the maximum number of mounted file systems the kernel
.\"O can have.
.\"O You only need to increase
.\"O .I super-max
.\"O if you need to mount more file systems than the current value in
.\"O .I super-max
.\"O allows you to.
このファイルはスーパブロックの値を制御する。
この値はカーネルがマウントできるファイルシステムの最大値になる。
現在、
.I super-max
で許可されているファイルシステム数以上に
マウントする必要がある場合は、この値を増加させるだけでよい。
.TP
.I /proc/sys/fs/super-nr
.\"O This file
.\"O contains the number of file systems currently mounted.
このファイルには現在マウントされているファイルシステム数が書かれている。
.TP
.I /proc/sys/kernel
.\"O This directory contains files controlling a range of kernel parameters,
.\"O as described below.
このディレクトリには、以下で説明する様々なカーネルパラメータを
制御するためのファイルが配置されている。
.TP
.I /proc/sys/kernel/acct
.\"O This file
.\"O contains three numbers:
.\"O .IR highwater ,
.\"O .IR lowwater ,
.\"O and
.\"O .IR frequency .
このファイルには 3 つの値が含まれている:
.IR highwater ,
.IR lowwater ,
.IR frequency
である。
.\"O If BSD-style process accounting is enabled these values control
.\"O its behavior.
.\"O If free space on file system where the log lives goes below
.\"O .I lowwater
.\"O percent accounting suspends.
.\"O If free space gets above
.\"O .I highwater
.\"O percent accounting resumes.
.\"O .I frequency
.\"O determines
.\"O how often the kernel checks the amount of free space (value is in
.\"O seconds).
.\"O Default values are 4, 2 and 30.
BSD-style process accounting が有効になっている場合、
これら 3 つの値が動作を制御する。
ログファイルのあるファイルシステムの空き領域が
.I lowwater
パーセント以下になった場合は、ログ記録を一時停止する。
空き領域が
.I highwater
パーセント以上になった場合に、ログ記録を再開する。
.I frequency
はカーネルが空き領域のチェックをする頻度である (単位は秒)。
デフォルトの値は、4, 2, 30 である。
.\"O That is, suspend accounting if 2% or less space is free; resume it
.\"O if 4% or more space is free; consider information about amount of free space
.\"O valid for 30 seconds.
つまり、空き領域が 2% 以下になるとログ記録を一時停止し、
空き領域が 4% 以上となったときに再開する。
空き領域についての情報は 30 秒間有効である点に注意すること。
.TP
.\"O .IR /proc/sys/kernel/cap-bound " (from Linux 2.2 to 2.6.24)"
.IR /proc/sys/kernel/cap-bound " (Linux 2.2 to 2.6.24 以降)"
.I /proc/sys/kernel/cap-bound
.\"O This file holds the value of the kernel
.\"O .I "capability bounding set"
.\"O (expressed as a signed decimal number).
このファイルにはカーネルの
.I "capability bounding set"
(符号付き 10 進数表現) の値が書かれている。
.\"O This set is ANDed against the capabilities permitted to a process
.\"O during
.\"O .BR execve (2).
.BR execve (2)
中は、このセットとプロセスに許可されている権限の AND がとられる。
.\"O Starting with Linux 2.6.25,
.\"O the system-wide capability bounding set disappeared,
.\"O and was replaced by a per-thread bounding set; see
.\"O .BR capabilities (7).
Linux 2.6.25 以降では、システム全体のケーパビリティバウンディングセットは
なくなり、スレッド単位のバウンディングセットに置き換えられた。
.BR capabilities (7)
を参照。
.TP
.I /proc/sys/kernel/core_pattern
.\"O See
.\"O .BR core (5).
.BR core (5)
参照。
.TP
.I /proc/sys/kernel/core_uses_pid
.\"O See
.\"O .BR core (5).
.BR core (5)
参照。
.TP
.I /proc/sys/kernel/ctrl-alt-del
.\"O This file
.\"O controls the handling of Ctrl-Alt-Del from the keyboard.
このファイルはキーボードの Ctrl-Alt-Del の扱いを制御する。
.\"O When the value in this file is 0, Ctrl-Alt-Del is trapped and
.\"O sent to the
.\"O .BR init (8)
.\"O program to handle a graceful restart.
このファイルにある値が 0 の場合、
Ctrl-Alt-Del が捕捉されると
.BR init (8)
プログラムに送られて、正しく再起動される。
.\"O When the value is greater than zero, Linux's reaction to a Vulcan
.\"O Nerve Pinch (tm) will be an immediate reboot, without even
.\"O syncing its dirty buffers.
値が 0 より大きい場合、Vulcan Nerve Pinch (tm) に反応して、
Linux はダーティバッファを同期させることなく、すぐに再起動を行う。
.\"O Note: when a program (like dosemu) has the keyboard in "raw"
.\"O mode, the ctrl-alt-del is intercepted by the program before it
.\"O ever reaches the kernel tty layer, and it's up to the program
.\"O to decide what to do with it.
注意: プログラム (dosemu など) に "raw" モードのキーボードがある場合、
ctrl-alt-del はカーネルの tty レイヤーに到達する前に
プログラムに遮断され、
プログラムに送られてどのように扱うかが決められる。
.TP
.I /proc/sys/kernel/hotplug
.\"O This file
.\"O contains the path for the hotplug policy agent.
.\"O The default value in this file is
.\"O .IR /sbin/hotplug .
このファイルはホットプラグ・ポリシー・エージェントのパスが書かれている。
このファイルのデフォルト値は
.I /sbin/hotplug
である。
.TP
.\"O .IR /proc/sys/kernel/domainname " and " /proc/sys/kernel/hostname
.IR /proc/sys/kernel/domainname " と " /proc/sys/kernel/hostname
.\"O can be used to set the NIS/YP domainname and the
.\"O hostname of your box in exactly the same way as the commands
.\"O .BR domainname (1)
.\"O and
.\"O .BR hostname (1),
.\"O that is:
これらのファイルは、コマンド
.BR domainname (1),
.BR hostname (1)
と全く同じ方法で、
マシンの NIS/YP ドメイン名とホスト名の設定に使える。
すなわち

.in +4n
.nf
.RB "#" " echo \(aqdarkstar\(aq > /proc/sys/kernel/hostname"
.RB "#" " echo \(aqmydomain\(aq > /proc/sys/kernel/domainname"
.fi
.in

.\"O has the same effect as
は、以下と同じ効果がある。

.in +4n
.nf
.RB "#" " hostname \(aqdarkstar\(aq"
.RB "#" " domainname \(aqmydomain\(aq"
.fi
.in

.\"O Note, however, that the classic darkstar.frop.org has the
.\"O hostname "darkstar" and DNS (Internet Domain Name Server)
.\"O domainname "frop.org", not to be confused with the NIS (Network
.\"O Information Service) or YP (Yellow Pages) domainname.
.\"O These two
.\"O domain names are in general different.
.\"O For a detailed discussion
.\"O see the
.\"O .BR hostname (1)
.\"O man page.
注意: 典型的な darkstar.frop.org という名前には、
ホスト名 "darkstar" と DNS (Internet Domain Name Server)
ドメイン名 "frop.org" が含まれているが、DNS ドメイン名と
NIS (Network Information Service) または
YP (Yellow Pages) のドメイン名を混同してはならない。
一般にこれら 2 つのドメイン名は異なる。
詳細な議論は、
.BR hostname (1)
の man ページを参照すること。
.TP
.I /proc/sys/kernel/htab-reclaim
.\"O (PowerPC only) If this file is set to a nonzero value,
.\"O the PowerPC htab
.\"O (see kernel file
.\"O .IR Documentation/powerpc/ppc_htab.txt )
.\"O is pruned
.\"O each time the system hits the idle loop.
(PowerPC のみ) このファイルを 0 以外の値に設定すると、
PowerPC htab
(カーネルソースファイル
.I Documentation/powerpc/ppc_htab.txt
参照) を、システムがアイドルループになるたびに切り詰める。
.TP
.I /proc/sys/kernel/l2cr
.\"O (PowerPC only) This file
.\"O contains a flag that controls the L2 cache of G3 processor
.\"O boards.
.\"O If 0, the cache is disabled.
.\"O Enabled if nonzero.
(PowerPC のみ) このファイルには G3 プロセッサボードの
L2 キャッシュを制御するフラグが含まれる。
0 の場合、キャッシュは無効になる。
0 以外の場合は有効になる。
.TP
.I /proc/sys/kernel/modprobe
.\"O This file contains the path for the kernel module loader.
.\"O The default value is
.\"O .IR /sbin/modprobe .
.\"O The file is only present if the kernel is built with the
.\"O .B CONFIG_KMOD
.\"O option enabled.
このファイルには、カーネルモジュールローダへのパスが含まれる。
デフォルトの値は
.I /sbin/modprobe
である。このファイルは、
.B CONFIG_KMOD
オプションを有効にしてカーネルが作成されている場合にのみ存在する。
.\"O It is described by the kernel source file
.\"O .I Documentation/kmod.txt
.\"O (only present in kernel 2.4 and earlier).
このファイルについては、カーネルソースファイル
.I Documentation/kmod.txt
(カーネル 2.4 以前のみに存在) に記述されている。
.TP
.I /proc/sys/kernel/msgmax
.\"O This file defines
.\"O a system-wide limit specifying the maximum number of bytes in
.\"O a single message written on a System V message queue.
このファイルは、System V メッセージキューに書き込まれる 1 つのメッセージの
最大バイト数を、システム全体で制限する。
.TP
.I /proc/sys/kernel/msgmni
.\"O This file defines the system-wide limit on the number of
.\"O message queue identifiers.
.\"O (This file is only present in Linux 2.4 onwards.)
このファイルはメッセージキュー識別子の最大数をシステム全体で制限する。
(このファイルは Linux 2.4 以降にしか存在しない)。
.TP
.I /proc/sys/kernel/msgmnb
.\"O This file defines a system-wide parameter used to initialize the
.\"O .I msg_qbytes
.\"O setting for subsequently created message queues.
このファイルは、
.I msg_qbytes
の設定を初期化するシステム全体のパラメータである。
.I msg_qbytes
は以降で作成されるメッセージキューで使われる。
.\"O The
.\"O .I msg_qbytes
.\"O setting specifies the maximum number of bytes that may be written to the
.\"O message queue.
.I msg_qbytes
設定では、メッセージキューに書き込まれる最大バイト数を指定する。
.TP
.\"O .IR /proc/sys/kernel/ostype " and " /proc/sys/kernel/osrelease
.IR /proc/sys/kernel/ostype " と " /proc/sys/kernel/osrelease
.\"O These files
.\"O give substrings of
.\"O .IR /proc/version .
これらのファイルは文字列
.I /proc/version
の各部分を与える。
.TP
.\"O .IR /proc/sys/kernel/overflowgid " and " /proc/sys/kernel/overflowuid
.IR /proc/sys/kernel/overflowgid " と " /proc/sys/kernel/overflowuid
.\"O These files duplicate the files
.\"O .I /proc/sys/fs/overflowgid
.\"O and
.\"O .IR /proc/sys/fs/overflowuid .
これらのファイルは
.I /proc/sys/fs/overflowgid
と
.I /proc/sys/fs/overflowuid
を複製したものである。
.TP
.I /proc/sys/kernel/panic
.\"O This file gives read/write access to the kernel variable
.\"O .IR panic_timeout .
.\"O If this is zero, the kernel will loop on a panic; if nonzero
.\"O it indicates that the kernel should autoreboot after this number
.\"O of seconds.
.\"O When you use the
.\"O software watchdog device driver, the recommended setting is 60.
このファイルはカーネル変数
.I panic_timeout
への読み出しと書き込みのアクセスを与える。
この値が 0 ならば、パニック時にカーネルは (無限) ループに入る。
0 でなければ、その秒数だけ待ってから自動的に再起動する。
ソフトウェア watchdog ドライバを使っている場合、
推奨される設定は 60 である。
.TP
.\"O .IR /proc/sys/kernel/panic_on_oops " (since Linux 2.5.68)"
.IR /proc/sys/kernel/panic_on_oops " (Linux 2.5.68 以降)"
.\"O This file controls the kernel's behavior when an oops
.\"O or BUG is encountered.
.\"O If this file contains 0, then the system
.\"O tries to continue operation.
.\"O If it contains 1, then the system
.\"O delays a few seconds (to give klogd time to record the oops output)
.\"O and then panics.
このファイルは、oops や BUG が起こった場合のカーネルの動作を制御する。
ファイルに 0 が書かれている場合、システムは操作を続行しようとする。
1 が書かれている場合、システムは
(klogd が oops 出力を記録する時間を与えるために) 数秒間遅延した後、
panic を起こす。
.\"O If the
.\"O .I /proc/sys/kernel/panic
.\"O file is also nonzero then the machine will be rebooted.
.I /proc/sys/kernel/panic
ファイルも 0 でない場合、マシンは再起動される。
.TP
.\"O .IR /proc/sys/kernel/pid_max " (since Linux 2.5.34)"
.IR /proc/sys/kernel/pid_max " (Linux 2.5.34 以降)"
.\"O This file specifies the value at which PIDs wrap around
.\"O (i.e., the value in this file is one greater than the maximum PID).
このファイルは、PID をいくつで終了にするかを指定する
(すなわち、このファイルの値は最大 PID より 1 大きい)。
.\"O The default value for this file, 32768,
.\"O results in the same range of PIDs as on earlier kernels.
このファイルのデフォルト値は 32768 であり、
その場合には以前のカーネルと同じ PID の範囲になる。
.\"O On 32-bit platforms, 32768 is the maximum value for
.\"O .IR pid_max .
.\"O On 64-bit systems,
.\"O .I pid_max
.\"O can be set to any value up to 2^22
.\"O .RB ( PID_MAX_LIMIT ,
.\"O approximately 4 million).
32ビットのプラットフォームでは、
.I pid_max
の最大値は 32768 である。
64ビットのプラットフォームでは、
2^22
.RB ( PID_MAX_LIMIT ,
約 4,000,000) までの任意の値を設定できる。
.\" Prior to 2.6.10, pid_max could also be raised above 32768 on 32-bit
.\" platforms, but this broke /proc/[pid]
.\" See http://marc.theaimsgroup.com/?l=linux-kernel&m=109513010926152&w=2
.TP
.\"O .IR /proc/sys/kernel/powersave-nap " (PowerPC only)"
.IR /proc/sys/kernel/powersave-nap " (PowerPC のみ)"
.\"O This file contains a flag.
.\"O If set, Linux-PPC will use the "nap" mode of
.\"O powersaving,
.\"O otherwise the "doze" mode will be used.
このファイルにはフラグが書かれている。
フラグが設定されると、Linux-PPC は
省電力の "nap" モードを使う。
設定されない場合は、"doze" モードが使われる。
.TP
.I /proc/sys/kernel/printk
.\"O The four values in this file are
.\"O .IR console_loglevel ,
.\"O .IR default_message_loglevel ,
.\"O .IR minimum_console_level ,
.\"O and
.\"O .IR default_console_loglevel .
.\"O These values influence
.\"O .I printk()
.\"O behavior when printing or logging error messages.
.\"O See
.\"O .BR syslog (2)
.\"O for more info on the different loglevels.
このファイルにある 4 つの値は、
.IR console_loglevel ,
.IR default_message_loglevel ,
.IR minimum_console_loglevel ,
.IR default_console_loglevel
である。
.\"Osato:
.\"Osato: minimum_console_level は minimum_console_loglevel の間違い？
.\"Osato:
これらの値はエラーメッセージを表示したり記録したりする
.I printk()
の動作に影響する。
各 loglevel の情報については、
.BR syslog (2)
を参照すること。
.\"O Messages with a higher priority than
.\"O .I console_loglevel
.\"O will be printed to the console.
.\"O Messages without an explicit priority will be printed with priority
.\"O .IR default_message_level .
.\"O .I minimum_console_loglevel
.\"O is the minimum (highest) value to which
.\"O .I console_loglevel
.\"O can be set.
.\"O .I default_console_loglevel
.\"O is the default value for
.\"O .IR console_loglevel .
優先度が
.I console_loglevel
以上のメッセージは、コンソールに表示される。
優先度が明示されていないメッセージは、優先度が
.I default_message_level
のときに表示される。
.I minimum_console_loglevel
は
.I console_loglevel
に設定できる最小 (最高) の値である。
.I default_console_loglevel
は
.I console_loglevel
のデフォルトの値である。
.TP
.\"O .IR /proc/sys/kernel/pty " (since Linux 2.6.4)"
.IR /proc/sys/kernel/pty " (Linux 2.6.4 以降)"
.\"O This directory contains two files relating to the number of Unix 98
.\"O pseudo-terminals (see
.\"O .BR pts (4))
.\"O on the system.
このディレクトリは、Unix 98 疑似端末
.RB ( pts (4)
を参照) の数に関連する 2 つのファイルを含む。
.TP
.I /proc/sys/kernel/pty/max
.\"O This file defines the maximum number of pseudo-terminals.
このファイルは疑似端末の最大数を定義する。
.TP
.I /proc/sys/kernel/pty/nr
.\"O This read-only file
.\"O indicates how many pseudo-terminals are currently in use.
この読み出し専用のファイルは、現在いくつの疑似端末が使われているかを表す。
.TP
.I /proc/sys/kernel/random
.\"O This directory
.\"O .I random
.\"O contains various parameters controlling the operation of the file
.\"O .IR /dev/random .
.\"O See
.\"O .BR random (4)
.\"O for further information.
このディレクトリは、ファイル
.I /dev/random
の操作を制御する様々なパラメータが書かれている。
詳細は
.BR random (4)
を参照。
.TP
.I /proc/sys/kernel/real-root-dev
.\"O This file is documented in the kernel source file
.\"O .IR Documentation/initrd.txt .
このファイルはカーネルソースファイル
.I Documentation/initrd.txt
に記述されている。
.TP
.\"O .IR /proc/sys/kernel/reboot-cmd " (Sparc only) "
.IR /proc/sys/kernel/reboot-cmd " (Sparc のみ) "
.\"O This file seems to be a way to give an argument to the SPARC
.\"O ROM/Flash boot loader.
.\"O Maybe to tell it what to do after
.\"O rebooting?
このファイルは SPARC ROM/Flash ブートローダに引き数を渡す方法を
提供しているように思われる。
再起動後に何をするかを指定しているのだろうか？
.TP
.I /proc/sys/kernel/rtsig-max
.\"O (Only in kernels up to and including 2.6.7; see
.\"O .BR setrlimit (2))
(2.6.7 までのカーネルにのみ存在する。
.BR setrlimit (2)
を参照すること)
.\"O This file can be used to tune the maximum number
.\"O of POSIX real-time (queued) signals that can be outstanding
.\"O in the system.
このファイルはシステムで発行される POSIX real-time (queued) signal の
最大数を調整するのに使用される。
.TP
.I /proc/sys/kernel/rtsig-nr
.\"O (Only in kernels up to and including 2.6.7.)
(2.6.7 までのカーネルにのみ存在する)
.\"O This file shows the number POSIX real-time signals currently queued.
このファイルは現在キューに入っている POSIX real-time signal の数を表す。
.TP
.\"O .IR /proc/sys/kernel/sem " (since Linux 2.4)"
.IR /proc/sys/kernel/sem " (Linux 2.4 以降)"
.\"O This file contains 4 numbers defining limits for System V IPC semaphores.
このファイルには System V IPC セマフォを制限する 4 つの値が書かれている。
.\"O These fields are, in order:
これらのフィールドは次の順番に並んでいる:
.RS
.IP SEMMSL 8
.\"O The maximum semaphores per semaphore set.
セマフォ集合ごとのセマフォ数の最大値。
.IP SEMMNS 8
.\"O A system-wide limit on the number of semaphores in all semaphore sets.
システム全体での、全てのセマフォ集合におけるセマフォ数の制限。
.IP SEMOPM 8
.\"O The maximum number of operations that may be specified in a
.\"O .BR semop (2)
.\"O call.
.BR semop (2)
コールに指定されるオペレーション数の最大値。
.IP SEMMNI 8
.\"O A system-wide limit on the maximum number of semaphore identifiers.
システム全体でのセマフォ識別子の最大値。
.RE
.TP
.I /proc/sys/kernel/sg-big-buff
.\"O This file
.\"O shows the size of the generic SCSI device (sg) buffer.
このファイルは、汎用 SCSI デバイス (sg) のバッファサイズの最大値を表す。
.\"O You can't tune it just yet, but you could change it at
.\"O compile time by editing
.\"O .I include/scsi/sg.h
.\"O and changing
.\"O the value of
.\"O .BR SG_BIG_BUFF .
.\"O However, there shouldn't be any reason to change this value.
今はこれを変更することはできないが、
コンパイル時に
.I include/scsi/sg.h
を編集して
.B SG_BIG_BUFF
の値を変えれば変更できる。
ただし、この値を変更する理由はないだろう。
.TP
.I /proc/sys/kernel/shmall
.\"O This file
.\"O contains the system-wide limit on the total number of pages of
.\"O System V shared memory.
このファイルには System V 共有メモリの総ページ数の
システム全体での制限が書かれている。
.TP
.I /proc/sys/kernel/shmmax
.\"O This file
.\"O can be used to query and set the run-time limit
.\"O on the maximum (System V IPC) shared memory segment size that can be
.\"O created.
このファイルを通じて、(System V IPC) 共有メモリセグメントを作成するときの
最大サイズの実行時上限 (run-time limit) を取得または設定できる。
.\"O Shared memory segments up to 1GB are now supported in the
.\"O kernel.
.\"O This value defaults to
.\"O .BR SHMMAX .
現在は 1GB までの共有メモリセグメントが
カーネルでサポートされている。
この値のデフォルトは
.B SHMMAX
である。
.TP
.I /proc/sys/kernel/shmmni
.\"O (available in Linux 2.4 and onwards)
(Linux 2.4 以降で使用可能)
.\"O This file
.\"O specifies the system-wide maximum number of System V shared memory
.\"O segments that can be created.
このファイルは、システム全体で作成可能な
System V 共有メモリセグメント数を指定する。
.TP
.I /proc/sys/kernel/sysrq
.\"O This file controls the functions allowed to be invoked by the SysRq key.
.\"O By default,
.\"O the file contains 1 meaning that every possible SysRq request is allowed
.\"O (in older kernel versions, SysRq was disabled by default,
.\"O and you were required to specifically enable it at run-time,
.\"O but this is not the case any more).
このファイルは、SysRq キーにより起動が許可されている関数群を制御する
ものである。デフォルトでは、ファイルの内容は 1 であり、
これは起こり得る全ての SysRq リクエストが許可されることを意味する
(古いバージョンのカーネルでは、SysRq はデフォルトでは無効になっており、
実行時に明示的に有効にする必要があったが、今はそうではない)。
.\"O Possible values in this file are:
このファイルで指定可能な値は以下の通り。

.\"O    0 - disable sysrq completely
.\"O    1 - enable all functions of sysrq
.\"O   >1 - bitmask of allowed sysrq functions, as follows:
.\"O           2 - enable control of console logging level
.\"O           4 - enable control of keyboard (SAK, unraw)
.\"O           8 - enable debugging dumps of processes etc.
.\"O          16 - enable sync command
.\"O          32 - enable remount read-only
.\"O          64 - enable signalling of processes (term, kill, oom-kill)
.\"O         128 - allow reboot/poweroff
.\"O         256 - allow nicing of all real-time tasks
   0 - sysrq を完全に無効にする
   1 - sysrq の全ての関数を有効にする
  >1 - 許可する sysrq 関数のビットマスク。内訳は以下の通り。
          2 - コンソールのログ・レベルの制御を有効にする
          4 - キーボードの制御を有効にする (SAK, unraw)
          8 - プロセスなどのデバッグ・ダンプを有効にする
         16 - sync コマンドを有効にする
         32 - 読み出し専用での再マウントを有効にする
         64 - プロセスへのシグナル発行を有効にする (term, kill, oom-kill)
        128 - リブート/電源オフを許可する
        256 - 全てのリアルタイム・タスクの nice 値の変更を許可する

.\"O This file is only present if the
.\"O .B CONFIG_MAGIC_SYSRQ
.\"O kernel configuration option is enabled.
.\"O For further details see the kernel source file
.\"O .IR Documentation/sysrq.txt .
カーネル設定オプション
.B CONFIG_MAGIC_SYSRQ
が有効な場合のみ、このファイルは存在する。
詳細は、カーネルソースファイル
.I Documentation/sysrq.txt
を参照のこと。
.TP
.I /proc/sys/kernel/version
.\"O This file contains a string like:
このファイルには、以下のような文字列が書かれている:

    #5 Wed Feb 25 21:49:24 MET 1998

.\"O The "#5" means that
.\"O this is the fifth kernel built from this source base and the
.\"O date behind it indicates the time the kernel was built.
\&"#5" はこのソースで構築された 5 番目のカーネルであることを意味する。
その後にある日付はカーネルが構築された時刻を表す。
.TP
.\"O .IR /proc/sys/kernel/threads-max " (since Linux 2.3.11)"
.IR /proc/sys/kernel/threads-max " (Linux 2.3.11 以降)"
.\"O This file specifies the system-wide limit on the number of
.\"O threads (tasks) that can be created on the system.
このファイルは、システム全体で作成可能なスレッド数
(タスク数) の上限を指定する。
.TP
.\"O .IR /proc/sys/kernel/zero-paged " (PowerPC only) "
.IR /proc/sys/kernel/zero-paged " (PowerPC のみ) "
.\"O This file
.\"O contains a flag.
.\"O When enabled (nonzero), Linux-PPC will pre-zero pages in
.\"O the idle loop, possibly speeding up get_free_pages.
このファイルはフラグを含む。
(0 以外の値で) 有効された場合、Linux-PPC はアイドルループで
pre-zero page を行うので、get_free_pages の速度が向上する可能性がある。
.\"Osato:
.\"Osato: pre-zero page の訳語が分からない。
.\"Osato:
.TP
.I /proc/sys/net
.\"O This directory contains networking stuff.
.\"O Explanations for some of the files under this directory can be found in
.\"O .BR tcp (7)
.\"O and
.\"O .BR ip (7).
このディレクトリにはネットワーク関係の情報が入っている。
このディレクトリにあるファイルのいくつかについては、
.BR tcp (7)
や
.BR ip (7)
に説明がある。
.TP
.I /proc/sys/net/core/somaxconn
.\"O This file defines a ceiling value for the
.\"O .I backlog
.\"O argument of
.\"O .BR listen (2);
.\"O see the
.\"O .BR listen (2)
.\"O manual page for details.
このファイルは
.BR listen (2)
の
.I backlog
引き数の上限値を規定する。
詳細は
.BR listen (2)
のマニュアルページを参照。
.TP
.I /proc/sys/proc
.\"O This directory may be empty.
このディレクトリはたぶん空である。
.TP
.I /proc/sys/sunrpc
.\"O This directory supports Sun remote procedure call for network file system
.\"O (NFS).
.\"O On some systems, it is not present.
このディレクトリはネットワークファイルシステム (NFS) への
Sun remote procedure call (遠隔手続き呼び出し) をサポートする。
これが存在しないシステムもある。
.TP
.I /proc/sys/vm
.\"O This directory contains files for memory management tuning, buffer and
.\"O cache management.
このディレクトリにはメモリ管理の調整、バッファやキャッシュ管理のための
ファイルがある。
.TP
.\"O .IR /proc/sys/vm/drop_caches " (since Linux 2.6.16)"
.IR /proc/sys/vm/drop_caches " (Linux 2.6.16 以降)"
.\"O Writing to this file causes the kernel to drop clean caches, dentries and
.\"O inodes from memory, causing that memory to become free.
このファイルに書き込みを行うことで、クリーンなキャッシュ、dentry、
inode をメモリ上から外し、そのメモリを解放する。

.\"O To free pagecache, use
.\"O .IR "echo 1 > /proc/sys/vm/drop_caches" ;
.\"O to free dentries and inodes, use
.\"O .IR "echo 2 > /proc/sys/vm/drop_caches" ;
.\"O to free pagecache, dentries and inodes, use
.\"O .IR "echo 3 > /proc/sys/vm/drop_caches" .
ページキャッシュを解放するには、
.I "echo 1 > /proc/sys/vm/drop_caches"
とする。 dentry、inode を解放するには、
.I "echo 2 > /proc/sys/vm/drop_caches"
とする。ページキャッシュ、dentry、inode を解放するには、
.IR "echo 3 > /proc/sys/vm/drop_caches"
とする。

.\"O Because this is a nondestructive operation and dirty objects
.\"O are not freeable, the
.\"O user should run
.\"O .BR sync (8)
.\"O first.
この操作は非破壊的な操作で、ダーティな (dirty) オブジェクトは
解放されないので、この操作を行う際は最初に
.BR sync (8)
を実行しておくべきである。
.TP
.IR /proc/sys/vm/swappiness
.\" The following is from Documentation/sysctl/vm.txt
.\"O The value in this file controls how aggressively the kernel will swap
.\"O memory pages.
.\"O Higher values increase aggressiveness, lower values
.\"O descrease aggressiveness.
.\"O The default value is 60.
このファイルの値により、カーネルがどの程度激しくメモリページの
スワップを行うかが制御される。
大きな値ほどスワップが激しくなり、小さい値ほど激しくなくなる。
デフォルト値は 60 である。
.TP
.\"O .IR /proc/sys/vm/legacy_va_layout " (since Linux 2.6.9)"
.IR /proc/sys/vm/legacy_va_layout " (Linux 2.6.9 以降)"
.\"O .\" The following is from Documentation/filesystems/proc.txt
.\"O If nonzero, this disables the new 32-bit memory-mapping layout;
.\"O the kernel will use the legacy (2.4) layout for all processes.
.\" 以下の記述は Documentation/filesystems/proc.txt からの引用である。
0 以外の場合、新しい 32ビットメモリマッピング配置が無効になり、
カーネルは全てのプロセスに対して従来の (カーネル 2.4 の) 配置方法を
使用する。
.TP
.\"O .IR /proc/sys/vm/oom_dump_tasks " (since Linux 2.6.25)"
.IR /proc/sys/vm/oom_dump_tasks " (Linux 2.6.25 以降)"
.\" The following is from Documentation/sysctl/vm.txt
.\"O Enables a system-wide task dump (excluding kernel threads) to be
.\"O produced when the kernel performs an OOM-killing.
カーネルが OOM-killing を実行する際に、システム全体のタスク・ダンプ
(カーネルスレッドを除く) を生成するかを制御する。
.\"O The dump includes the following information
.\"O for each task (thread, process):
.\"O thread ID, real user ID, thread group ID (process ID),
.\"O virtual memory size, resident set size,
.\"O the CPU that the task is scheduled on,
.\"O oom_adj score (see the description of
.\"O .IR /proc/[pid]/oom_adj ),
.\"O and command name.
ダンプには、タスク (スレッド、プロセス) 毎に以下の情報が出力される:
スレッド ID、実ユーザ ID、スレッドグループ ID (プロセス ID)、
仮想メモリサイズ、Resident Set Size (実メモリ上に存在するページサイズ)、
タスクがスケジューリングされた CPU、
oom_adj スコア
.RI ( /proc/[pid]/oom_adj
の説明を参照)、コマンド名。
.\"O This is helpful to determine why the OOM-killer was invoked
.\"O and to identify the rogue task that caused it.
このダンプ情報は、なぜ OOM-killer が起動されたかを知り、
その原因となったならず者のタスクを特定するのに役に立つ。

.\"O If this contains the value zero, this information is suppressed.
.\"O On very large systems with thousands of tasks,
.\"O it may not be feasible to dump the memory state information for each one.
.\"O Such systems should not be forced to incur a performance penalty in
.\"O OOM situations when the information may not be desired.
このファイルの内容が値 0 の場合、ダンプ情報の出力は行われない。
タスクが何千もある非常に巨大なシステムでは、
各々のタスクについてメモリ状態をダンプするのは適切でないかもしれない。
そのようなシステムでは、ダンプ情報が必要でもないときに
メモリ不足 (OOM) の状況で性能面の不利益が起こらないようにすべきだろう。

.\"O If this is set to nonzero, this information is shown whenever the
.\"O OOM-killer actually kills a memory-hogging task.
このファイルの内容が 0 以外の場合、
OOM-killer が実際にメモリを占有したタスクを kill する度に
ダンプ情報が出力される。

.\"O The default value is 0.
デフォルト値は 0 である。
.TP
.\"O .IR /proc/sys/vm/oom_kill_allocating_task " (since Linux 2.6.24)"
.IR /proc/sys/vm/oom_kill_allocating_task " (Linux 2.6.24 以降)"
.\" The following is from Documentation/sysctl/vm.txt
.\"O This enables or disables killing the OOM-triggering task in
.\"O out-of-memory situations.
このファイルは、メモリ不足 (OOM) の状況が起こった際に、
メモリ不足のきっかけとなったタスクを kill するかどうかを制御する。

.\"O If this is set to zero, the OOM-killer will scan through the entire
.\"O tasklist and select a task based on heuristics to kill.
.\"O This normally selects a rogue memory-hogging task that
.\"O frees up a large amount of memory when killed.
このファイルが 0 に設定された場合、
OOM-killer はタスクリスト全体をスキャンし、経験則に基づき
kill するタスクを選択する。
通常は、kill した場合に多くのメモリが解放できる、
ならず者のメモリ占有タスクが選択される。

.\"O If this is set to nonzero, the OOM-killer simply kills the task that
.\"O triggered the out-of-memory condition.
.\"O This avoids a possibly expensive tasklist scan.
このファイルが 0 以外に設定された場合、
OOM-killer はメモリ不足の状況が発生するきっかけとなったタスクを
単純に kill するだけである。
これにより、たいていは重い処理となるタスクリストのスキャンを回避できる。

.\"O If
.\"O .I /proc/sys/vm/panic_on_oom
.\"O is nonzero, it takes precedence over whatever value is used in
.\"O .IR /proc/sys/vm/oom_kill_allocating_task .
.I /proc/sys/vm/panic_on_oom
が 0 以外の場合、
.I /proc/sys/vm/oom_kill_allocating_task
にどのような値が入っていたとしても、
.I /proc/sys/vm/panic_on_oom
の方が優先される。

.\"O The default value is 0.
デフォルト値は 0 である。
.TP
.I /proc/sys/vm/overcommit_memory
.\"O This file contains the kernel virtual memory accounting mode.
.\"O Values are:
このファイルにはカーネル仮想メモリのアカウントモードが書かれている。
値は以下の通り:
.RS
.IP
.\"O 0: heuristic overcommit (this is the default)
0: 発見的なオーバーコミット (heuristic overcommit) (これがデフォルトである)
.br
.\"O 1: always overcommit, never check
1: 常にオーバーコミットし、チェックしない。
.br
.\"O 2: always check, never overcommit
2: 常にチェックし、オーバーコミットしない。
.RE
.IP
.\"O In mode 0, calls of
.\"O .BR mmap (2)
.\"O with
.\"O .B MAP_NORESERVE
.\"O are not checked, and the default check is very weak,
.\"O leading to the risk of getting a process "OOM-killed".
モード 0 では、
.B MAP_NORESERVE
を設定して呼び出された
.BR mmap (2)
はチェックされない。
またデフォルトのチェックはとても脆弱で、
プロセスを "OOM-kill" してしまうリスクを引き起こす。
.\"O Under Linux 2.4 any nonzero value implies mode 1.
Linux 2.4 では 0 以外の値はモード 1 を意味する。
.\"O In mode 2 (available since Linux 2.6), the total virtual address space
.\"O on the system is limited to (SS + RAM*(r/100)),
.\"O where SS is the size of the swap space, and RAM
.\"O is the size of the physical memory, and r is the contents of the file
.\"O .IR /proc/sys/vm/overcommit_ratio .
(Linux 2.6 以降で利用可能な) モード 2 では、
システム上の仮想アドレス空間の合計が (SS + RAM*(r/100)) に制限されている。
ここで、SS はスワップ空間のサイズ、
RAM は物理メモリのサイズ、r はファイル
.I /proc/sys/vm/overcommit_ratio
の内容である。
.TP
.I /proc/sys/vm/overcommit_ratio
.\"O See the description of
.\"O .IR /proc/sys/vm/overcommit_memory .
.I /proc/sys/vm/overcommit_memory
の説明を参照すること。
.TP
.\"O .IR /proc/sys/vm/panic_on_oom " (since Linux 2.6.18)"
.IR /proc/sys/vm/panic_on_oom " (Linux 2.6.18 以降)"
.\" The following is adapted from Documentation/sysctl/vm.txt
.\"O This enables or disables a kernel panic in
.\"O an out-of-memory situation.
このファイルは、メモリ不足時にカーネルパニックを
起こすか起こさないかを制御する。

.\"O If this file is set to the value 0,
.\"O the kernel's OOM-killer will kill some rogue process.
.\"O Usually, the OOM-killer is able to kill a rogue process and the
.\"O system will survive.
このファイルに値 0 を設定すると、
カーネルの OOM-killer がならず者のプロセスを kill する。
普通は、OOM-killer がならず者のプロセスを kill することができ、
システムは何とか動き続けることができる。

.\"O If this file is set to the value 1,
.\"O then the kernel normally panics when out-of-memory happens.
.\"O However, if a process limits allocations to certain nodes
.\"O using memory policies
.\"O .RB ( mbind  (2)
.\"O .BR MPOL_BIND )
.\"O or cpusets
.\"O .RB ( cpuset (7))
.\"O and those nodes reach memory exhaustion status,
.\"O one process may be killed by the OOM-killer.
.\"O No panic occurs in this case:
.\"O because other nodes' memory may be free,
.\"O this means the system as a whole may not have reached
.\"O an out-of-memory situation yet.
このファイルに値 1 を設定すると、
メモリ不足の状況が発生すると、カーネルは普通はパニックする。
しかしながら、プロセスが
メモリポリシー
.RB ( mbind (2)
の
.BR MPOL_BIND )
や cpusets
.RB ( cpuset (7))
を使って特定のノードへのメモリ割り当てを制限していて、
それらのノードでメモリ枯渇状態に至った場合は、
一つのプロセスが OOM-killer により kill されるだけかもしれない。
この場合には、カーネルパニックは発生しない。
なぜなら、他のノードのメモリには空きがあるかもしれず、
したがって、システム全体としてはメモリ不足の状況にまだ達していないかも
しれないからである。

.\"O If this file is set to the value 2,
.\"O the kernel always panics when an out-of-memory condition occurs.
このファイルに値 2 を設定すると、
メモリ不足の状況が発生するとカーネルは常にパニックを起こす。

.\"O The default value is 0.
.\"O 1 and 2 are for failover of clustering.
.\"O Select either according to your policy of failover.
デフォルト値は 0 である。
1 と 2 はクラスタリングのフェイルオーバー用である。
フェイルオーバーの方針に応じてどちらかの値を選択すること。
.TP
.\"O .IR /proc/sysrq-trigger " (since Linux 2.4.21)"
.IR /proc/sysrq-trigger " (Linux 2.4.21 以降)"
.\"O Writing a character to this file triggers the same SysRq function as
.\"O typing ALT-SysRq-<character> (see the description of
.\"O .IR /proc/sys/kernel/sysrq ).
.\"O This file is normally only writable by
.\"O .IR root .
.\"O For further details see the kernel source file
.\"O .IR Documentation/sysrq.txt .
このファイルに文字 character を書き込むと、
キーボードから ALT-SysRq-<character> を入力した場合と
同じ SysRq 関数が起動される
.RI ( /proc/sys/kernel/sysrq
の説明を参照)。
通常、このファイルへ書き込みができるのは
.I root
だけである。詳細については、カーネルソースファイルの
.I Documentation/sysrq.txt
を参照のこと。
.TP
.I /proc/sysvipc
.\"O Subdirectory containing the pseudo-files
.\"O .IR msg ", "  sem " and "  shm "."
疑似ファイル
.IR msg ", "  sem ", "  shm
を含むサブディレクトリ。
.\"O These files list the System V Interprocess Communication (IPC) objects
.\"O (respectively: message queues, semaphores, and shared memory)
.\"O that currently exist on the system,
.\"O providing similar information to that available via
.\"O .BR ipcs (1).
これらのファイルは、現在システム上に存在する
System V プロセス間通信 (Interprocess Communication, IPC) オブジェクト
(それぞれ: メッセージキュー、セマフォ、共有メモリ)
のリストであり、
.BR ipcs (1)
で取得できる情報と同じものを提供する。
.\"O These files have headers and are formatted (one IPC object per line)
.\"O for easy understanding.
これらのファイルにはヘッダがあり、理解しやすいように
(1 行につき 1 個の IPC オブジェクトの形式で) フォーマットされている。
.\"O .BR svipc (7)
.\"O provides further background on the information shown by these files.
.BR svipc (7)
にはこれらのファイルから分かる情報の詳細な背景が書かれている。
.TP
.I /proc/tty
.\"O Subdirectory containing the pseudo-files and subdirectories for
.\"O tty drivers and line disciplines.
疑似ファイルを含むサブディレクトリ。
tty ドライバとライン設定 (line discipline) の書かれた
サブディレクトリも含まれる。
.TP
.I /proc/uptime
.\"O This file contains two numbers: the uptime of the system (seconds),
.\"O and the amount of time spent in idle process (seconds).
このファイルは
システム起動時から経過した時間 (秒) と
アイドル (idle) しているプロセスが消費した時間 (秒) の 2 つの数を含む。
.TP
.I /proc/version
.\"O This string identifies the kernel version that is currently running.
.\"O It includes the contents of
.\"O .IR /proc/sys/kernel/ostype ,
.\"O .I /proc/sys/kernel/osrelease
.\"O and
.\"O .IR /proc/sys/kernel/version .
.\"O For example:
現在稼働しているカーネルのバージョン識別子である文字列。
これには
.IR /proc/sys/ostype ,
.IR /proc/sys/osrelease ,
.I /proc/sys/version
の内容が含まれる。
たとえばこのように:
.nf
.in -2
.ft CW
Linux version 1.0.9 (quinlan@phaze) #1 Sat May 14 01:51:54 EDT 1994
.ft
.in +2
.fi
.\" FIXME Document /proc/timer_list
.\" .TP
.\" .IR /proc/timer_list " (since Linux 2.6.21)"
.\" See the 2.6.21 Change log
.\" FIXME Document /proc/timer_stats
.\" .TP
.\" .IR /proc/timer_stats " (since Linux 2.6.21)"
.\" See the 2.6.21 Change log
.TP
.\"O .IR /proc/vmstat " (since Linux 2.6)"
.IR /proc/vmstat " (Linux 2.6 以降)"
.\"O This file displays various virtual memory statistics.
このファイルは仮想メモリの様々な統計情報を表示する。
.TP
.\"O .IR /proc/zoneinfo " (since Linux 2.6.13)"
.IR /proc/zoneinfo " (Linux 2.6.13 以降)"
.\"O This file display information about memory zones.
.\"O This is useful for analyzing virtual memory behavior.
.\"O .\" FIXME more should be said about /proc/zoneinfo
このファイルはメモリのゾーン (memory zone) に関する情報を表示する。
仮想メモリの振舞いを分析するのに役立つ。
.\" FIXME -- /proc/zoneinfo についてもっと説明が必要だ
.\"O .SH NOTES
.SH 注意
.\"O Many strings (i.e., the environment and command line) are in
.\"O the internal format, with subfields terminated by null bytes (\(aq\\0\(aq),
.\"O so you
.\"O may find that things are more readable if you use \fIod \-c\fP or \fItr
.\"O "\\000" "\\n"\fP to read them.
ほとんどの文字列 (たとえば環境変数やコマンド行) は内部表現のままなので、
各フィールドは NULL バイト (\(aq\\0\(aq) で区切られている。
だから、\fIod \-c\fP や \fItr "\\000" "\\n"\fP を使えば、
それらはより読みやすくなる。
.\"O Alternatively, \fIecho \`cat <file>\`\fP works well.
また \fIecho \`cat <file>\`\fP でもよい。

.\"O This manual page is incomplete, possibly inaccurate, and is the kind
.\"O of thing that needs to be updated very often.
このマニュアルは不完全であり、たぶん不正確で、しばしば更新される必要がある。
.\"O .\" .SH ACKNOWLEDGEMENTS
.\" .SH 謝辞
.\"O .\" The material on /proc/sys/fs and /proc/sys/kernel is closely based on
.\"O .\" kernel source documentation files written by Rik van Riel.
.\" /proc/sys/fs と /proc/sys/kernel の資料は、
.\" Rik van Riel が書いたカーネルソースファイルのドキュメントに
.\" 密接に基づいている。
.\"O .SH SEE ALSO
.SH 関連項目
.BR cat (1),
.BR dmesg (1),
.BR find (1),
.BR free (1),
.BR ps (1),
.BR tr (1),
.BR uptime (1),
.BR chroot (2),
.BR mmap (2),
.BR readlink (2),
.BR syslog (2),
.BR slabinfo (5),
.BR hier (7),
.BR time (7),
.BR arp (8),
.BR hdparm (8),
.BR ifconfig (8),
.BR init (8),
.BR lsmod (8),
.BR lspci (8),
.BR mount (8),
.BR netstat (8),
.BR procinfo (8),
.BR route (8)
.br
.\"O The kernel source files:
カーネルのソースファイル:
.IR Documentation/filesystems/proc.txt ,
.IR Documentation/sysctl/vm.txt
