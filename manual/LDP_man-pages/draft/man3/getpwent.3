.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"
.\" Modified Sat Jul 24 19:22:14 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon May 27 21:37:47 1996 by Martin Schulze (joey@linux.de)
.\"
.\" Japanese Version Copyright (c) 1997 HIROFUMI Nishizuka
.\"	all rights reserved.
.\" Translated 1997-12-18, HIROFUMI Nishizuka <nishi@rpts.cl.nec.co.jp>
.\" Updated 2005-09-06, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH GETPWENT 3  2010-09-20 "GNU" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O getpwent, setpwent, endpwent \- get password file entry
getpwent, setpwent, endpwent \- パスワードファイルのエントリの取得
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <sys/types.h>
.B #include <pwd.h>
.sp
.B struct passwd *getpwent(void);
.sp
.B void setpwent(void);
.sp
.B void endpwent(void);
.fi
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR getpwent (),
.BR setpwent (),
.BR endpwent ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.RE
.ad b
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .BR getpwent ()
.\"O function returns a pointer to a structure containing
.\"O the broken-out fields of a record from the password database
.\"O (e.g., the local password file
.\"O .IR /etc/passwd ,
.\"O NIS, and LDAP).
.\"O The first time
.\"O .BR getpwent ()
.\"O is called, it returns the first entry; thereafter, it returns successive
.\"O entries.
.BR getpwent ()
関数は、パスワード・データベースから取得したエントリを
要素毎に分解し、各要素を格納した構造体へのポインタを返す
(パスワード・データベースの例:
ローカルのパスワードファイル
.IR /etc/passwd ,
NIS, LDAP)。
.BR getpwent ()
は、最初に呼び出された時は最初のエントリを返し、それ以降は
呼び出される毎に次のエントリを返す。
.PP
.\"O The
.\"O .BR setpwent ()
.\"O function rewinds to the beginning
.\"O of the password database.
.BR setpwent ()
関数を使うと、パスワード・データベースの先頭に戻る。
.PP
.\"O The
.\"O .BR endpwent ()
.\"O function is used to close the password database
.\"O after all processing has been performed.
.BR endpwent ()
関数は、全ての処理が終わった後にパスワード・
データベースをクローズする。
.PP
.\"O The \fIpasswd\fP structure is defined in \fI<pwd.h>\fP as follows:
\fIpasswd\fP 構造体は \fI<pwd.h>\fP で以下のように定義されている:
.sp
.in +4n
.nf
struct passwd {
.\"O     char   *pw_name;       /* username */
.\"O     char   *pw_passwd;     /* user password */
.\"O     uid_t   pw_uid;        /* user ID */
.\"O     gid_t   pw_gid;        /* group ID */
.\"O     char   *pw_gecos;      /* real name */
.\"O     char   *pw_dir;        /* home directory */
.\"O     char   *pw_shell;      /* shell program */
.\"O     char    *pw_name;      /* ユーザ名 */
    char   *pw_passwd;     /* ユーザのパスワード */
    uid_t   pw_uid;        /* ユーザ ID */
    gid_t   pw_gid;        /* グループ ID */
    char   *pw_gecos;      /* 実名 */
    char   *pw_dir;        /* ホームディレクトリ */
    char   *pw_shell;      /* シェルプログラム */
};
.fi
.in
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O The
.\"O .BR getpwent ()
.\"O function returns a pointer to a
.\"O .I passwd
.\"O structure, or NULL if
.\"O there are no more entries or an error occurs.
.\"O If an error occurs,
.\"O .I errno
.\"O is set appropriately.
.\"O If one wants to check
.\"O .I errno
.\"O after the call, it should be set to zero before the call.
.BR getpwent ()
関数は
.I passwd
構造体へのポインタを返す。
これ以上エントリが無いか、エラーが発生した場合は NULL を返す。
エラーが発生すると、
.I errno
が適切に設定される。
この関数の呼び出し後に
.I errno
をチェックしたい場合は、呼び出し前に
.I errno
を 0 に設定しておかないといけない。

.\"O The return value may point to a static area, and may be overwritten
.\"O by subsequent calls to
.\"O .BR getpwent (),
.\"O .BR getpwnam (3),
.\"O or
.\"O .BR getpwuid (3).
.\"O (Do not pass the returned pointer to
.\"O .BR free (3).)
返り値は静的な領域を指しており、その後の
.BR getpwent (),
.BR getpwnam (3),
.BR getpwuid (3)
の呼び出しで上書きされるかもしれない。
(返されたポインタを
.BR free (3)
に渡さないこと。)
.\"O .SH ERRORS
.SH エラー
.TP
.B EINTR
.\"O A signal was caught.
シグナルが捕捉された。
.TP
.B EIO
.\"O I/O error.
入出力エラー。
.TP
.B EMFILE
.\"O The maximum number
.\"O .RB ( OPEN_MAX )
.\"O of files was open already in the calling process.
呼び出し元プロセスがオープンされているファイル数が
すでに上限
.RB ( OPEN_MAX )
であった。
.TP
.B ENFILE
.\"O The maximum number of files was open already in the system.
システムでオープンされているファイル数がすでに上限であった。
.TP
.B ENOMEM
.\"O .\" not in POSIX
.\"O Insufficient memory to allocate
.\"O .I passwd
.\"O structure.
.\"O .\" to allocate the passwd structure, or to allocate buffers
.\" POSIX にはない。
.I passwd
構造体に割り当てるメモリが十分なかった。
.TP
.B ERANGE
.\"O Insufficient buffer space supplied.
十分なバッファ空間がない。
.\"O .SH FILES
.SH ファイル
.TP
.I /etc/passwd
.\"O local password database file
ローカルのパスワード・データベースファイル
.\"O .SH "CONFORMING TO"
.SH 準拠
SVr4, 4.3BSD, POSIX.1-2001.
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR fgetpwent (3),
.BR getpw (3),
.BR getpwent_r (3),
.BR getpwnam (3),
.BR getpwuid (3),
.BR putpwent (3),
.BR passwd (5)
