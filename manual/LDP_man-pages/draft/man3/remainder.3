.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-08-10 Walter Harms
.\"	(walter.harms@informatik.uni-oldenburg.de)
.\" Modified 2003-11-18, 2004-10-05 aeb
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\" and Copyright (c) 2008 Akihiro MOTOKI
.\" Translated 2004-09-02, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated 2005-02-26, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Modified 2005-02-26, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated 2008-09-16, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH REMAINDER 3 2010-09-20 "" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O drem, dremf, dreml, remainder, remainderf, remainderl \- \
.\"O floating-point remainder function
drem, dremf, dreml, remainder, remainderf, remainderl \- 浮動小数点剰余関数
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <math.h>
.sp
.\"O /* The C99 versions */
/* C99 版 */
.BI "double remainder(double " x ", double " y );
.BI "float remainderf(float " x ", float " y );
.BI "long double remainderl(long double " x ", long double " y );
.sp
.\"O /* Obsolete synonyms */
/* 廃止された別名 */
.BI "double drem(double " x ", double " y );
.BI "float dremf(float " x ", float " y );
.BI "long double dreml(long double " x ", long double " y );
.sp
.fi
.\"O Link with \fI\-lm\fP.
\fI\-lm\fP でリンクする。
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR remainder ():
.RS 4
_SVID_SOURCE || _BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 ||
_XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED ||
_ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR remainderf (),
.BR remainderl ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.br
.BR drem (),
.BR dremf (),
.BR dreml ():
.RS 4
_SVID_SOURCE || _BSD_SOURCE
.RE
.ad b
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .BR remainder ()
.\"O function computes the remainder of dividing
.\"O .I x
.\"O by
.\"O .IR y .
.BR remainder ()
関数は
.I x
を
.I y
で割った余りを計算する。
.\"O The return value is
.\"O \fIx\fP\-\fIn\fP*\fIy\fP,
.\"O where
.\"O .I n
.\"O is the value
.\"O .IR "x\ /\ y" ,
.\"O rounded to the nearest integer.
返り値は
\fIx\fP\-\fIn\fP*\fIy\fP
である。
ここで
.I n
は
.I "x\ /\ y"
の値を最も近い整数に丸めたものである。
.\"O If the absolute value of
.\"O \fIx\fP\-\fIn\fP*\fIy\fP
.\"O is 0.5,
.\"O .I n
.\"O is chosen to be even.
\fIx\fP\-\fIn\fP*\fIy\fP
の絶対値が 0.5 の場合、偶数になるように
.I n
が選ばれる。

.\"O These functions are unaffected by the current rounding mode (see
.\"O .BR fenv (3)).
これらの関数は、現在の丸めモードの影響を受けない (丸めモードについては
.BR fenv (3)
を参照)。
.LP
.\"O The
.\"O .BR drem ()
.\"O function does precisely the same thing.
.BR drem ()
関数はこれと全く同じ動作をする。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O On success, these
.\"O functions return the floating-point remainder,
.\"O \fIx\fP\-\fIn\fP*\fIy\fP.
.\"O If the return value is 0, it has the sign of
.\"O .IR x .
成功すると、これらの関数は浮動小数点の剰余 \fIx\fP\-\fIn\fP*\fIy\fP を返す。
返り値が 0 の場合、その符号は
.I x
と同じになる。

.\"O If
.\"O .I x
.\"O or
.\"O .I y
.\"O is a NaN, a NaN is returned.
.I x
か
.I y
が NaN の場合、NaN が返される。

.\"O If
.\"O .I x
.\"O is an infinity,
.\"O and
.\"O .I y
.\"O is not a NaN,
.\"O a domain error occurs, and
.\"O a NaN is returned.
.I x
が無限大で
.I y
が NaN でない場合、
領域エラー (domain error) が発生し、NaN が返される。

.\"O If
.\"O .I y
.\"O is zero,
.\" FIXME . Instead, glibc gives a domain error even if x is a NaN
.\"O and
.\"O .I x
.\"O is not a NaN,
.\" Interestingly, remquo(3) does not have the same problem.
.\"O a domain error occurs, and
.\"O a NaN is returned.
.I y
がゼロで
.I x
が NaN でない場合、
領域エラーが発生し、NaN が返される。
.\"O .SH ERRORS
.SH エラー
.\"O See
.\"O .BR math_error (7)
.\"O for information on how to determine whether an error has occurred
.\"O when calling these functions.
これらの関数を呼び出した際にエラーが発生したかの判定方法についての情報は
.BR math_error (7)
を参照のこと。
.PP
.\"O The following errors can occur:
以下のエラーが発生する可能性がある。
.TP
.\"O Domain error: \fIx\fP is an infinity and \fIy\fP is not a NaN
領域エラー (domain error): \fIx\fP が無限大で \fIy\fP が NaN ではない
.\" .I errno
.\" is set to
.\" .BR EDOM .
.\"O An invalid floating-point exception
.\"O .RB ( FE_INVALID )
.\"O is raised.
不正 (invalid) 浮動小数点例外
.RB ( FE_INVALID )
が上がる。
.IP
.\"O These functions do not set
.\"O .IR errno
.\"O for this case.
これらの関数は、この場合に
.I errno
を設定しない。
.\" FIXME . Is it intentional that these functions do not set errno?
.\" They do set errno for the y == 0 case, below.
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6783
.TP
.\"O Domain error: \fIy\fP is zero\" [XXX see bug above] and \fIx\fP is not a NaN
領域エラー: \fIy\fP がゼロで \fIx\fP が NaN ではない (下記の「バグ」参照)
.\"O .I errno
.\"O is set to
.\"O .BR EDOM .
.\"O An invalid floating-point exception
.\"O .RB ( FE_INVALID )
.\"O is raised.
.I errno
に
.B EDOM
が設定される。
不正 (invalid) 浮動小数点例外
.RB ( FE_INVALID )
が上がる。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\" IEC 60559.
.\"O The functions
.\"O .BR remainder (),
.\"O .BR remainderf (),
.\"O and
.\"O .BR remainderl ()
.\"O are specified in C99 and POSIX.1-2001.
関数
.BR remainder (),
.BR remainderf (),
.BR remainderl ()
は C99 と POSIX.1-2001 で規定されている。

.\"O The function
.\"O .BR drem ()
.\"O is from 4.3BSD.
.\"O The
.\"O .I float
.\"O and
.\"O .I "long double"
.\"O variants
.\"O .BR dremf ()
.\"O and
.\"O .BR dreml ()
.\"O exist on some systems, such as Tru64 and glibc2.
.\"O Avoid the use of these functions in favor of
.\"O .BR remainder ()
.\"O etc.
関数
.BR drem ()
は 4.3BSD に由来する。
.I float
と
.I "long double"
版の
.BR dremf ()
と
.BR dreml ()
は、Tru64 や glibc2 のようないくつかのシステムに存在する。
これらの関数の使用は避けて、
.BR remainder ()
などを使用すること。
.\"O .SH BUGS
.SH バグ
.\"O The call
.\"O 
.\"O     remainder(nan(""), 0);
.\"O 
.\"O returns a NaN, as expected, but wrongly causes a domain error;
.\"O it should yield a silent NaN.

    remainder(nan(""), 0);

の呼び出しを行うと、期待通り Nan が返るが、誤って領域エラーが発生する。
正しくはエラーなしの Nan となるべきである。
.\" FIXME . this bug occurs as at glibc 2.8.
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6779
.\"O .SH EXAMPLE
.SH 例
.\"O The call "remainder(29.0, 3.0)" returns \-1.
"remainder(29.0, 3.0)" を呼び出すと \-1 を返す。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR div (3),
.BR fmod (3),
.BR remquo (3)
