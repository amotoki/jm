.\" Copyright (c) 1999 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 1997-2000 Kazuyuki Tanisako and NAKANO Takeo
.\"         all rights reserved.
.\" Translated 1997-05-17, Kazuyuki Tanisako <tanisako@osa.dec-j.co.jp>
.\" Modified 1997-05-27, Kazuyuki Tanisako <tanisako@osa.dec-j.co.jp>
.\" Modified 1998-02-04, Kazuyuki Tanisako <tanisako@osa.dec-j.co.jp>
.\" Updated and Modified 2000-10-12, NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated 2006-04-14, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.29
.\" Updated 2006-07-26, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.36
.\"
.\"WORD:	temporary file		テンポラリファイル
.\"WORD:	filename		ファイル名
.\"WORD:	function		関数
.\"WORD:	directory		ディレクトリ
.\"WORD:	environment variable	環境変数
.\"WORD:	argument		引き数
.\"WORD:	storage			保存領域
.\"WORD:	pointer			ポインター
.\"
.TH TEMPNAM 3  2008-08-06 "" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O tempnam \- create a name for a temporary file
tempnam \- テンポラリファイルの名前を作成する
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <stdio.h>
.sp
.BI "char *tempnam(const char *" dir ", const char *" pfx );
.fi
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR tempnam ():
_BSD_SOURCE || _SVID_SOURCE
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .BR tempnam ()
.\"O function returns a pointer to a string that is a valid filename,
.\"O and such that a file with this name did not exist when
.\"O .BR tempnam ()
.\"O checked.
.\"O The filename suffix of the pathname generated will start with
.\"O .I pfx
.\"O in case
.\"O .I pfx
.\"O is a non-NULL string of at most five bytes.
.\"O The directory prefix part of the pathname generated is required to
.\"O be "appropriate" (often that at least implies writable).
.BR tempnam ()
関数はファイル名として正しい文字列へのポインターを返す。
このファイル名を持つファイルは、
.BR tempnam ()
がチェックした時点においては存在しない (しなかった)。
.I pfx
が NULL でない 5 バイト以内の文字列であれば、
生成されるパス名のうちのファイル名の部分は
.I pfx
から始まるものになる。
生成されるディレクトリの部分は、「適切」でなければならない
(大抵の場合、「適切」であるためにはまず少なくとも
書き込み可能でなければならない)。

.\"O Attempts to find an appropriate directory go through the following
.\"O steps:
適切なディレクトリの探索は、以下の手順にしたがって行われる。
.TP 3
a)
.\"O In case the environment variable
.\"O .B TMPDIR
.\"O exists and
.\"O contains the name of an appropriate directory, that is used.
環境変数
.B TMPDIR
が設定されていて、
その内容が適切なディレクトリの名前なら、それを用いる。
.TP
b)
.\"O Otherwise, if the
.\"O .I dir
.\"O argument is non-NULL and appropriate, it is used.
それ以外の場合、
.I dir
引き数が NULL でない文字列でかつ適切なら、それを用いる。
.TP
c)
.\"O Otherwise,
.\"O .I P_tmpdir
.\"O (as defined in
.\"O .IR <stdio.h> )
.\"O is used when appropriate.
それ以外の場合、
.RI ( <stdio.h>
で定義されている)
.I P_tmpdir
が適切なら、それを用いる。
.TP
d)
.\"O Finally an implementation-defined directory may be used.
最後に実装で定義されたディレクトリが用いられることになる。
.PP
.\"O The string returned by
.\"O .BR tempnam ()
.\"O is allocated using
.\"O .BR malloc (3)
.\"O and hence should be freed by
.\"O .BR free (3).
.BR tempnam ()
が返す文字列は
.BR malloc (3)
を使って確保される。そのため、
.BR free (3)
で解放すべきである。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O The
.\"O .BR tempnam ()
.\"O function returns a pointer to a unique temporary
.\"O filename, or NULL if a unique name cannot be generated.
.BR tempnam ()
関数は他と重ならないテンポラリファイル名へのポインタを返す。
他と重ならない名前が生成できなければ NULL を返す。
.\"O .SH ERRORS
.SH エラー
.TP
.B ENOMEM
.\"O Allocation of storage failed.
保存領域の割り当てに失敗した。
.\"O .SH "CONFORMING TO"
.SH 準拠
SVr4, 4.3BSD, POSIX.1-2001.
.\"O POSIX.1-2008 marks
.\"O .BR tempnam ()
.\"O as obsolete.
POSIX.1-2008 は
.BR tempnam ()
を廃止予定としている。
.\"O .SH NOTES
.SH 注意
.\"O Although
.\"O .BR tempnam ()
.\"O generates names that are difficult to guess,
.\"O it is nevertheless possible that between the time that
.\"O .BR tempnam ()
.\"O returns a pathname, and the time that the program opens it,
.\"O another program might create that pathname using
.\"O .BR open (2),
.\"O or create it as a symbolic link.
.\"O This can lead to security holes.
.\"O To avoid such possibilities, use the
.\"O .BR open (2)
.\"O .B O_EXCL
.\"O flag to open the pathname.
.\"O Or better yet, use
.\"O .BR mkstemp (3)
.\"O or
.\"O .BR tmpfile (3).
.BR tempnam ()
は推測が難しい名前を生成するが、それにもかかわらず、
.BR tempnam ()
がパス名を返してから、プログラムがそのファイルをオープンする
までの間に、別のプログラムが同じパス名で、ファイルを
.BR open (2)
で作成したり、シンボリックリンクを作成したりする可能性がある。
これはセキュリティホールにつながる可能性がある。
そのような可能性を回避するためには、
.BR open (2)
の
.B O_EXCL
フラグを使ってパス名をオープンすればよい。
もっといいのは、
.BR mkstemp (3)
や
.BR tmpfile (3)
を使うことである。

.\"O SUSv2 does not mention the use of
.\"O .BR TMPDIR ;
.\"O glibc will use it only
.\"O when the program is not set-user-ID.
.\"O On SVr4, the directory used under \fBd)\fP is
.\"O .I /tmp
.\"O (and this is what glibc does).
SUSv2 では
.B TMPDIR
に付いて言及されていない。
glibc は、プログラムが set-user-ID されていない場合に限ってこれを用いる。
SVr4 では \fBd)\fP で使用されるディレクトリを
.I /tmp
と定めている (glibc もこの通りである)。
.LP
.\"O Because it dynamically allocates memory used to return the pathname,
.\"O .BR tempnam ()
.\"O is reentrant, and thus thread safe, unlike
.\"O .BR tmpnam (3).
パス名を返すのに使用するメモリを動的に確保するので、
.BR tmpnam (3)
と違い、
.BR tempnam ()
はリエントラントであり、スレッドセーフである。
.LP
.\"O The
.\"O .BR tempnam ()
.\"O function generates a different string each time it is called,
.\"O up to
.\"O .B TMP_MAX
.\"O (defined in
.\"O .IR <stdio.h> )
.\"O times.
.\"O If it is called more than
.\"O .B TMP_MAX
.\"O times,
.\"O the behavior is implementation defined.
.BR tempnam ()
関数は最大
.B TMP_MAX
回まで、呼び出される度に異なる文字列を作成する
.RB ( TMP_MAX
は
.I <stdio.h>
で定義されている)。
もし
.B TMP_MAX
回以上呼び出された場合、動作は実装依存である。
.LP
.\"O .BR tempnam ()
.\"O uses at most the first five bytes from
.\"O .IR pfx .
.BR tempnam ()
は最大で
.I pfx
の先頭 5 バイトを使用する。

.\"O The glibc implementation of
.\"O .BR tempnam ()
.\"O will fail with the error
.\"O .B EEXIST
.\"O upon failure to find a unique name.
他と重ならない名前が見つけられなかった場合、glibc の
.BR tempnam ()
の実装はエラー
.B EEXIST
で失敗する。
.\"O .SH BUGS
.SH バグ
.\"O The precise meaning of "appropriate" is undefined;
.\"O it is unspecified how accessibility of a directory is determined.
「適切」という言葉の正確な意味は定義されていない。
ディレクトリに対してどの程度のアクセス権限が必要なのかは指定されていない。

.\"O Never use this function.
.\"O Use
.\"O .BR mkstemp (3)
.\"O or
.\"O .BR tmpfile (3)
.\"O instead.
決してこの関数を使ってはならない。代わりに
.BR mkstemp (3)
か
.BR tmpfile (3)
を使うこと。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR mkstemp (3),
.BR mktemp (3),
.BR tmpfile (3),
.BR tmpnam (3)
