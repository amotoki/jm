.\" Copyright 2002 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\" Distributed under GPL
.\" based on the description in glibc source and infopages
.\"
.\" Corrections and additions, aeb
.\"
.\" Japanese Version Copyright (c) 2002 Akihiro MOTOKI, all rights reserved.
.\" Translated Mon Feb  2 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH ENVZ_ADD 3 2007-05-18 "" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O envz_add, envz_entry, envz_get, envz_merge,
.\"O envz_remove, envz_strip \- environment string support
envz_add, envz_entry, envz_get, envz_merge,
envz_remove, envz_strip \- 環境変数文字列の操作
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B "#include <envz.h>"

.BI "error_t envz_add(char **" envz ", size_t *" envz_len ,
.ti 20n
.BI "const char *" name ", const char *" value );

.BI "char *envz_entry(const char *" envz ", size_t *" envz_len \
", const char *" name );

.BI "char *envz_get(const char *" envz ", size_t *" envz_len \
", const char *" name );

.BI "error_t envz_merge(char **" envz ", size_t *" envz_len ,
.ti 20n
.BI "const char *" envz2 ", size_t " envz2_len ", int " override );

.BI "void envz_remove(char **" envz ", size_t *" envz_len \
", const char *" name );

.BI "void envz_strip(char **" envz ", size_t *" envz_len );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O These functions are glibc-specific.
これらの関数 glibc 固有である。
.LP
.\"O An argz vector is a pointer to a character buffer together with a length,
.\"O see
.\"O .BR argz_add (3).
.\"O An envz vector is a special argz vector, namely one where the strings
.\"O have the form "name=value".
.\"O Everything after the first \(aq=\(aq is considered
.\"O to be the value.
.\"O If there is no \(aq=\(aq, the value is taken to be NULL.
.\"O (While the value in case of a trailing \(aq=\(aq is the empty string "".)
argz vector は長さ情報付きの文字バッファへのポインタである。
.BR argz_add (3)
を参照のこと。
envz vector は、文字列が "name=value (名前=値)" の形式になっている特別な
argz vector である。
最初の \(aq=\(aq 以降はすべて値とみなされる。\(aq=\(aq がなければ、
値は NULL と解釈される。(文字列の一番最後の文字が \(aq=\(aq の場合、値は空文字列
"" と解釈される。)
.LP
.\"O These functions are for handling envz vectors.
これらの関数は envz vector を操作するためのものである。
.LP
.\"O .BR envz_add ()
.\"O adds the string
.\"O .RI \&" name = value \&"
.\"O (in case
.\"O .I value
.\"O is non-NULL) or
.\"O .RI \&" name \&"
.\"O (in case
.\"O .I value
.\"O is NULL) to the envz vector
.\"O .RI ( *envz ,\  *envz_len )
.\"O and updates
.\"O .I *envz
.\"O and
.\"O .IR *envz_len .
.\"O If an entry with the same
.\"O .I name
.\"O existed, it is removed.
.BR envz_add ()
は、文字列
.RI \&" name = value \&"
.RI ( value
が NULL でない場合) または
.RI \&" name \&"
.RI ( value
が NULL の場合) を
envz vector
.RI ( *envz ,\  *envz_len )
に追加し、
.I *envz
と
.I *envz_len
を更新する。
.I name
と同じ名前を持つエントリがあった場合、元のエントリは削除される。
.LP
.\"O .BR envz_entry ()
.\"O looks for
.\"O .I name
.\"O in the envz vector
.\"O .RI ( envz ,\  envz_len )
.\"O and returns the entry if found, or NULL if not.
.BR envz_entry ()
は、envz vector
.RI ( envz ,\  envz_len )
から名前が
.I name
のエントリを検索する。
見つかった場合はそのエントリを返し、見つからなかった場合は NULL を返す。
.LP
.\"O .BR envz_get ()
.\"O looks for
.\"O .I name
.\"O in the envz vector
.\"O .RI ( envz ,\  envz_len )
.\"O and returns the value if found, or NULL if not.
.\"O (Note that the value can also be NULL, namely when there is
.\"O an entry for
.\"O .I name
.\"O without \(aq=\(aq sign.)
.BR envz_get ()
は、envz vector
.RI ( envz ,\  envz_len )
から名前が
.I name
のエントリを検索する。
見つかった場合はエントリの値を返し、見つからなかった場合は NULL を返す。
(値は NULL の場合もあることに注意すること。名前が
.I name
のエントリに \(aq=\(aq 符号がない場合が該当する。)
.LP
.\"O .BR envz_merge ()
.\"O adds each entry in
.\"O .I envz2
.\"O to
.\"O .IR *envz ,
.\"O as if with
.\"O .BR envz_add ().
.\"O If
.\"O .I override
.\"O is true, then values in
.\"O .I envz2
.\"O will supersede those with the same name in
.\"O .IR *envz ,
.\"O otherwise not.
.BR envz_merge ()
は、
.BR envz_add ()
と同じように
.I envz2
の各エントリを
.I *envz
に追加する。
.I override
が真の場合、
.I envz2
の値で
.I *envz
内の同じ名前をもつ値は上書きされる。
偽の場合は上書きされない。
.LP
.\"O .BR envz_remove ()
.\"O removes the entry for
.\"O .I name
.\"O from
.\"O .RI ( *envz ,\  *envz_len )
.\"O if there was one.
.BR envz_remove ()
は、名前が
.I name
のエントリがあれば
.RI ( *envz ,\  *envz_len )
から削除する。
.LP
.\"O .BR envz_strip ()
.\"O removes all entries with value NULL.
.BR envz_strip ()
は、値が NULL のエントリをすべて削除する。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O All envz functions that do memory allocation have a return type of
.\"O \fIerror_t\fP, and return 0 for success, and \fBENOMEM\fP
.\"O if an allocation error occurs.
メモリ割り当てを行う envz 関数群はすべて \fIerror_t\fP 型の返り値を持つ。
成功した場合は 0 を返し、割り当てエラーが発生した場合は
\fBENOMEM\fP を返す。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O These functions are a GNU extension.
.\"O Handle with care.
これらの関数は GNU による拡張である。注意して使用すること。
.\"O .SH EXAMPLE
.SH 例
.nf
#include <stdio.h>
#include <stdlib.h>
#include <envz.h>

int
main(int argc, char *argv[], char *envp[])
{
    int i, e_len = 0;
    char *str;

    for (i = 0; envp[i] != NULL; i++)
        e_len += strlen(envp[i]) + 1;

    str = envz_entry(*envp, e_len, "HOME");
    printf("%s\en", str);
    str = envz_get(*envp, e_len, "HOME");
    printf("%s\en", str);
    exit(EXIT_SUCCESS);
}
.fi
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR argz_add (3)
