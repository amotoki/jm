.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"
.\" Japanese Version Copyright (c) 1999 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Tue Jan 11 00:56:10 JST 2000
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\"
.TH MBSNRTOWCS 3  2011-10-01 "GNU" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O mbsnrtowcs \- convert a multibyte string to a wide-character string
mbsnrtowcs \- マルチバイト文字列をワイド文字列に変換する
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <wchar.h>
.sp
.BI "size_t mbsnrtowcs(wchar_t *" dest ", const char **" src ,
.BI "                  size_t " nms ", size_t " len ", mbstate_t *" ps );
.fi
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR mbsnrtowcs ():
.PD 0
.ad l
.RS 4
.TP 4
.\"O Since glibc 2.10:
glibc 2.10 以降:
_XOPEN_SOURCE\ >=\ 700 || _POSIX_C_SOURCE\ >=\ 200809L
.TP
.\"O Before glibc 2.10:
glibc 2.10 より前:
_GNU_SOURCE
.RE
.ad
.PD
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .BR mbsnrtowcs ()
.\"O function is like the
.\"O .BR mbsrtowcs (3)
.\"O function, except that
.\"O the number of bytes to be converted, starting at \fI*src\fP, is limited to
.\"O \fInms\fP.
.BR mbsnrtowcs ()
関数は
.BR mbsrtowcs (3)
関数に似ているが
変換するバイト数が \fI*src\fP から始まる \fInms\fP バイトに制限されている
点が異なっている。
.PP
.\"O If \fIdest\fP is not a NULL pointer, the
.\"O .BR mbsnrtowcs ()
.\"O function converts at
.\"O most \fInms\fP bytes from the
.\"O multibyte string \fI*src\fP to a wide-character string starting at \fIdest\fP.
.\"O At most \fIlen\fP wide characters are written to \fIdest\fP.
.\"O The shift state
.\"O \fI*ps\fP is updated.
.\"O The conversion is effectively performed by repeatedly
.\"O calling
.\"O .I "mbrtowc(dest, *src, n, ps)"
.\"O where \fIn\fP is some
.\"O positive number, as long as this call succeeds, and then incrementing
.\"O \fIdest\fP by one and \fI*src\fP by the number of bytes consumed.
.\"O The
.\"O conversion can stop for three reasons:
\fIdest\fP が NULL ポインターでなければ
.BR mbsnrtowcs ()
関数は
\fI*src\fP からのマルチバイト文字列の最大 \fInms\fP までを
\fIdest\fP からのワイド文字列に変換する。
最大 \fIlen\fP 文字のワイド文字が \fIdest\fP に書き込まれる。
同時にシフト状態 \fI*ps\fP を更新する。
変換は
.I "mbrtowc(dest, *src, n, ps)"
を、この呼び出しが成功する限り、繰り返し実行したのと実質的に同様である。
ここでの \fIn\fP は正の数であり、繰り返しごとに \fIdest\fP が 1 増加させられ、
\fI*src\fP が消費したバイト数だけ増加させられる。変換は以下の三つの
いずれかの条件で停止する:
.IP 1. 3
.\"O An invalid multibyte sequence has been encountered.
.\"O In this case \fI*src\fP
.\"O is left pointing to the invalid multibyte sequence,
.\"O .I (size_t)\ \-1
.\"O is returned,
.\"O and \fIerrno\fP is set to \fBEILSEQ\fP.
不正なマルチバイト列に遭遇した。この場合には \fI*src\fP は不正な
マルチバイト列を指すようにして、
.I (size_t)\ \-1
を返し、\fIerrno\fP に \fBEILSEQ\fP を設定する。
.IP 2.
.\"O The \fInms\fP limit forces a stop,
.\"O or \fIlen\fP non-L\(aq\\0\(aq wide characters
.\"O have been stored at \fIdest\fP.
.\"O In this case \fI*src\fP is left pointing to the
.\"O next multibyte sequence to be converted, and the number of wide characters
.\"O written to \fIdest\fP is returned.
\fInms\fP 制限によって強制的に停止するか、\fIlen\fP 文字の L\(aq\\0\(aq 以外の
ワイド文字を \fIdest\fP に格納した場合。この場合は \fI*src\fP は
次に変換されるマルチバイト列を指すようにして、\fIdest\fP に書き込まれた
ワイド文字の数を返す。
.IP 3.
.\"O The multibyte string has been completely converted, including the
.\"O terminating null wide character (\(aq\\0\(aq)
.\"O (which has the side effect of bringing back \fI*ps\fP to the
.\"O initial state).
.\"O In this case \fI*src\fP is set to NULL, and the number of wide
.\"O characters written to \fIdest\fP,
.\"O excluding the terminating null wide character,
.\"O is returned.
マルチバイト文字列が終端の NULL ワイド文字 (\(aq\\0\(aq)
まで含めて完全に変換された場合。
(この時、副作用として \fI*ps\fP が初期状態に戻される。)
この場合は \fI*src\fP には NULL が設定され、
\fIdest\fP に書き込まれた文字数 (終端の NULL ワイド文字は含まれない) を返す。
.PP
.\"O If \fIdest\fP is NULL, \fIlen\fP is ignored, and the conversion proceeds as
.\"O above, except that the converted wide characters
.\"O are not written out to memory,
.\"O and that no destination length limit exists.
\fIdest\fP が NULL の場合、\fIlen\fP は無視され、上記と同様の変換が
行われるが、変換されたワイド文字はメモリに書き込まれず、変換先の上限
が存在しない。
.PP
.\"O In both of the above cases, if \fIps\fP is a NULL pointer, a static anonymous
.\"O state only known to the mbsnrtowcs function is used instead.
上記のどちらの場合でも、\fIps\fP が NULL ポインターならば、代りに
mbsnrtowcs 関数のみが使用する静的で名前のない状態が使用される。
.PP
.\"O The programmer must ensure that there is room for at least \fIlen\fP wide
.\"O characters at \fIdest\fP.
プログラマーは \fIdest\fP に最低でも \fIlen\fP ワイド文字を書き込むこ
とができる空間があることを保証しなければならない。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O The
.\"O .BR mbsnrtowcs ()
.\"O function returns the number of wide characters
.\"O that make up the converted part of the wide-character string,
.\"O not including the terminating null wide character.
.\"O If an invalid multibyte sequence was
.\"O encountered,
.\"O .I (size_t)\ \-1
.\"O is returned, and \fIerrno\fP set to \fBEILSEQ\fP.
.BR mbsnrtowcs ()
関数はワイド文字列に変換完了したワイド文字の数を返す。
終端のナルワイド文字は含まない。不正なマルチバイト列に遭遇した場合には
.I (size_t)\ \-1
を返し、\fIerrno\fP に \fBEILSEQ\fP を設定する。
.\"O .SH "CONFORMING TO"
.SH 準拠
POSIX.1-2008.
.\"O .SH NOTES
.SH 注意
.\"O The behavior of
.\"O .BR mbsnrtowcs ()
.\"O depends on the
.\"O .B LC_CTYPE
.\"O category of the
.\"O current locale.
.BR mbsnrtowcs ()
の動作は現在のロケールの
.B LC_CTYPE
カテゴリに依存している。
.PP
.\"O Passing NULL as \fIps\fP is not multithread safe.
\fIps\fP として NULL を渡すことはマルチスレッドでは安全でない。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR iconv (3),
.BR mbsrtowcs (3)
