.\" Copyright (C), 1995, Graeme W. Wilford. (Wilf.)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Wed Jun 14 16:10:28 BST 1995 Wilf. (G.Wilford@ee.surrey.ac.uk)
.\" Tiny change in formatting - aeb, 950812
.\" Modified 8 May 1998 by Joseph S. Myers (jsm28@cam.ac.uk)
.\"
.\" Japanese Version Copyright (c) 1998 Takatsugu Nokubi
.\"	all rights reserved.
.\" Translated 1998-06-30, Takatsugu Nokubi
.\" Updated & Modified 2001-11-05, Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified 2005-02-24, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated 2008-08-02, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.05
.\"
.\"WORD:	bitwise-or		ビットごとのOR
.\"WORD:	element			(構造体)要素
.\"WORD:	collating element	照合順序の要素
.\"
.\" show the synopsis section nicely
.de xx
.in \\n(INu+\\$1
.ti -\\$1
..
.TH REGEX 3 2011-09-27 "GNU" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O regcomp, regexec, regerror, regfree \- POSIX regex functions
regcomp, regexec, regerror, regfree \- POSIX regex 関数
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <sys/types.h>
.B #include <regex.h>

.BI "int regcomp(regex_t *" preg ", const char *" regex ", int " cflags );

.BI "int regexec(const regex_t *" preg ", const char *" string \
", size_t " nmatch ,
.BI "            regmatch_t " pmatch[] ", int " eflags );

.BI "size_t regerror(int " errcode ", const regex_t *" preg ", char *" errbuf ,
.BI "                size_t " errbuf_size );

.BI "void regfree(regex_t *" preg );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O .SS "POSIX Regex Compiling"
.SS "POSIX regex コンパイル"
.\"O .BR regcomp ()
.\"O is used to compile a regular expression into a form that is suitable
.\"O for subsequent
.\"O .BR regexec ()
.\"O searches.
.BR regcomp ()
は、正規表現をコンパイルして、
.BR regexec ()
での検索処理に適合する形態にする。

.\"O .BR regcomp ()
.\"O is supplied with
.\"O .IR preg ,
.\"O a pointer to a pattern buffer storage area;
.\"O .IR regex ,
.\"O a pointer to the null-terminated string and
.\"O .IR cflags ,
.\"O flags used to determine the type of compilation.
.BR regcomp ()
はパターンを記憶するバッファへのポインタ
.IR preg 、
ヌル文字で終端された文字列
.IR regex 、
そしてコンパイルの形式を決めるためのフラグ
.I cflag
を引数に伴う。

.\"O All regular expression searching must be done via a compiled pattern
.\"O buffer, thus
.\"O .BR regexec ()
.\"O must always be supplied with the address of a
.\"O .BR regcomp ()
.\"O initialized pattern buffer.
全ての正規表現検索は、コンパイルされたパターンによって行わなければならない。
よって、
.BR regexec ()
に指定するのは、必ず
.RB ( regcomp ()
によってコンパイルされた) パターンバッファへのアドレスでなければならない。

.\"O .I cflags
.\"O may be the
.\"O .RB bitwise- or
.\"O of one or more of the following:
.I cflags
には以下に示す定数一つ以上のビットごとの OR (bitwise-or) を指定する。
.TP
.B REG_EXTENDED
.\"O Use
.\"O .B POSIX
.\"O Extended Regular Expression syntax when interpreting
.\"O .IR regex .
.\"O If not set,
.\"O .B POSIX
.\"O Basic Regular Expression syntax is used.
.I regex
に
.B POSIX
拡張正規表現を使用する。もしこのフラグが設定されない場合、
.B POSIX
標準正規表現が使われる。
.TP
.B REG_ICASE
.\"O Do not differentiate case.
.\"O Subsequent
.\"O .BR regexec ()
.\"O searches using this pattern buffer will be case insensitive.
大文字小文字の違いを無視する。このフラグを指定してコンパイルされた
パターンバッファを用いて
.BR regexec ()
関数を呼び出すと、大文字小文字の区別を付けずに検索が行われる。
.TP
.B REG_NOSUB
.\"O Support for substring addressing of matches is not required.
.\"O The
.\"O .I nmatch
.\"O and
.\"O .I pmatch
.\"O arguments to
.\"O .BR regexec ()
.\"O are ignored if the pattern buffer supplied was compiled with this flag set.
このフラグを設定してコンパイルされたパターンバッファが
.BR regexec ()
の引数に指定されると、引き数
.IR nmatch ,
.I pmatch
が無視される。
.TP
.B REG_NEWLINE
.\"O Match-any-character operators don't match a newline.
全ての文字にマッチするオペレータに改行をマッチさせない。

.\"O A nonmatching list
.\"O .RB ( [^...] )
.\"O not containing a newline does not match a newline.
改行を含まない非マッチング文字リスト
.RB ( [^...] )
に改行をマッチさせない。

.\"O Match-beginning-of-line operator
.\"O .RB ( ^ )
.\"O matches the empty string immediately after a newline, regardless of
.\"O whether
.\"O .IR eflags ,
.\"O the execution flags of
.\"O .BR regexec (),
.\"O contains
.\"O .BR REG_NOTBOL .
.BR regexec ()
の実行時に指定するフラグ
.I eflags
に
.B REG_NOTBOL
を含むかどうかにかかわらず、行頭にマッチするオペレータ
.RB ( ^ )
を改行直後の空文字列にマッチさせる。

.\"O Match-end-of-line operator
.\"O .RB ( $ )
.\"O matches the empty string immediately before a newline, regardless of
.\"O whether
.\"O .I eflags
.\"O contains
.\"O .BR REG_NOTEOL .
.I eflags
に
.B REG_NOTEOL
を含むかどうかにかかわらず、行末にマッチするオペレータ
.RB ( $ )
を改行直前の空文字列にマッチさせる。
.\"O .SS "POSIX Regex Matching"
.SS "POSIX regex マッチング"
.\"O .BR regexec ()
.\"O is used to match a null-terminated string
.\"O against the precompiled pattern buffer,
.\"O .IR preg .
.BR regexec ()
は、
プリコンパイルされたパターンバッファ
.I preg
をヌル文字で終端された文字列にマッチさせる。
.\"O .I nmatch
.\"O and
.\"O .I pmatch
.\"O are used to provide information regarding the location of any matches.
.I nmatch
と
.I pmatch
はマッチングの位置に関する情報を取得するのに用いられる。
.\"O .I eflags
.\"O may be the
.\"O .RB bitwise- or
.\"O of one or both of
.\"O .B REG_NOTBOL
.\"O and
.\"O .B REG_NOTEOL
.\"O which cause changes in matching behavior described below.
.I eflags
には
.B REG_NOTBOL
と
.B REG_NOTEOL
のどちらか、もしくは両方のビットごとの
.BR OR " (bitwise-" or )
を指定し、以下で説明するようにマッチング動作を変化させる。
.TP
.\"O .B REG_NOTBOL
.\"O The match-beginning-of-line operator always fails to match (but see the
.\"O compilation flag
.\"O .B REG_NEWLINE
.\"O above)
.B REG_NOTBOL
行頭にマッチするオペレータは、必ずマッチに失敗する (コンパイル時のフラグ
.B REG_NEWLINE
の項目も参照)。
.\"O This flag may be used when different portions of a string are passed to
.\"O .BR regexec ()
.\"O and the beginning of the string should not be interpreted as the
.\"O beginning of the line.
このフラグは、複数行にまたがる文字列を
.BR regexec ()
で検索する際に、文字列の先頭を行の先頭として解釈させない場合に用いる。
.TP
.\"O .B REG_NOTEOL
.\"O The match-end-of-line operator always fails to match (but see the
.\"O compilation flag
.\"O .B REG_NEWLINE
.\"O above)
.B REG_NOTEOL
行末にマッチするオペレータは、必ずマッチに失敗する (コンパイル時のフラグ
.B REG_NEWLINE
の項目も参照)。
.\"O .SS "Byte Offsets"
.SS バイトオフセット
.\"O Unless
.\"O .B REG_NOSUB
.\"O was set for the compilation of the pattern buffer, it is possible to
.\"O obtain substring match addressing information.
パターンバッファのコンパイル時に
.B REG_NOSUB
が設定されない場合は、部分文字列のマッチング位置情報を得ることができる。
.\"O .I pmatch
.\"O must be dimensioned to have at least
.\"O .I nmatch
.\"O elements.
.I pmatch
は、少なくとも
.I nmatch
の大きさを持つように指定しなければならない。
.\"O These are filled in by
.\"O .BR regexec ()
.\"O with substring match addresses.
.\"O Any unused structure elements
.\"O will contain the value \-1.
.BR regexec ()
の実行によって、それらに部分文字列マッチング位置情報が代入される。
未使用の構造体要素には \-1 が値として代入される。

.\"O The
.\"O .I regmatch_t
.\"O structure which is the type of
.\"O .I pmatch
.\"O is defined in
.\"O .IR <regex.h> .
.I pmatch
の型である
.I regmatch_t
構造体は、
.I <regex.h>
内で定義される。

.in +4n
.nf
typedef struct {
    regoff_t rm_so;
    regoff_t rm_eo;
} regmatch_t;
.fi
.in

.\"O Each
.\"O .I rm_so
.\"O element that is not \-1 indicates the start offset of the next largest
.\"O substring match within the string.
.\"O The relative
.\"O .I rm_eo
.\"O element indicates the end offset of the match,
.\"O which is the offset of the first character after the matching text.
構造体要素
.I rm_so
の値が \-1 でない場合、それは文字列内での次の最大のマッチング部分の開始
オフセット位置を示す。それに対し、構造体要素
.I rm_eo
はマッチング部分の終了オフセット位置を示し、
マッチング部分の直後の文字のオフセット位置が使用される。
.\"O .SH "POSIX Error Reporting"
.SS "POSIX エラーレポート"
.\"O .BR regerror ()
.\"O is used to turn the error codes that can be returned by both
.\"O .BR regcomp ()
.\"O and
.\"O .BR regexec ()
.\"O into error message strings.
.BR regerror ()
は、
.BR regcomp ()
と
.BR regexec ()
の実行によって得られるエラーコードから、エラーメッセージ文字列を
得るのに用いられる。

.\"O .BR regerror ()
.\"O is passed the error code,
.\"O .IR errcode ,
.\"O the pattern buffer,
.\"O .IR preg ,
.\"O a pointer to a character string buffer,
.\"O .IR errbuf ,
.\"O and the size of the string buffer,
.\"O .IR errbuf_size .
.BR regerror ()
はエラーコード
.IR errcode 、
パターンバッファ
.IR preg 、
文字列バッファへのポインタ
.IR errbuf 、
文字列バッファのサイズ
.I errbuf_size
を引数にとる。
.\"O It returns the size of the
.\"O .I errbuf
.\"O required to contain the null-terminated error message string.
.\"O If both
.\"O .I errbuf
.\"O and
.\"O .I errbuf_size
.\"O are nonzero,
.\"O .I errbuf
.\"O is filled in with the first
.\"O .I "errbuf_size \- 1"
.\"O characters of the error message and a terminating null byte (\(aq\\0\(aq).
この関数は、ヌル文字で終端されたエラーメッセージ文字列を格納するのに必要な
.I errbuf
のサイズを返す。もし
.I errbuf
と
.I errbuf_size
の両方が非 0 値であれば、
.I errbuf
には最初の
.I "errbuf_size \- 1"
文字分にエラーメッセージと終端の NULL バイト (\(aq\\0\(aq)
が収まるように代入される。
.\"O .SS "POSIX Pattern Buffer Freeing"
.SS "POSIX パターンバッファ解放"
.\"O Supplying
.\"O .BR regfree ()
.\"O with a precompiled pattern buffer,
.\"O .I preg
.\"O will free the memory allocated to the pattern buffer by the compiling
.\"O process,
.\"O .BR regcomp ().
引数にコンパイルされたパターンバッファ
.I preg
を与えて
.BR regfree ()
を呼び出すと、
.BR regcomp ()
によるコンパイル時にパターンバッファに割り当てられたメモリが解放される。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O .BR regcomp ()
.\"O returns zero for a successful compilation or an error code for failure.
.BR regcomp ()
は、コンパイルの成功時には 0 を返し、失敗時にはエラーコードを返す。

.\"O .BR regexec ()
.\"O returns zero for a successful match or
.\"O .B REG_NOMATCH
.\"O for failure.
.BR regexec ()
は、マッチングの成功時には 0 を返し、失敗時には
.B REG_NOMATCH
を返す。
.\"O .SH ERRORS
.SH エラー
.\"O The following errors can be returned by
.\"O .BR regcomp ():
.BR regcomp ()
は以下のエラーを返す。
.TP
.B REG_BADBR
.\"O Invalid use of back reference operator.
無効な後方参照オペレータの使用。
.TP
.B REG_BADPAT
.\"O Invalid use of pattern operators such as group or list.
グループやリストなどの、パターンオペレータの無効な使用。
.TP
.B REG_BADRPT
.\"O Invalid use of repetition operators such as using \(aq*\(aq
.\"O as the first character.
\(aq*\(aq が最初の文字としてくるような、無効な繰り返しオペレータの使用。
.TP
.B REG_EBRACE
.\"O Un-matched brace interval operators.
インターバルオペレータ
.B {}
(brace interval operators) が閉じていない。
.TP
.B REG_EBRACK
.\"O Un-matched bracket list operators.
リストオペレータ
.B []
(bracket list operators) が閉じていない。
.TP
.B REG_ECOLLATE
.\"O Invalid collating element.
照合順序の要素 (collating element) として有効ではない。

(訳注) 照合順序の要素 (collating element) については、
.BR regex (7)
を参照。
.TP
.B REG_ECTYPE
.\"O Unknown character class name.
未知のキャラクタクラス名。
.TP
.B REG_EEND
.\"O Non specific error.
.\"O This is not defined by POSIX.2.
未定義エラー。これは POSIX.2 には定義されていない。
.TP
.B REG_EESCAPE
.\"O Trailing backslash.
正規表現がバックスラッシュで終っている。

(訳注) 日本語環境の場合、バックスラッシュとなるべき所が円記号で
表示されることがあるが、これは単に表示フォントの問題で、
内部的には同じ意味である。
.TP
.B REG_EPAREN
.\"O Un-matched parenthesis group operators.
グループオペレータ
.B ()
(parenthesis group operators) が閉じていない。
.TP
.B REG_ERANGE
.\"O Invalid use of the range operator, e.g., the ending point of the range
.\"O occurs prior to the starting point.
無効な範囲オペレータの使用。
例えば、範囲の終了位置が開始位置よりも前にあるような場合。
.TP
.B REG_ESIZE
.\"O Compiled regular expression requires a pattern buffer larger than 64Kb.
.\"O This is not defined by POSIX.2.
正規表現のコンパイルに、64Kb 以上のパターンバッファが必要。
これは POSIX.2 には定義されていない。
.TP
.B REG_ESPACE
.\"O The regex routines ran out of memory.
regex ルーチンがメモリを使いはたしている。
.TP
.B REG_ESUBREG
.\"O Invalid back reference to a subexpression.
サブエクスプレッション
.RB \e (...\e )
(subexpression) への無効な後方参照。
.\"O .SH "CONFORMING TO"
.SH 準拠
POSIX.1-2001.
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR grep (1),
.BR regex (7),
.\"O GNU regex manual
GNU regex マニュアル
