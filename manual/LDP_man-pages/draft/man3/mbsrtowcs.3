.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\" Japanese Version Copyright (c) 1999 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Tue Jan 11 00:56:08 JST 2000
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\"
.TH MBSRTOWCS 3  2011-09-28 "GNU" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O mbsrtowcs \- convert a multibyte string to a wide-character string
mbsrtowcs \- マルチバイト文字列をワイド文字列に変換する
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <wchar.h>
.sp
.BI "size_t mbsrtowcs(wchar_t *" dest ", const char **" src ,
.BI "                  size_t " len ", mbstate_t *" ps );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O If \fIdest\fP is not a NULL pointer, the
.\"O .BR mbsrtowcs ()
.\"O function converts the
.\"O multibyte string \fI*src\fP to a wide-character string starting at \fIdest\fP.
.\"O At most \fIlen\fP wide characters are written to \fIdest\fP.
.\"O The shift state
.\"O \fI*ps\fP is updated.
.\"O The conversion is effectively performed by repeatedly
.\"O calling
.\"O .I "mbrtowc(dest, *src, n, ps)"
.\"O where \fIn\fP is some
.\"O positive number, as long as this call succeeds, and then incrementing
.\"O \fIdest\fP by one and \fI*src\fP by the number of bytes consumed.
.\"O The conversion can stop for three reasons:
\fIdest\fP が NULL ポインターでなければ、
.BR mbsrtowcs ()
関数は
マルチバイト文字列 \fI*src\fP を \fIdest\fP から始まるワイド文字列に
変換する。\fIdest\fP には最大で \fIlen\fP 文字のワイド文字が
書き込まれる。同時にシフト状態 \fI*ps\fP を更新する。
変換は
.I "mbrtowc(dest, *src, n, ps)"
を、この呼び出しが成功する限り繰り返し実行したのと実質的に同様である。
ここで \fIn\fP は正の数であり、繰り返しごとに \fIdest\fP が 1 増加させられ、
\fI*src\fP が消費したバイト数だけ増加させられる。変換は以下の三つの
いずれかの条件で停止する:
.IP 1. 3
.\"O An invalid multibyte sequence has been encountered.
.\"O In this case \fI*src\fP
.\"O is left pointing to the invalid multibyte sequence,
.\"O .I (size_t)\ \-1
.\"O is returned,
.\"O and \fIerrno\fP is set to \fBEILSEQ\fP.
不正なマルチバイト列に遭遇した。この場合には \fI*src\fP は不正な
マルチバイト列を指すようにして、
.I (size_t)\ \-1
を返し、\fIerrno\fP に \fBEILSEQ\fP を設定する。
.IP 2.
.\"O \fIlen\fP non-L\(aq\\0\(aq wide characters have been stored at \fIdest\fP.
.\"O In this
.\"O case \fI*src\fP is left pointing to the next
.\"O multibyte sequence to be converted,
.\"O and the number of wide characters written to \fIdest\fP is returned.
\fIlen\fP 文字の L\(aq\\0\(aq 以外のワイド文字を \fIdest\fP に格納した場合。
この場合は \fI*src\fP は次に変換されるマルチバイト列を指すようにして、
\fIdest\fP に書き込まれたワイド文字の数を返す。
.IP 3.
.\"O The multibyte string has been completely converted, including the
.\"O terminating null wide character (\(aq\\0\(aq), which has the side
.\"O effect of bringing back \fI*ps\fP to the
.\"O initial state.
.\"O In this case \fI*src\fP is set to NULL, and the number of wide
.\"O characters written to \fIdest\fP,
.\"O excluding the terminating null wide character, is returned.
マルチバイト文字列が終端の NULL ワイド文字 (\(aq\\0\(aq) まで含めて完全に
変換された場合。この時、副作用として \fI*ps\fP が初期状態に戻される。
この場合は \fI*src\fP には NULL が設定され、終端の NULL ワイド文字を除いて
\fIdest\fP に書き込まれた文字数を返す。
.PP
.\"O If \fIdest\fP is NULL, \fIlen\fP is ignored,
.\"O and the conversion proceeds as above,
.\"O except that the converted wide characters are not written out to memory,
.\"O and that no length limit exists.
\fIdest\fP が NULL の場合、\fIlen\fP は無視され、上記と同様の変換が
行われるが、変換されたワイド文字はメモリに書き込まれず、変換先の上限
が存在しない。
.PP
.\"O In both of the above cases,
.\"O if \fIps\fP is a NULL pointer, a static anonymous
.\"O state only known to the
.\"O .BR mbsrtowcs ()
.\"O function is used instead.
上記のどちらの場合でも、\fIps\fP が NULL ポインターならば、
代りに
.BR mbsrtowcs ()
関数のみが使用する静的で名前のない状態が使用される。
.PP
.\"O The programmer must ensure that there is room for at least \fIlen\fP wide
.\"O characters at \fIdest\fP.
プログラマーは \fIdest\fP に最低でも \fIlen\fP ワイド文字を書き込むこ
とができる空間があることを保証しなければならない。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O The
.\"O .BR mbsrtowcs ()
.\"O function returns the number of wide characters that make
.\"O up the converted part of the wide-character string, not including the
.\"O terminating null wide character.
.\"O If an invalid multibyte sequence was
.\"O encountered,
.\"O .I (size_t)\ \-1
.\"O is returned, and \fIerrno\fP set to \fBEILSEQ\fP.
.BR mbsrtowcs ()
関数はワイド文字列に変換完了したワイド文字の数を返す。
終端のナルワイド文字は含まない。不正なマルチバイト列に遭遇した場合には
.I (size_t)\ \-1
を返し、\fIerrno\fP に \fBEILSEQ\fP を設定する。
.\"O .SH "CONFORMING TO"
.SH 準拠
C99.
.\"O .SH NOTES
.SH 注意
.\"O The behavior of
.\"O .BR mbsrtowcs ()
.\"O depends on the
.\"O .B LC_CTYPE
.\"O category of the
.\"O current locale.
.BR mbsrtowcs ()
の動作は現在のロケールの
.B LC_CTYPE
カテゴリに依存している。
.PP
.\"O Passing NULL as \fIps\fP is not multithread safe.
\fIps\fP として NULL を渡すことはマルチスレッドでは安全でない。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR iconv (3),
.BR mbsnrtowcs (3),
.BR mbstowcs (3)
