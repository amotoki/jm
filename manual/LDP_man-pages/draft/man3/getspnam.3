.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl) and
.\" Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" Distributed under GPL
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated 2004-08-20, Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.TH GETSPNAM 3  2010-02-25 "GNU" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O getspnam, getspnam_r, getspent, getspent_r, setspent, endspent,
.\"O fgetspent, fgetspent_r, sgetspent, sgetspent_r, putspent,
.\"O lckpwdf, ulckpwdf \- get shadow password file entry
getspnam, getspnam_r, getspent, getspent_r, setspent, endspent,fgetspent, fgetspent_r, sgetspent, sgetspent_r, putspent, lckpwdf, ulckpwdf \- shadow パスワードファイルのエントリを取得する
.\"O .SH SYNOPSIS
.SH 書式
.nf
.\"O /* General shadow password file API */
/* 一般的な shadow パスワードファイル API */
.br
.B #include <shadow.h>
.sp
.BI "struct spwd *getspnam(const char *" name );
.sp
.B struct spwd *getspent(void);
.sp
.B void setspent(void);
.sp
.B void endspent(void);
.sp
.BI "struct spwd *fgetspent(FILE *" fp );
.sp
.BI "struct spwd *sgetspent(const char *" s );
.sp
.BI "int putspent(struct spwd *" p ", FILE *" fp );
.sp
.B int lckpwdf(void);
.sp
.B int ulckpwdf(void);
.sp
.\"O /* GNU extension */
/* GNU 版における拡張 */
.br
.B #include <shadow.h>
.sp
.BI "int getspent_r(struct spwd *" spbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct spwd **" spbufp );
.sp
.BI "int getspnam_r(const char *" name ", struct spwd *" spbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct spwd **" spbufp );
.sp
.BI "int fgetspent_r(FILE *" fp ", struct spwd *" spbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct spwd **" spbufp );
.sp
.BI "int sgetspent_r(const char *" s ", struct spwd *" spbuf ,
.br
.BI "        char *" buf ", size_t " buflen ", struct spwd **" spbufp );
.fi
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR getspent_r (),
.BR getspnam_r (),
.BR fgetspent_r (),
.BR sgetspent_r ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE
.RE
.ad b
.\"O .SH DESCRIPTION
.SH 説明
.\"O Long ago it was considered safe to have encrypted passwords openly
.\"O visible in the password file.
.\"O When computers got faster and people
.\"O got more security-conscious, this was no longer acceptable.
昔は暗号化されたパスワードをパスワードファイルに
見えるように公開しておいても安全だと考えられていた。
.\"O Julianne Frances Haugh implemented the shadow password suite
.\"O that keeps the encrypted passwords in
.\"O the shadow password database
.\"O (e.g., the local shadow password file
.\"O .IR /etc/shadow ,
.\"O NIS, and LDAP),
.\"O readable only by root.
Julianne Frances Haugh は shadow パスワード・スイートを実装した。
これは暗号化されたパスワードを、root のみが読むことができる
shadow パスワード・データベース (例えば、
ローカルの shadow パスワードファイル
.IR /etc/shadow ,
NIS, LDAP)
に保持する。
.LP
.\"O The functions described below resemble those for
.\"O the traditional password database
.\"O (e.g., see
.\"O .BR getpwnam (3)
.\"O and
.\"O .BR getpwent (3)).
以下で説明する関数は、伝統的なパスワード・データベースに対する
関数に似ている (例えば
.BR getpwnam (3)
や
.BR getpwent (3)
を参照)。
.\"O .\" FIXME I've commented out the following for the
.\"O .\" moment.  The relationship between PAM and nsswitch.conf needs
.\"O .\" to be clearly documented in one place, which is pointed to by
.\"O .\" the pages for the user, group, and shadow password functions.
.\"O .\" (Jul 2005, mtk)
.\"O .\"
.\"O .\" This shadow password setup has been superseded by PAM
.\"O .\" (pluggable authentication modules), and the file
.\"O .\" .I /etc/nsswitch.conf
.\"O .\" now describes the sources to be used.
.\" FIXME 以下を一時的にコメントアウトした。
.\" PAM と nsswitch.conf の関係については、ユーザ、グループ、shadow
.\" パスワードの関数についてのページから参照されるどこかにはっきりと
.\" 記載しておく必要がある。
.\" (Jul 2005, mtk)
.\"
.\" この shadow パスワードの設定は
.\" PAM (pluggable authentication modules) で取り替えることができる。
.\" 現在のところ、どの情報源を使用するかは
.\" .I /etc/nsswitch.conf
.\" ファイルに記述される。
.LP
.\"O The
.\"O .BR getspnam ()
.\"O function returns a pointer to a structure containing
.\"O the broken-out fields of the record in the shadow password database
.\"O that matches the username
.\"O .IR name .
.BR getspnam ()
関数は、ユーザ名
.I name
にマッチする shadow パスワード・データベースのエントリを
要素毎に分解し、各要素を格納した構造体へのポインタを返す。
.LP
.\"O The
.\"O .BR getspent ()
.\"O function returns a pointer to the next entry in the shadow password
.\"O database.
.BR getspent ()
関数は shadow パスワード・データベースにおける次のエントリへのポインタを返す。
.\"O The position in the input stream is initialized by
.\"O .BR setspent ().
入力ストリームにおける位置は、
.BR setspent ()
で初期化される。
.\"O When done reading, the program may call
.\"O .BR endspent ()
.\"O so that resources can be deallocated.
読み込みが終わった後に、
.BR endspent ()
を呼び出すと、リソースを解放できる。
.\"O .\" some systems require a call of setspent() before the first getspent()
.\"O .\" glibc does not
.\" 最初に getspent() を呼び出す前に、
.\" setspent() を呼び出さなければならないシステムもある。
.\" glibc ではその必要がない。
.LP
.\"O The
.\"O .BR fgetspent ()
.\"O function is similar to
.\"O .BR getspent ()
.\"O but uses the supplied stream instead of the one implicitly opened by
.\"O .BR setspent ().
.BR fgetspent ()
関数は
.BR getspent ()
に似ているが、
.BR setspent ()
で暗黙のうちにオープンされるストリームではなく、与えられたストリームを使う。
.LP
.\"O The
.\"O .BR sgetspent ()
.\"O function parses the supplied string
.\"O .I s
.\"O into a struct
.\"O .IR spwd .
.BR sgetspent ()
関数は与えられた文字列
.I s
を解析し struct
.I spwd
に格納する。
.LP
.\"O The
.\"O .BR putspent ()
.\"O function writes the contents of the supplied struct
.\"O .I spwd
.\"O .I *p
.\"O as a text line in the shadow password file format to the stream
.\"O .IR fp .
.BR putspent ()
関数は与えられた struct
.I spwd
.I *p
の内容を shadow パスワードファイル形式のテキスト行でストリーム
.I fp
に書き出す。
.\"O String entries with value NULL and numerical entries with value \-1
.\"O are written as an empty string.
空文字列として、
値が NULL の文字列エントリと値が \-1 の数値エントリが
書き出される。
.LP
.\"O The
.\"O .BR lckpwdf ()
.\"O function is intended to protect against multiple simultaneous accesses
.\"O of the shadow password database.
.\"O It tries to acquire a lock, and returns 0 on success,
.\"O or \-1 on failure (lock not obtained within 15 seconds).
.BR lckpwdf ()
関数は、 shadow パスワード・データベースを
多重同時アクセスから守るためのものである。
この関数はロックの獲得を試み、
成功した場合は 0 を返す。
失敗した場合 (15 秒以内にロックが取得できなかった場合) は \-1 を返す。
.\"O The
.\"O .BR ulckpwdf ()
.\"O function releases the lock again.
.BR ulckpwdf ()
関数はロックを再び解放する。
.\"O Note that there is no protection against direct access of the shadow
.\"O password file.
.\"O Only programs that use
.\"O .BR lckpwdf ()
.\"O will notice the lock.
shadow パスワードファイルへの直接アクセスから
保護する手段がない点に注意すること。
.BR lckpwdf ()
を使うプログラムだけがロックを通知できる。
.LP
.\"O These were the functions that formed the original shadow API.
.\"O They are widely available.
.\"O .\" Also in libc5
.\"O .\" SUN doesn't have sgetspent()
これらの関数はオリジナルの shadow API を構成していた関数であり、
いろいろなシステムで広く利用可能である。
.\" libc5 でも利用可能である。
.\" SUN には sgetspent() がない。
.\"O .SS "Reentrant versions"
.SS リエントラント版
.\"O Analogous to the reentrant functions for the password database, glibc
.\"O also has reentrant functions for the shadow password database.
パスワード・データベースに対するリエントラント版と同じように、
glibc には shadow パスワードファイルに対してリエントラント版がある。
.\"O The
.\"O .BR getspnam_r ()
.\"O function is like
.\"O .BR getspnam ()
.\"O but stores the retrieved shadow password structure in the space pointed to by
.\"O .IR spbuf .
.BR getspnam_r ()
関数は
.BR getspnam ()
と似ているが、取得した shadow パスワード構造体を
.I spbuf
が指す領域に格納する。
.\"O This shadow password structure contains pointers to strings, and these strings
.\"O are stored in the buffer
.\"O .I buf
.\"O of size
.\"O .IR buflen .
shadow パスワード構造体は文字列群へのポインタを含み、
これらの文字列群はサイズ
.I buflen
のバッファ
.I buf
に格納される。
.\"O A pointer to the result (in case of success) or NULL (in case no entry
.\"O was found or an error occurred) is stored in
.\"O .IR *spbufp .
.I *spbufp
には (成功した場合は) 結果へのポインタが格納され、
(エントリが見つからなかった場合またはエラーが起こった場合は)
NULL が格納される。
.LP
.\"O The functions
.\"O .BR getspent_r (),
.\"O .BR fgetspent_r (),
.\"O and
.\"O .BR sgetspent_r ()
.\"O are similarly analogous to their nonreentrant counterparts.
関数
.BR getspent_r (),
.BR fgetspent_r (),
.BR sgetspent_r ()
はそれぞれリエントラントでないバージョンと同様の機能を持つ。
.LP
.\"O Some non-glibc systems also have functions with these names,
.\"O often with different prototypes.
.\"O .\" SUN doesn't have sgetspent_r()
glibc でないシステムにもこれらと同じ名前の関数があるが、
プロトタイプが異なることも多い。
.\" SUN には sgetspent_r() がない。
.\"O .SS Structure
.SS 構造体
.\"O The shadow password structure is defined in \fI<shadow.h>\fP as follows:
shadow パスワード構造体は \fI<shadow.h>\fP で以下のように定義されている:
.sp
.in +4n
.nf
struct spwd {
.\"O     char *sp_namp;     /* Login name */
.\"O     char *sp_pwdp;     /* Encrypted password */
.\"O     long  sp_lstchg;   /* Date of last change (measured
.\"O                           in days since 1970-01-01 00:00:00 +0000 (UTC)) */
.\"O     long  sp_min;      /* Min # of days between changes */
.\"O     long  sp_max;      /* Max # of days between changes */
.\"O     long  sp_warn;     /* # of days before password expires
.\"O                           to warn user to change it */
.\"O     long  sp_inact;    /* # of days after password expires
.\"O                           until account is disabled */
.\"O     long  sp_expire;   /* Date when account expires (measured
.\"O                           in days since 1970-01-01 00:00:00 +0000 (UTC)) */
.\"O     unsigned long sp_flag;  /* Reserved */
    char *sp_namp;     /* ログイン名 */
    char *sp_pwdp;     /* 暗号化されたパスワード */
    long  sp_lstchg;   /* 最終更新日
                          (1970-01-01 00:00:00 +0000 (UTC)) からの日数) */
    long  sp_min;      /* 変更が出来るようになるまでの最短日数 */
    long  sp_max;      /* 変更をしなくてもよい最長日数 */
    long  sp_warn;     /* パスワードが期限切れになる前に
                          ユーザに変更の警告を出す日数 */
    long  sp_inact;    /* パスワードが期限切れになってから
                          アカウントが無効になるまでの日数 */
    long  sp_expire;   /* アカウントが無効になる日付
                          (1970-01-01 00:00:00 +0000 (UTC)) からの日数) */
    unsigned long sp_flag;  /* 予約フィールド */
};
.fi
.in
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O The functions that return a pointer return NULL if no more entries
.\"O are available or if an error occurs during processing.
ポインタを返す関数は、これ以上エントリがない場合や
処理中にエラーが発生した場合 NULL を返す。
.\"O The functions which have \fIint\fP as the return value return 0 for
.\"O success and \-1 for failure.
\fIint\fP を返り値として持つ関数は、
成功した場合 0 を返し、失敗した場合 \-1 を返す。
.LP
.\"O For the nonreentrant functions, the return value may point to static area,
.\"O and may be overwritten by subsequent calls to these functions.
リエントラント版でない関数では、返り値が静的な領域を指しており、
引き続いてこれらの関数を呼び出した場合に上書きされる可能性がある。
.LP
.\"O The reentrant functions return zero on success.
リエントラント版の関数は、成功した場合に 0 を返す。
.\"O In case of error, an error number is returned.
エラーの場合は、エラー番号が返される。
.\"O .SH ERRORS
.SH エラー
.TP
.B ERANGE
.\"O Supplied buffer is too small.
与えられたバッファが小さすぎる。
.\"O .SH FILES
.SH ファイル
.TP
.I /etc/shadow
.\"O local shadow password database file
ローカルの shadow パスワード・データベースファイル
.TP
.I /etc/.pwd.lock
.\"O lock file
ロックファイル
.LP
.\"O The include file
.\"O .I <paths.h>
.\"O defines the constant
.\"O .B _PATH_SHADOW
.\"O to the pathname of the shadow password file.
インクルードファイル
.I <paths.h>
は定数
.B _PATH_SHADOW
を定義している。
これは shadow パスワードファイルのパス名である。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O The shadow password database and its associated API are
.\"O not specified in POSIX.1-2001.
.\"O However, many other systems provide a similar API.
shadow パスワード・データベースと関連 API は POSIX.1-2001
には記載されていない。しかしながら、多くの他のシステムでも
同様の API が提供されている。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR getgrnam (3),
.BR getpwnam (3),
.BR getpwnam_r (3),
.BR shadow (5)
