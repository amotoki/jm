.\" This page is in the public domain.
.\" Almost all details are from RFC 2553.
.\"
.\" 2004-12-14, mtk, Added EAI_OVERFLOW error
.\" 2004-12-14 Fixed description of error return
.\"
.\" Translated 2005-02-26, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2007-01-07, Akihiro MOTOKI, LDP v2.43
.\" Updated 2008-08-11, Akihiro MOTOKI, LDP v3.05
.\" Updated 2010-04-10, Akihiro MOTOKI, LDP v3.24
.\"
.TH GETNAMEINFO 3 2009-12-03 "GNU" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O getnameinfo \- address-to-name translation in protocol-independent manner
getnameinfo \- アドレスから名前への変換をプロトコルに依存しないかたちで行う
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <sys/socket.h>
.B #include <netdb.h>
.sp
.BI "int getnameinfo(const struct sockaddr *" "sa" ", socklen_t " "salen" ,
.BI "                char *" "host" ", size_t " "hostlen" ,
.BI "                char *" "serv" ", size_t " "servlen" ", int " "flags" );
.fi
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.ad l
.in
.sp
.BR getnameinfo ():
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_SOURCE
.ad b
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .BR getnameinfo ()
.\"O function is the inverse of
.\"O .BR getaddrinfo (3):
.\"O it converts a socket address to a corresponding host and service,
.\"O in a protocol-independent manner.
.\"O It combines the functionality of
.\"O .BR gethostbyaddr (3)
.\"O and
.\"O .BR getservbyport (3),
.\"O but unlike those functions,
.\"O .BR getaddrinfo (3)
.\"O is reentrant and allows programs to eliminate
.\"O IPv4-versus-IPv6 dependencies.
.BR getnameinfo ()
関数は、
.BR getaddrinfo (3)
の逆の動作を行う。つまり、プロトコルに依存しないかたちで
ソケットアドレスから対応するホスト名とサービスへの変換を行う。
この関数は
.BR gethostbyaddr (3)
と
.BR getservbyport (3)
の機能を一つにしたものだが、
これらの関数と違い、
.BR getnameinfo (3)
はリエントラントであり、IPv4 と IPv6 の差分に依存しないかたちで
プログラムを書くことができる。

.\"O The
.\"O .I sa
.\"O argument is a pointer to a generic socket address structure
.\"O (of type
.\"O .I sockaddr_in
.\"O or
.\"O .IR sockaddr_in6 )
.\"O of size
.\"O .I salen
.\"O that holds the input IP address and port number.
.I sa
引き数は、
IP アドレスとポート番号の情報を保持している
汎用的なソケットアドレス構造体
.RI ( sockaddr_in
型または
.I sockaddr_in6
型) へのポインタである。
.I salen
は
.I sa
のサイズである。
.\"O The arguments
.\"O .I host
.\"O and
.\"O .I serv
.\"O are pointers to caller-allocated buffers (of size
.\"O .I hostlen
.\"O and
.\"O .I servlen
.\"O respectively) into which
.\"O .BR getnameinfo ()
.\"O places null-terminated strings containing the host and
.\"O service names respectively.
.I host
と
.I serv
引き数は、(それぞれサイズが
.I hostlen
と
.I servlen
の) 呼び出し側で確保されたバッファへのポインタであり、
ホスト名とサービス名を含む NULL 終端された文字列が
それぞれのバッファに格納される。

.\"O The caller can specify that no hostname (or no service name)
.\"O is required by providing a NULL
.\"O .I host
.\"O (or
.\"O .IR serv )
.\"O argument or a zero
.\"O .I hostlen
.\"O (or
.\"O .IR servlen )
.\"O argument.
.\"O However, at least one of hostname or service name
.\"O must be requested.
ホスト名が不要であることをこの関数に伝えるには、
.I host
に NULL を指定するか、
.I hostlen
に 0 を指定する。同様に、サービス名が不要な場合は、
.I serv
に NULL を指定するか、
.I servlen
に 0 を指定する。
しかし、ホスト名とサービス名の両方を不要だと指定することはできない
(いずれか一方は要求すること)。

.\"O The
.\"O .I flags
.\"O argument modifies the behavior of
.\"O .BR getnameinfo ()
.\"O as follows:
.I flags
引き数で
.BR getnameinfo ()
の動作を変えることができる。指定できる値は以下の通り:
.TP
.B NI_NAMEREQD
.\"O If set, then an error is returned if the hostname cannot be determined.
指定すると、ホスト名が決定できなかった場合にエラーを返す。
.TP
.B NI_DGRAM
.\"O If set, then the service is datagram (UDP) based rather than
.\"O stream (TCP) based.
.\"O This is required for the few ports (512-514)
.\"O that have different services for UDP and TCP.
指定すると、ストリームベース (TCP) でなくデータグラムベース (UDP)
のサービスを対象にする。数は少ないが、
UDP と TCP で違うサービスを提供しているポート
(512-514) に対して必要となる。
.TP
.B NI_NOFQDN
.\"O If set, return only the hostname part of the fully qualified domain name
.\"O for local hosts.
指定すると、ローカルなホストには fully qualified domain name (FQDN) の
ホスト名の部分のみを返す。
.TP
.B NI_NUMERICHOST
.\"O If set, then the numeric form of the hostname is returned.
.\"O .\" For example, by calling
.\"O .\" .BR inet_ntop ()
.\"O .\" instead of
.\"O .\" .BR gethostbyaddr ().
.\"O (When not set, this will still happen in case the node's name
.\"O cannot be determined.)
指定すると、数値形式のホスト名が返される。
.\" 例えば
.\" .BR gethostbyaddr ()
.\" の代わりに
.\" .BR inet_ntop ()
.\" を呼ぶ
(指定しなくても、ノードの名前が決定できない場合は数値形式が返ることがある)。
.\" POSIX.1-2003 has NI_NUMERICSCOPE, but glibc doesn't have it.
.TP
.B NI_NUMERICSERV
.\"O If set, then the numeric form of the service address is returned.
.\"O (When not set, this will still happen in case the service's name
.\"O cannot be determined.)
指定すると、数値形式のサービス名 (例えばポート番号) が返される
(指定しなくても、サービス名が決定できない場合は数値形式が返ることがある)。
.\"O .SS "Extensions to getaddrinfo() for Internationalized Domain Names"
.SS "国際化ドメイン名のための getnameinfo() の拡張"
.\"O motoki: 原文の getaddrinfo() は getnameinfo() の間違いと思われる。
.PP
.\"O Starting with glibc 2.3.4,
.\"O .BR getnameinfo ()
.\"O has been extended to selectively allow
.\"O hostnames to be transparently converted to and from the
.\"O Internationalized Domain Name (IDN) format (see RFC 3490,
.\"O .IR "Internationalizing Domain Names in Applications (IDNA)" ).
.\"O Three new flags are defined:
glibc 2.3.4 から、
.BR getnameinfo ()
に拡張が行われ、ホスト名と
国際化ドメイン名 (Internationalized Domain Name; IDN) 形式との間で
透過的な変換ができるようになっている
(IDN 形式については RFC 3490 の
.I "Internationalizing Domain Names in Applications (IDNA)"
を参照)。3つのフラグが新たに定義されている:
.TP
.B NI_IDN
.\"O If this flag is used, then the name found in the lookup process is
.\"O converted from IDN format to the locale's encoding if necessary.
.\"O ASCII-only names are not affected by the conversion, which
.\"O makes this flag usable in existing programs and environments.
このフラグを指定すると、必要であれば、検索処理で見つかった名前は
IDN 形式からロケールに応じた符号化形式に変換される。
ASCII 文字だけの名前はこの変換では影響を受けない。このため、
既存のプログラムや環境でこのフラグを使うことができる。
.TP
.BR NI_IDN_ALLOW_UNASSIGNED ", " NI_IDN_USE_STD3_ASCII_RULES
.\"O Setting these flags will enable the
.\"O IDNA_ALLOW_UNASSIGNED (allow unassigned Unicode code points) and
.\"O IDNA_USE_STD3_ASCII_RULES (check output to make sure it is a STD3
.\"O conforming host name)
.\"O flags respectively to be used in the IDNA handling.
これらのフラグをセットすると、IDNA 処理で使用されるフラグ
IDNA_ALLOW_UNASSIGNED (未割り当ての Unicode のコードポイントを許容) と
IDNA_USE_STD3_ASCII_RULES (出力が STD3 準拠のホスト名かをチェックする)
がそれぞれ有効になる。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\" FIXME glibc defines the following additional errors, some which
.\" can probably be returned by getnameinfo(); they need to
.\" be documented.
.\" #ifdef __USE_GNU
.\" #define EAI_INPROGRESS  -100  /* Processing request in progress.  */
.\" #define EAI_CANCELED    -101  /* Request canceled.  */
.\" #define EAI_NOTCANCELED -102  /* Request not canceled.  */
.\" #define EAI_ALLDONE     -103  /* All requests done.  */
.\" #define EAI_INTR        -104  /* Interrupted by a signal.  */
.\" #define EAI_IDN_ENCODE  -105  /* IDN encoding failed.  */
.\" #endif
.\"O On success 0 is returned, and node and service names, if requested,
.\"O are filled with null-terminated strings, possibly truncated to fit
.\"O the specified buffer lengths.
.\"O On error one of the following nonzero error codes is returned:
成功すると 0 が返り、(要求されていれば) ノードとサービスの名前が
NULL 終端された文字列の形式でそれぞれの指定バッファに返される
(バッファの長さにあうように縮められるかもしれない)。
エラーの場合は、以下の 0 以外のエラー・コードが返される:
.TP
.B EAI_AGAIN
.\"O The name could not be resolved at this time.
.\"O Try again later.
指定された名前が現時点では解決できなかった。
後で再試行してみること。
.TP
.B EAI_BADFLAGS
.\"O The
.\"O .I flags
.\"O argument has an invalid value.
.I flags
引き数に不正な値が与えられた。
.TP
.B EAI_FAIL
.\"O A nonrecoverable error occurred.
回復できないエラーが発生した。
.TP
.B EAI_FAMILY
.\"O The address family was not recognized,
.\"O or the address length was invalid for the specified family.
指定したアドレスファミリーが認識できなかった。
あるいはアドレスの長さが指定されたファミリーに合うものでなかった。
.TP
.B EAI_MEMORY
.\"O Out of memory.
メモリが足りない。
.TP
.B EAI_NONAME
.\"O The name does not resolve for the supplied arguments.
.\"O .B NI_NAMEREQD
.\"O is set and the host's name cannot be located,
.\"O or neither hostname nor service name were requested.
与えられたパラメータでは名前が解決できない。
.B NI_NAMEREQD
が設定されていたがホスト名が決定できなかったか、
ホスト名もサービス名も要求されなかった。
.TP
.B EAI_OVERFLOW
.\"O The buffer pointed to by
.\"O .I host
.\"O or
.\"O .I serv
.\"O was too small.
.I host
または
.I serv
が指しているバッファが小さすぎた。
.TP
.B EAI_SYSTEM
.\"O A system error occurred.
.\"O The error code can be found in
.\"O .IR errno .
システムエラーが起った。
エラーコードは
.I errno
に設定される。
.PP
.\"O The
.\"O .BR gai_strerror (3)
.\"O function translates these error codes to a human readable string,
.\"O suitable for error reporting.
.BR gai_strerror (3)
関数を使うと、これらのエラー・コードを、エラー・レポートに適した
人間が読みやすい文字列に翻訳してくれる。
.\"O .SH FILES
.SH ファイル
/etc/hosts
.br
/etc/nsswitch.conf
.br
/etc/resolv.conf
.\"O .SH VERSIONS
.SH バージョン
.\"O .BR getnameinfo ()
.\"O is provided in glibc since version 2.1.
.BR getnameinfo ()
は、glibc バージョン 2.1 以降で提供されている。
.\"O .SH "CONFORMING TO"
.SH 準拠
RFC\ 2553, POSIX.1-2001.
.\"O .SH NOTES
.SH 注意
.\"O In order to assist the programmer in choosing reasonable sizes
.\"O for the supplied buffers,
.\"O .I <netdb.h>
.\"O defines the constants
適切なバッファサイズを選択できるように、
.I <netdb.h>
に以下の定数が定義されている。
.in +4n
.nf

#define NI_MAXHOST      1025
#define NI_MAXSERV      32
.fi
.in

.\"O Since glibc 2.8,
.\"O these definitions are exposed only if one of the feature test macros
.\"O .BR _BSD_SOURCE ,
.\"O .BR _SVID_SOURCE ,
.\"O or
.\"O .BR _GNU_SOURCE
.\"O is defined.
glibc 2.8 以降では、機能検査マクロ
.BR _BSD_SOURCE ,
.BR _SVID_SOURCE ,
.BR _GNU_SOURCE
のいずれかが定義された場合にのみ、これらの定義が公開される。
.PP
.\"O The former is the constant
.\"O .B MAXDNAME
.\"O in recent versions of BIND's
.\"O .I <arpa/nameser.h>
.\"O header file.
.\"O The latter is a guess based on the services listed
.\"O in the current Assigned Numbers RFC.
前者は、最近のバージョンの BIND のヘッダファイル
.I <arpa/nameser.h>
中の定数
.B MAXDNAME
と同じ値である。
後者は、割り当て済の数値について記した現在の RFC に
列挙されてサービスから推量した値である。
.\"O .SH EXAMPLE
.SH 例
.\"O The following code tries to get the numeric hostname and service name,
.\"O for a given socket address.
.\"O Note that there is no hardcoded reference to
.\"O a particular address family.
以下のコードは、指定されたソケットアドレスに対する
ホストとサービスの数値表式を取得しようと試みる。
特定のアドレスファミリーに対する参照情報は
一切ハードコードされていないことに着目してほしい。

.in +4n
.nf
struct sockaddr *sa;    /* input */
socklen_t len;          /* input */
char hbuf[NI_MAXHOST], sbuf[NI_MAXSERV];

if (getnameinfo(sa, len, hbuf, sizeof(hbuf), sbuf,
            sizeof(sbuf), NI_NUMERICHOST | NI_NUMERICSERV) == 0)
    printf("host=%s, serv=%s\en", hbuf, sbuf);
.fi
.in

.\"O The following version checks if the socket address has a
.\"O reverse address mapping.
以下ではソケットアドレスに
逆向きのアドレスマッピングが存在するかをチェックしている。

.in +4n
.nf
struct sockaddr *sa;    /* input */
socklen_t len;          /* input */
char hbuf[NI_MAXHOST];

if (getnameinfo(sa, len, hbuf, sizeof(hbuf),
            NULL, 0, NI_NAMEREQD))
    printf("could not resolve hostname");
else
    printf("host=%s\en", hbuf);
.fi
.in
.PP
.\"O An example program using
.\"O .BR getnameinfo ()
.\"O can be found in
.\"O .BR getaddrinfo (3).
.BR getnameinfo ()
を使ったプログラム例が
.BR getaddrinfo (3)
に記載されている。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR accept (2),
.BR getpeername (2),
.BR getsockname (2),
.BR recvfrom (2),
.BR socket (2),
.BR getaddrinfo (3),
.BR gethostbyaddr (3),
.BR getservbyname (3),
.BR getservbyport (3),
.BR inet_ntop (3),
.BR hosts (5),
.BR services (5),
.BR hostname (7),
.BR named (8)
.LP
R. Gilligan, S. Thomson, J. Bound and W. Stevens,
.IR "Basic Socket Interface Extensions for IPv6" ,
RFC\ 2553, March 1999.
.LP
Tatsuya Jinmei and Atsushi Onoe,
.IR "An Extension of Format for IPv6 Scoped Addresses" ,
internet draft, work in progress.
ftp://ftp.ietf.org/internet\-drafts/draft\-ietf\-ipngwg\-scopedaddr\-format\-02.txt
.LP
Craig Metz,
.IR "Protocol Independence Using the Sockets API" ,
Proceedings of the freenix track:
2000 USENIX annual technical conference, June 2000.
http://www.usenix.org/publications/library/proceedings/usenix2000/freenix/metzprotocol.html
