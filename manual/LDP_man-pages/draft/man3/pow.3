.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 1995-08-14 by Arnt Gulbrandsen <agulbra@troll.no>
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.\" Japanese Version Copyright (c) 2003, 2008  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated Mon Sep  7 23:27:52 JST 2003
.\"         by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-09-18, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH POW 3  2010-09-12 "" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O pow, powf, powl \- power functions
pow, powf, powl \- 累乗関数
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <math.h>
.sp
.BI "double pow(double " x ", double " y );
.br
.BI "float powf(float " x ", float " y );
.br
.BI "long double powl(long double " x ", long double " y );
.fi
.sp
.\"O Link with \fI\-lm\fP.
\fI\-lm\fP でリンクする。
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR powf (),
.BR powl ():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE ||
_POSIX_C_SOURCE\ >=\ 200112L;
.br
or
.I cc\ -std=c99
.RE
.ad
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .BR pow ()
.\"O function returns the value of \fIx\fP raised to the
.\"O power of \fIy\fP.
.BR pow ()
関数は \fIx\fP の \fIy\fP 乗の値を返す。
.\"O .SH RETURN VALUE
.SH 返り値
.\"O On success, these functions return the value of
.\"O .I x
.\"O to the power of
.\"O .IR y .
成功すると、これらの関数は
.I x
の
.I y
乗の値を返す。

.\"O If
.\"O .I x
.\"O is a finite value less than 0, and
.\"O .I y
.\"O is a finite noninteger, a domain error occurs,
.I x
が 0 未満の有限値で
.I y
が整数でない有限値の場合、領域エラー (domain error) が発生し、
.\" The domain error is generated at least as far back as glibc 2.4
.\"O and a NaN is returned.
NaN が返される。

.\"O If the result overflows,
.\"O a range error occurs,
結果がオーバーフローする場合、
範囲エラー (range error) が発生し、
.\" The range error is generated at least as far back as glibc 2.4
.\"O and the functions return
.\"O .BR HUGE_VAL ,
.\"O .BR HUGE_VALF ,
.\"O or
.\"O .BR HUGE_VALL ,
.\"O respectively, with the mathematically correct sign.
各関数はそれぞれ
.BR HUGE_VAL ,
.BR HUGE_VALF ,
.BR HUGE_VALL
を返す。返り値には数学的に正しい符号が付与される。

.\"O If result underflows, and is not representable,
.\"O a range error occurs,
.\"O and 0.0 is returned.
結果がアンダーフローし、その値が表現可能でない場合、
範囲エラーが発生し、 0.0 が返される。
.\" POSIX.1 does not specify the sign of the zero,
.\" but http://sources.redhat.com/bugzilla/show_bug.cgi?id=2678
.\" points out that the zero has the wrong sign in some cases.

.\"O Except as specified below, if
.\"O .I x
.\"O or
.\"O .I y
.\"O is a NaN, the result is a NaN.
以下で規定されていない場合で、
.I x
か
.I y
が NaN の場合、返り値は NaN となる。

.\"O If
.\"O .I x
.\"O is +1, the result is 1.0 (even if
.\"O .I y
.\"O is a NaN).
.I x
が +1 の場合、
.RI ( y
が NaN であったとしても) 返り値は 1.0 となる。

.\"O If
.\"O .I y
.\"O is 0, the result is 1.0 (even if
.\"O .I x
.\"O is a NaN).
.I y
が 0 の場合、
.RI ( x
が NaN であったとしても) 返り値は 1.0 となる。

.\"O If
.\"O .I x
.\"O is +0 (\-0),
.\"O and
.\"O .I y
.\"O is an odd integer greater than 0,
.\"O the result is +0 (\-0).
.I x
が +0 (\-0) で
.I y
が 0 より大きな奇数の場合、返り値は +0 (\-0) となる。

.\"O If
.\"O .I x
.\"O is 0,
.\"O and
.\"O .I y
.\"O greater than 0 and not an odd integer,
.\"O the result is +0.
.I x
が 0 で、
.I y
が 0 より大きく奇数でない場合、返り値は +0 となる。

.\"O If
.\"O .I x
.\"O is \-1,
.\"O and
.\"O .I y
.\"O is positive infinity or negative infinity,
.\"O the result is 1.0.
.I x
が \-1 で、
.I y
が正の無限大か負の無限大の場合、返り値は 1.0 となる。

.\"O If the absolute value of
.\"O .I x
.\"O is less than 1,
.\"O and
.\"O .I y
.\"O is negative infinity,
.\"O the result is positive infinity.
.I x
の絶対値が 1 未満で、
.I y
が負の無限大の場合、返り値は正の無限大となる。

.\"O If the absolute value of
.\"O .I x
.\"O is greater than 1,
.\"O and
.\"O .I y
.\"O is negative infinity,
.\"O the result is +0.
.I x
絶対値が 1 より大きく、
.I y
が負の無限大の場合、返り値は +0 となる。

.\"O If the absolute value of
.\"O .I x
.\"O is less than 1,
.\"O and
.\"O .I y
.\"O is positive infinity,
.\"O the result is +0.
.I x
の絶対値が 1 未満で、
.I y
が正の無限大の場合、返り値は +0 となる。

.\"O If the absolute value of
.\"O .I x
.\"O is greater than 1,
.\"O and
.\"O .I y
.\"O is positive infinity,
.\"O the result is positive infinity.
.I x
の絶対値が 1 より大きく、
.I y
が正の無限大の場合、返り値は正の無限大となる。

.\"O If
.\"O .I x
.\"O is negative infinity,
.\"O and
.\"O .I y
.\"O is an odd integer less than 0,
.\"O the result is \-0.
.I x
が負の無限大で、
.I y
が 0 より小さい奇数の場合、返り値は \-0 となる。

.\"O If
.\"O .I x
.\"O is negative infinity,
.\"O and
.\"O .I y
.\"O less than 0 and not an odd integer,
.\"O the result is +0.
.I x
が負の無限大で、
.I y
が 0 より小さく奇数でない場合、返り値は +0 となる。

.\"O If
.\"O .I x
.\"O is negative infinity,
.\"O and
.\"O .I y
.\"O is an odd integer greater than 0,
.\"O the result is negative infinity.
.I x
が負の無限大で、
.I y
が 0 より大きい奇数の場合、返り値は負の無限大となる。

.\"O If
.\"O .I x
.\"O is negative infinity,
.\"O and
.\"O .I y
.\"O greater than 0 and not an odd integer,
.\"O the result is positive infinity.
.I x
が負の無限大で、
.I y
が 0 より大きく奇数でない場合、返り値は正の無限大となる。

.\"O If
.\"O .I x
.\"O is positive infinity,
.\"O and
.\"O .I y
.\"O less than 0,
.\"O the result is +0.
.I x
が正の無限大で、
.I y
が 0 未満の場合、返り値は +0 となる。

.\"O If
.\"O .I x
.\"O is positive infinity,
.\"O and
.\"O .I y
.\"O greater than 0,
.\"O the result is positive infinity.
.I x
が正の無限大で、
.I y
が 0 より大きい場合、返り値は正の無限大となる。

.\"O If
.\"O .I x
.\"O is +0 or \-0,
.\"O and
.\"O .I y
.\"O is an odd integer less than 0,
.\"O a pole error occurs and
.\"O .BR HUGE_VAL ,
.\"O .BR HUGE_VALF ,
.\"O or
.\"O .BR HUGE_VALL ,
.\"O is returned,
.\"O with the same sign as
.\"O .IR x .
.I x
が +0 か \-0 で、
.I y
が 0 より小さい奇数の場合、
極エラー (pole error) が発生し、返り値は
.BR HUGE_VAL ,
.BR HUGE_VALF ,
.BR HUGE_VALL
となる。
.I x
と同じ符号が付与される。

.\"O If
.\"O .I x
.\"O is +0 or \-0,
.\"O and
.\"O .I y
.\"O is less than 0 and not an odd integer,
.\"O a pole error occurs and
.I x
が +0 か \-0 で、
.I y
が 0 より小さく奇数でない場合、
極エラーが発生し、
.\" The pole error is generated at least as far back as glibc 2.4
.\"O .RB + HUGE_VAL ,
.\"O .RB + HUGE_VALF ,
.\"O or
.\"O .RB + HUGE_VALL ,
.\"O is returned.
返り値は
.BR + HUGE_VAL ,
.BR + HUGE_VALF ,
.BR + HUGE_VALL
となる。
.\"O .SH ERRORS
.SH エラー
.\" FIXME . review status of this error
.\" longstanding bug report for glibc:
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=369
.\" For negative x, and -large and +large y, glibc 2.8 gives incorrect
.\" results
.\" pow(-0.5,-DBL_MAX)=nan
.\" EDOM FE_INVALID nan; fail-errno fail-except fail-result;
.\" FAIL (expected: range-error-overflow (ERANGE, FE_OVERFLOW); +INF)
.\"
.\" pow(-1.5,-DBL_MAX)=nan
.\" EDOM FE_INVALID nan; fail-errno fail-except fail-result;
.\" FAIL (expected: range-error-underflow (ERANGE, FE_UNDERFLOW); +0)
.\"
.\" pow(-0.5,DBL_MAX)=nan
.\" EDOM FE_INVALID nan; fail-errno fail-except fail-result;
.\" FAIL (expected: range-error-underflow (ERANGE, FE_UNDERFLOW); +0)
.\"
.\" pow(-1.5,DBL_MAX)=nan
.\" EDOM FE_INVALID nan; fail-errno fail-except fail-result;
.\" FAIL (expected: range-error-overflow (ERANGE, FE_OVERFLOW); +INF)
.\"O See
.\"O .BR math_error (7)
.\"O for information on how to determine whether an error has occurred
.\"O when calling these functions.
これらの関数を呼び出した際にエラーが発生したかの判定方法についての情報は
.BR math_error (7)
を参照のこと。
.PP
.\"O The following errors can occur:
以下のエラーが発生する可能性がある。
.TP
.\"O Domain error: \fIx\fP is negative, and \fIy\fP is a finite noninteger
領域エラー: \fIx\fP が負で、\fIy\fP が整数でない有限値
.\"O .I errno
.\"O is set to
.\"O .BR EDOM .
.\"O An invalid floating-point exception
.\"O .RB ( FE_INVALID )
.\"O is raised.
.I errno
に
.B EDOM
が設定される。
不正 (invalid) 浮動小数点例外
.RB ( FE_INVALID )
が上がる。
.TP
.\"O Pole error: \fIx\fP is zero, and \fIy\fP is negative
極エラー: \fIx\fP がゼロで、\fIy\fP が負
.\"O .I errno
.\"O is set to
.\"O .BR ERANGE
.\"O (but see BUGS).
.I errno
に
.B ERANGE
が設定される。
.\"O A divide-by-zero floating-point exception
.\"O .RB ( FE_DIVBYZERO )
.\"O is raised.
0 による除算 (divide-by-zero) 浮動小数点例外
.RB ( FE_DIVBYZERO )
が上がる。
.TP
.\"O Range error: the result overflows
範囲エラー: 結果がオーバーフロー
.\"O .I errno
.\"O is set to
.\"O .BR ERANGE .
.\"O An overflow floating-point exception
.\"O .RB ( FE_OVERFLOW )
.\"O is raised.
.I errno
に
.B ERANGE
が設定される。
オーバーフロー浮動小数点例外
.RB ( FE_OVERFLOW )
が上がる。
.TP
.\"O Range error: the result underflows
範囲エラー: 結果がアンダーフロー
.\"O .I errno
.\"O is set to
.\"O .BR ERANGE .
.\"O An underflow floating-point exception
.\"O .RB ( FE_UNDERFLOW )
.\"O is raised.
.I errno
に
.B ERANGE
が設定される。
アンダーフロー浮動小数点例外
.RB ( FE_UNDERFLOW )
が上がる。
.\"O .SH "CONFORMING TO"
.SH 準拠
C99, POSIX.1-2001.
.\"O The variant returning
.\"O .I double
.\"O also conforms to
.\"O SVr4, 4.3BSD, C89.
.I double
版の関数は SVr4, 4.3BSD, C89 にも準拠している。
.\"O .SH BUGS
.SH バグ
.\"O In glibc 2.9 and earlier,
.\"
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=6776
.\"O when a pole error occurs,
.\"O .I errno
.\"O is set to
.\"O .BR EDOM
.\"O instead of the POSIX-mandated
.\"O .BR ERANGE .
.\"O Since version 2.10,
.\" or possibly 2.9, I haven't found the source code change
.\" and I don't have a 2.9 system to test
.\"O glibc does the right thing.
glibc 2.9 とそれ以前のバージョンでは、
極エラーが発生した場合、POSIX で要求されている
.B ERANGE
ではなく
.B EDOM
が
.I errno
に設定される。
バージョン 2.10 以降の glibc では、正しい動作をする。

.\"O If
.\"O .I x
.\"O is negative,
.\"O then large negative or positive
.\"O .I y
.\"O values yield a NaN as the function result, with
.\"O .I errno
.\"O set to
.\"O .BR EDOM ,
.\"O and an invalid
.\"O .RB ( FE_INVALID )
.\"O floating-point exception.
.I x
が負の場合、大きな正負の値の
.I y
が与えられると、関数の結果が NaN となり、
.I errno
に
.B EDOM
が設定され、
不正浮動小数点例外
.RB ( FE_INVALID )
が発生する。
.\"O For example, with
.\"O .BR pow (),
.\"O one sees this behavior when the absolute value of
.\"O .I y
.\"O is greater than about 9.223373e18.
例えば、
.BR pow ()
では、
.I y
の絶対値が約 9.223373e18 より大きい場合にこの状況となる。
.\" see bug http://sources.redhat.com/bugzilla/show_bug.cgi?id=3866
.\" and http://sources.redhat.com/bugzilla/show_bug.cgi?id=369

.\"O In version 2.3.2 and earlier,
glibc バージョン 2.3.2 以前では、
.\" FIXME . Actually, 2.3.2 is the earliest test result I have; so yet
.\" to confirm if this error occurs only in 2.3.2.
.\"O when an overflow or underflow error occurs, glibc's
.\"O .BR pow ()
.\"O generates a bogus invalid floating-point exception
.\"O .RB ( FE_INVALID )
.\"O in addition to the overflow or underflow exception.
アンダーフローやアンダーフローのエラーが発生する場合、
glibc の
.BR pow ()
は、オーバーフロー例外やアンダーフロー例外を上げるだけでなく、
不正浮動小数点例外
.RB ( FE_INVALID )
を間違って発生する。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR cbrt (3),
.BR cpow (3),
.BR sqrt (3)
