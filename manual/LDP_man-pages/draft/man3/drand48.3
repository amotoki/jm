.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:46:03 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Japanese Version Copyright (c) 1997 YOSHINO Takashi
.\"       all rights reserved.
.\" Translated Mon Jan 20 20:04:05 JST 1997
.\"       by YOSHINO Takashi <yoshino@civil.jcn.nihon-u.ac.jp>
.\"
.\" WORD: internal buffer  内部バッファ
.\"
.TH DRAND48 3  2007-07-26 "" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O drand48, erand48, lrand48, nrand48, mrand48, jrand48, srand48, seed48,
.\"O lcong48 \- generate uniformly distributed pseudo-random numbers
drand48, erand48, lrand48, nrand48, mrand48, jrand48, srand48, seed48,
lcong48 \- 一様分布する疑似乱数を生成する関数
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <stdlib.h>
.sp
.B double drand48(void);
.sp
.BI "double erand48(unsigned short " xsubi [3]);
.sp
.B long int lrand48(void);
.sp
.BI "long int nrand48(unsigned short " xsubi [3]);
.sp
.B long int mrand48(void);
.sp
.BI "long int jrand48(unsigned short " xsubi [3]);
.sp
.BI "void srand48(long int " seedval );
.sp
.BI "unsigned short *seed48(unsigned short " seed16v [3]);
.sp
.BI "void lcong48(unsigned short " param [7]);
.fi
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.\"O All functions shown above:
上記の全ての関数:
.\" .BR drand48 (),
.\" .BR erand48 (),
.\" .BR lrand48 (),
.\" .BR nrand48 (),
.\" .BR mrand48 (),
.\" .BR jrand48 (),
.\" .BR srand48 (),
.\" .BR seed48 (),
.\" .BR lcong48 ():
_SVID_SOURCE || _XOPEN_SOURCE
.ad b
.\"O .SH DESCRIPTION
.SH 説明
.\"O These functions generate pseudo-random numbers using the linear congruential
.\"O algorithm and 48-bit integer arithmetic.
これらの関数は線形合同アルゴリズムと 48ビット整数演算を用いて
疑似乱数を生成する。
.PP
.\"O The
.\"O .BR drand48 ()
.\"O and
.\"O .BR erand48 ()
.\"O functions return nonnegative
.\"O double-precision floating-point values uniformly distributed between
.\"O [0.0, 1.0).
関数
.BR drand48 ()
と
.BR erand48 ()
は、区間 [0.0, 1.0) で
一様分布する非負の倍精度浮動小数点実数値を返す。
.PP
.\"O The
.\"O .BR lrand48 ()
.\"O and
.\"O .BR nrand48 ()
.\"O functions return nonnegative
.\"O long integers uniformly distributed between 0 and 2^31.
関数
.BR lrand48 ()
と
.BR nrand48 ()
は 0 と 2^31 の間で一様分布する
非負のロング整数を返す。
.PP
.\"O The
.\"O .BR mrand48 ()
.\"O and
.\"O .BR jrand48 ()
.\"O functions return signed long
.\"O integers uniformly distributed between \-2^31 and 2^31.
関数
.BR mrand48 ()
と
.BR jrand48 ()
は
\-2^31 と 2^31 の間で一様分布する符号付きロング整数を返す。
.PP
.\"O The
.\"O .BR srand48 (),
.\"O .BR seed48 ()
.\"O and
.\"O .BR lcong48 ()
.\"O functions are
.\"O initialization functions, one of which should be called before using
.\"O .BR drand48 (),
.\"O .BR lrand48 ()
.\"O or
.\"O .BR mrand48 ().
.\"O The functions
.\"O .BR erand48 (),
.\"O .BR nrand48 ()
.\"O and
.\"O .BR jrand48 ()
.\"O do not require
.\"O an initialization function to be called first.
関数
.BR srand48 (),
.BR seed48 (),
.BR lcong48 ()
は初期化関数
である。
関数
.BR drand48 (),
.BR lrand48 (),
.BR mrand48 ()
を
使用する前に、これらの初期化関数のいずれかを呼ぶべきである。
関数
.BR erand48 (),
.BR nrand48 (),
.BR jrand48 ()
は初めに
初期化関数を呼ぶことを必要としない。
.PP
.\"O All the functions work by generating a sequence of 48-bit integers,
.\"O \fIXi\fP, according to the linear congruential formula:
ここで説明しているすべての関数は 48ビットの整数の
シーケンス (\fIXi\fP) を生成することで
機能している。生成方法は以下の線形合同の式による。
.sp
.nf
.RS
.B Xn+1 = (aXn + c) mod m,
.RE
.fi
.sp
.\"O The parameter \fIm\fP = 2^48, hence 48-bit integer arithmetic is performed.
.\"O Unless
.\"O .BR lcong48 ()
.\"O is called, \fIa\fP and \fIc\fP are given by:
ここで n >= 0 である。
パラメータが \fIm\fP = 2^48 であるため、48ビット整数演算が行われている。
.BR lcong48 ()
が呼ばれていない場合、\fIa\fP と \fIc\fP は以下の式で与えられる。
.sp
.nf
.RS
.B a = 0x5DEECE66D
.B c = 0xB
.RE
.fi
.sp
.\"O The value returned by any of the functions
.\"O .BR drand48 (),
.\"O .BR erand48 (),
.\"O .BR lrand48 (),
.\"O .BR nrand48 (),
.\"O .BR mrand48 ()
.\"O or
.\"O .BR jrand48 ()
.\"O is
.\"O computed by first generating the next 48-bit \fIXi\fP in the sequence.
.\"O Then the appropriate number of bits, according to the type of data item to
.\"O be returned, is copied from the high-order bits of \fIXi\fP and transformed
.\"O into the returned value.
関数
.BR drand48 (),
.BR erand48 (),
.BR lrand48 (),
.BR nrand48 (),
.BR mrand48 (),
.BR jrand48 ()
で返される値は次のようにして計算される。
はじめに、次の48ビットの \fIXi\fP が計算される。
そして、返すべきデータの型に依存した適切な
ビット数が \fIXi\fP の上位ビットからコピーされる。
最後に、この値を返り値に変換する。
.PP
.\"O The functions
.\"O .BR drand48 (),
.\"O .BR lrand48 ()
.\"O and
.\"O .BR mrand48 ()
.\"O store
.\"O the last 48-bit \fIXi\fP generated in an internal buffer.
.\"O The functions
.\"O .BR erand48 (),
.\"O .BR nrand48 ()
.\"O and
.\"O .BR jrand48 ()
.\"O require the calling
.\"O program to provide storage for the successive \fIXi\fP values in the array
.\"O argument \fIxsubi\fP.
.\"O The functions are initialized by placing the initial
.\"O value of \fIXi\fP into the array before calling the function for the first
.\"O time.
関数
.BR drand48 (),
.BR lrand48 (),
.BR mrand48 ()
は
最後に生成された48ビットの \fIXi\fP を内部バッファに格納する。
配列の形の引数 \fIxsubi\fP に個々の \fIXi\fP の値を
格納できるような領域を確保することを、
関数
.BR erand48 (),
.BR nrand48 (),
.BR jrand48 ()
は、
呼び出し側のプログラムに要求する。
これらの関数は、はじめてそれらの関数を呼ぶ前に \fIXi\fP の初期値を配列に
代入することで初期化される。
.PP
.\"O The initializer function
.\"O .BR srand48 ()
.\"O sets the high order 32-bits of
.\"O \fIXi\fP to the argument \fIseedval\fP.
.\"O The low order 16-bits are set
.\"O to the arbitrary value 0x330E.
初期化関数
.BR srand48 ()
は、\fIXi\fP の
上位32ビットを引数 \fIseedval\fP に設定する。
下位の16ビットは、適当に決められた値である0x330Eに設定される。
.PP
.\"O The initializer function
.\"O .BR seed48 ()
.\"O sets the value of \fIXi\fP to
.\"O the 48-bit value specified in the array argument \fIseed16v\fP.
.\"O The
.\"O previous value of \fIXi\fP is copied into an internal buffer and a
.\"O pointer to this buffer is returned by
.\"O .BR seed48 ().
初期化関数
.BR seed48 ()
は、\fIXi\fP の値を、
配列の形をした引数である \fIseed16v\fP の中で指定された 48ビットの値に設定する。
\fIXi\fP の前の値は内部バッファにコピーされ、このバッファへのポインタが
.BR seed48 ()
によって返される。
.PP
.\"O The initialization function
.\"O .BR lcong48 ()
.\"O allows the user to specify
.\"O initial values for \fIXi\fP, \fIa\fP and \fIc\fP.
.\"O Array argument
.\"O elements \fIparam[0-2]\fP specify \fIXi\fP, \fIparam[3-5]\fP specify
.\"O \fIa\fP, and \fIparam[6]\fP specifies \fIc\fP.
.\"O After
.\"O .BR lcong48 ()
.\"O has been called, a subsequent call to either
.\"O .BR srand48 ()
.\"O or
.\"O .BR seed48 ()
.\"O will restore the standard values of \fIa\fP and \fIc\fP.
初期化関数
.BR lcong48 ()
は使用者が \fIXi\fP, \fIa\fP, \fIc\fP の
初期値を指定するための関数である。
配列の形をした引数の要素はそれぞれ、\fIparam[0-2]\fP は \fIXi\fP を、
\fIparam[3-5]\fP は \fIa\fP を、\fIparam[6]\fP は \fIc\fP を指定するもの
である。
.BR lcong48 ()
が呼ばれた後で、
.BR srand48 ()
か
.BR seed48 ()
を呼ぶと、前述の \fIa\fP と \fIc\fP の
標準値が再び設定される。
.SH 準拠
SVr4, POSIX.1-2001.
.\"O .SH NOTES
.SH 注意
.\"O These functions are declared obsolete by SVID 3, which states that
.\"O .BR rand (3)
.\"O should be used instead.
SVID 3 ではこれらの関数は時代遅れと宣言されている。
SVID 3 では
.BR rand (3)
が代わりに使用されるべきだと記述されている。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR rand (3),
.BR random (3)
