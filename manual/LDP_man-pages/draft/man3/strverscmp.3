.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2002 Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated Sat Sep 21 08:34:42 2002
.\"         by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH STRVERSCMP 3  2001-12-19 "GNU" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O strverscmp \- compare two version strings
strverscmp \- 2つのバージョン文字列を比較する
.\"O .SH SYNOPSIS
.SH 書式
.nf
.\"O .BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.BR "#define _GNU_SOURCE" "         /* feature_test_macros(7) 参照 */"
.br
.B #include <string.h>
.sp
.BI "int strverscmp(const char *" s1 ", const char *" s2 );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O Often one has files
.\"O .IR jan1 ", " jan2 ", ..., " jan9 ", " jan10 ", ..."
.\"O and it feels wrong when
.\"O .BR ls (1)
.\"O orders them
.\"O .IR jan1 ", " jan10 ", ..., " jan2 ", ..., " jan9 .
.IR jan1 ", " jan2 ", ..., " jan9 ", " jan10 ", ..."
といった名前のファイルがある状況はよくあるが、
.BR ls (1)
を実行したときに
.IR jan1 ", " jan10 ", ..., " jan2 ", ..., " jan9
の順番で表示されるのには違和感がある。
.\"O .\" classical solution: "rename jan jan0 jan?"
.\" これまでの解決方法: "rename jan jan0 jan?"
.\"O In order to rectify this, GNU introduced the
.\"O .I \-v
.\"O option to
.\"O .BR ls (1),
.\"O which is implemented using
.\"O .BR versionsort (3),
.\"O which again uses
.\"O .BR strverscmp ().
これを修正するために、GNU は
.BR ls (1)
に
.I \-v
オプションを導入した。
この機能は
.BR versionsort (3)
を使って実装されているが、この中で
.BR strverscmp ()
が使用されている。

.\"O Thus, the task of
.\"O .BR strverscmp ()
.\"O is to compare two strings and find the "right" order, while
.\"O .BR strcmp (3)
.\"O only finds the lexicographic order.
.\"O This function does not use
.\"O the locale category
.\"O .BR LC_COLLATE ,
.\"O so is meant mostly for situations
.\"O where the strings are expected to be in ASCII.
このように
.BR strverscmp ()
の役目は2つの文字列を比較して「正しい」順序を探すことである。
これに対して
.BR strcmp (3)
は辞書順で比較した結果を返すだけである。
関数
.BR strverscmp ()
はロケールのカテゴリである
.B LC_COLLATE
を使用しない。
このことから、この関数が主にアスキー文字から成る文字列を
想定していることが分かる。

.\"O What this function does is the following.
この関数の動作は以下の通りである。
.\"O If both strings are equal, return 0.
.\"O Otherwise find the position
.\"O between two bytes with the property that before it both strings are equal,
.\"O while directly after it there is a difference.
両方の文字列が等しい場合、0 を返す。
それ以外の場合、その直前までは両方の文字列が等しく、
その直後のバイトで両者に違いがあるような、バイトの境界を探す。
.\"O Find the largest consecutive digit strings containing (or starting at,
.\"O or ending at) this position.
.\"O If one or both of these is empty,
見つかったバイト境界を含む数字列(数字だけの文字列)の最長一致検索を行う。
(数字列は境界から始まっていても、境界で終わっていてもよい)。
.\"O then return what
.\"O .BR strcmp (3)
.\"O would have returned (numerical ordering of byte values).
2つの文字列から得られた数字列の一方または両方が空であれば、
.BR strcmp (3)
が返した結果を関数の返り値として返す。
すなわち、バイト値を比較した結果を返す。
.\"O Otherwise, compare both digit strings numerically, where digit strings with
.\"O one or more leading zeros are interpreted as if they have a decimal point
.\"O in front (so that in particular digit strings with more leading zeros
.\"O come before digit strings with fewer leading zeros).
それ以外の(数字列が両方とも空でない)場合、両方の数字列を数字順で比較する。
このとき、1つ以上の 0 が先頭にある数字列は、前に小数点がついているものと
解釈される。(先頭に 0 が多くある数字列ほど前に来ることになる)
.\"O Thus, the ordering is
.\"O .IR 000 ", " 00 ", " 01 ", " 010 ", " 09 ", " 0 ", " 1 ", " 9 ", " 10 .
この結果、順序は次のようになる:
.IR 000 ", " 00 ", " 01 ", " 010 ", " 09 ", " 0 ", " 1 ", " 9 ", " 10
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O The
.\"O .BR strverscmp ()
.\"O function returns an integer
.\"O less than, equal to, or greater than zero if \fIs1\fP
.\"O is found, respectively, to be earlier than, equal to,
.\"O or later than \fIs2\fP.
関数
.BR strverscmp ()
は、ゼロよりも
1)小さい、2)等しい、3)大きいのいずれかの整数を返す。
それぞれは、\fIs1\fP が \fIs2\fP よりも、
1)小さい、2)等しい、3)大きい ことを示す。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O This function is a GNU extension.
この関数は GNU による拡張である。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR rename (1),
.BR strcasecmp (3),
.BR strcmp (3),
.BR strcoll (3)
