.\" Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"	<mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETNETENT_R 3 2010\-09\-10 GNU "Linux Programmer's Manual"
.SH 名前
getnetent_r, getnetbyname_r, getnetbyaddr_r \- get network entry (reentrant)
.SH 書式
.nf
\fB#include <netdb.h>\fP
.sp
\fBint getnetent_r(struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.sp
\fBint getnetbyname_r(const char *\fP\fIname\fP\fB,\fP
\fB                struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.sp
\fBint getnetbyaddr_r(uint32_t \fP\fInet\fP\fB, int \fP\fItype\fP\fB,\fP
\fB                struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.sp
.fi
.in -4n
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.ad l
.in
.sp
\fBgetnetent_r\fP(), \fBgetnetbyname_r\fP(), \fBgetnetbyaddr_r\fP():
.RS 4
_BSD_SOURCE || _SVID_SOURCE
.RE
.ad b
.SH 説明
The \fBgetnetent_r\fP(), \fBgetnetbyname_r\fP(), and \fBgetnetbyaddr_r\fP()
functions are the reentrant equivalents of, respectively, \fBgetnetent\fP(3),
\fBgetnetbyname\fP(3), and \fBgetnetbynumber\fP(3).  They differ in the way that
the \fInetent\fP structure is returned, and in the function calling signature
and return value.  This manual page describes just the differences from the
nonreentrant functions.

Instead of returning a pointer to a statically allocated \fInetent\fP structure
as the function result, these functions copy the structure into the location
pointed to by \fIresult_buf\fP.

.\" I can find no information on the required/recommended buffer size;
.\" the nonreentrant functions use a 1024 byte buffer -- mtk.
The \fIbuf\fP array is used to store the string fields pointed to by the
returned \fInetent\fP structure.  (The nonreentrant functions allocate these
strings in static storage.)  The size of this array is specified in
\fIbuflen\fP.  If \fIbuf\fP is too small, the call fails with the error \fBERANGE\fP,
and the caller must try again with a larger buffer.  (A buffer of length
1024 bytes should be sufficient for most applications.)

If the function call successfully obtains a network record, then \fI*result\fP
is set pointing to \fIresult_buf\fP; otherwise, \fI*result\fP is set to NULL.

.\" getnetent.3 doesn't document any use of h_errno, but nevertheless
.\" the nonreentrant functions no seem to set h_errno.
The buffer pointed to by \fIh_errnop\fP is used to return the value that would
be stored in the global variable \fIh_errno\fP by the nonreentrant versions of
these functions.
.SH 返り値
On success, these functions return 0.  On error, they return one of the
positive error numbers listed in ERRORS.

On error, record not found (\fBgetnetbyname_r\fP(), \fBgetnetbyaddr_r\fP()), or
end of input (\fBgetnetent_r\fP())  \fIresult\fP is set to NULL.
.SH エラー
.TP 
\fBENOENT\fP
(\fBgetnetent_r\fP())  No more records in database.
.TP 
\fBERANGE\fP
\fIbuf\fP is too small.  Try again with a larger buffer (and increased
\fIbuflen\fP).
.SH 準拠
These functions are GNU extensions.  Functions with similar names exist on
some other systems, though typically with different calling signatures.
.SH 関連項目
\fBgetnetent\fP(3), \fBnetworks\fP(5)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.40 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
