.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:08:17 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-08-25, aeb
.\" Modified 2004-11-12 as per suggestion by Fabian Kreutz/AEB
.\" 2008-07-24, mtk, moved yxx() material into separate y0.3 page
.\"
.\" Japanese Version Copyright (c) 1998 Ishii Tatsuo all rights reserved.
.\" Translated Sun May 24 1998 by Ishii Tatsuo <rfun@azusa.shinshu-u.ac.jp>
.\" Updated 2002-09-24 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-09-16, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH J0 3  2008-08-05 "" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O j0, j0f, j0l, j1, j1f, j1l, jn, jnf, jnl \-
.\"O Bessel functions of the first kind
j0, j0f, j0l, j1, j1f, j1l, jn, jnf, jnl \- 第一種ベッセル関数
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <math.h>
.sp
.fi
.BI "double j0(double " x );
.br
.BI "double j1(double " x );
.br
.BI "double jn(int " n ", double " x );
.sp
.BI "float j0f(float " x );
.br
.BI "float j1f(float " x );
.br
.BI "float jnf(int " n ", float " x );
.sp
.BI "long double j0l(long double " x );
.br
.BI "long double j1l(long double " x );
.br
.BI "long double jnl(int " n ", long double " x );
.fi
.sp
.\"O Link with \fI\-lm\fP.
\fI\-lm\fP でリンクする。
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR j0 (),
.BR j1 (),
.BR jn ():
_SVID_SOURCE || _BSD_SOURCE || _XOPEN_SOURCE
.br
.BR j0f (),
.BR j0l (),
.BR j1f (),
.BR j1l (),
.BR jnf (),
.BR jnl ():
_SVID_SOURCE || _BSD_SOURCE || _XOPEN_SOURCE\ >=\ 600
.\" Also seems to work: -std=c99 -D_XOPEN_SOURCE
.ad b
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .BR j0 ()
.\"O and
.\"O .BR j1 ()
.\"O functions return Bessel functions of \fIx\fP
.\"O of the first kind of orders 0 and 1, respectively.
.\"O The
.\"O .BR jn ()
.\"O function
.\"O returns the Bessel function of \fIx\fP of the first kind of order \fIn\fP.
関数
.BR j0 (),
.BR j1 ()
はそれぞれ \fIx\fP の0次、1次の
第一種ベッセル関数の値を返す。
関数
.BR jn ()
は \fIx\fP の \fIn\fP 次の
第一種ベッセル関数の値を返す。
.PP
.\"O The
.\"O .BR j0f ()
.\"O etc. and
.\"O .BR j0l ()
.\"O etc. functions are versions that take and return
.\"O .I float
.\"O and
.\"O .I "long double"
.\"O values, respectively.
.BR j0f ()
群の関数、
.BR j0l ()
群の関数は、それぞれ
.I float
型、
.I "long double"
型の返り値を返す。
.\"O .SH RETURN VALUE
.SH 返り値
.\"O On success, these functions return the appropriate
.\"O Bessel value of the first kind for
.\"O .IR x .
成功すると、これらの関数は
.I x
に対する第一種ベッセル関数の値を返す。

.\"O If
.\"O .I x
.\"O is a NaN, a NaN is returned.
.I x
が NaN の場合、NaN が返される。

.\"O If
.\"O .I x
.\"O is too large in magnitude,
.\"O or the result underflows,
.\"O a range error occurs,
.\"O and the return value is 0.
.I x
の絶対値が大き過ぎる場合や結果がアンダーフローする場合、
範囲エラー (range error) が発生し、返り値が 0 となる。
.\"O .SH ERRORS
.SH エラー
.\"O See
.\"O .BR math_error (7)
.\"O for information on how to determine whether an error has occurred
.\"O when calling these functions.
これらの関数を呼び出した際にエラーが発生したかの判定方法についての情報は
.BR math_error (7)
を参照のこと。
.PP
.\"O The following errors can occur:
以下のエラーが発生する可能性がある。
.TP
.\"O Range error: result underflow, or \fIx\fP is too large in magnitude
範囲エラー: 結果のアンダーフローや、\fIx\fP の絶対値が大き過ぎる
.\"O .I errno
.\"O is set to
.\"O .BR ERANGE .
.I errno
に
.B ERANGE
が設定される。
.\" An underflow floating-point exception
.\" .RB ( FE_UNDERFLOW )
.\" is raised.
.PP
.\"O These functions do not raise exceptions for
.\"O .BR fetestexcept (3).
これらの関数は、
.BR fetestexcept (3)
でチェックできる例外を上げない。
.\" FIXME . Is it intentional that these functions do not raise exceptions?
.\" e.g., j0(1.5e16)
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6805
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O The functions returning
.\"O .I double
.\"O conform to SVr4, 4.3BSD,
.\"O POSIX.1-2001.
.I double
型の値を返す関数は、SVr4, 4.3BSD, POSIX.1-2001
に準拠する。
.\"O The others are nonstandard functions that also exist on the BSDs.
それ以外は非標準の関数で、BSD にも存在する。
.\"O .SH BUGS
.SH バグ
.\"O There are errors of up to 2e\-16 in the values returned by
.\"O .BR j0 (),
.\"O .BR j1 ()
.\"O and
.\"O .BR jn ()
.\"O for values of \fIx\fP between \-8 and 8.
\-8 から 8 までの \fIx\fP の値について
.BR j0 (),
.BR j1 (),
.BR jn ()
が返す値には、最大で 2e\-16 の誤差がある。
.\"O .SH SEE ALSO
.SH 関連項目
.BR y0 (3)
