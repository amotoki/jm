.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 2005 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2005 Akihiro MOTOKI all rights reserved.
.\" Translated 2005-10-14, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.\"WORD:	pseudoterminal		擬似端末
.\"WORD:	character device	キャラクタデバイス
.\"
.TH PTY 7 2005-10-10 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O pty \- pseudoterminal interfaces
pty \- 擬似端末インタフェース
.\"O .SH DESCRIPTION
.SH 説明
.\"O A pseudoterminal (sometimes abbreviated "pty")
.\"O is a pair of virtual character devices that
.\"O provide a bidirectional communication channel.
擬似端末 (pseudoterminal; "pty" と略されることもある) は、
双方向通信チャンネルを提供する仮想キャラクタデバイスのペアである。
.\"O One end of the channel is called the
.\"O .IR master ;
.\"O the other end is called the
.\"O .IR slave .
チャンネルの一方の端点は
.I マスタ (master)
と呼ばれ、もう一方の端点は
.I スレーブ (slave)
と呼ばれる。
.\"O The slave end of the pseudoterminal provides an interface
.\"O that behaves exactly like a classical terminal.
.\"O A process that expects to be connected to a terminal,
.\"O can open the slave end of a pseudoterminal and
.\"O then be driven by a program that has opened the master end.
擬似端末のスレーブは、伝統的な端末と全く同じ動作をするインタフェースを
提供する。端末に接続されることを想定しているプロセスは擬似端末の
スレーブをオープンすることができ、それ以降はマスタ側をオープン
しているプログラムからそのプロセスを制御することができる。
.\"O Anything that is written on the master end is provided to the process
.\"O on the slave end as though it was input typed on a terminal.
.\"O For example, writing the interrupt character (usually control-C)
.\"O to the master device would cause an interrupt signal
.\"O .RB ( SIGINT )
.\"O to be generated for the foreground process group
.\"O that is connected to the slave.
.\"O Conversely, anything that is written to the slave end of the
.\"O pseudoterminal can be read by the process that is connected to
.\"O the master end.
端末で入力されたのと同じように、
マスタ側に書き込まれた全てのデータは、スレーブ側のプロセスに送られる。
例えば、マスタデバイスに割り込みキャラクタ (通常は control-C) を書き込むと、
スレーブに接続されているフォアグラウンド・プロセスグループに対して
割り込みシグナル
.RB ( SIGINT )
が生成される。
反対に、擬似端末のスレーブ側に書き込まれた全てのデータは、
マスタ側に接続されているプロセスから読み出すことができる。
.\"O Pseudoterminals are used by applications such as network login services
.\"O .RB ( ssh "(1), " rlogin "(1), " telnet (1)),
.\"O terminal emulators,
.\"O .BR script (1),
.\"O .BR screen (1),
.\"O and
.\"O .BR expect (1).
擬似端末は、ネットワークログインサービス
.RB ( ssh "(1), " rlogin "(1), " telnet (1))
や端末エミュレータ、
.BR script (1),
.BR screen (1),
.BR expect (1)
などのアプリケーションで使用されている。

.\"O Historically, two pseudoterminal APIs have evolved: BSD and System V.
.\"O SUSv1 standardized a pseudoterminal API based on the System V API,
.\"O and this API should be employed in all new programs that use
.\"O pseudoterminals.
歴史的に見ると BSD と System V の2種類の擬似端末の API が発展してきている。
SUSv1 は System V API に基づいた擬似端末 API を標準化しており、
擬似端末を使用する新しいプログラムはすべてこの API を採用すべきである。

.\"O Linux provides both BSD-style and (standardized) System V-style
.\"O pseudoterminals.
.\"O System V-style terminals are commonly called UNIX 98 pseudoterminals
.\"O on Linux systems.
.\"O Since kernel 2.6.4, BSD-style pseudoterminals are considered deprecated
.\"O (they can be disabled when configuring the kernel);
.\"O UNIX 98 pseudoterminals should be used in new applications.
Linux では BSD 風と (標準化された) System V 風の擬似端末を提供している。
System V 風の端末は、Linux システムでは一般に UNIX 98 擬似端末と呼ばれている。
カーネル 2.6.4 以降では、BSD 風の擬似端末は廃止予定とみなされている
(カーネルのコンフィギュレーションで BSD 風の擬似端末を無効にすることができる)。
新しいアプリケーションでは、UNIX 98 擬似端末を使用すべきである。
.\"O .SS "UNIX 98 pseudoterminals"
.SS "UNIX 98 擬似端末"
.\"O An unused UNIX 98 pseudoterminal master is opened by calling
.\"O .BR posix_openpt (3).
.\"O (This function opens the master clone device,
.\"O .IR /dev/ptmx ;
.\"O see
.\"O .BR pts (4).)
未使用の UNIX 98 擬似端末マスタをオープンするには
.BR posix_openpt (3)
を呼び出す
(この関数はマスタ・クローン・デバイス (master clone device),
.I /dev/ptmx
をオープンする;
.BR pts (4)
を参照)。
.\"O After performing any program-specific initializations,
.\"O changing the ownership and permissions of the slave device using
.\"O .BR grantpt (3),
.\"O and unlocking the slave using
.\"O .BR unlockpt (3)),
.\"O the corresponding slave device can be opened by passing
.\"O the name returned by
.\"O .BR ptsname (3)
.\"O in a call to
.\"O .BR open (2).
プログラム固有の初期化処理を実行し、
.BR grantpt (3)
を使ってスレーブデバイスの所有権や許可を変更し、
.BR unlockpt (3)
を使ってスレーブのロック解除を行うと、
.BR ptsname (3)
が返す名前を渡して
.BR open (2)
を呼び出すことにより
対応するスレーブデバイスをオープンできるようになる。

.\"O The Linux kernel imposes a limit on the number of available
.\"O UNIX 98 pseudoterminals.
.\"O In kernels up to and including 2.6.3, this limit is configured
.\"O at kernel compilation time
.\"O .RB ( CONFIG_UNIX98_PTYS ),
.\"O and the permitted number of pseudoterminals can be up to 2048,
.\"O with a default setting of 256.
.\"O Since kernel 2.6.4, the limit is dynamically adjustable via
.\"O .IR /proc/sys/kernel/pty/max ,
.\"O and a corresponding file,
.\"O .IR /proc/sys/kernel/pty/nr ,
.\"O indicates how many pseudoterminals are currently in use.
.\"O For further details on these two files, see
.\"O .BR proc (5).
Linux カーネルでは、利用できる UNIX 98 擬似端末の数に上限を設けている。
2.6.3 以前のカーネルでは、この上限はカーネルのコンパイル時の設定
.RB ( CONFIG_UNIX98_PTYS )
である。許可される擬似端末の数は最大 2048 であり、
デフォルトの設定は 256 である。
カーネル 2.6.4 以降では、この上限は
.I /proc/sys/kernel/pty/max
経由で動的に調整可能となっている。また、
.I /proc/sys/kernel/pty/nr
で現在使用中の擬似端末の数を取得できる。
この 2つのファイルの詳細は
.BR proc (5)
を参照。
.\"O .SS "BSD pseudoterminals"
.SS "BSD 擬似端末"
.\"O BSD-style pseudoterminals are provided as precreated pairs, with
.\"O names of the form
.\"O .I /dev/ptyXY
.\"O (master) and
.\"O .I /dev/ttyXY
.\"O (slave),
.\"O where X is a letter from the 16-character set [p-za-e],
.\"O and Y is a letter from the 16-character set [0-9a-f].
.\"O (The precise range of letters in these two sets varies across UNIX
.\"O implementations.)
BSD 風の擬似端末はあらかじめ作成されたペアとして提供される。その名前は
.I /dev/ptyXY
(マスタ側)、
.I /dev/ttyXY
(スレーブ側) である。ここで、
X は [p-za-e] の 16文字のうちの一文字、
Y は [0-9a-f] の 16文字のうちの一文字である
(X, Y に使われる文字の正確な範囲は UNIX の実装により異なる)。
.\"O For example,
.\"O .I /dev/ptyp1
.\"O and
.\"O .I /dev/ttyp1
.\"O constitute a BSD pseudoterminal pair.
例えば、
.I /dev/ptyp1
と
.I /dev/ttyp1
は BSD 擬似端末ペアを構成する。
.\"O A process finds an unused pseudoterminal pair by trying to
.\"O .BR open (2)
.\"O each pseudoterminal master until an open succeeds.
.\"O The corresponding pseudoterminal slave (substitute "tty"
.\"O for "pty" in the name of the master) can then be opened.
プロセスが未使用の擬似端末ペアを見つけるには、
各擬似端末のマスタの
.BR open (2)
を試み、open が成功するまでこれを繰り返す。
マスタを open すると、対応する擬似端末のスレーブも open できるようになる
(スレーブの名前は、マスタの名前の "pty" を "tty" に置き換えたものである)。
.\"O .SH "FILES"
.SH ファイル
.I /dev/ptmx
(UNIX 98 マスタ・クローン・デバイス)
.br
.I /dev/pts/*
(UNIX 98 スレーブデバイス)
.br
.I /dev/pty[p-za-e][0-9a-f]
(BSD マスタデバイス)
.br
.I /dev/tty[p-za-e][0-9a-f]
(BSD スレーブデバイス)
.\"O .SH "NOTES"
.SH 注意
.\"O A description of the
.\"O .B TIOCPKT
.\"O .BR ioctl (2),
.\"O which controls packet mode operation, can be found in
.\"O .BR tty_ioctl (4).
パケット・モード操作の制御を行う
.B TIOCPKT
.BR ioctl (2)
の説明は
.BR tty_ioctl (4)
に書かれている。

.\"O The BSD
.\"O .BR ioctl (2)
.\"O operations
.\"O .BR TIOCSTOP ,
.\"O .BR TIOCSTART ,
.\"O .BR TIOCUCNTL ,
.\"O and
.\"O .BR TIOCREMOTE
.\"O have not been implemented under Linux.
BSD
.BR ioctl (2)
の
.BR TIOCSTOP ,
.BR TIOCSTART ,
.BR TIOCUCNTL ,
.B TIOCREMOTE
はこれまでのところ Linux では実装されていない。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR select (2),
.BR setsid (2),
.BR forkpty (3),
.BR openpty (3),
.BR termios (3),
.BR pts (4),
.BR tty (4),
.BR tty_ioctl (4)
