.\" This man page is Copyright (C) 1998 Alan Cox.
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\" $Id: ddp.7,v 1.6 1999/12/06 00:13:56 nakano Exp $
.\"
.\" Japanese Version Copyright (c) 1999 NAKANO Takeo all rights reserved.
.\" Translated Mon 6 Dec 1999 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\"
.TH DDP  7 2008-11-20 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O ddp \- Linux AppleTalk protocol implementation
ddp \- Linux での AppleTalk プロトコルの実装
.\"O .SH SYNOPSIS
.SH 書式
.B #include <sys/socket.h>
.br
.B #include <netatalk/at.h>
.sp
.IB ddp_socket " = socket(AF_APPLETALK, SOCK_DGRAM, 0);"
.br
.IB raw_socket " = socket(AF_APPLETALK, SOCK_RAW, " protocol ");"
.\"O .SH DESCRIPTION
.SH 説明
.\"O Linux implements the Appletalk protocols described in
.\"O .IR "Inside Appletalk" .
.\"O Only the DDP layer and AARP are present in
.\"O the kernel.
.\"O They are designed to be used via the
.\"O .B netatalk
.\"O protocol
.\"O libraries.
.\"O This page documents the interface for those who wish or need to
.\"O use the DDP layer directly.
Linux は
.I "Inside Appletalk"
に記述されている Appletalk プロトコルを実装している。
カーネルにあるのは DDP 層と AARP だけである。これらは
.B netatalk
プロトコルライブラリを通して利用されるように設計されている。
このページは DDP 層を直接利用したいユーザーのために、
インターフェースを記述したものである。
.PP
.\"O The communication between Appletalk and the user program works using a
.\"O BSD-compatible socket interface.
.\"O For more information on sockets, see
.\"O .BR socket (7).
Appletalk とユーザープログラムとの通信には、
BSD 互換のソケットインターフェースを利用する。
ソケットに関するより詳しい情報は
.BR socket (7)
を見よ。
.PP
.\"O An AppleTalk socket is created by calling the
.\"O .BR socket (2)
.\"O function with a
.\"O .B AF_APPLETALK
.\"O socket family argument.
.\"O Valid socket types are
.\"O .B SOCK_DGRAM
.\"O to open a
.\"O .B ddp
.\"O socket or
.\"O .B SOCK_RAW
.\"O to open a
.\"O .B raw
.\"O socket.
.\"O .I protocol
.\"O is the Appletalk protocol to be received or sent.
.\"O For
.\"O .B SOCK_RAW
.\"O you must specify
.\"O .BR ATPROTO_DDP .
Appletalk ソケットは、
ソケットファミリーの引数に
.B AF_APPLETALK
を指定して
.BR socket (2)
関数を呼び出すことによって生成される。指定できるソケットタイプは、
.B ddp
ソケットをオープンする場合には
.BR SOCK_DGRAM 、
.B raw
ソケットをオープンする場合には
.B SOCK_RAW
である。
.I protocol
は送受信される Appletalk プロトコルである。
ソケットタイプに
.B SOCK_RAW
を指定した場合は、プロトコルに
.B ATPROTO_DDP
を指定しなければならない。
.PP
.\"O Raw sockets may be only opened by a process with effective user ID 0
.\"O or when the process has the
.\"O .B CAP_NET_RAW
.\"O capability.
raw ソケットは実効ユーザー ID が 0 のプロセスか、
.B CAT_NEW_RAW
権限を持ったプロセスでないとオープンできない。
.\"O .SS "Address Format"
.SS アドレスのフォーマット
.\"O An Appletalk socket address is defined as a combination of a network number,
.\"O a node number, and a port number.
Appletalk ソケットアドレスはネットワーク番号・ノード番号・ポート番号の
組み合わせで定義される。
.PP
.in +4n
.nf
struct at_addr {
    unsigned short s_net;
    unsigned char  s_node;
};

struct sockaddr_atalk {
    sa_family_t    sat_family;    /* address family */
    unsigned char  sat_port;      /* port */
    struct at_addr sat_addr;      /* net/node */
};
.fi
.in
.PP
.\"O .I sat_family
.\"O is always set to
.\"O .BR AF_APPLETALK .
.I sat_family
は常に
.B AF_APPLETALK
に設定する。
.\"O .I sat_port
.\"O contains the port.
.\"O The port numbers below 129 are known as
.\"O .IR reserved ports .
.\"O Only processes with the effective user ID 0 or the
.\"O .B CAP_NET_BIND_SERVICE
.\"O capability may
.\"O .BR bind (2)
.\"O to these sockets.
.I sat_port
はポートを与える。ポート番号が 129 以下のポートは
「予約ポート (reserved port)」 と呼ばれる。実効ユーザー ID が 0 のプロセスか、
.B CAP_NET_BIND_SERVICE
権限を持つプロセスだけが、このようなソケットを
.BR bind (2)
できる。
.\"O .I sat_addr
.\"O is the host address.
.\"O The
.\"O .I net
.\"O member of
.\"O .I struct at_addr
.\"O contains the host network in network byte order.
.\"O The value of
.\"O .B AT_ANYNET
.\"O is a
.\"O wildcard and also implies \(lqthis network.\(rq
.I sat_addr
はホストアドレスである。
.I struct at_addr
のメンバー
.I s_net
にはホストのネットワークをネットワークバイトオーダーで与える。値
.B AT_ANYNET
はワイルドカードで、「このネットワーク」も暗黙のうちに含まれる。
.\"O The
.\"O .I node
.\"O member of
.\"O .I struct at_addr
.\"O contains the host node number.
.\"O The value of
.\"O .B AT_ANYNODE
.\"O is a
.\"O wildcard and also implies \(lqthis node.\(rq The value of
.\"O .B ATADDR_BCAST
.\"O is a link
.\"O local broadcast address.
.I struct at_addr
のメンバー
.I s_node
にはホストのノード番号を与える。値
.B AT_ANYNODE
はワイルドカードで、「このノード」も暗黙のうちに含まれる。値
.B ATADDR_BCAST
はローカルなブロードキャストアドレスである。
.\" FIXME this doesn't make sense [johnl]
.\"O .SS "Socket Options"
.SS ソケットオプション
.\"O No protocol-specific socket options are supported.
プロトコル固有のソケットオプションはない。
.\"O .SS /proc interfaces
.SS /proc インタフェース
.\"O IP supports a set of
.\"O .I /proc
.\"O interfaces to configure some global AppleTalk parameters.
.\"O The parameters can be accessed by reading or writing files in the directory
.\"O .IR /proc/sys/net/atalk/ .
Appletalk のグローバルパラメータのいくつかは、
.I /proc
インタフェースを通して設定することができる。
これらのパラメータには、
.I /proc/sys/net/atalk/
ディレクトリ内のファイルの読み書きでアクセスできる。
.TP
.I aarp-expiry-time
.\"O The time interval (in seconds) before an AARP cache entry expires.
AARP キャッシュエントリを破棄するまでのタイムインターバル (秒単位)。
.TP
.I aarp-resolve-time
.\"O The time interval (in seconds) before an AARP cache entry is resolved.
AARP キャッシュエントリが解決されるまでのタイムインターバル (秒単位)。
.TP
.I aarp-retransmit-limit
.\"O The number of retransmissions of an AARP query before the node is declared
.\"O dead.
AARP クエリーの最大再送信回数。この回数を越えると、
そのノードは dead であるとみなされる。
.TP
.I aarp-tick-time
.\"O The timer rate (in seconds) for the timer driving AARP.
タイマー動作する AARP のタイマーレート (秒単位)
.PP
.\"O The default values match the specification and should never need to be
.\"O changed.
デフォルトの値で仕様にマッチしているので、
変更する必要は全くないはずである。
.\"O .SS Ioctls
.SS ioctl
.\"O All ioctls described in
.\"O .BR socket (7)
.\"O apply to DDP.
.BR socket (7)
に記述されているすべての ioctl が
DDP にも適用される。
.\" FIXME Add a section about multicasting
.\"O .SH ERRORS
.SH エラー
.\" FIXME document all errors. We should really fix the kernels to
.\" give more uniform error returns (ENOMEM vs ENOBUFS, EPERM vs
.\" EACCES etc.)
.TP
.B EACCES
.\"O The user tried to execute an operation without the necessary permissions.
.\"O These include sending to a broadcast address without
.\"O having the broadcast flag set,
.\"O and trying to bind to a reserved port without effective user ID 0 or
.\"O .BR CAP_NET_BIND_SERVICE .
ユーザが行おうとした操作に必要な権限を持っていない。
broadcast フラグをセットせずにブロードキャストアドレスへ送信を行おうとした、
実効ユーザー ID が 0 でなく、
.B CAP_NET_BIND_SERVICE
権限のないプロセスで特権ポートをバインドしようとした、などが考えられる。
.TP
.B EADDRINUSE
.\"O Tried to bind to an address already in use.
既に使用されているアドレスにバインドしようとした。
.TP
.B EADDRNOTAVAIL
.\"O A nonexistent interface was requested or the requested source address was
.\"O not local.
存在しないインターフェースが要求された。または
要求されたソースアドレスがローカルなものでない。
.TP
.B EAGAIN
.\"O Operation on a nonblocking socket would block.
非ブロッキングソケットに対してブロックする操作を行った。
.TP
.B EALREADY
.\"O A connection operation on a nonblocking socket is already in progress.
非ブロッキングソケットに対する接続操作が既に実行中である。
.TP
.B ECONNABORTED
.\"O A connection was closed during an
.\"O .BR accept (2).
.BR accept (2)
の途中で接続がクローズされた。
.TP
.B EHOSTUNREACH
.\"O No routing table entry matches the destination address.
行き先アドレスにマッチするエントリがルーティングテーブルにない。
.TP
.B EINVAL
.\"O Invalid argument passed.
渡した引数が不正。
.TP
.B EISCONN
.\"O .BR connect (2)
.\"O was called on an already connected socket.
接続済みのソケットに対して
.BR connect (2)
が呼ばれた。
.TP
.B EMSGSIZE
.\"O Datagram is bigger than the DDP MTU.
データグラムが DDP MTU より大きい。
.TP
.B ENODEV
.\"O Network device not available or not capable of sending IP.
ネットワークデバイスがない。あるいは IP を送ることができない。
.TP
.B ENOENT
.\"O .B SIOCGSTAMP
.\"O was called on a socket where no packet arrived.
パケットが到着していないソケットに対して
.B SIOCGSTAMP
が呼ばれた。
.TP
.\"O .BR ENOMEM " and " ENOBUFS
.BR ENOMEM " と " ENOBUFS
.\"O Not enough memory available.
メモリが足りない。
.TP
.B ENOPKG
.\"O A kernel subsystem was not configured.
カーネルのサブシステムが設定されていない。
.TP
.\"O .BR ENOPROTOOPT " and " EOPNOTSUPP
.BR ENOPROTOOPT " と " EOPNOTSUPP
.\"O Invalid socket option passed.
渡したソケットオプションが不正。
.TP
.B ENOTCONN
.\"O The operation is only defined on a connected socket, but the socket wasn't
.\"O connected.
行おうとした操作は接続済みのソケットに対してのみ定義されているものだが、
そのソケットは接続されていなかった。
.TP
.B EPERM
.\"O User doesn't have permission to set high priority,
.\"O make a configuration change,
.\"O or send signals to the requested process or group,
高い優先度に設定したり、設定を変更したり、
指定したプロセスやグループにシグナルを送るのに必要な権限を
ユーザが持っていない。
.TP
.B EPIPE
.\"O The connection was unexpectedly closed or shut down by the other end.
接続が先方によって、通常以外のやり方でクローズまたはシャットダウンされた。
.TP
.B ESOCKTNOSUPPORT
.\"O The socket was unconfigured, or an unknown socket type was requested.
ソケットが設定されていない。または未知のソケットタイプが要求された。
.\"O .SH VERSIONS
.SH バージョン
.\"O Appletalk is supported by Linux 2.0 or higher.
.\"O The
.\"O .I /proc
.\"O interfaces exist since Linux 2.2.
Appletalk は Linux 2.0 以降でサポートされている。
.I /proc
インタフェースは Linux 2.2 以降に存在する。
.\"O .SH NOTES
.SH 注意
.\"O Be very careful with the
.\"O .B SO_BROADCAST
.\"O option \- it is not privileged in Linux.
.\"O It is easy to overload the network
.\"O with careless sending to broadcast addresses.
.B SO_BROADCAST
オプションを用いる時には慎重の上にも慎重になってほしい。
Linux ではこれに特権を必要としない。
不注意にブロードキャストアドレスに送信を行うと、
ネットワークの状態が簡単に変更されてしまう。
.\"O .SS Compatibility
.SS 移植性
.\"O The basic AppleTalk socket interface is compatible with
.\"O .B netatalk
.\"O on BSD-derived systems.
.\"O Many BSD systems fail to check
.\"O .B SO_BROADCAST
.\"O when sending broadcast frames; this can lead to compatibility problems.
基本的な Appletalk ソケットインターフェースは
BSD 由来のシステムにおける
.B netatalk
と互換性がある。多くの BSD システムでは、
ブロードキャストフレームを送信しようとしたときの
.B SO_BROADCAST
のチェックに失敗する。これは互換性の問題となるかもしれない。
.PP
.\"O The
.\"O raw
.\"O socket mode is unique to Linux and exists to support the alternative CAP
.\"O package and AppleTalk monitoring tools more easily.
raw ソケットモードは Linux 独特のもので、もう一方の実装である CAP
パッケージや、 Appletalk モニタツールをより簡単に実装できるようになる。
.\"O .SH BUGS
.SH バグ
.\"O There are too many inconsistent error values.
エラーの値がまったく首尾一貫していない。
.PP
.\"O The ioctls used to configure routing tables, devices,
.\"O AARP tables and other devices are not yet described.
ルーティングテーブル・デバイス・ AARP テーブル・その他のデバイスを
設定するために用いられる ioctl がまだ記述されていない。
.\"O .SH SEE ALSO
.SH 関連項目
.BR recvmsg (2),
.BR sendmsg (2),
.BR capabilities (7),
.BR socket (7)
