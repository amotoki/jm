.\" This man page is Copyright (C) 1999 Claus Fischer.
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\"
.\" 990620 - page created - aeb@cwi.nl
.\"
.\" FIXME . Add example programs to this page?
.\"
.\" Japanese Version Copyright (c) 1999 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Wed Jan  5 23:35:27 JST 2000
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\"
.TH FIFO 7 2008-12-03 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
fifo \- 先入先出特殊ファイル、名前付きパイプ
.\"O .SH DESCRIPTION
.SH 書式
.\"O A FIFO special file (a named pipe) is similar to a pipe,
.\"O except that it is accessed as part of the file system.
.\"O It can be opened by multiple processes for reading or
.\"O writing.
.\"O When processes are exchanging data via the FIFO,
.\"O the kernel passes all data internally without writing it
.\"O to the file system.
.\"O Thus, the FIFO special file has no
.\"O contents on the file system; the file system entry merely
.\"O serves as a reference point so that processes can access
.\"O the pipe using a name in the file system.
FIFO 特殊ファイル(名前付きパイプ)はパイプに似ているが、
ファイルシステムの一部に関連付けられている点が異っている。
複数のプロセスが読み込みや書き込みのためにオープンすること
ができる。プロセスが FIFO を通しデータを交換する場合、
実際にそれをファイルシステムには書き込まず、カーネルは全ての
データを内部的に渡す。このように、FIFO 特殊ファイルはファイルシステム
上には内容を持たないので、ファイルシステムのエントリは
プロセスがそのファイルシステム上の名前を使用してそのパイプに
アクセスできるように参照ポイントを提供しているに過ぎない。
.PP
.\"O The kernel maintains exactly one pipe object for each
.\"O FIFO special file that is opened by at least one process.
.\"O The FIFO must be opened on both ends (reading and writing)
.\"O before data can be passed.
.\"O Normally, opening the FIFO blocks
.\"O until the other end is opened also.
カーネルは、少なくとも一つのプロセスによってオープンされている
FIFO 特殊ファイルについて、それぞれ一つのパイプのみを管理している。
データが渡される前にその FIFO の両端(書き込みと読み出し)がオープン
されていなければならない。通常、FIFO をオープンすると、
その反対側がオープンされるまで停止(block)させられる。
.PP
.\"O A process can open a FIFO in nonblocking mode.
.\"O In this
.\"O case, opening for read only will succeed even if no-one has
.\"O opened on the write side yet, opening for write only will
.\"O fail with
.\"O .B ENXIO
.\"O (no such device or address) unless the other
.\"O end has already been opened.
プロセスは FIFO を非停止(nonblocking)モードでオープンすることもできる。
この場合、読み込み専用でオープンした場合には書き込み側を誰もオープン
していなくても成功する。書き込み専用でオープンした場合は反対側が既に
オープンされていなければ
.B ENXIO
(そのようなデバイスまたはアドレスは存在しない)
というエラーで失敗する。
.PP
.\"O Under Linux, opening a FIFO for read and write will succeed
.\"O both in blocking and nonblocking mode.
.\"O POSIX leaves this
.\"O behavior undefined.
.\"O This can be used to open a FIFO for
.\"O writing while there are no readers available.
.\"O A process
.\"O that uses both ends of the connection in order to communicate
.\"O with itself should be very careful to avoid deadlocks.
Linux では、FIFO を読み込みと書き込み両用にオープンした場合、
停止、非停止のどちらのモードでも成功する。POSIX ではこの場合の
動作は定義されていない。これは読み込み側がいない時に書き込み用に
オープンするために使用することができる。自分自身と通信するために
両端を使用するプロセスはデッドロックを避けるために非常に注意深く
なければならない。
.\"O .SH NOTES
.SH 注意
.\"O When a process tries to write to a FIFO that is not opened
.\"O for read on the other side, the process is sent a
.\"O .B SIGPIPE
.\"O signal.
プロセスが、反対の読み込み側がオープンされていない FIFO を
書き込みのためにオープンしようとした場合、そのプロセスに
.B SIGPIPE
シグナルが送られる。

.\"O FIFO special files can be created by
.\"O .BR mkfifo (3),
.\"O and are indicated by
.\"O .IR "ls \-l"
.\"O with the file type \(aqp\(aq.
FIFO 特殊ファイルは
.BR mkfifo (3)
で作成することができ、
.IR "ls \-l"
ではファイル種別 \(aqp\(aq で表示される。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR mkfifo (1),
.BR open (2),
.BR pipe (2),
.BR sigaction (2),
.BR signal (2),
.BR socketpair (2),
.BR mkfifo (3),
.BR pipe (7)
