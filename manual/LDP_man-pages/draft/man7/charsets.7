.\" Copyright (c) 1996 Eric S. Raymond <esr@thyrsus.com>
.\"                and Andries Brouwer <aeb@cwi.nl>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" This is combined from many sources, including notes by aeb and
.\" research by esr.  Portions derive from a writeup by Roman Czyborra.
.\"
.\" Last changed by David Starner <dstarner98@aasaa.ofe.org>.
.\"
.\" Japanese Version Copyright (c) 1996,1997,1998
.\"         ISHIKAWA Mutsumi, all rights reserved.
.\" Translated Mon Jul 21 03:46:21 JST 1997
.\"         by ISHIKAWA Mutsumi <ishikawa@linux.or.jp>
.\" Updated Fri Dec  3 JST 1999 by Kentaro Shirakata <argrath@ub32.org>
.\" Updated Fri Jan  4 JST 2002 by Kentaro Shirakata <argrath@ub32.org>
.\"
.\" WORD:	ligature	合字
.\"
.TH CHARSETS 7 2008-06-03 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.\"O charsets \- programmer's view of character sets and internationalization
.SH 名前
charsets \- プログラマの視点から見た文字セットと国際化
.\"O .SH DESCRIPTION
.SH 説明
.\"O Linux is an international operating system.
.\"O Various of its utilities
.\"O and device drivers (including the console driver) support multilingual
.\"O character sets including Latin-alphabet letters with diacritical
.\"O marks, accents, ligatures, and entire non-Latin alphabets including
.\"O Greek, Cyrillic, Arabic, and Hebrew.
Linux は国際化されたオペレーティングシステムである。
Linux の様々なユーティリティや、 console ドライバなどの
デバイスドライバは、非ラテンアルファベットなどの
マルチリンガル文字セット (multilingual character sets) をサポートしている。
これらにはラテンアルファベット文字・ギリシャ文字・
キリル文字・アラビア文字・ヘブライ文字などが含まれ、
発音区別符号 (diacritical marks)・アクセント・合字 (ligatures) なども
使うことができる。
.LP
.\"O This manual page presents a programmer's-eye view of different
.\"O character-set standards and how they fit together on Linux.
.\"O Standards
.\"O discussed include ASCII, ISO 8859, KOI8-R, Unicode, ISO 2022 and
.\"O ISO 4873.
.\"O The primary emphasis is on character sets actually used as
.\"O locale character sets, not the myriad others that can be found in data
.\"O from other systems.
このマニュアルページでは、プログラマの視点からみた異なる文字集合規格
(character-set standards) と、それらを Linux にどう適合させるかというこ
とについて述べる。ここでは、ASCII, ISO 8859, KOI8-R, Unicode, ISO 2022,
ISO 4873 の各規格について議論する。
ここでは実際にロケール文字セットとして使われている文字セットに注目し、
その他のシステムで使われている無数のものは重視しない。
.LP
.\"O A complete list of charsets used in an officially supported locale in glibc
.\"O 2.2.3 is: ISO-8859-{1,2,3,5,6,7,8,9,13,15}, CP1251, UTF-8, EUC-{KR,JP,TW},
.\"O KOI8-{R,U}, GB2312, GB18030, GBK, BIG5, BIG5-HKSCS and TIS-620 (in no
.\"O particular order.)
.\"O(Romanian may be switching to ISO-8859-16.)
glibc 2.2.3 で公式に対応しているロケールで用いられている文字セットの
完全なリストは以下の通り:
ISO-8859-{1,2,3,5,6,7,8,9,13,15}, CP1251, UTF-8, EUC-{KR,JP,TW},
KOI8-{R,U}, GB2312, GB18030, GBK, BIG5, BIG5-HKSCS, TIS-620 (順不同)
(ルーマニア語は ISO-8859-16 に切り替わっているかもしれない)
.SS ASCII
.\"O ASCII (American Standard Code For Information Interchange) is the original
.\"O 7-bit character set, originally designed for American English.
.\"O It is currently described by the ECMA-6 standard.
ASCII (American Standard Code For Information Interchange) は
7　ビット文字集合の元となったものであり、
もともとは米語(American English) のためにデザインされた。
現在は、ECMA-6 標準の中で説明されている。
.LP
.\"O Various ASCII variants replacing the dollar sign with other currency
.\"O symbols and replacing punctuation with non-English alphabetic characters
.\"O to cover German, French, Spanish and others in 7 bits exist.
.\"O All are
.\"O deprecated; glibc doesn't support locales whose character sets aren't
.\"O true supersets of ASCII.
.\"O (These sets are also known as ISO-646, a close
.\"O relative of ASCII that permitted replacing these characters.)
ドイツ語、フランス語、スペイン語などに 7 ビットで対応するため、
ASCII のドル記号を他の通貨記号に置き換え、
句読点を非英語文字のものに置き換えた様々な変種が存在する。
これらは全て使うべきではない。
glibc は ASCII の完全なスーパーセットでない文字セットのロケールに
対応していない。
(これらの文字セットは ISO-646 として知られる。
これは ASCII と近い関係にあり、これらの文字を置き換えることを認めている)
.LP
.\"O As Linux was written for hardware designed in the US, it natively
.\"O supports ASCII.
Linux は米国で設計されたハードウェアのために書かれたので、
はじめから ASCII をサポートしている。
.SS ISO 8859
.\"O ISO 8859 is a series of 15 8-bit character sets all of which have US
.\"O ASCII in their low (7-bit) half, invisible control characters in
.\"O positions 128 to 159, and 96 fixed-width graphics in positions 160-255.
ISO 8859 は 15 組の一連の 8 ビット文字集合である。それらは全て
下位 (7 ビット) に US ASCII を含み、 128 から 159 には制御文字が配置され、
160 から 255 には 96 個の固定幅図形文字が配置されている。
.LP
.\"O Of these, the most important is ISO 8859-1 (Latin-1).
.\"O It is natively
.\"O supported in the Linux console driver, fairly well supported in X11R6,
.\"O and is the base character set of HTML.
これらのうちで、もっとも重要なのは ISO 8859-1 (Latin-1) である。これ
は Linux コンソールドライバにおいてネイティブにサポートされており、
.\"nakano でいいんじゃないかと思います。
X11R6 においても同様にサポートされている。さらに、
HTML の基本文字集合である。
.LP
.\"O Console support for the other 8859 character sets is available under
.\"O Linux through user-mode utilities (such as
.\"O .BR setfont (8))
.\"O .\" // some distributions still have the deprecated consolechars
.\"O that modify keyboard bindings and the EGA graphics
.\"O table and employ the "user mapping" font table in the console
.\"O driver.
コンソールにおける、その他の 8859 文字集合のサポートは
.RB ( setfont (8))
のようなユーザモード・ユーティリティを利用する事で可能になる。
このようなユーティリティを利用することにより、コンソールドライバにおけ
るキーボードと EGA グラフィックテーブルの割り当てを変更し、"ユーザ割
り当て(user mapping)"フォントテーブルを使用することができる。
.LP
.\"O Here are brief descriptions of each set:
以下は、それぞれの集合の簡単な説明である。
.TP
.\"O 8859-1 (Latin-1)
.\"O Latin-1 covers most Western European languages such as Albanian, Catalan,
.\"O Danish, Dutch, English, Faroese, Finnish, French, German, Galician,
.\"O Irish, Icelandic, Italian, Norwegian, Portuguese, Spanish, and
.\"O Swedish.
.\"O The lack of the ligatures Dutch ij, French oe and old-style
.\"O ,,German`` quotation marks is considered tolerable.
8859-1 (Latin-1)
Latin-1 は アルバニア語(Albanian)、カタロニア語(Catalan)、デンマーク語
(Danish)、オランダ語(Dutch)、英語(English)、フェロー語(Faroese)、
フィンランド語(Finnish)、フランス語(French)、ドイツ語(German)、
ガリシア語(Galician)、アイルランド語(Irish)、アイスランド語(Icelandic)、
イタリア語(Italian)、ノルウェー語(Norwegian)、ポルトガル語(Portuguese)、
スペイン語(Spanish)、スウェーデン語(Swedish)といったほとんどの
西ヨーロッパ言語をカバーする。
ドイツ語の ij やフランス語の oe の合字、および古いスタイルの
,,ドイツ語`` 引用符はないが、許容範囲と考えられている。
.TP
.\"O 8859-2 (Latin-2)
.\"O Latin-2 supports most Latin-written Slavic and Central European
.\"O languages: Croatian, Czech, German, Hungarian, Polish, Rumanian,
.\"O Slovak, and Slovene.
8859-2 (Latin-2)
Latin-2 はスラヴ語(Slavic)、クロアチア語(Croatian)、チェコ
語(Czech)、ドイツ語(German)、ハンガリー語(Hungarian)、ポーランド語
(Polish)、ルーマニア語(Rumanian)、スロヴァキア語(Slovak)、
スロベニア語(Slovene)といった、書き文字としてラテン文字を
使用する、スラブ系言語と中央ヨーロッパの言語のほとんどをサポートする。
.TP
.\"O 8859-3 (Latin-3)
.\"O Latin-3 is popular with authors of Esperanto, Galician, and Maltese.
.\"O (Turkish is now written with 8859-9 instead.)
8859-3 (Latin-3)
Latin-3 はエスペラント(Esperanto)、ガリシア語(Galician)、マルタ語
(Maltese)などの書き手の間で良く用いられる。
(トルコ語(Turkish)はこれの代わりに 8859-9 で書かれるようになっている)
.TP
.\"O 8859-4 (Latin-4)
.\"O Latin-4 introduced letters for Estonian, Latvian, and Lithuanian.
.\"O It is essentially obsolete; see 8859-10 (Latin-6) and 8859-13 (Latin-7).
8859-4 (Latin-4)
Latin-4 はエストニア語(Estonian)、ラトビア語(Latvian)、リトアニア語
(Lithuanian)の文字を提供する。Latain-4 は、
本質的には廃止されている(obsolate である)。
8859-10 (Latin-6) と 8859-13 (Latin-7) を参照のこと。
.TP
.\"O 8859-5
.\"O Cyrillic letters supporting Bulgarian, Byelorussian, Macedonian,
.\"O Russian, Serbian and Ukrainian.
.\"O Ukrainians read the letter "ghe"
.\"O with downstroke as "heh" and would need a ghe with upstroke to write a
.\"O correct ghe.
.\"O See the discussion of KOI8-R below.
8859-5
.br
ブルガリア語(Bulgarian)、ベラルーシ語(Byelorussian)、マケドニア語
(Macedonian)、ロシア語(Russian)、セルビア語(Serbian)、ウクライナ語
(Ukrainian) をサポートするキリル文字集合である。 ウクライナ語では
downstroke をつけた "ghe" という文字を "heh" と読み、
ghe を正しく書くには ghe に upstroke をつけなければならない。
この点については、
下の KOI8-R に関する議論を参照のこと。
.TP
.\"O 8859-6
.\"O Supports Arabic.
.\"O The 8859-6 glyph table is a fixed font of separate
.\"O letter forms, but a proper display engine should combine these
.\"O using the proper initial, medial, and final forms.
8859-6
.br
アラビア語(Arabic)をサポートする。8859-6 のグリフテーブル(glyph table)
は文字の形態を分割した固定幅フォントである。
そのため、適切なディスプレイエンジンが正しい
initial, medial, final フォームに結合しなければならない。
.TP
.\"O 8859-7
.\"O Supports Modern Greek.
8859-7
現代ギリシャ語(Modern Greek)をサポートする。
.TP
.\"O 8859-8
.\"O Supports modern Hebrew without niqud (punctuation signs).
.\"O Niqud and full-fledged Biblical Hebrew are outside the scope of this
.\"O character set; under Linux, UTF-8 is the preferred encoding for
.\"O these.
8859-8
niqud(句読点記号) のない近代ヘブライ語(Hebrew)をサポートする。
niqud と完全な聖書風ヘブライ語(Biblical Hebrew)はこの文字セットの
対象外である。
Linux では、これらのためには UTF-8 が好ましいエンコーディングである。
.TP
.\"O 8859-9 (Latin-5)
.\"O This is a variant of Latin-1 that replaces Icelandic letters with
.\"O Turkish ones.
8859-9 (Latin-5)
これは、Latin-1 の変種で、アイスランド語の文字をトルコ語(Turkish)文字に
置き換えたものである。
.TP
.\"O 8859-10 (Latin-6)
.\"O Latin 6 adds the last Inuit (Greenlandic) and Sami (Lappish) letters
.\"O that were missing in Latin 4 to cover the entire Nordic area.
.\"O RFC 1345 listed a preliminary and different "latin6".
.\"O Skolt Sami still
.\"O needs a few more accents than these.
8859-10 (Latin-6)
Latin-6 は北欧(Nordic)地域をカバーするために Latin-4 には含まれていない
イヌイット語(Inuit)(グリーンランド語(Greenlandic)) と
サーメ語(Sami)(ラップ語(Lappish)) を加えてある。
RFC 1345 には、この前段階の、異なった "latin6" が載せられている。
スコルト・サーメ語(Skolt Sami)では、
さらにいくつかのアクセント記号が必要とする。
.TP
.\"O 8859-11
.\"O This only exists as a rejected draft standard.
.\"O The draft standard
.\"O was identical to TIS-620, which is used under Linux for Thai.
8859-11
これは拒絶された草案標準のためだけに存在する。
この草案標準は Linux でタイ語のために用いられる TIS-620 と同じものである。
.TP
.\"O 8859-12
.\"O This set does not exist.
.\"O While Vietnamese has been suggested for this
.\"O space, it does not fit within the 96 (noncombining) characters ISO
.\"O 8859 offers.
.\"O UTF-8 is the preferred character set for Vietnamese use
.\"O under Linux.
8859-12
この文字セットは存在しない。
ベトナム語がこの場所を使うように提案したが、
ISO 8859 が提案する(合成でない) 96 文字に収まらなかった。
Linux ではベトナム語を扱う場合は UTF-8 が好ましい文字セットである。
.TP
.\"O 8859-13 (Latin-7)
.\"O Supports the Baltic Rim languages; in particular, it includes Latvian
.\"O characters not found in Latin-4.
8859-13 (Latin-7)
バルト海諸国の言語をサポートする。
特に、Latin-4 に存在しないラトビア語の文字を含む。
.TP
.\"O 8859-14 (Latin-8)
.\"O This is the Celtic character set, covering Gaelic and Welsh.
.\"O This charset also contains the dotted characters needed for Old Irish.
8859-14 (Latin-8)
これはケルト語の文字セットであり、ゲール語(Gaelic)とウェールズ語(Welsh)に
対応する。
この文字セットは古代アイルランド語で用いられる付点付き文字も含む。
.TP
.\"O 8859-15 (Latin-9)
.\"O This adds the Euro sign and French and Finnish letters that were missing in
.\"O Latin-1.
8859-15 (Latin-9)
これはユーロ記号と Latin-1 に入っていないフランス語とフィンランド語の文字が
追加されている。
.TP
8859-16 (Latin-10)
.\"O This set covers many of the languages covered by 8859-2, and supports
.\"O Romanian more completely then that set does.
この文字セットは 8859-2 で対応する多くの言語に対応し、
さらにルーマニア語にはより完全に対応する。
.SS KOI8-R
.\"O KOI8-R is a non-ISO character set popular in Russia.
.\"O The lower half
.\"O is US ASCII; the upper is a Cyrillic character set somewhat better
.\"O designed than ISO 8859-5.
.\"O KOI8-U is a common character set, based off
.\"O KOI8-R, that has better support for Ukrainian.
.\"O Neither of these sets
.\"O are ISO-2022 compatible, unlike the ISO-8859 series.
KOI8-R はロシアにおいて良く用いられる、ISO でない文字集合である。
下位半分は US ASCII である。上位半分は ISO 8859-5 より幾分良く
デザインされたキリル文字集合である。
KOI8-U は KOI8-R を元にした共通文字セットであり、
ウクライナ語(Ukrainian) によりよく対応する。
これらのどちらも ISO-8859 シリーズのように ISO-2022 互換ではない。
.LP
.\"O Console support for KOI8-R is available under Linux through user-mode
.\"O utilities that modify keyboard bindings and the EGA graphics table,
.\"O and employ the "user mapping" font table in the console driver.
Linux での KOI8-R のコンソールサポートは、
ユーザモードのユーティリティで実現されている。
これはキーボードの割り当てと EGA グラフィックテーブルを変更し、
コンソールドライバのフォントテーブルに "ユーザ割り当て" を行う。
.\" Thanks to Tomohiro KUBOTA for the following sections about
.\" national standards.
.SS JIS X 0208
.\"O JIS X 0208 is a Japanese national standard character set.
.\"O Though there are some more Japanese national standard character sets (like
.\"O JIS X 0201, JIS X 0212, and JIS X 0213), this is the most important one.
.\"O Characters are mapped into a 94x94 two-byte matrix,
.\"O whose each byte is in the range 0x21-0x7e.
.\"O Note that JIS X 0208 is a character set, not an encoding.
.\"O This means that JIS X 0208
.\"O itself is not used for expressing text data.
.\"O JIS X 0208 is used
.\"O as a component to construct encodings such as EUC-JP, Shift_JIS,
.\"O and ISO-2022-JP.
.\"O EUC-JP is the most important encoding for Linux
.\"O and includes US ASCII and JIS X 0208.
.\"O In EUC-JP, JIS X 0208
.\"O characters are expressed in two bytes, each of which is the
.\"O JIS X 0208 code plus 0x80.
JIS X 0208 は日本語の国定標準文字セットである。
他にもいくつか日本語の国定標準文字セットはある
(JIS X 0201, JIS X 0212, JIS X 0213 など)が、これが最も重要である。
文字は 94x94 の 2 バイトマトリックスに配置される。
各バイトは 0x21-0x7e の値を持つ。
JIS X 0208 は文字セットであり、エンコーディングではないことに注意すること。
これは、
JIS X 0208 自身はテキストデータの表現には使われない、ということである。
JIS X 0208 は、
EUC-JP, Shift_JIS, ISO-2022-JP といったエンコーディングを
構成する部品として用いられる。
EUC-JP が Linux において最も重要なエンコーディングであり、
US ASCII と JIS X 0208 を含んでいる。
EUC-JP では、JIS X 0208 文字は 2 バイトで表現され、
各バイトは JIS X 0208 コードに 0x80 を加えたものである。
.SS KS X 1001
.\"O KS X 1001 is a Korean national standard character set.
.\"O Just as
.\"O JIS X 0208, characters are mapped into a 94x94 two-byte matrix.
.\"O KS X 1001 is used like JIS X 0208, as a component
.\"O to construct encodings such as EUC-KR, Johab, and ISO-2022-KR.
.\"O EUC-KR is the most important encoding for Linux and includes
.\"O US ASCII and KS X 1001.
.\"O KS C 5601 is an older name for KS X 1001.
KS X 1001 は韓国の国定標準文字セットである。
JIS X 0208 と同様に、文字は 94x94 の 2 バイトマトリックスに配置される。
KS X 1001 は JIS X 0208 と同様に、
EUC-KR, Johab, ISO-2022-KR といったエンコーディングの部品として用いられる。
EUC-KR は Linux において最も重要なエンコーディングであり、
US ASCII と KS X 1001 を含んでいる。
KS C 5601 は KS X 1001 の古い名前である。
.SS GB 2312
.\"O GB 2312 is a mainland Chinese national standard character set used
.\"O to express simplified Chinese.
.\"O Just like JIS X 0208, characters are
.\"O mapped into a 94x94 two-byte matrix used to construct EUC-CN.
.\"O EUC-CN
.\"O is the most important encoding for Linux and includes US ASCII and
.\"O GB 2312.
.\"O Note that EUC-CN is often called as GB, GB 2312, or CN-GB.
GB 2312 は、簡体文字を表現するための中国の国定標準文字セットである。
JIS X 0208 と同様に、文字は 94x94 の 2 バイトマトリックスに配置され、
EUC-CN に用いられる。
EUC-CN は Linux において最も重要なエンコーディングであり、
US ASCII と GB 2312 を含んでいる。
EUC-CN はしばしば GB, GB 2312, CN-GN などと呼ばれる。
.SS Big5
.\"O Big5 is a popular character set in Taiwan to express traditional
.\"O Chinese.
.\"O (Big5 is both a character set and an encoding.)
.\"O It is a superset of US ASCII.
.\"O Non-ASCII characters are expressed in two bytes.
.\"O Bytes 0xa1-0xfe are used as leading bytes for two-byte characters.
.\"O Big5 and its extension is widely used in Taiwan and Hong Kong.
.\"O It is not ISO 2022-compliant.
Big5 は台湾で繁体文字を記述するのに一般的に使われる文字セットである。
(Big5 は文字セットとエンコーディングの両方である。)
これは US ASCII の上位集合である。
非 ASCII 文字は 2 バイトで表現する。
0xa1-0xfe のバイトは 2 バイト文字の 1 文字目として用いる。
Big5 とその拡張は台湾と香港で広く用いられている。
これは ISO 2022 準拠ではない。
.SS TIS 620
.\"O TIS 620 is a Thai national standard character set and a superset
.\"O of US ASCII.
.\"O Like ISO 8859 series, Thai characters are mapped into
.\"O 0xa1-0xfe.
.\"O TIS 620 is the only commonly used character set under
.\"O Linux besides UTF-8 to have combining characters.
TIS 620 はタイの国定標準文字セットで、US ASCII の上位集合である。
ISO 8859 シリーズと同様に、タイ文字は 0xa1-0xfe に配置される。
TIS 620 は Linux でのみ一般的に用いられている文字セットであり、
また、UTF-8 は合成文字も持っている。
.SS UNICODE
.\"O Unicode (ISO 10646) is a standard which aims to unambiguously represent every
.\"O character in every human language.
.\"O Unicode's structure permits 20.1 bits to encode every character.
.\"O Since most computers don't include 20.1-bit
.\"O integers, Unicode is usually encoded as 32-bit integers internally and
.\"O either a series of 16-bit integers (UTF-16) (needing two 16-bit integers
.\"O only when encoding certain rare characters) or a series of 8-bit bytes
.\"O (UTF-8).
.\"O Information on Unicode is available at <http://www.unicode.org>.
Unicode (ISO10646) は、人間が用いる全ての言語の全ての文字を、
明確にあらわすことを目的とした規格である。
Unicode の構造は各文字のエンコードに 20.1 ビットを与えている。
ほとんどのコンピューターは 20.1 ビットの整数を扱えないので、
Unicode は普通内部データとして 32 ビット整数にエンコードされ、
16 ビット整数の列 (UTF-16)(ある種の珍しい文字をエンコードする場合にだけ
2 つの 16 ビット整数が必要となる)か、
8 ビットバイトの列 (UTF-8)として扱われる。
Unicode についての情報は、<http://www.unicode.org> から得られる。
.LP
.\"O Linux represents Unicode using the 8-bit Unicode Transformation Format
.\"O (UTF-8).
.\"O UTF-8 is a variable length encoding of Unicode.
.\"O It uses 1
.\"O byte to code 7 bits, 2 bytes for 11 bits, 3 bytes for 16 bits, 4 bytes
.\"O for 21 bits, 5 bytes for 26 bits, 6 bytes for 31 bits.
Linux は 8-bit Unicode Transformation Form(UTF-8) を用いて Unicode を
あらわす。 UTF-8 は Unicode の可変長表現である。UTF-8 は 7 ビットを
符号化するのに 1 バイトを、 11 ビットでは 2 バイトを、
16 ビットでは 3 バイトを、
21 ビットでは 4 バイトを、
26 ビットでは 5 バイトを、
31 ビットでは 6 バイトを用いる。
.LP
.\"O Let 0,1,x stand for a zero, one, or arbitrary bit.
.\"O A byte 0xxxxxxx
.\"O stands for the Unicode 00000000 0xxxxxxx which codes the same symbol
.\"O as the ASCII 0xxxxxxx.
.\"O Thus, ASCII goes unchanged into UTF-8, and
.\"O people using only ASCII do not notice any change: not in code, and not
.\"O in file size.
0,1,x をゼロ、１、任意のビットとすると、あるバイト 0xxxxxxx は Unicode では
00000000 0xxxxxxx とあらわされる。これは、ASCII の 0xxxxxxx と同じ
シンボルのコードである。このように、ASCII は変更なしに UTF-8 に変換でき、
ASCII のみを使う場合は、コードにおいてもファイルサイズにおいても、
変更に関して何も気にしなくてよい。
.LP
.\"O A byte 110xxxxx is the start of a 2-byte code, and 110xxxxx 10yyyyyy
.\"O is assembled into 00000xxx xxyyyyyy.
.\"O A byte 1110xxxx is the start
.\"O of a 3-byte code, and 1110xxxx 10yyyyyy 10zzzzzz is assembled
.\"O into xxxxyyyy yyzzzzzz.
.\"O (When UTF-8 is used to code the 31-bit ISO 10646
.\"O then this progression continues up to 6-byte codes.)
110xxxxx というバイトは 2 バイトコードの始まりである、そして、110xxxxx
10yyyyyy は 00000xxx xxyyyyyy というように組み立てられる。また、
1110xxxx は 3 バイトコードの始まりであり、1110xxxx 10yyyyyy 10zzzzzz
は xxxxyyyy yyzzzzzz というように組み立てられる(UTF-8 が 31 ビット
ISO 10646 コードを利用するときは、この工程は 6 バイトコードまで発展させられる)。
.LP
.\"O For most people who use ISO-8859 character sets, this means that the
.\"O characters outside of ASCII are now coded with two bytes.
.\"O This tends
.\"O to expand ordinary text files by only one or two percent.
.\"O For Russian
.\"O or Greek users, this expands ordinary text files by 100%, since text in
.\"O those languages is mostly outside of ASCII.
.\"O For Japanese users this means
.\"O that the 16-bit codes now in common use will take three bytes.
.\"O While there
.\"O are algorithmic conversions from some character sets (esp. ISO-8859-1) to
.\"O Unicode, general conversion requires carrying around conversion tables,
.\"O which can be quite large for 16-bit codes.
ISO-8859-1 文字セットを使うほとんどのユーザにとって、
この事実は、ASCII の範囲外を使った文字は
二つのバイトに符号化されるということを意味する。このことから
(UTF-8 を使うと、ISO-8859-1を使用している)元々のテキストファイルのサイズから
1 〜 2 パーセント大きくなってしまうことになる。
ロシア語やギリシャ語を利用するユーザーにとっては、
これによって元のテキストは 2 倍の大きさになることになる。
なぜならこれらの言語はほとんどが ASCII の範囲外だからである。
現在 16-bit コードを広く利用している日本語を利用するユーザには
3 バイト必要となる。
Unicode への変換にアルゴリズム的変換をすればよい文字セットがある
(特に ISO-8859-1)一方、一般的には変換テーブルが必要であり、
16 ビットコードの場合はこのテーブルはかなり大きなものとなる。
.LP
.\"O Note that UTF-8 is self-synchronizing: 10xxxxxx is a tail, any other
.\"O byte is the head of a code.
.\"O Note that the only way ASCII bytes occur
.\"O in a UTF-8 stream, is as themselves.
.\"O In particular, there are no
.\"O embedded NULs (\(aq\\0\(aq) or \(aq/\(aqs that form part of some larger code.
UTF-8 は自己同期的である。10xxxxxx は終端であり、ほかのバイトはコードの
先頭である。UTF-8 の文字列における ASCII のバイトは、常にその文字自身を
表現することに注目してほしい。特に、幾つかの大きなコードのパートを形成
するために、NUL (\(aq\\0\(aq)) や \(aq/\(aq を埋め込む必要はない。
.LP
.\"O Since ASCII, and, in particular, NUL and \(aq/\(aq, are unchanged, the
.\"O kernel does not notice that UTF-8 is being used.
.\"O It does not care at
.\"O all what the bytes it is handling stand for.
ASCII と NUL と \(aq/\(aq は変更されないため、カーネルは UTF-8 を
使用していることを特に意識しなくても良い。
カーネルはバイトが何をあらわしているかに注意する必要がない。
.LP
.\"O Rendering of Unicode data streams is typically handled through
.\"O "subfont" tables which map a subset of Unicode to glyphs.
.\"O Internally
.\"O the kernel uses Unicode to describe the subfont loaded in video RAM.
.\"O This means that in UTF-8 mode one can use a character set with 512
.\"O different symbols.
.\"O This is not enough for Japanese, Chinese and
.\"O Korean, but it is enough for most other purposes.
Unicode データ列のレンダリングは典型的には Unicode のサブセットから
グリフへのマップである"サブフォント(subfont)"テーブルを利用して
行われる。カーネル内部では、Unicode を ビデオ RAM 内部にロードされた
サブフォントとして記述する。これは、UTF-8 モードでは 512 の異なったシンボルを
持った文字集合を利用可能であることを意味する。
これは、日本語、中国語、韓国語では十分ではない、しかし、その他の利用では
十分である。
.LP
.\"O At the current time, the console driver does not handle combining
.\"O characters.
.\"O So Thai, Sioux and any other script needing combining
.\"O characters can't be handled on the console.
現在のところ、コンソールドライバは合成文字を扱えない。
従って、タイ語、スー語やその他の合成文字が必要な文章は
コンソールでは扱えない。
.\"O .SS "ISO 2022 AND ISO 4873"
.SS "ISO 2022 と ISO 4873"
.\"O The ISO 2022 and 4873 standards describe a font-control model
.\"O based on VT100 practice.
.\"O This model is (partially) supported
.\"O by the Linux kernel and by
.\"O .BR xterm (1).
.\"O It is popular in Japan and Korea.
ISO 2022 と ISO 4873 標準では、
VT100 の動作に基づいたフォントコントロールモデルを述べられている。
このモデルは Linux カーネルや
.BR xterm (1)
において(部分的に)サポートされている。この標準は日本や韓国においてよく
用いられる。
.LP
.\"O There are 4 graphic character sets, called G0, G1, G2 and G3,
.\"O and one of them is the current character set for codes with
.\"O high bit zero (initially G0), and one of them is the current
.\"O character set for codes with high bit one (initially G1).
.\"O Each graphic character set has 94 or 96 characters, and is
.\"O essentially a 7-bit character set.
.\"O It uses codes either
.\"O 040-0177 (041-0176) or 0240-0377 (0241-0376).
.\"O G0 always has size 94 and uses codes 041-0176.
G0, G1, G2, G3 と呼ばれる 4 つの図形文字集合がある。
これらのうちのひとつは、最上位ビットが 0 であるコードのための現在の文字集合
(初期値は G0)、またひとつは最上位ビットが 1 であるコードのための現在の
文字集合(初期値は G1)である。それぞれの図形文字集合は 94 か 96 の文
字を持ち、基本的に 7-bitの文字集合であり、040-0177 (041-0176) か
0240-0377 (0241-0376)のコードを使う。
G0 は常に 94 文字で 041-0176 のコードを使用する。
.LP
.\"O Switching between character sets is done using the shift functions
.\"O \fB^N\fP (SO or LS1), \fB^O\fP (SI or LS0), ESC n (LS2), ESC o (LS3),
.\"O ESC N (SS2), ESC O (SS3), ESC ~ (LS1R), ESC } (LS2R), ESC | (LS3R).
.\"O The function LS\fIn\fP makes character set G\fIn\fP the current one
.\"O for codes with high bit zero.
.\"O The function LS\fIn\fPR makes character set G\fIn\fP the current one
.\"O for codes with high bit one.
.\"O The function SS\fIn\fP makes character set G\fIn\fP (\fIn\fP=2 or 3)
.\"O the current one for the next character only (regardless of the value
.\"O of its high order bit).
文字集合の切り替えはシフトファンクション \fB^N\fP (SO または LS1),
\fB^O\fP (SI または LS0), ESC n (LS2), ESC o (LS3), ESC N (SS2), ESC O (SS3),
ESC ~ (LS1R), ESC } (LS2R), ESC | (LS3R) を使って行われる。
ファンクション LS\fIn\fP は最上位ビットが 0 であるコードのための文字集合を
G\fIn\fP に設定する。
ファンクション LS\fIn\fPR は最上位ビットが 1 であるコードのための文字セットを
G\fIn\fP に設定する。
ファンクション SS\fIn\fP は(最上位ビットの値にかかわらず)次の文字のみ
文字集合を G\fIn\fP (\fIn\fP=2 または 3)に設定する。
.LP
.\"O A 94-character set is designated as G\fIn\fP character set
.\"O by an escape sequence ESC ( xx (for G0), ESC ) xx (for G1),
.\"O ESC * xx (for G2), ESC + xx (for G3), where xx is a symbol
.\"O or a pair of symbols found in the ISO 2375 International
.\"O Register of Coded Character Sets.
.\"O For example, ESC ( @ selects the ISO 646 character set as G0,
.\"O ESC ( A selects the UK standard character set (with pound
.\"O instead of number sign), ESC ( B selects ASCII (with dollar
.\"O instead of currency sign), ESC ( M selects a character set
.\"O for African languages, ESC ( ! A selects the Cuban character
.\"O set, etc. etc.
94 文字集合では、エスケープシーケンス ESC ( xx (G0 用), ESC ) xx (G1
用),  ESC * xx (G2 用), ESC + xx (G3 用) によって、G\fIn\fP 文字集合
を用いるように指示される。
xx は "ISO 2375 International Register of Coded Character Sets" で
決められている一文字、または二文字である。
たとえば ESC ( @ は ISO 646 文字集合を G0 として選び、ESC ( A
は(ナンバーサイン(＃)の代わりに、ポンド(£)を持つ) UK スタンダード文字集合を
選択する。ESC ( B は(通貨記号のかわりにダラー(＄)を持つ) ASCIIを選択する。
ESC ( M は アフリカ言語(African languages) を選択し、ESC
( ! A は キューバ語(Cuban)文字集合を選択する。などなど…
.LP
.\"O A 96-character set is designated as G\fIn\fP character set
.\"O by an escape sequence ESC \- xx (for G1), ESC . xx (for G2)
.\"O or ESC / xx (for G3).
.\"O For example, ESC - G selects the Hebrew alphabet as G1.
96-文字集合では、エスケープシーケンス ESC
\- xx (G1 用), ESC . xx (G2 用), ECS / xx (G3 用)を用いることで、
G\fIn\fP 文字集合を使用するように指示される。
例えば、ESC - G はヘブライアルファベット(Hebrew alphabet) を
G1 として選択する。
.LP
.\"O A multibyte character set is designated as G\fIn\fP character set
.\"O by an escape sequence ESC $ xx or ESC $ ( xx (for G0),
.\"O ESC $ ) xx (for G1), ESC $ * xx (for G2), ESC $ + xx (for G3).
.\"O For example, ESC $ ( C selects the Korean character set for G0.
.\"O The Japanese character set selected by ESC $ B has a more
.\"O recent version selected by ESC & @ ESC $ B.
マルチバイト文字集合ではエスケープシーケンス E $ xx または ESC $ ( xx
(G0 用), ESC $ ) xx (G1 用), ESC $ * xx (G2 用), ESC$ + xx (G3 用) を
用いることで、 G\fIn\fP 文字集合を使用するように指示される。
例えば、ESC $ ( C は 韓国語(Korean)文字集合を G0 として選択する。
ESC $ B によって選択される日本語文字セットは、より最近のバージョンでは
ESC & @ ESC $ B によって選択されるようになった。
.LP
.\"O ISO 4873 stipulates a narrower use of character sets, where G0
.\"O is fixed (always ASCII), so that G1, G2 and G3
.\"O can only be invoked for codes with the high order bit set.
.\"O In particular, \fB^N\fP and \fB^O\fP are not used anymore, ESC ( xx
.\"O can be used only with xx=B, and ESC ) xx, ESC * xx, ESC + xx
.\"O are equivalent to ESC \- xx, ESC . xx, ESC / xx, respectively.
ISO 4873 はより制限された文字集合の利用を規定する、その規定で
は、G0 は(常に ASCIIに)固定される。従って、G1, G2, G3 は最上位ビットが
セットされたコードとしてのみ呼び出すことができる。
特に、\fB^N\fP と \fB^O\fP は用いられず、ESC ( xx は xx=B としてのみ
用いることができ、
ESC ) xx, ESC * xx, ESC + xx はそれぞれ ESC \- xx, ESC . xx, ESC / xx と
等価になる。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR console (4),
.BR console_codes (4),
.BR console_ioctl (4),
.BR ascii (7),
.BR iso_8859-1 (7),
.BR unicode (7),
.BR utf-8 (7)
