.\" Copyright (c) 1995,1997 Paul Gortmaker and Andries Brouwer
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" This man page written 950814 by aeb, based on Paul Gortmaker's HOWTO
.\" (dated v1.0.1, 15/08/95).
.\" Major update, aeb, 970114.
.\" FIXME ? The use of quotes on this page is inconsistent with the
.\" rest of man-pages.
.\"
.\" Japanese Version Copyright (c) 1999 MATSUURA Masaaki
.\"         all rights reserved.
.\" Translated 1999-02-04, MATSUURA Masaaki <masa386@yk.rim.or.jp>
.\" Modified 2001-07-08, Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified  2001-09-10, NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated 2002-04-21, NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated 2007-05-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.46
.\"
.TH BOOTPARAM 7 2007-12-16 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.\"O bootparam \- Introduction to boot time parameters of the Linux kernel
.SH 名前
bootparam \- Linux カーネル起動時パラメータの解説
.\"O .SH DESCRIPTION
.SH 説明
.\"O The Linux kernel accepts certain 'command-line options' or 'boot time
.\"O parameters' at the moment it is started.
.\"O In general this is used to
.\"O supply the kernel with information about hardware parameters that
.\"O the kernel would not be able to determine on its own, or to avoid/override
.\"O the values that the kernel would otherwise detect.
Linux カーネルは起動するときに「コマンドラインオプション」あるいは
「起動時パラメータ」を受け付ける。
これは一般に、
カーネルには決定できないハードウェアのパラメータをカーネルに渡したい場合や、
カーネルが検出するであろう値を意図的に無効にしたり変更したりする場合に用いる。

.\"O When the kernel is booted directly by the BIOS (say from a floppy to
.\"O which you copied a kernel using 'cp zImage /dev/fd0'),
.\"O you have no opportunity to specify any parameters.
.\"O So, in order to take advantage of this possibility you have to
.\"O use software that is able to pass parameters, like LILO or loadlin.
.\"O For a few parameters one can also modify the kernel image itself,
.\"O using rdev, see
.\"O .BR rdev (8)
.\"O for further details.
カーネルが BIOS から直接起動されるとき
(たとえば 'cp zImage /dev/fd0'
でフロッピーにコピーしたカーネルから起動するなど) は、
パラメータを指定する機会はない。
ゆえに、この起動時パラメータ機能を利用するためには、
.I LILO
や
.I loadlin
のようにパラメータを指定できるソフトウェアを使用しなければならない。
いくつかのパラメータについては、
.I rdev
を使ってカーネルイメージそのものを修正することもできる。
詳細は
.BR rdev (8)
を参照のこと。

.\"O The LILO program (LInux LOader) written by Werner Almesberger is the
.\"O most commonly used.
.\"O It has the ability to boot various kernels, and
.\"O stores the configuration information in a plain text file.
.\"O (See
.\"O .BR lilo (8)
.\"O and
.\"O .BR lilo.conf (5).)
.\"O LILO can boot DOS, OS/2, Linux, FreeBSD, UnixWare, etc., and is quite flexible.
Werner Almesberger による
LILO (LInux LOader) プログラムは最も広く使用されている。
LILO はいろいろなカーネルを選択してブートさせることができ、
設定情報をテキストファイルに保持する
.RB ( lilo (8)
と
.BR lilo.conf (5)
を参照)。 LILO は DOS, OS/2, Linux, FreeBSD などを起動でき、
非常に柔軟である。

.\"O The other commonly used Linux loader is 'LoadLin' which is a DOS
.\"O program that has the capability to launch a Linux kernel from the DOS
.\"O prompt (with boot-args) assuming that certain resources are available.
.\"O This is good for people that want to launch Linux from DOS.
ほかには
.I loadLin
もよく使われている Linux ローダである。
これは DOS のプログラムで、DOS プロンプトから
(起動時引数とともに) Linux カーネルを起動できる
(いくつかの特定のリソースが利用可能でなければならない)。
loadlin は DOS から Linux を起動させたい人にあっている。

.\"O It is also very useful if you have certain hardware which relies on
.\"O the supplied DOS driver to put the hardware into a known state.
.\"O A common example is 'SoundBlaster Compatible' sound cards that require
.\"O the DOS driver to twiddle a few mystical registers to put the card
.\"O into a SB compatible mode.
.\"O Booting DOS with the supplied driver, and
.\"O then loading Linux from the DOS prompt with loadlin avoids the reset
.\"O of the card that happens if one rebooted instead.
また loadlin は、DOS のドライバである状態に
設定しなければならないハードウェアを
使っている場合にも非常に便利である。
よくある例は
「SoundBlaster 互換」のサウンドカードで、
これらの中には DOS のドライバを使って
いくつか秘密のレジスタをいじってやらないと、
本当の SB 互換モードにはならないようなものがある。
まずハードウェアについてきたドライバを組み込んで DOS を起動し、
その後 loadlin を使用して Linux カーネルを読み込めば、
リブートによってカードの設定がリセットされるのを防げるわけだ。
.\"O .SS "The Argument List"
.SS 引数リスト
.\"O The kernel command line is parsed into a list of strings
.\"O (boot arguments) separated by spaces.
.\"O Most of the boot args take the form of:
カーネルのコマンドラインはスペースで区切られた文字列
.RI ( "起動時引数: boot arguments" )
のリストから成っている。ほとんどの起動時引数は次の書式に従う。
.IP
name[=value_1][,value_2]...[,value_10]
.LP
.\"O where 'name' is a unique keyword that is used to identify what part of
.\"O the kernel the associated values (if any) are to be given to.
.\"O Note the limit of 10 is real, as the present code only handles 10 comma
.\"O separated parameters per keyword.
.\"O (However, you can reuse the same
.\"O keyword with up to an additional 10 parameters in unusually
.\"O complicated situations, assuming the setup function supports it.)
ここで 'name' は、それに対応する値がカーネルのどの部分に渡されるものなのかを
識別するための、他と重ならないキーワードである。
書式中の 10 という制限は実際に存在する。
現在のコードは、キーワードひとつあたり、コンマで区切られたパラメータを
10 個までしか取り扱うことができない。
(しかし、事情が非常に複雑な場合には、同じキーワードを再度利用して
10 個以上のパラメータを与えることができるかもしれない。
対象となるハードウェアの設定関数がそれをサポートしていれば、だが。)

.\"O Most of the sorting goes on in linux/init/main.c.
.\"O First, the kernel
.\"O checks to see if the argument is any of the special arguments 'root=',
.\"O \&'nfsroot=', 'nfsaddrs=', 'ro', 'rw', 'debug' or 'init'.
.\"O The meaning of these special arguments is described below.
カーネルコマンドラインの扱いはほとんど linux/init/main.c が行なっている。
初めに、カーネルは
\&'root=', 'nfsroot=', 'nfsaddrs=', 'ro', 'rw', 'debug', 'init'
といった特別な引数があるかをチェックする。
これらの意味については後述する。

.\"O Then it walks a list of setup functions (contained in the bootsetups
.\"O array) to see if the specified argument string (such as 'foo') has
.\"O been associated with a setup function ('foo_setup()') for a particular
.\"O device or part of the kernel.
.\"O If you passed the kernel the line
.\"O foo=3,4,5,6 then the kernel would search the bootsetups array to see
.\"O if 'foo' was registered.
.\"O If it was, then it would call the setup
.\"O function associated with 'foo' (foo_setup()) and hand it the arguments
.\"O 3, 4, 5 and 6 as given on the kernel command line.
カーネルは次に設定関数のリスト
(配列 bootsetups に含まれている) をスキャンし、
指定された引数文字列 (例えば 'foo') が
特定のデバイスやカーネルの一部に対する設定関数
('foo_setup()') に関連付けられているかを調べる。
例えばカーネルに foo=3,4,5,6 のようなパラメータを与えたとすると、
カーネルは配列 bootsetups を調べて、 'foo' が登録されているか調べる。
登録されていたら、'foo' に対応する設定関数 ('foo_setup()') をコールし、
カーネルコマンドラインに与えられた引数である 3, 4, 5, 6 を設定関数に渡す。

.\"O Anything of the form 'foo=bar' that is not accepted as a setup function
.\"O as described above is then interpreted as an environment variable to
.\"O be set.
.\"O A (useless?) example would be to use 'TERM=vt100' as a boot
.\"O argument.
\&'foo=bar' という形式の引数のうち、
上記のように設定関数に受け入れられなかったものは、
環境変数と解釈されて設定される。
(あまり役に立たない?) 例としては、'TERM=VT100' がある。

.\"O Any remaining arguments that were not picked up by the kernel and were
.\"O not interpreted as environment variables are then passed onto process
.\"O one, which is usually the init program.
.\"O The most common argument that
.\"O is passed to the init process is the word 'single' which instructs init
.\"O to boot the computer in single user mode, and not launch all the usual
.\"O daemons.
.\"O Check the manual page for the version of init installed on
.\"O your system to see what arguments it accepts.
カーネルによって処理されず、環境変数としても解釈されなかった
残りの引数は、プロセス 1 に渡されることになる。
通常このプロセス 1 は
.I init
プログラムである。
プロセス 1 に渡される引数で最も良く使われるのは、
\&'single' というキーワードである。
これを指定すると init はシングルユーザモードでコンピュータを起動し、
通常使われるデーモンは一切起動しない。
システムにインストールされている init が
どんな引数を受け付けるかは、
マニュアルページで調べること。
.\"O .SS "General Non-Device Specific Boot Arguments"
.SS 一般的な、デバイス固有ではない起動時引き数
.TP
.B "'init=...'"
.\"O This sets the initial command to be executed by the kernel.
.\"O If this is not set, or cannot be found, the kernel will try
.\"O .IR /sbin/init ,
.\"O then
.\"O .IR /etc/init ,
.\"O then
.\"O .IR /bin/init ,
.\"O then
.\"O .I /bin/sh
.\"O and panic if all of this fails.
カーネルが実行する初期コマンドを設定する。
この指定がなされなかったり、指定したコマンドが見つからなかった場合には、
カーネルは
.IR /sbin/init ,
.IR /etc/init ,
.IR /bin/init ,
.I /bin/sh
の順で実行を試み、すべてに失敗したら panic を起こす。
.TP
.B "'nfsaddrs=...'"
.\"O This sets the nfs boot address to the given string.
.\"O This boot address is used in case of a net boot.
nfs のブートアドレスを指定した文字列に設定する。
このブートアドレスはネットワークブートの場合に用いられる。
.TP
.B "'nfsroot=...'"
.\"O This sets the nfs root name to the given string.
.\"O If this string
.\"O does not begin with '/' or ',' or a digit, then it is prefixed by
.\"O \&'/tftpboot/'.
.\"O This root name is used in case of a net boot.
nfs ルートの名前を設定する。
この文字列の先頭が '/'、','、数字のいずれでもでないときは、
\&'/tftpboot/' が先頭に付加される。
この名前はネットワークブートの場合に用いられる。
.TP
.B  "'no387'"
.\"O (Only when
.\"O .B CONFIG_BUGi386
.\"O is defined.)
.\"O Some i387 coprocessor chips have bugs that show up when used in 32 bit
.\"O protected mode.
.\"O For example, some of the early ULSI-387 chips would
.\"O cause solid lockups while performing floating-point calculations.
.\"O Using the 'no387' boot arg causes Linux to ignore the maths
.\"O coprocessor even if you have one.
.\"O Of course you must then have your
.\"O kernel compiled with math emulation support!
(カーネルのコンパイル時に
.B CONFIG_BUGi386
が指定されたときのみ有効。)
一部の i387 コプロセッサチップには、
32 ビットプロテクトモードでの使用時に生じるバグがある。
例えば初期の ULSI-387 チップは、
浮動小数点演算を行なうと確実にロックアップしてしまう。
この起動時引数 'no387' を指定すると、
Linux はコプロセッサがあってもそれを無視するようになる。
なおもちろん、カーネルコンパイル時に浮動小数点演算をエミュレートする
(kernel math emulation) 指定をしなければならない!
.TP
.B "'no-hlt'"
.\"O (Only when
.\"O .B CONFIG_BUGi386
.\"O is defined.)
.\"O Some of the early i486DX-100 chips have a problem with the 'hlt'
.\"O instruction, in that they can't reliably return to operating mode
.\"O after this instruction is used.
.\"O Using the 'no-hlt' instruction tells
.\"O Linux to just run an infinite loop when there is nothing else to do,
.\"O and to not halt the CPU.
.\"O This allows people with these broken chips
.\"O to use Linux.
(カーネルのコンパイル時に
.B CONFIG_BUGi386
が指定されたときのみ有効。)
初期の i486DX-100 チップの一部では 'hlt' 命令に問題があって、
この命令を使うとオペレーティングモードに正しく戻って来ない。
\&'no-hlt' を指定すれば、Linux はアイドリング時に CPU を停止
(halt) するかわりに無限ループを実行するようになる。
これによって、そのようなバグのあるチップでも Linux を使用できる。
.TP
.B "'root=...'"
.\"O This argument tells the kernel what device is to be used as the root
.\"O file system while booting.
.\"O The default of this setting is determined
.\"O at compile time, and usually is the value of the root device of the
.\"O system that the kernel was built on.
.\"O To override this value, and
.\"O select the second floppy drive as the root device, one would
.\"O use 'root=/dev/fd1'.
.\"O (The root device can also be set using
.\"O .BR rdev (8).)
起動時にルートファイルシステムとして使われるデバイスをカーネルに指定する。
デフォルトはコンパイル時に決定され、
通常はカーネルを構築したシステムのルートデバイスになる。
この値を無効にして、
例えば 2 番目のフロッピーディスクドライブをルートデバイスに指定する場合は、
\&'root=/dev/fd1' とする。
(ルートデバイスは
.BR rdev (8)
を用いても設定できる。)

.\"O The root device can be specified symbolically or numerically.
.\"O A symbolic specification has the form /dev/XXYN, where XX designates
.\"O the device type ('hd' for ST-506 compatible hard disk, with Y in
.\"O \&'a'-'d'; 'sd' for SCSI compatible disk, with Y in 'a'-'e';
.\"O \&'ad' for Atari ACSI disk, with Y in 'a'-'e',
.\"O \&'ez' for a Syquest EZ135 parallel port removable drive, with Y='a',
.\"O \&'xd' for XT compatible disk, with Y either 'a' or 'b'; 'fd' for
.\"O floppy disk, with Y the floppy drive number \(em fd0 would be
.\"O the DOS 'A:' drive, and fd1 would be 'B:'), Y the driver letter or
.\"O number, and N the number (in decimal) of the partition on this device
.\"O (absent in the case of floppies).
.\"O Recent kernels allow many other
.\"O types, mostly for CD-ROMs: nfs, ram, scd, mcd, cdu535, aztcd, cm206cd,
.\"O gscd, sbpcd, sonycd, bpcd.
.\"O (The type nfs specifies a net boot; ram refers to a ram disk.)
ルートデバイスの指定にはシンボル形式と数値形式を用いることができる。
シンボル形式の場合は /dev/XXYN という書式で指定する。
XX にはデバイスタイプを指定する。
Y にはドライブレターもしくはドライブ番号、
N には (フロッピーディスクを除く) ディスクの
パーティション番号を 10 進数の数値で指定する。
(ST-506 互換ハードディスクではデバイスタイプが 'hd' で
Y の範囲は 'a' から 'd'、
SCSI ディスクは 'sd' で Y は 'a' から 'e'、
Atari ACSI ディスクは 'ad' で Y は 'a' から 'e'、
Syquest EZ135 パラレルポートリムーバブルディスクは 'ez' で Y は 'a' のみ、
XT ディスクは 'xt' で Y は 'a' か 'b'、
フロッピーディスクは 'fd' で Y にはドライブ番号を指定する。
fd0 は DOS の 'A:'、fd1 は 'B:' に対応している。
パーティションは存在しないので N は指定しない。)
最新のカーネルでは、他にも次のような多くのデバイスタイプを指定できる
(ほとんどは CD-ROM だが):
nfs, ram, scd, mcd, cdu535, aztcd, cm206cd, gscd, sbpcd, sonycd, bpcd。
(nfs はネットワークブートに、ram は RAM ディスクを使用する場合に用いる。)

.\"O Note that this has nothing to do with the designation of these
.\"O devices on your file system.
.\"O The '/dev/' part is purely conventional.
なお、これらはファイルシステム上でのデバイスの指定方法とは全く関係ない。
\&'/dev/' を用いるのは単に慣習に過ぎない。

.\"O The more awkward and less portable numeric specification of the above
.\"O possible root devices in major/minor format is also accepted.
.\"O (E.g., /dev/sda3 is major 8, minor 3, so you could use 'root=0x803' as an
.\"O alternative.)
扱いにくいし移植性も良くないが、
上記のデバイスを major/minor 番号の数値で指定してもよい。
(例えば /dev/sda3 は major 番号 8、minor 番号 3 なので、
\&'root=0x803' と記述できる。)
.TP
.\"O .B "'ro' and 'rw'"
.B "'ro' と 'rw'"
.\"O The 'ro' option tells the kernel to mount the root file system
.\"O as 'readonly' so that file system consistency check programs (fsck)
.\"O can do their work on a quiescent file system.
.\"O No processes can
.\"O write to files on the file system in question until it is 'remounted'
.\"O as read/write capable, for example, by 'mount \-w \-n \-o remount /'.
.\"O (See also
.\"O .BR mount (8).)
\&'ro' オプションは、ルートファイルシステムを
「読み出し専用」でマウントするようカーネルに指示し、
fsck プログラムがファイルシステムの矛盾を検査できるようにする。
ファイルシステムが「読み書き可能」として再マウントされる
(つまり 'mount \-w \-n \-o remount /') までの間は、
いかなるプロセスもこのファイルシステム上のファイルに書き込むことはできない。
.RB ( mount (8)
も参照せよ。)

.\"O The 'rw' option tells the kernel to mount the root file system read/write.
.\"O This is the default.
rw オプションはルートファイルシステムを
「読み書き可能」でマウントするようカーネルに指示する。
こちらがデフォルトである。

.\"O The choice between read-only and read/write can also be set using
.\"O .BR rdev (8).
省略時の指定を「読み出し専用」と
「読み書き可能」とのどちらにするかは、
.BR rdev (8)
によっても設定できる。
.TP
.B "'reserve=...'"
.\"O This is used to protect I/O port regions from probes.
.\"O The form of the command is:
デバイスの自動検出から I/O ポートを保護するために用いる。
コマンドの形式は以下の通り。
.IP
.BI reserve= iobase,extent[,iobase,extent]...
.sp
.\"O In some machines it may be necessary to prevent device drivers from
.\"O checking for devices (auto-probing) in a specific region.
.\"O This may be
.\"O because of hardware that reacts badly to the probing, or hardware
.\"O that would be mistakenly identified, or merely
.\"O hardware you don't want the kernel to initialize.
機種によっては、
デバイスドライバによるデバイスの自動検出を、
特定の範囲に対しては禁止しなければならないことがある。
ハードウェアが検出動作によって深刻な問題を引き起こす場合や、
誤認識される可能性がある場合、
また単にカーネルにハードウェアを初期化させたくない場合などがありうるだろう。

.\"O The reserve boot-time argument specifies an I/O port region that
.\"O shouldn't be probed.
.\"O A device driver will not probe a reserved region,
.\"O unless another boot argument explicitly specifies that it do so.
この起動時引数 reserve は、自動検出の対象外とする I/O ポートの範囲を指定する。
デバイスドライバは、
他の起動時引数によって明示的に指定されない限り、
予約された範囲に対して自動検出動作を行わない。

.\"O For example, the boot line
例えばブート時のコマンドラインに
.IP
reserve=0x300,32  blah=0x300
.IP
.\"O keeps all device drivers except the driver for 'blah' from probing
.\"O 0x300-0x31f.
と指定すると、'blah' を除くすべてのデバイスドライバは
0x300 から 0x31f の範囲を自動検出の対象外とする。
.TP
.B "'mem=...'"
.\"O The BIOS call defined in the PC specification that returns
.\"O the amount of installed memory was only designed to be able
.\"O to report up to 64MB.
.\"O Linux uses this BIOS call at boot to
.\"O determine how much memory is installed.
.\"O If you have more than 64MB of
.\"O RAM installed, you can use this boot arg to tell Linux how much memory
.\"O you have.
.\"O The value is in decimal or hexadecimal (prefix 0x),
.\"O and the suffixes 'k' (times 1024) or 'M' (times 1048576) can be used.
.\"O Here is a quote from Linus on usage of the 'mem=' parameter.
搭載されているメモリの量を返す BIOS コールは
PC の仕様で定義されているが、これは最大 64MB までしか返すことができない。
Linux は搭載メモリの量を調べるために、
起動時にこの BIOS コールを使用する。
もし 64MB 以上の RAM を搭載している場合は、
この起動時引数を用いて
実際のメモリ容量を Linux に知らせることができる。
値は 10 進数または 16 進数 (先頭に 0x を付加) の数値で指定し、
1024 倍を表す 'k' または 1048576 倍を表す 'M'
を末尾に付加できる。
以下は Linus による 'mem=' パラメータの解説である。

.in +0.5i
.\"O The kernel will accept any 'mem=xx' parameter you give it, and if it
.\"O turns out that you lied to it, it will crash horribly sooner or later.
.\"O The parameter indicates the highest addressable RAM address, so
.\"O \&'mem=0x1000000' means you have 16MB of memory, for example.
.\"O For a 96MB machine this would be 'mem=0x6000000'.
カーネルは 'mem=xx' パラメータとして
どんな値を指定してもそれをそのまま受け入れる。
だからそれが嘘だとわかったら、
遅かれ早かれひどいクラッシュをするだろう。
パラメータはアクセスしうる最も高位の RAM アドレスを指示する。
だから例えば 'mem=0x1000000' っていうのは
16MB のメモリがある、という意味になる。
96MB のマシンなら 'mem=0x6000000' だ。

.\"O .BR NOTE :
.\"O some machines might use the top of memory for BIOS
.\"O caching or whatever, so you might not actually have up to the full
.\"O 96MB addressable.
.\"O The reverse is also true: some chipsets will map
.\"O the physical memory that is covered by the BIOS area into the area
.\"O just past the top of memory, so the top-of-mem might actually be 96MB
.\"O + 384kB for example.
.\"O If you tell linux that it has more memory than
.\"O it actually does have, bad things will happen: maybe not at once, but
.\"O surely eventually.
.BR "注意" :
マシンによってはメモリの最上位の領域を BIOS のキャッシュやら何やらの
ために使っていることがあるから、
実際には 96MB をフルにアドレスすることはできないかもしれない。
逆の場合もある。
いくつかのチップセットでは、
BIOS 領域に入っている物理メモリを最上位のメモリのさらに上にマップする。
よって最上位のメモリはたとえば 96MB + 384kB なんて値になるかもしれない。
linux に実際より多いメモリを教えてしまったとしたら、
まずいことが起きるだろう。
すぐにではないかもしれないけど、ゆくゆくは確実にね。
.in

.\"O You can also use the boot argument 'mem=nopentium' to turn off 4 MB
.\"O page tables on kernels configured for IA32 systems with a pentium or newer
.\"O CPU.
また、起動時引数に 'mem=nopentium' を指定すると、
pentium とそれ以降の CPU を使った IA32 システム用に設定されたカーネルで
4MB のページテーブルを無効にすることができる。
.TP
.B "'panic=N'"
.\"O By default the kernel will not reboot after a panic, but this option
.\"O will cause a kernel reboot after N seconds (if N is greater than zero).
.\"O This panic timeout can also be set by "echo N > /proc/sys/kernel/panic".
デフォルトでは、カーネルはパニックの後リブートしない。
このオプションを用いて (N を 0 より大きな値とすれば)
N 秒後にリブートするようになる。
この値は、起動後に "echo N > /proc/sys/kernel/panic"
として設定することもできる。
.TP
.B "'reboot=[warm|cold][,[bios|hard]]'"
.\"O (Only when
.\"O .B CONFIG_BUGi386
.\"O is defined.)
.\"O Since 2.0.22 a reboot is by default a cold reboot.
.\"O One asks for the old default with 'reboot=warm'.
.\"O (A cold reboot may be required to reset certain hardware,
.\"O but might destroy not yet written data in a disk cache.
.\"O A warm reboot may be faster.)
.\"O By default a reboot is hard, by asking the keyboard controller
.\"O to pulse the reset line low, but there is at least one type
.\"O of motherboard where that doesn't work.
.\"O The option 'reboot=bios' will
.\"O instead jump through the BIOS.
(カーネルコンパイル時に
.B CONFIG_BUGi386
が指定されたときのみ有効。)
カーネルバージョン 2.0.22 から、
リブートのデフォルトはコールドブートになった。
以前のデフォルトであるウォームブートをするには
\&'reboot=warm' と指定しなければならない。
(ある種のハードウェアをリセットするにはコールドブートが必要になるが、
ディスクキャッシュにある書き込んでいないデータは破壊される。
ウォームブートでは、より素早くリブートできる。)
デフォルトではリブートは 'hard' で行われる。
すなわちリセットラインに low を出力するようキーボードコントローラに要求して、
リブートを行う。
しかし一部のマザーボードではこれができない。
\&'reboot=bios' オプションを指定すると、
代わりに BIOS を経由するようになる。
.TP
.\"O .B "'nosmp'" and "'maxcpus=N'"
.B "'nosmp'" と "'maxcpus=N'"
.\"O (Only when __SMP__ is defined.)
.\"O A command-line option of 'nosmp' or 'maxcpus=0' will disable SMP
.\"O activation entirely; an option 'maxcpus=N' limits the maximum number
.\"O of CPUs activated in SMP mode to N.
(カーネルのコンパイル時に __SMP__ が指定されたときのみ有効。)
コマンドラインオプションに 'nosmp' または 'maxcpus=0' を指定すると、
SMP (Symmetric Multi Processing) を完全に無効にする。
\&'maxcpus=N' オプションは、
SMP モードで有効にする CPU の最大数を N に制限する。
.\"O .SS "Boot Arguments for Use by Kernel Developers"
.SS カーネル開発者用の起動時引数
.TP
.B "'debug'"
.\"O Kernel messages are handed off to the kernel log daemon klogd so that they
.\"O may be logged to disk.
.\"O Messages with a priority above
.\"O .I console_loglevel
.\"O are also printed on the console.
.\"O (For these levels, see \fI<linux/kernel.h>\fP.)
.\"O By default this variable is set to log anything more important than
.\"O debug messages.
.\"O This boot argument will cause the kernel to also
.\"O print the messages of DEBUG priority.
.\"O The console loglevel can also be set at run time via an option
.\"O to klogd.
.\"O See
.\"O .BR klogd (8).
カーネルが出力するメッセージはカーネルログデーモン klogd に渡され、
ディスクに記録できるようになる。
プライオリティが
.I console_loglevel
のメッセージはコンソールにも表示される。
(これらのレベルについては、\fI<linux/kernel.h>\fP を参照。)
デフォルトではこの変数は、
デバッグメッセージよりも重要なあらゆるメッセージを記録するよう設定されている
(デバッグメッセージは含まない)。
この起動時引数を指定すると、
カーネルはプライオリティが DEBUG のメッセージも出力するようになる。
.I console_loglevel
も klogd にオプションを渡せば実行時に設定できる。
.BR klogd (8)
を見よ。
.TP
.B "'profile=N'"
.\"O It is possible to enable a kernel profiling function,
.\"O if one wishes to find out where the kernel is spending its CPU cycles.
.\"O Profiling is enabled by setting the variable
.\"O .I prof_shift
.\"O to a nonzero value.
.\"O This is done either by specifying
.\"O .B CONFIG_PROFILE
.\"O at compile time, or by giving the 'profile=' option.
.\"O compile time, or by giving the 'profile=' option.
.\"O Now the value that
.\"O .I prof_shift
.\"O gets will be N, when given, or
.\"O .BR CONFIG_PROFILE_SHIFT ,
.\"O when that is given, or 2, the default.
.\"O The significance of this variable is that it
.\"O gives the granularity of the profiling: each clock tick, if the
.\"O system was executing kernel code, a counter is incremented:
カーネルがどこで CPU サイクルを消費しているか調べたい場合には、
カーネルのプロファイリング機能を有効にすればこれを実現できる。
カーネルプロファイリングは、変数
.I prof_shift
を 0 以外の値にセットすると有効になる。
この値はコンパイル時に
.B CONFIG_PROFILE
で指定するか、
この 'prifile=N' オプションで指定できる。
.I prof_shift
の値は N が指定されれば N となり、N が指定されなかった場合は
.B CONFIG_PROFILE_SHIFT
の値が用いられる。
どちらも指定されなければデフォルト値の 2 が用いられる。
この変数が重要なのは、
カーネルプロファイリングの粒度を決定するところにある。
すなわち、各クロックの割込みごとに、システムがカーネルコードを実行していれば、
以下のようにカウンタの値がインクリメントされる。
.IP
profile[address >> prof_shift]++;
.sp
.\"O The raw profiling information can be read from
.\"O .IR /proc/profile .
.\"O Probably you'll want to use a tool such as readprofile.c to digest it.
.\"O Writing to
.\"O .I /proc/profile
.\"O will clear the counters.
生のプロファイリング情報は、
.I /proc/profile
から見ることができるが、readprofile.c
のような情報を加工するツールを使ったほうが良いだろう。
.I /proc/profile
に任意のデータを書込むと、
カウンタはリセットされる。
.TP
.B "'swap=N1,N2,N3,N4,N5,N6,N7,N8'"
.\"O Set the eight parameters max_page_age, page_advance, page_decline,
.\"O page_initial_age, age_cluster_fract, age_cluster_min, pageout_weight,
.\"O bufferout_weight that control the kernel swap algorithm.
.\"O For kernel tuners only.
カーネルのスワップアルゴリズムをコントロールする
次の 8 つのパラメータをセットする。
max_page_age, page_advance,
page_decline, page_initial_age, age_cluster_fract,
age_cluster_min, pageout_weight, bufferout_weight.
これはカーネルをチューンする人のためのオプションである。
.TP
.B "'buff=N1,N2,N3,N4,N5,N6'"
.\"O Set the six parameters max_buff_age, buff_advance, buff_decline,
.\"O buff_initial_age, bufferout_weight, buffermem_grace that control
.\"O kernel buffer memory management.
.\"O For kernel tuners only.
カーネルのバッファメモリ管理をコントロールする
次の 6 つのパラメータをセットする。
max_buff_age, buff_advance,
buff_decline, buff_initial_age, bufferout_weight,
buffermem_grace.
これはカーネルをチューンする人のためのオプションである。
.\"O .SS "Boot Arguments for Ramdisk Use"
.SS "RAM ディスク関連の起動時引数"
.\"O (Only if the kernel was compiled with
.\"O .BR CONFIG_BLK_DEV_RAM .)
.\"O In general it is a bad idea to use a ramdisk under Linux \(em
.\"O the system will use available memory more efficiently itself.
.\"O But while booting (or while constructing boot floppies)
.\"O it is often useful to load the floppy contents into a
.\"O ramdisk.
.\"O One might also have a system in which first
.\"O some modules (for file system or hardware) must be loaded
.\"O before the main disk can be accessed.
(カーネルのコンパイル時に
.B CONFIG_BLK_DEV_RAM
オプションが指定されたときのみ有効。)
一般的には、Linux で RAM ディスクを使用するのはあまり良い考えではない。
システムに任せておけばもっと効率的にメモリを使用する。
しかしブート時 (またはブートフロッピーの作成中) には、
フロッピーの内容を RAM ディスクにロードすると便利かもしれない。
メインディスクがアクセス可能になる前に、
(ファイルシステムやハードウェアに関する)
モジュールをいくつかロードしなければならないシステムもあるだろう。

.\"O In Linux 1.3.48, ramdisk handling was changed drastically.
.\"O Earlier, the memory was allocated statically, and there was
.\"O a 'ramdisk=N' parameter to tell its size.
.\"O (This could also
.\"O be set in the kernel image at compile time, or by use of
.\"O .BR rdev (8).)
.\"O These days ram disks use the buffer cache, and grow dynamically.
.\"O For a lot of information (e.g., how to use
.\"O .BR rdev (8)
.\"O in conjunction with the new ramdisk setup), see
.\"O .IR /usr/src/linux/Documentation/ramdisk.txt .
Linux のバージョン 1.3.48 において、
RAM ディスクの取り扱いが根底から変化した。
それ以前までは、メモリは静的に割り当てられ、
\&'ramdisk=N' パラメータでそのサイズを指定していた。
(この値はカーネルのコンパイル時や
.BR rdev (8)
によっても変更できた。)
現在は RAM ディスクはバッファキャッシュを使用しており、
動的に成長する。
さらに多くの情報 (たとえば
.BR rdev (8)
が新しい RAM ディスクの設定とどのように関係するか) については、
.I /usr/src/linux/Documentation/ramdisk.txt
を参照。

.\"O There are four parameters, two boolean and two integral.
4 つのパラメータがある。論理値をとるものが 2 つ、整数値をとるものが 2 つ。
.TP
.B "'load_ramdisk=N'"
.\"O If N=1, do load a ramdisk.
.\"O If N=0, do not load a ramdisk.
.\"O (This is the default.)
N=1 なら RAM ディスクをロードする。N=0 ならロードしない (デフォルト)。
.TP
.B "'prompt_ramdisk=N'"
.\"O If N=1, do prompt for insertion of the floppy.
.\"O (This is the default.)
.\"O If N=0, do not prompt.
.\"O (Thus, this parameter is never needed.)
N=1 ならフロッピー挿入を促すプロンプトを出す (デフォルト)。
N=0 ならプロンプトを出さない。
(従って、このパラメータを指定する必要はまず無いであろう。)
.TP
.\"O .BR 'ramdisk_size=N' " or (obsolete) " 'ramdisk=N'
.BR 'ramdisk_size=N' " もしくは (古い形式の) " 'ramdisk=N'
.\"O Set the maximal size of the ramdisk(s) to N kB.
.\"O The default is 4096 (4 MB).
ラムディスクの最大サイズを N kB (キロバイト) にセットする。
省略時は 4096 (4 MB)。
.TP
.B "'ramdisk_start=N'"
.\"O Sets the starting block number (the offset on the floppy where
.\"O the ramdisk starts) to N.
.\"O This is needed in case the ramdisk follows a kernel image.
開始ブロック番号
(フロッピー先頭からのオフセットで指定した RAM ディスクの開始点)
を N にセットする。
これはカーネルイメージのあとに RAM ディスクイメージを置く場合に必要となる。
.TP
.B "'noinitrd'"
.\"O (Only if the kernel was compiled with
.\"O .B CONFIG_BLK_DEV_RAM
.\"O and
.\"O .BR CONFIG_BLK_DEV_INITRD .)
.\"O These days it is possible to compile the kernel to use initrd.
.\"O When this feature is enabled, the boot process will load the kernel
.\"O and an initial ramdisk; then the kernel converts initrd into
.\"O a "normal" ramdisk, which is mounted read-write as root device;
.\"O then /linuxrc is executed; afterward the "real" root file system is mounted,
.\"O and the initrd file system is moved over to /initrd; finally
.\"O the usual boot sequence (e.g., invocation of /sbin/init) is performed.
(カーネルのコンパイル時に
.B CONFIG_BLK_DEV_RAM
と
.B CONFIG_BLK_DEV_INITRD
が指定されているときのみ有効。)
最近は initrd を使用するようにカーネルをコンパイルできる。
このオプションが指定されると、
ブートプロセスはカーネルと RAM ディスクをロードし、
カーネルは initrd を「普通の」 RAM ディスクに変換し、
この RAM ディスクがルートデバイスとして「読み書き可能」でマウントされる。
次に /linuxrc が実行される。
その後「真の」ルートファイルシステムがマウントされ、
initrd ファイルシステムは /initrd に移される。
最後に通常のブートシーケンス (具体的には /sbin/init の呼び出し) が実行される。

.\"O For a detailed description of the initrd feature, see
.\"O .IR /usr/src/linux/Documentation/initrd.txt .
initrd に関する詳細な解説は
.I /usr/src/linux/Documentation/initrd.txt
を参照。

.\"O The 'noinitrd' option tells the kernel that although it was compiled for
.\"O operation with initrd, it should not go through the above steps, but
.\"O leave the initrd data under
.\"O .IR /dev/initrd .
.\"O (This device can be used only once: the data is freed as soon as
.\"O the last process that used it has closed
.\"O .IR /dev/initrd .)
\&'noinitrd' オプションを用いると、
カーネルは (initrd 動作を行うようにコンパイルされている場合でも)
上記の動作を行なわず、代わりに initrd のデータを
.I /dev/initrd
に残す。
(このデバイスは一度しか使えない。
データは、そのデータを使った最後のプロセスが
.I /dev/initrd
をクローズするとすぐに解放される。)
.\"O .SS "BOOT ARGUMENTS FOR SCSI DEVICES"
.SS "SCSI デバイス用の起動時引数"
.\"O General notation for this section:
この節における用語：

.\"O .I iobase
.\"O -- the first I/O port that the SCSI host occupies.
.\"O These are specified in hexadecimal notation,
.\"O and usually lie in the range from 0x200 to 0x3ff.
.I iobase
-- SCSI ホストアダプタが占有する I/O ポートの先頭アドレス。
16 進表記で指定し、通常 0x200 から 0x3ff の範囲に位置する。

.\"O .I irq
.\"O -- the hardware interrupt that the card is configured to use.
.\"O Valid values will be dependent on the card in question, but will
.\"O usually be 5, 7, 9, 10, 11, 12, and 15.
.\"O The other values are usually
.\"O used for common peripherals like IDE hard disks, floppies, serial
.\"O ports, etc.
.I irq
-- カードが利用するハードウェア割り込み。有効な値はカードに
よって異なるが、通常は 5, 7, 9, 10, 11, 12, 15 である。
これ以外の値は通常、IDE ハードディスク、フロッピー、
シリアルポートといった一般的な周辺機器によって使用される。

.\"O .I scsi-id
.\"O -- the ID that the host adapter uses to identify itself on the
.\"O SCSI bus.
.\"O Only some host adapters allow you to change this value, as
.\"O most have it permanently specified internally.
.\"O The usual default value
.\"O is 7, but the Seagate and Future Domain TMC-950 boards use 6.
.I scsi-id
-- SCSI バス上のホストアダプタが自分自身を識別するために使用する ID 番号。
この値を変更できるホストアダプタもごく希に存在するが、
ほとんどはアダプタ内部で固定されている。
よく使われるデフォルト値は 7 であるが、Seagate もしくは
Future Domain 製の TMC-950 ボードでは 6 が使われる。

.\"O .I parity
.\"O -- whether the SCSI host adapter expects the attached devices
.\"O to supply a parity value with all information exchanges.
.\"O Specifying a one indicates parity checking is enabled,
.\"O and a zero disables parity checking.
.\"O Again, not all adapters will support selection of parity
.\"O behavior as a boot argument.
.I parity
-- SCSI ホストアダプタが取り付けられたデバイスとの通信に際して
パリティ値を必要とするかどうか。
1 を指定するとパリティチェックが有効になり、
0 でパリティチェックが無効になる。
しかし、すべてのデバイスがこの起動時引数によるパリティの選択を
サポートするわけではない。
.TP
.B "'max_scsi_luns=...'"
.\"O A SCSI device can have a number of 'subdevices' contained within
.\"O itself.
.\"O The most common example is one of the new SCSI CD-ROMs that
.\"O handle more than one disk at a time.
.\"O Each CD is addressed as a
.\"O \&'Logical Unit Number' (LUN) of that particular device.
.\"O But most
.\"O devices, such as hard disks, tape drives and such are only one device,
.\"O and will be assigned to LUN zero.
SCSI デバイスは複数の「サブデバイス」を自分自身の内部に持つことができる。
最もよくある例として、一時に 1 枚以上のディスクを扱うことができる
(チェンジャー機能付の) SCSI CD-ROM がある。
それぞれの CD はそのデバイスの
「論理ユニット番号 (LUN)」によって特定される。
しかしほとんどのデバイス (例えばハードディスクやテープドライブ) は、
LUN 番号 0 が割り当てられた、ただひとつのデバイスからなる。

.\"O Some poorly designed SCSI devices cannot handle being probed for
.\"O LUNs not equal to zero.
.\"O Therefore, if the compile-time flag
.\"O .B CONFIG_SCSI_MULTI_LUN
.\"O is not set, newer kernels will by default
.\"O only probe LUN zero.
設計が不十分な SCSI デバイスでは 0 以外の LUN 番号への自動検出を
扱えないことがある。
したがって、コンパイル時に
.B CONFIG_SCSI_MULTI_LUN
オプションが指定されていないと、
最近のカーネルではデフォルトでは LUN 番号 0 のみを検出する。

.\"O To specify the number of probed LUNs at boot, one enters
.\"O \&'max_scsi_luns=n' as a boot arg, where n is a number between one and
.\"O eight.
.\"O To avoid problems as described above, one would use n=1 to
.\"O avoid upsetting such broken devices.
起動時に調べる LUN 番号を指定する場合、起動時引数として
\&'max_scsi_luns=n' を指定する。n は 1 から 8 の間で指定する。
n=1 以上の値を使用しないようにすれば、
このようないかれた機械にひどい目にあわされずにすむだろう。
.TP
.\"O .B "SCSI tape configuration"
.B SCSI テープドライブの設定
.\"O Some boot time configuration of the SCSI tape driver can be achieved
.\"O by using the following:
SCSI テープドライバの起動時設定の一部は以下のようにして行なうことができる。
.IP
.BI st= buf_size[,write_threshold[,max_bufs]]
.sp
.\"O The first two numbers are specified in units of kB.
.\"O The default
.\"O .I buf_size
.\"O is 32kB, and the maximum size that can be specified is a
.\"O ridiculous 16384kB.
.\"O The
.\"O .I write_threshold
.\"O is the value at which the buffer is committed to tape, with a
.\"O default value of 30kB.
.\"O The maximum number of buffers varies
.\"O with the number of drives detected, and has a default of two.
.\"O An example usage would be:
最初の 2 つの数字は kB 単位で指定する。
.I buf_size
のデフォルトは 32kB である。上限は 16384kB まで指定できる。
.I write_threshold
はデータ書き出しの閾値で、
バッファのデータのサイズがこの値を越えるとデータはテープに書き出される。
デフォルト値は 30kB である。
バッファ数の最大値
.RI ( max_bufs )
は検出されたドライブの数によって変化するが、デフォルトは 2 である。
使用例を以下に示す。
.IP
st=32,30,2
.IP
.\"O Full details can be found in the file
.\"O .I Documentation/scsi/st.txt
.\"O (or
.\"O .I drivers/scsi/README.st
.\"O for older kernels) in the kernel source.
詳細はカーネルソース内の
.I Documentation/scsi/st.txt
(古いカーネルの場合は
.IR drivers/scsi/README.st )
に書かれている。
.TP
.\"O .B "Adaptec aha151x, aha152x, aic6260, aic6360, SB16-SCSI configuration"
.B Adaptec aha151x, aha152x, aic6260, aic6360, SB16-SCSI の設定
.\"O The aha numbers refer to cards and the aic numbers refer to the actual
.\"O SCSI chip on these type of cards, including the Soundblaster-16 SCSI.
aha に続く番号はカードを表し、
aic に続く番号はカードに搭載されている実際のチップを表す
(Soundblaster-16 SCSI も後者に含まれる)。

.\"O The probe code for these SCSI hosts looks for an installed BIOS, and
.\"O if none is present, the probe will not find your card.
.\"O Then you will
.\"O have to use a boot arg of the form:
SCSI ホストの検出コードは、
インストールされている BIOS を探す。
見つからないと、カードは検出できない。
この場合は以下のように起動時引数を指定することになる。
.IP
.BI aha152x= iobase[,irq[,scsi-id[,reconnect[,parity]]]]
.IP
.\"O If the driver was compiled with debugging enabled, a sixth
.\"O value can be specified to set the debug level.
もしドライバのコンパイル時にデバッグオプションを指定していた場合は、
6 番目の値でデバッグレベルを指定できる。

.\"O All the parameters are as described at the top of this section, and the
.\"O .I reconnect
.\"O value will allow device disconnect/reconnect if a nonzero value
.\"O is used.
.\"O An example usage is as follows:
すべてのパラメータは、このセクションの最初で説明した通りである。
.I reconnect
に 0 以外の値を指定すると、デバイスを切断したり接続したりできる。
以下に例を示す。
.IP
aha152x=0x340,11,7,1
.IP
.\"O Note that the parameters must be specified in order, meaning that if
.\"O you want to specify a parity setting, then you will have to specify an
.\"O iobase, irq, scsi-id and reconnect value as well.
パラメータは必ず上記の順番どおりに指定されなければならない。
例えば、パリティ (parity) を設定したい場合には、
iobase, irq, scsi-id, reconnect も同時に指定する必要がある。
.TP
.\"O .B "Adaptec aha154x configuration"
.B Adaptec aha154x の設定
.\"O The aha1542 series cards have an i82077 floppy controller onboard,
.\"O while the aha1540 series cards do not.
.\"O These are busmastering cards,
.\"O and have parameters to set the ''fairness'' that is used to share
.\"O the bus with other devices.
.\"O The boot arg looks like the following.
aha1542 シリーズのカードは
i82077 フロッピーディスクコントローラをボードに搭載している。
一方 aha1540 シリーズのカードは搭載していない。
これらは共にバスマスタカードであり、
他のデバイスとバスを共有する際に、
どのくらい「フェアに」振る舞うかを指定するパラメータがある。
起動時引数は以下のようにして指定する。
.IP
.BI aha1542= iobase[,buson,busoff[,dmaspeed]]
.IP
.\"O Valid iobase values are usually one of: 0x130, 0x134, 0x230, 0x234,
.\"O 0x330, 0x334.
.\"O Clone cards may permit other values.
有効な iobase の値は次の通り。
0x130, 0x134, 0x230, 0x234, 0x330, 0x334。
クローンカードの中には他の値を指定できるものもある。

.\"O The
.\"O .IR buson ", " busoff
.\"O values refer to the number of microseconds that the
.\"O card dominates the ISA bus.
.\"O The defaults are 11us on, and 4us off, so
.\"O that other cards (such as an ISA LANCE Ethernet card) have a chance to
.\"O get access to the ISA bus.
.IR buson ", " busoff
値はカードがISA バスを占有する時間をマイクロ秒単位で指定する。
省略時はそれぞれ 11us on と 4us off になっているので、
他のカード (例えば ISA LANCE イーサネットカード) も
ISA バスにアクセスできる。

.\"O The
.\"O .I dmaspeed
.\"O value refers to the rate (in MB/s) at which the DMA
.\"O (Direct Memory Access) transfers proceed.
.\"O The default is 5MB/s.
.\"O Newer revision cards allow you to select this value as part of the
.\"O soft-configuration, older cards use jumpers.
.\"O You can use values up to
.\"O 10MB/s assuming that your motherboard is capable of handling it.
.\"O Experiment with caution if using values over 5MB/s.
.I dmaspeed
値は DMA (Direct Memory Access) 転送速度を MB/s 単位で設定する。
省略時は 5MB/s である。新しいリビジョンのカードでは、
この値を使ったソフトウェアによる設定ができる。
古いカードはジャンパ設定を必要とする。
マザーボードが対応していれば最大 10MB/s まで指定可能である。
5MB/s 以上の値を使う場合は注意して実験してからにすること。
.TP
.\"O .B "Adaptec aha274x, aha284x, aic7xxx configuration"
.B Adaptec aha274x, aha284x, aic7xxx の設定
.\"O These boards can accept an argument of the form:
これらのボードは以下の形式で指定する。
.IP
.BI aic7xxx= extended,no_reset
.IP
.\"O The
.\"O .I extended
.\"O value, if nonzero, indicates that extended translation for large
.\"O disks is enabled.
.\"O The
.\"O .I no_reset
.\"O value, if nonzero, tells the driver not to reset the SCSI bus when
.\"O setting up the host adapter at boot.
.I extended
値が 0 以外の時は、大容量ディスク用の拡張変換が有効になる。
.I no_reset
値を 0 以外の値にすると、ホストアダプタの検出時に、
ドライバによる SCSI バスの初期化を行わない。
.TP
.\"O .B "AdvanSys SCSI Hosts configuration ('advansys=')"
.B "AdvanSys SCSI ホストアダプタの設定 ('advansys=')"
.\"O The AdvanSys driver can accept up to four i/o addresses that will be
.\"O probed for an AdvanSys SCSI card.
.\"O Note that these values (if used) do
.\"O not effect EISA or PCI probing in any way.
.\"O They are only used for
.\"O probing ISA and VLB cards.
.\"O In addition, if the driver has been
.\"O compiled with debugging enabled, the level of debugging output can be
.\"O set by adding an 0xdeb[0-f] parameter.
.\"O The 0-f allows setting the
.\"O level of the debugging messages to any of 16 levels of verbosity.
AdvanSys ドライバはカードの検出先として
4 つの I/O アドレスを受け付ける。
EISA や PCI カードではこれらを指定しても全く効果が無い。
ISA 及び VLB カードの検出に対してのみ用いられる。
さらに、デバッグオプション付きでドライバがコンパイルされている場合、
デバッグ情報の出力レベルとして 0xdeb[0-f] パラメータを追加できる。
0-f によりデバッグメッセージの情報のレベルを 16 段階で指定する。
.TP
.B "AM53C974"
.IP
.BI AM53C974= host-scsi-id,target-scsi-id,max-rate,max-offset
.TP
.\"O .B "BusLogic SCSI Hosts configuration ('BusLogic=')"
.B BusLogic SCSI ホストアダプタの設定 ('BusLogic=')
.IP
.BI BusLogic= N1,N2,N3,N4,N5,S1,S2,...
.IP
.\"O For an extensive discussion of the BusLogic command-line parameters,
.\"O see
.\"O .I /usr/src/linux/drivers/scsi/BusLogic.c
.\"O (lines 3149-3270 in the kernel version I am looking at).
.\"O The text
.\"O below is a very much abbreviated extract.
Buslogic のコマンドラインパラメータに関する詳細な議論は
.I /usr/src/linux/drivers/scsi/BusLogic.c
(著者がいま見ているカーネルでは 4350-4497 行目) を参照すること。
以下はこれを非常におおざっぱに要約したものである。

.\"O The parameters N1-N5 are integers.
.\"O The parameters S1,... are strings.
.\"O N1 is the I/O Address at which the Host Adapter is located.
.\"O N2 is the Tagged Queue Depth to use for Target Devices that support
.\"O Tagged Queuing.
.\"O N3 is the Bus Settle Time in seconds.
.\"O This is the amount of time
.\"O to wait between a Host Adapter Hard Reset which
.\"O initiates a SCSI Bus Reset and issuing any SCSI Commands.
.\"O N4 is the Local Options (for one Host Adapter).
.\"O N5 is the Global Options (for all Host Adapters).
パラメータ N1 から N5 までは整数である。
パラメータ S1 以降は文字列である。
N1 はホストアダプタが存在する I/O アドレス。
N2 はタグキューイングをサポートするデバイスに対して使用するキューの深さ。
N3 はバス安定時間 (BST) を秒単位で指定する。
これはホストアダプタのハードリセットにより SCSI バスをリセットしてから
SCSI コマンドの発行を開始するまでの待ち時間である。
N4 はローカルオプション (ひとつのホストアダプタ用)。
N5 はグローバルオプション (すべてのホストアダプタ用)。

.\"O The string options are used to provide control over Tagged Queuing
.\"O (TQ:Default, TQ:Enable, TQ:Disable, TQ:<Per-Target-Spec>), over
.\"O Error Recovery (ER:Default, ER:HardReset, ER:BusDeviceReset,
.\"O ER:None, ER:<Per-Target-Spec>), and over Host Adapter Probing
.\"O (NoProbe, NoProbeISA, NoSortPCI).
文字列オプションは以下の動作を制御する:
タグキューイング (TQ:Default, TQ:Enable, TQ:Disable, TQ:<Per-Target-Spec>)、
エラー復帰 (ER:Default, ER:HardReset, ER:BusDeviceReset,
ER:None, ER:<Per-Target-Spec>)、
ホストアダプタの検出 (NoProbe, NoProbeISA, NoSortPCI)。
.TP
.\"O .B "EATA/DMA configuration"
.B EATA/DMA の設定
.\"O The default list of i/o ports to be probed can be changed by
検出対象にする I/O ポートのリストを以下のようにして変更できる。
.IP
.BI eata= iobase,iobase,...\fP.
.TP
.\"O .B "Future Domain TMC-16x0 configuration"
.B Future Domain TMC-16x0 の設定
.IP
.BI fdomain= iobase,irq[,adapter_id]
.TP
.\"O .B "Great Valley Products (GVP) SCSI controller configuration"
.B Great Valley Products (GVP) SCSI コントローラの設定
.IP
.BI gvp11= dma_transfer_bitmask
.TP
.\"O .B "Future Domain TMC-8xx, TMC-950 configuration"
.B Future Domain 製 TMC-8xx, TMC-950 の設定
.IP
.BI tmc8xx= mem_base,irq
.IP
.\"O The
.\"O .I mem_base
.\"O value is the value of the memory mapped I/O region that
.\"O the card uses.
.\"O This will usually be one of the following values:
.\"O 0xc8000, 0xca000, 0xcc000, 0xce000, 0xdc000, 0xde000.
.I mem_base
にはカードが使用するメモリマップ I/O の領域を指定する。通常
は次の値のどれかが使われる: 0xc8000, 0xca000, 0xcc000,
0xce000, 0xdc000, 0xde000。
.TP
.\"O .B "IN2000 configuration"
.B IN2000 の設定
.IP
.BI in2000= S
.IP
.\"O where S is a comma-separated string of items keyword[:value].
.\"O Recognized keywords (possibly with value) are:
.\"O ioport:addr, noreset, nosync:x, period:ns, disconnect:x,
.\"O debug:x, proc:x.
.\"O For the function of these parameters, see
.\"O .IR /usr/src/linux/drivers/scsi/in2000.c .
S はコンマ区切りの文字列で、各項目は keyword[:value] 形式で指定する。
指定できるキーワードは以下の通り。
ioport:addr, noreset, nosync:x, period:ns, disconnect:x, debug:x, proc:x。
これらのパラメータの機能については
.I /usr/src/linux/drivers/scsi/in2000.c
を参照。
.TP
.\"O .B "NCR5380 and NCR53C400 configuration"
.B NCR5380 および NCR53C400 の設定
.\"O The boot arg is of the form
この起動時引数は以下の書式で指定する。
.IP
.BI ncr5380= iobase,irq,dma
.IP
.\"O or
または
.IP
.BI ncr53c400= iobase,irq
.IP
.\"O If the card doesn't use interrupts, then an IRQ value of 255 (0xff) will
.\"O disable interrupts.
.\"O An IRQ value of 254 means to autoprobe.
.\"O More details can be found in the file
.\"O .I Documentation/scsi/g_NCR5380.txt
.\"O (or
.\"O .I drivers/scsi/README.g_NCR5380
.\"O for older kernels) in the kernel source.
カードが IRQ を使用しない場合は、
255 (0xff) を指定すれば無効にできる。
IRQ に 254 を指定すると自動検出する。
詳細はカーネルソース内の
.I Documentation/scsi/g_NCR5380.txt
(古いカーネルの場合は
.IR drivers/scsi/README.g_NCR5380 )
に書かれている。
.TP
.\"O .B "NCR53C8xx configuration"
.B NCR53C8xx の設定
.IP
.BI ncr53c8xx= S
.IP
.\"O where S is a comma-separated string of items keyword:value.
.\"O Recognized keywords are: mpar (master_parity), spar (scsi_parity),
.\"O disc (disconnection), specf (special_features), ultra (ultra_scsi),
.\"O fsn (force_sync_nego), tags (default_tags), sync (default_sync),
.\"O verb (verbose), debug (debug), burst (burst_max).
.\"O For the function of the assigned values, see
.\"O .IR /usr/src/linux/drivers/scsi/ncr53c8xx.c .
S はコンマ区切りの文字列で、各項目は keyword[:value] 形式で指定する。
指定できるキーワードは以下の通り。
mpar (master_parity),
spar (scsi_parity), disc (disconnection), specf
(special_features), ultra (ultra_scsi), fsn
(force_sync_nego), tags (default_tags), sync (default_sync),
verb (verbose), debug (debug), burst (burst_max)。
これらのオプションの機能については
.I /usr/src/linux/drivers/scsi/README.ncr53c8xx
を参照すること。
.TP
.\"O .B "NCR53c406a configuration"
.B NCR53c406a の設定
.IP
.BI ncr53c406a= iobase[,irq[,fastpio]]
.IP
.\"O Specify irq = 0 for noninterrupt driven mode.
.\"O Set fastpio = 1 for fast pio mode, 0 for slow mode.
割り込み無しで動作するモードには irq に 0 を指定する。
高速 PIO モードは fastpio に 1 を指定し、低速モードは 0 を指定する。
.TP
.\"O .B "Pro Audio Spectrum configuration"
.B Pro Audio Spectrum の設定
.\"O The PAS16 uses a NC5380 SCSI chip, and newer models support
.\"O jumperless configuration.
.\"O The boot arg is of the form:
PAS16 は NC5380 SCSI チップを使用しており、
最近のモデルはジャンパレスの設定をサポートしている。
起動時引数の書式は以下の通り。
.IP
.BI pas16= iobase,irq
.IP
.\"O The only difference is that you can specify an IRQ value of 255, which
.\"O will tell the driver to work without using interrupts, albeit at a
.\"O performance loss.
.\"O The iobase is usually 0x388.
唯一の違いとして、
IRQ に 255 を指定すれば割り込みを使用しないようドライバに指示できる
(パフォーマンスは低下する)。
通常 iobase は 0x388 である。
.TP
.\"O .B "Seagate ST-0x configuration"
.B Seagate 製 ST-0x の設定
.\"O If your card is not detected at boot time,
.\"O you will then have to use a boot arg of the form:
カードが起動時に認識されない場合は以下のような指定が必要になるだろう。
.IP
.BI st0x= mem_base,irq
.IP
.\"O The
.\"O .I mem_base
.\"O value is the value of the memory mapped I/O region that
.\"O the card uses.
.\"O This will usually be one of the following values:
.\"O 0xc8000, 0xca000, 0xcc000, 0xce000, 0xdc000, 0xde000.
.I mem_base
にはカードが使用するメモリマップ I/O の領域を指定する。
通常は次のどれか:
0xc8000, 0xca000, 0xcc000, 0xce000, 0xdc000, 0xde000。
TP
.\"O .B "Trantor T128 configuration"
.B Trantor 製 T128 の設定
.\"O These cards are also based on the NCR5380 chip, and accept the
.\"O following options:
このカードも NCR5380 チップを利用しており、
以下のオプションを受け付ける。
.IP
.BI t128= mem_base,irq
.IP
.\"O The valid values for
.\"O .I mem_base
.\"O are as follows: 0xcc000, 0xc8000, 0xdc000, 0xd8000.
有効な
.I mem_base
の値は次の通りである: 0xcc000, 0xc8000, 0xdc000, 0xd8000。
.TP
.\"O .B "UltraStor 14F/34F configuration"
.B UltraStor 製 14F/34F の設定
.\"O The default list of i/o ports to be probed can be changed by
自動検出を試みる I/O ポートのリストは以下のようにして変更できる。
.IP
.BI eata= iobase,iobase,... .
.TP
.\"O .B "WD7000 configuration"
.B WD7000 の設定
.IP
.BI wd7000= irq,dma,iobase
.\"O .SS "Commodore Amiga A2091/590 SCSI controller configuration"
.SS Commodore Amiga 製 A2091/590 SCSI コントローラの設定
.IP
.BI wd33c93= S
.IP
.\"O where S is a comma-separated string of options.
.\"O Recognized options are
.\"O nosync:bitmask, nodma:x, period:ns, disconnect:x, debug:x,
.\"O clock:x, next.
.\"O For details, see
.\"O .IR /usr/src/linux/drivers/scsi/wd33c93.c .
S はコンマ区切りの文字列で、各項目は keyword[:value] 形式で指定する。
認識されるオプションは以下の通り。
nosync:bitmask, nodma:x, period:ns,
disconnect:x, debug:x, clock:x, next。
詳細は
.I /usr/src/linux/drivers/scsi/wd33c93.c
を参照せよ。
.\"O .SS "Hard Disks"
.SS ハードディスク
.TP
.\"O .B "IDE Disk/CD-ROM Driver Parameters"
.B "IDE Disk/CD-ROM ドライバのパラメータ"
.\"O The IDE driver accepts a number of parameters, which range from disk
.\"O geometry specifications, to support for broken controller chips.
.\"O Drive specific options are specified by using 'hdX=' with X in 'a'-'h'.
IDE ドライバは、
ディスクのジオメトリ指定からバグのあるコントローラチップのサポートまで、
数多くのパラメータを受け付ける。
ドライブを特定するには 'hdX=' を使う。
ここで X には 'a' から 'h' の文字を指定する。

.\"O Non-drive specific options are specified with the prefix 'hd='.
.\"O Note that using a drive specific prefix for a non-drive specific option
.\"O will still work, and the option will just be applied as expected.
あるドライブに特有なものではないオプションは、hd= を前に付けて指定する。
ドライブ特有でないオプションに対してドライブ指定
('hdX=') を前置しても問題はない。
そのオプションは期待通りそのドライブに適用される。
.\"nakano というのが "as expected" だと思うんだけど...

.\"O Also note that 'hd=' can be used to refer to the next unspecified
.\"O drive in the (a, ..., h) sequence.
.\"O For the following discussions,
.\"O the 'hd=' option will be cited for brevity.
.\"O See the file
.\"O .I Documentation/ide.txt
.\"O (or
.\"O .I drivers/block/README.ide
.\"O for older kernels) in the kernel source for more details.
\&'hd=' は、(a, ..., h) のシーケンスにおいて、
まだ指定されていない次のドライブを指すためにも使える。
これ以降では簡単のために 'hd=' を使って説明する。
さらに詳しい情報を得るには、カーネルソース内の
.I Documentation/ide.txt
(古いカーネルの場合は
.IR drivers/block/README.ide )
を参照のこと。
.TP
.\"O .B "The 'hd=cyls,heads,sects[,wpcom[,irq]]' options"
.B 'hd=cyls,heads,sects[,wpcom[,irq]]' オプション
.\"O These options are used to specify the physical geometry of the disk.
.\"O Only the first three values are required.
.\"O The cylinder/head/sectors
.\"O values will be those used by fdisk.
.\"O The write precompensation value
.\"O is ignored for IDE disks.
.\"O The IRQ value specified will be the IRQ
.\"O used for the interface that the drive resides on, and is not really a
.\"O drive-specific parameter.
これらのオプションはディスクの物理的なジオメトリを指定するために使う。
最初の 3 つの値以降は省略できる。
シリンダ (cyls)、ヘッド (heads)、セクタ (sects) の各値は
fdisk で用いられるものと同じである。
書き込み補正 (wpcom) 値は IDE ディスクでは無視される。
IRQ 値には、そのドライブが接続されているインターフェースが用いる
IRQ を指定する
(本来の意味では「ドライブに特有」のパラメータではない)。
.TP
.\"O .B "The 'hd=serialize' option"
.B 'hd=serialize' オプション
.\"O The dual IDE interface CMD-640 chip is broken as designed such that
.\"O when drives on the secondary interface are used at the same time as
.\"O drives on the primary interface, it will corrupt your data.
.\"O Using this
.\"O option tells the driver to make sure that both interfaces are never
.\"O used at the same time.
デュアル IDE インターフェースである CMD-640 チップには設計上の問題があって、
セカンダリインターフェース上のドライブと
プライマリインターフェース上のドライブを
同時に使用するとデータが破壊されることがある。
このオプションを使用すると、
ドライバは両方のインターフェースが
同時に使用されることが絶対にないようにする。
.TP
.\"O .B "The 'hd=dtc2278' option"
.B 'hd=dtc2278' オプション
.\"O This option tells the driver that you have a DTC-2278D IDE interface.
.\"O The driver then tries to do DTC-specific operations to enable the
.\"O second interface and to enable faster transfer modes.
このオプションは、DTC-2278D IDE インターフェースが使われている
ことをドライバに伝える。
するとドライバは、DTC 特有の機能
(2 番目のインターフェースと高速転送モード)
を使用可能にするよう試みる。
.TP
.\"O .B "The 'hd=noprobe' option"
.B 'hd=noprobe' オプション
.\"O Do not probe for this drive.
.\"O For example,
このドライブの自動検出をしない。
例えば
.IP
hdb=noprobe hdb=1166,7,17
.IP
.\"O would disable the probe, but still specify the drive geometry so
.\"O that it would be registered as a valid block device, and hence
.\"O usable.
とすると自動検出が無効になる。
しかしドライブのジオメトリを指定しているので、
このドライブは正しいブロックデバイスとして登録され、使用可能になる。
.TP
.\"O .B "The 'hd=nowerr' option"
.B 'hd=nowerr' オプション
.\"O Some drives apparently have the
.\"O .B WRERR_STAT
.\"O bit stuck on permanently.
.\"O This enables a work-around for these broken devices.
ドライブによっては、書き込みエラー
.RB ( WRERR_STAT )
ビットがクリアできなくなることがある。
このオプションを指定すると、
このような壊れたデバイスに対する回避機能が有効になる。
.TP
.\"O .B "The 'hd=cdrom' option"
.B "'hd=cdrom' オプション"
.\"O This tells the IDE driver that there is an ATAPI compatible CD-ROM
.\"O attached in place of a normal IDE hard disk.
.\"O In most cases the CD-ROM
.\"O is identified automatically, but if it isn't then this may help.
このオプションは、通常の IDE ハードディスクの代わりに、
ATAPI 互換の CDROM が続されていることを IDE ドライバに伝える。
CD-ROM はたいてい自動的に認識されるが、
うまく行かない場合に試してみると良い。
.TP
.\"O .B "Standard ST-506 Disk Driver Options ('hd=')"
.B スタンダード ST-506 ディスクドライバのオプション ('hd=')
.\"O The standard disk driver can accept geometry arguments for the disks
.\"O similar to the IDE driver.
.\"O Note however that it only expects three
.\"O values (C/H/S); any more or any less and it will silently ignore you.
.\"O Also, it only accepts 'hd=' as an argument, that is, 'hda='
.\"O and so on are not valid here.
.\"O The format is as follows:
スタンダードディスクドライバは
IDE ドライバと同様のジオメトリ指定を引数にとることができる。
ただし受け付ける値はちょうど 3 つ (C/H/S) に限られる。
それ以上の値やそれ以下の値を指定すると、ドライバは黙ってその指定を無視する。
また引数として受け入れられるのは 'hd=' の形式だけである。
つまり 'hda=' のような指定はここでは正しくない。
書式は次の通り。
.IP
hd=cyls,heads,sects
.IP
.\"O If there are two disks installed, the above is repeated with the
.\"O geometry parameters of the second disk.
2 台のディスクが接続されてい場合は、
2 番目のディスクに対しても上記のジオメトリが設定される。
.TP
.\"O .B "XT Disk Driver Options ('xd=')"
.B XT ディスクドライバのオプション ('xd=')
.\"O If you are unfortunate enough to be using one of these old 8 bit cards
.\"O that move data at a whopping 125kB/s then here is the scoop.
.\"O If the card is not recognized, you will have to use a boot arg of the form:
これらの古い 8 bit カード (125kB/s の転送速度しかない!)
を使わなければならない不幸な人のためのオプションである。
カードが認識されない場合は以下の書式で起動時引数を指定する必要があるだろう。
.IP
xd=type,irq,iobase,dma_chan
.IP
.\"O The type value specifies the particular manufacturer of the card,
.\"O overriding autodetection.
.\"O For the types to use, consult the
.\"O .I drivers/block/xd.c
.\"O source file of the kernel you are using.
.\"O The type is an index in the list
.\"O .I xd_sigs
.\"O and in the course of time
.\" 1.1.50, 1.3.81, 1.3.99, 2.0.34, 2.1.67, 2.1.78, 2.1.127
.\"O types have been added to or deleted from the middle of the list,
.\"O changing all type numbers.
.\"O Today (Linux 2.5.0) the types are
.\"O 0=generic; 1=DTC 5150cx; 2,3=DTC 5150x; 4,5=Western Digital;
.\"O 6,7,8=Seagate; 9=Omti; 10=XEBEC, and where here several types are
.\"O given with the same designation, they are equivalent.
type 値にはカードのメーカーを指定し、これは自動検知より優先される。
指定すべき type の値については、使っているカーネルのソースファイル
.I drivers/block/xd.c
を調べてほしい。type はリスト
.I xd_sigs
のインデックスで、歴史と共に追加されたり削除されたりしてきた。
リストの途中での追加・削除も行われたので、
その場合はすべての type 番号が変更された。
今日 (Linux 2.5.0) における type は、
0=generic; 1=DTC 5150cx; 2,3=DTC 5150x; 4,5=Western Digital;
6,7,8=Seagate; 9=Omti; 10=XEBEC である。
ここではいくつかの type に同じ指定が与えられているが、
それらは等価である。

0=ノーブランド、1=DTC、2,3,4=Western Digital、5,6,7=Seagate、8=OMTI
同じメーカーに複数の値があるのは検出に使用される BIOS 文字列の違いである。
BIOS 文字列は type が指定された場合には使用されない。

.\"O The xd_setup() function does no checking on the values, and assumes
.\"O that you entered all four values.
.\"O Don't disappoint it.
.\"O Here is an
.\"O example usage for a WD1002 controller with the BIOS disabled/removed,
.\"O using the 'default' XT controller parameters:
xd_setup() 関数は引数をチェックせず、
4 つの値がすべて指定されることを想定している。
引数を省略してはならない。
例として、BIOS が無効にされた (あるいは削除された)
WD1002 コントローラの場合を示す
(パラメータには XT コントローラの「デフォルト」の値を使っている)。
.IP
xd=2,5,0x320,3
.TP
.\"O .B "Syquest's EZ* removable disks"
.B Syquest 製 EZ* リムーバブルディスク
.IP
.BI ez= iobase[,irq[,rep[,nybble]]]
.\"O .SS "IBM MCA Bus Devices"
.SS "IBM MCA バス上のデバイス"
.\"O See also
.\"O .IR /usr/src/linux/Documentation/mca.txt .
.I /usr/src/linux/Documentation/mca.txt
も参照せよ。
.TP
.\"O .B "PS/2 ESDI hard disks"
.B PS/2 ESDI ハードディスク
.\"O It is possible to specify the desired geometry at boot time:
望むジオメトリを起動時に指定できる。
.IP
.BI ed= cyls,heads,sectors.
.IP
.\"O For a ThinkPad-720, add the option
ThinkPad-720 を使用する場合は以下のオプションを追加すること。
.IP
.\"O .BR tp720=1 .
.B tp720=1
.TP
.\"O .B "IBM Microchannel SCSI Subsystem configuration"
.B IBM Microchannel SCSI サブシステムの設定
.IP
.BI ibmmcascsi= N
.IP
.\"O where N is the \fIpun\fP (SCSI ID) of the subsystem.
N はサブシステムの \fIpun\fP (SCSI ID) を表す。
.TP
.\"O .B "The Aztech Interface"
.B Aztech インターフェース
.\"O The syntax for this type of card is:
このタイプのカードの構文は以下の通り。
.IP
aztcd=iobase[,magic_number]
.IP
.\"O If you set the magic_number to 0x79 then the driver will try and run
.\"O anyway in the event of an unknown firmware version.
.\"O All other values
.\"O are ignored.
magic_number に 0x79 をセットすると、
ドライバはファームウェアのバージョンが分からない場合でも、
とにかく実行を試みる。
その他の値はすべて無視される。
.TP
.\"O .B "Parallel port CD-ROM drives"
.B "パラレルポート CD-ROM ドライブ"
.\"O Syntax:
書式:
.IP
.\"O pcd.driveN=prt,pro,uni,mod,slv,dly
pcd.driveN=port,pro,uni,mod,slv,dly
.br
pcd.nice=nice
.IP
.\"O where 'port' is the base address, 'pro' is the protocol number, 'uni'
.\"O is the unit selector (for chained devices), 'mod' is the mode (or \-1
.\"O to choose the best automatically), 'slv' is 1 if it should be a slave,
.\"O and 'dly' is a small integer for slowing down port accesses.
.\"O The 'nice' parameter controls the driver's use of idle CPU time, at the
.\"O expense of some speed.
ここで 'port' はベースアドレス、'pro'
はプロトコル番号、'uni' はユニットセレクタ
(チェインデバイス用)、'mod' はモード
(あるいは自動的に最適のものを選ばせるには \-1)、'slv'
はスレーブにしたい場合に 1、'dly'
はポートアクセスを遅くしたい場合に小さな整数を与える。'nice' パラメータは、
ドライバのアイドル CPU 時間の使い方を制御する。
ただし速度はある程度低下する。
.TP
.\"O .B "The CDU-31A and CDU-33A Sony Interface"
.B Sony 製 CDU-31A と CDU-33A のインターフェース
.\"O This CD-ROM interface is found on some of the Pro Audio Spectrum sound
.\"O cards, and other Sony supplied interface cards.
.\"O The syntax is as follows:
この CD-ROM インターフェースは、
Pro Audio Spectrum サウンドカードの一部や
ソニーが供給するインターフェースカードで使われている。
構文は以下の通り。
.IP
cdu31a=iobase,[irq[,is_pas_card]]
.IP
.\"O Specifying an IRQ value of zero tells the driver that hardware
.\"O interrupts aren't supported (as on some PAS cards).
.\"O If your card
.\"O supports interrupts, you should use them as it cuts down on the CPU
.\"O usage of the driver.
IRQ に 0 を指定すると、
ハードウェア割り込みがサポートされていないことをドライバに伝える
(PAS カードにはそのようなものがある)。
使用するカードが割り込みをサポートしているなら、
ドライバによる CPU の負荷を減らすためにも割り込みを使用すべきである。

.\"O The
.\"O .I is_pas_card
.\"O should be entered as 'PAS' if using a Pro Audio Spectrum card,
.\"O and otherwise it should not be specified at all.
.I is_pas_card
には、Pro Audio Spectrum カードを使用しているときには 'PAS' を指定し、
そうでないときにはなにも指定しない。
.TP
.\"O .B "The CDU-535 Sony Interface"
.B Sony 製 CDU-535 インターフェース
.\"O The syntax for this CD-ROM interface is:
この CD-ROM インターフェースの構文は以下の通り。
.IP
sonycd535=iobase[,irq]
.IP
.\"O A zero can be used for the I/O base as a 'placeholder' if one wishes
.\"O to specify an IRQ value.
IRQ の値だけを指定したい場合には、
iobase 値を 0 とすれば単なる穴埋めと解釈される。
.TP
.\"O .B "The GoldStar Interface"
.B GoldStar インターフェース
.\"O The syntax for this CD-ROM interface is:
この CD-ROM インターフェースの構文は以下の通り。
.IP
gscd=iobase
.TP
.\"O .B "The ISP16 CD-ROM Interface"
.B ISP16 CD-ROM インターフェース
.\"O Syntax:
書式:
.IP
isp16=[iobase[,irq[,dma[,type]]]]
.IP
.\"O (three integers and a string).
.\"O If the type is given as 'noisp16',
.\"O the interface will not be configured.
.\"O Other recognized types
.\"O are: 'Sanyo", 'Sony', 'Panasonic' and 'Mitsumi'.
(整数値 3 つと文字列 1 つ。) type に 'noisp16' を指定すると、
インターフェースの設定は行なわれない。
type にはこの他にも 'Sanyo', 'Sony', 'Panasonic', 'Mitsumi' が指定できる。
.TP
.\"O .B "The Mitsumi Standard Interface"
.B Mitsumi 標準インターフェース
.\"O The syntax for this CD-ROM interface is:
このCD-ROM インターフェースの構文は以下の通り。
.IP
mcd=iobase,[irq[,wait_value]]
.IP
.\"O The
.\"O .I wait_value
.\"O is used as an internal timeout value for people who are
.\"O having problems with their drive, and may or may not be implemented
.\"O depending on a compile-time #define.
.\"O The Mitsumi FX400 is an IDE/ATAPI CD-ROM player and does not use
.\"O the mcd driver.
.I wait_value
はドライブに問題がある場合に、
ドライバ内部のタイムアウトの指定に用いる。
コンパイル時の #define によって実装されるかされないかが決まる。
Mitsumi FX400 は IDE/ATAPI CD-ROM プレイヤーであり、
この mcd ドライバは使用しない。
.TP
.\"O .B "The Mitsumi XA/MultiSession Interface"
.B Mitsumi XA/マルチセッションインターフェース
.\"O This is for the same hardware as above, but the driver has extended features.
.\"O Syntax:
これは上記と同じハードウェアだが、拡張機能がある。
構文は以下の通り。
.IP
mcdx=iobase[,irq]
.TP
.\"O .B "The Optics Storage Interface"
.B Optics ストレージインターフェース
.\"O The syntax for this type of card is:
このカードの構文は以下の通り。
.IP
optcd=iobase
.TP
.\"O .B "The Phillips CM206 Interface"
.B Phillips CM206 インターフェース
.\"O The syntax for this type of card is:
このカードの構文は以下の通り。
.IP
cm206=[iobase][,irq]
.IP
.\"O The driver assumes numbers between 3 and 11 are IRQ values, and
.\"O numbers between 0x300 and 0x370 are I/O ports, so you can specify one,
.\"O or both numbers, in any order.
.\"O It also accepts 'cm206=auto' to enable
.\"O autoprobing.
ドライバは IRQ 値として 3 から 11 まで、
I/O ポートアドレスの値として 0x300 から 0x370 を想定している。
いずれか一方、あるいは両方を指定できる。順番も問わない。
\&'cm206=auto' とすることにより自動検出もできる。
.TP
.\"O .B "The Sanyo Interface"
.B Sanyo インターフェース
.\"O The syntax for this type of card is:
このカードの構文は以下の通り。
.IP
sjcd=iobase[,irq[,dma_channel]]
.TP
.\"O .B "The SoundBlaster Pro Interface"
.B SoundBlaster Pro インターフェース
.\"O The syntax for this type of card is:
このカードの構文は以下の通り。
.IP
sbpcd=iobase,type
.IP
.\"O where type is one of the following (case sensitive) strings:
.\"O \&'SoundBlaster', 'LaserMate', or 'SPEA'.
.\"O The I/O base is that of the
.\"O CD-ROM interface, and not that of the sound portion of the card.
type 値には 'SoundBlaster', 'LaserMate', 'SPEA' のうちひとつを指定できる
(大文字小文字が区別される)。
iobase は CD-ROM インターフェースの値である。
カードのサウンド部の値と間違えないこと。
.\"O .SS "Ethernet Devices"
.SS "イーサネットデバイス"
.\"O Different drivers make use of different parameters, but they all at
.\"O least share having an IRQ, an I/O port base value, and a name.
.\"O In its most generic form, it looks something like this:
ドライバが異なると用いるパラメータも異なるが、
すべてのドライバは、少なくとも割り込み番号 (irq)、
I/O ポートのベースアドレス (iobase)、名前 (name) を持つ。
最も一般的な形式は以下の通り。
.IP
ether=irq,iobase[,param_1[,...param_8]],name
.IP
.\"O The first nonnumeric argument is taken as the name.
.\"O The param_n values (if applicable) usually have different meanings for each
.\"O different card/driver.
.\"O Typical param_n values are used to specify
.\"O things like shared memory address, interface selection, DMA channel
.\"O and the like.
最初の数字でない値は名前として使用される。
param_n の値はカード (ドライバ) ごとに異なる意味を持つ。
よくある目的は、共有メモリアドレスの指定、インターフェースの選択、
DMA チャネルなどである。

.\"O The most common use of this parameter is to force probing for a second
.\"O ethercard, as the default is to only probe for one.
.\"O This can be accomplished with a simple:
このパラメータの最もよくある利用法は、
2 番目の Ethernet カードを強制的に検出させる場合である
(デフォルトでは 1 枚しか検出しない)。
これは簡単で、次のようにすればよい。
.IP
ether=0,0,eth1
.IP
.\"O Note that the values of zero for the IRQ and I/O base in the above
.\"O example tell the driver(s) to autoprobe.
この例で IRQ と I/O ベースアドレスに 0 を指定しているのは、
ドライバに自動検出をするよう伝えているのである。

.\"O The Ethernet-HowTo has extensive documentation on using multiple
.\"O cards and on the card/driver-specific implementation
.\"O of the param_n values where used.
.\"O Interested readers should refer to
.\"O the section in that document on their particular card.
Ethernet-HOWTO では、複数のカードを使うやり方や、
カードやドライバに特有の param_n 値の意味について、
ずっと詳細に解説されている。
興味を持った読者は、この文書にあたり、
自分のカードに関して書かれているセクションを参照すると良い。
.\"O .SS "The Floppy Disk Driver"
.SS フロッピーディスクドライバ
.\"O There are many floppy driver options, and they are all listed in
.\"O .I Documentation/floppy.txt
.\"O (or
.\"O .I drivers/block/README.fd
.\"O for older kernels) in the kernel source.
.\"O This information is taken directly
.\"O from that file.
フロッピードライバのオプションは多数あり、
カーネルソース内の
.I Documentation/floppy.txt
(古いカーネルの場合は
.IR drivers/block/README.fd )
にすべて記載されている。
以下の情報はこのファイルからとったものである。
.TP
.B "floppy=mask,allowed_drive_mask"
.\"O Sets the bit mask of allowed drives to mask.
.\"O By default, only units 0
.\"O and 1 of each floppy controller are allowed.
.\"O This is done because
.\"O certain nonstandard hardware (ASUS PCI motherboards) mess up the
.\"O keyboard when accessing units 2 or 3.
.\"O This option is somewhat
.\"O obsoleted by the cmos option.
使ってよいドライブにかけるビットマスクを設定する。
デフォルトでは、
ユニット 0 と 1 のフロッピーコントローラだけが許可されている。
これは、標準でないハードウェア (例えば ASUS の PCIマザーボードなど)
でユニット 2 や 3 にアクセスすると、
キーボードがおかしくなってしまうからである。
cmos オプション (後述) の導入によって、
このオプションはあまり使われなくなった。
.TP
.B "floppy=all_drives"
.\"O Sets the bit mask of allowed drives to all drives.
.\"O Use this if you have
.\"O more than two drives connected to a floppy controller.
許可するドライブを示すビットマスクを、「すべてのドライブ」にする。
1 つのフロッピーコントローラに 2 台以上のドライブを接続する場合に用いる。
.TP
.B "floppy=asus_pci"
.\"O Sets the bit mask to allow only units 0 and 1.
.\"O (The default)
ユニット 0 と 1 のみを許可するようビットマスクを設定する。
(デフォルト)。
.TP
.B "floppy=daring"
.\"O Tells the floppy driver that you have a well behaved floppy
.\"O controller.
.\"O This allows more efficient and smoother operation, but
.\"O may fail on certain controllers.
.\"O This may speed up certain operations.
正しく振る舞うフロッピーコントローラを使っていることをドライバに伝える。
このオプションを使うと動作はより効率的かつスムースになるが、
コントローラによっては動作に失敗することがある。
これを指定するとある種の動作が高速になる。
.TP
.B "floppy=0,daring"
.\"O Tells the floppy driver that your floppy controller should be used
.\"O with caution.
注意して扱わなければならない
フロッピーコントローラであることをドライバに伝える。
.TP
.B "floppy=one_fdc"
.\"O Tells the floppy driver that you have only floppy controller (default)
フロッピーコントローラがひとつしかないことをドライバに伝える
(デフォルト)。
.TP
.\"O .BR floppy=two_fdc " or " floppy=address,two_fdc
.BR floppy=two_fdc " または " floppy=address,two_fdc
.\"O Tells the floppy driver that you have two floppy controllers.
.\"O The second floppy controller is assumed to be at address.
.\"O If address is
.\"O not given, 0x370 is assumed.
フロッピーコントローラがふたつあることをドライバに伝える。
2 番目のコントローラの I/O アドレスは address で指定する。
address が指定されない場合は 0x370 が使われる。
.TP
.B "floppy=thinkpad"
.\"O Tells the floppy driver that you have a Thinkpad.
.\"O Thinkpads use an
.\"O inverted convention for the disk change line.
Thinkpad を使っていることをフロッピードライバに伝える。
Thinkpad はディスク取出の検出信号を反転して使っている。
.TP
.B "floppy=0,thinkpad"
.\"O Tells the floppy driver that you don't have a Thinkpad.
Thinkpad を使っていないことをドライバに伝える。
.TP
.B "floppy=drive,type,cmos"
.\"O Sets the cmos type of drive to type.
.\"O Additionally, this drive is
.\"O allowed in the bit mask.
.\"O This is useful if you have more than two
.\"O floppy drives (only two can be described in the physical cmos), or if
.\"O your BIOS uses nonstandard CMOS types.
.\"O Setting the CMOS to 0 for the
.\"O first two drives (default) makes the floppy driver read the physical
.\"O cmos for those drives.
ドライブの cmos タイプを type に設定する。
さらにビットマスクを変更し、このドライブの使用を許可する。
この指定が便利なのは、フロッピードライブが 2 台以上ある場合
(物理 cmos に記述できるのは 2 台まで) や、
BIOS が標準的でない CMOS タイプを使っている場合である。
最初の 2 台のドライブの CMOS に 0 を指定する (デフォルト) と、
フロッピードライバはこれらのドライブの物理 cmos を参照する。
.TP
.B "floppy=unexpected_interrupts"
.\"O Print a warning message when an unexpected interrupt is received
.\"O (default behavior)
予期しない割り込みを受けた時に警告メッセージを表示する (デフォルト)。
.TP
.\"O .BR floppy=no_unexpected_interrupts " or " floppy=L40SX
.BR floppy=no_unexpected_interrupts " または " floppy=L40SX
.\"O Don't print a message when an unexpected interrupt is received.
.\"O This is needed on IBM L40SX laptops in certain video modes.
.\"O (There seems to
.\"O be an interaction between video and floppy.
.\"O The unexpected interrupts
.\"O only affect performance, and can safely be ignored.)
予期しない割り込みを受けた時でも警告メッセージを表示しない。
これは IBM L40SX ラップトップコンピュータを
特定のビデオモードで使用する時に必要となる。
(ビデオとフロッピーとの間で何らかの相互作用があるようだ。
予期しない割り込みは性能だけに影響し、無視しても安全である。)
.\"O .SS "The Sound Driver"
.SS サウンドドライバ
.\"O The sound driver can also accept boot args to override the compiled in
.\"O values.
.\"O This is not recommended, as it is rather complex.
.\"O It is described in the kernel source file
.\"O .IR Documentation/sound/oss/README.OSS
.\"O .RI ( drivers/sound/Readme.linux
.\"O in older kernel versions).
.\"O Readme.Linux file, in linux/drivers/sound.
.\"O It accepts
.\"O a boot arg of the form:
サウンドドライバも起動時引数を受け付け、
コンパイル時に指定された値を変更できる。
これはやや面倒なため、あまりお薦めできない。
詳細は、カーネルソース内の
.IR Documentation/sound/oss/README.OSS
(古いカーネルの場合は
.IR drivers/sound/Readme.linux )
に記載されている。
引数の形式は以下の通り。
.IP
sound=device1[,device2[,device3...[,device10]]]
.IP
.\"O where each deviceN value is of the following format 0xTaaaId and the
.\"O bytes are used as follows:
各 deviceN はそれぞれ 0xTaaaId という形式で指定する。
各バイトの意味は以下の通り。

.\"O T \- device type: 1=FM, 2=SB, 3=PAS, 4=GUS, 5=MPU401, 6=SB16,
.\"O 7=SB16-MPU401
T \- デバイスのタイプ: 1=FM, 2=SB, 3=PAS, 4=GUS, 5=MPU401, 6=SB16, 7=SB16-MPU401

.\"O aaa \- I/O address in hex.
aaa \- I/O ポートアドレス (16進値)

.\"O I \- interrupt line in hex (i.e 10=a, 11=b, ...)
I \- 割り込み番号 (16 進値。例: 10=a, 11=b, ...)

.\"O d \- DMA channel.
d \- DMA チャネル

.\"O As you can see it gets pretty messy, and you are better off to compile
.\"O in your own personal values as recommended.
.\"O Using a boot arg of
.\"O \&'sound=0' will disable the sound driver entirely.
上記の通り、かなり扱いにくい形式となっており、
コンパイル時に自分にあった値を指定する方が良いだろう。
なお起動時引数として 'sound=0' を指定すると、
サウンドドライバを完全に無効にする。
.\"O .SS "ISDN Drivers"
.SS "ISDN ドライバ"
.TP
.\"O .B "The ICN ISDN driver"
.B ICN ISDN ドライバ
.\"O Syntax:
構文は以下の通り。
.IP
icn=iobase,membase,icn_id1,icn_id2
.IP
.\"O where icn_id1,icn_id2 are two strings used to identify the
.\"O card in kernel messages.
icn_id1,icn_id2 はカードを識別するための 2 つの文字列である。
カーネルメッセージで用いられる。
.TP
.\"O .B "The PCBIT ISDN driver"
.B PCBIT ISDN ドライバ
.\"O Syntax:
構文は以下の通り。
.IP
pcbit=membase1,irq1[,membase2,irq2]
.IP
.\"O where membaseN is the shared memory base of the N'th card, and irqN is
.\"O the interrupt setting of the N'th card.
.\"O The default is IRQ 5 and
.\"O membase 0xD0000.
membaseN は N 番目のカードの共有メモリのベースアドレスであり、
irqN は N 番目のカードの割り込み設定である。
無指定時には IRQ = 5, membase = 0xD0000 となる。
.TP
.\"O .B "The Teles ISDN driver"
.B Teles ISDN ドライバ
.\"O Syntax:
構文は以下の通り。
.IP
teles=iobase,irq,membase,protocol,teles_id
.IP
.\"O where iobase is the i/o port address of the card, membase is the
.\"O shared memory base address of the card, irq is the interrupt channel
.\"O the card uses, and teles_id is the unique ASCII string identifier.
iobase はカードの I/O ポートアドレス、
membase はカードの共有メモリのベースアドレス、
そして irq はカードが使用する割り込みチャネルである。
teles_id はアスキー文字列による識別文字列である (他と重ならないようにする)。
.\"O .SS "Serial Port Drivers"
.SS シリアルポートドライバ
.TP
.\"O .B "The RISCom/8 Multiport Serial Driver ('riscom8=')"
.B RISCom/8 マルチポートシリアルドライバ ('riscom8=')
.\"O Syntax:
構文は以下の通り。
.IP
riscom=iobase1[,iobase2[,iobase3[,iobase4]]]
.IP
.\"O More details can be found in
.\"O .IR /usr/src/linux/Documentation/riscom8.txt .
詳細は
.I /usr/src/linux/Documentation/riscom8.txt
を参照のこと。
.TP
.\"O .B "The DigiBoard Driver ('digi=')"
.B DigiBoard ドライバ ('digi=')
.\"O If this option is used, it should have precisely six parameters.
.\"O Syntax:
このオプションを使う場合は、
6 つちょうどのパラメータを与えなければならない。
構文は以下の通り。
.IP
digi=status,type,altpin,numports,iobase,membase
.IP
.\"O The parameters maybe given as integers, or as strings.
.\"O If strings are used, then iobase and membase should be given
.\"O in hexadecimal.
.\"O The integer arguments (fewer may be given) are in order:
.\"O status (Enable(1) or Disable(0) this card),
.\"O type (PC/Xi(0), PC/Xe(1), PC/Xeve(2), PC/Xem(3)),
.\"O altpin (Enable(1) or Disable(0) alternate pin arrangement),
.\"O numports (number of ports on this card),
.\"O iobase (I/O Port where card is configured (in HEX)),
.\"O membase (base of memory window (in HEX)).
.\"O Thus, the following two boot prompt arguments are equivalent:
パラメータは整数値か文字列で与える。
文字列で指定する場合は、
iobase と membase は 16 進値でなければならない。
整数値で指定する場合はパラメータの個数は少なくても良く、順に:
status このカードの動作を指定する (Enable(1) または Disable(0)),
type カードのタイプ (PC/Xi(0), PC/Xe(1), PC/Xeve(2), PC/Xem(3)),
altpin ピン配置を反転させる (Enable(1) or Disable(0)),
numports カードのポート番号,
iobase このカードの I/O ポート (文字列指定の場合は 16 進表記),
membase メモリウィンドウのベースアドレス (文字列指定の場合は 16 進表記)。
したがって以下のふたつの起動時引数は同じ意味を持つ。
.IP
digi=E,PC/Xi,D,16,200,D0000
.br
digi=1,0,0,16,0x200,851968
.IP
.\"O More details can be found in
.\"O .IR /usr/src/linux/Documentation/digiboard.txt .
詳細は
.I /usr/src/linux/Documentation/digiboard.txt
を参照せよ。
.TP
.\"O .B "The Baycom Serial/Parallel Radio Modem"
.B Baycom シリアル・パラレル ラジオモデム
.\"O Syntax:
構文は以下の通り。
.IP
baycom=iobase,irq,modem
.IP
.\"O There are precisely 3 parameters; for several cards, give
.\"O several 'baycom=' commands.
.\"O The modem parameter is a string
.\"O that can take one of the values ser12, ser12*, par96, par96*.
.\"O Here the * denotes that software DCD is to be used, and
.\"O ser12/par96 chooses between the supported modem types.
.\"O For more details, see the file
.\"O .I Documentation/networking/baycom.txt
.\"O (or
.\"O .I drivers/net/README.baycom
.\"O for older kernels) in the kernel source.
ちょうど 3 つのパラメータを与える。
複数のカードがある場合は、'baycom=' コマンドも複数記述する。
modem パラメータは文字列で、
ser12, ser12*, par96, par96* の中からひとつを選ぶ。
* をつけるとソフトウェア DCD を使用する。
モデムの種類に応じて ser12 か par96 かを選択する。
詳細はカーネルソース内の
.I Documentation/networking/baycom.txt
(古いカーネルの場合は
.IR drivers/net/README.baycom )
を参照。
.TP
.\"O .B "Soundcard radio modem driver"
.B サウンドカードラジオモデムドライバ
.\"O Syntax:
構文は以下の通り。
.IP
soundmodem=iobase,irq,dma[,dma2[,serio[,pario]]],0,mode
.IP
.\"O All parameters except the last are integers;
.\"O the dummy 0 is required because of a bug in the setup code.
.\"O The mode parameter is a string with syntax hw:modem,
.\"O where hw is one of sbc, wss, wssfdx and modem is one of
.\"O afsk1200, fsk9600.
最後のパラメータを除くすべてのパラメータは整数である。
ダミーの 0 があるのは、設定プログラムのバグのせいである。
mode パラメータは文字列で、hw:modem という書式で指定する。
hw は sbc, wss, wssfdx のうちひとつ、
modem は afsk1200, fsk9600 のどちらかを選択して記述する。
.\" HERE GOES (NAKANO)
.\"O .SS "The Line Printer Driver"
.SS ラインプリンタドライバ
.TP
.B "'lp='"
.\"O Syntax:
書式:
.IP
lp=0
.br
lp=auto
.br
lp=reset
.br
lp=port[,port...]
.IP
.\"O You can tell the printer driver what ports to use and what ports not
.\"O to use.
.\"O The latter comes in handy if you don't want the printer driver
.\"O to claim all available parallel ports, so that other drivers
.\"O (e.g., PLIP, PPA) can use them instead.
プリンタドライバには、どのポートを使うか、
どのポートを使ってはいけないかを伝えることができる。
後者は、
利用可能なあらゆるパラレルポートをプリンタドライバが要求しないようにして、
他のドライバ (PLIP や PPA など) から
それらを使えるようにしたい場合に便利である。

.\"O The format of the argument is multiple port names.
.\"O For example,
.\"O lp=none,parport0 would use the first parallel port for lp1, and
.\"O disable lp0.
.\"O To disable the printer driver entirely, one can use
.\"O lp=0.
引数の書式は、複数のポート名である。
例えば lp=none,parport0 とすると、
最初のパラレルポートを lp1 として使い、
lp0 は無効にする。プリンタードライバを完全に無効にするには
lp=0 とすればよい。
.TP
.\"O .B "WDT500/501 driver"
.B WDT500/501 ドライバ
.\"O Syntax:
構文は以下の通り。
.IP
wdt=io,irq
.\"O .SS "Mouse Drivers"
.SS マウスドライバ
.TP
.B "'bmouse=irq'"
.\"O The busmouse driver only accepts one parameter, that being the
.\"O hardware IRQ value to be used.
バスマウスドライバはパラメータをひとつだけとり、
ハードウェア IRQ を指定できる。
.TP
.B "'msmouse=irq'"
.\"O And precisely the same is true for the msmouse driver.
msmouse ドライバでもこの事情はまったく同じである。
.TP
.\"O .B "ATARI mouse setup"
.B ATARI マウスの設定
.IP
atamouse=threshold[,y-threshold]
.IP
.\"O If only one argument is given, it is used for both
.\"O x-threshold and y-threshold.
.\"O Otherwise, the first argument
.\"O is the x-threshold, and the second the y-threshold.
.\"O These values must lie between 1 and 20 (inclusive); the default is 2.
パラメータがひとつだけ与えられた場合には、
x-threshold と y-threshold を両方に用いられる。
ふたつ与えられた場合は、最初の値が x-threshold として用いられ、
2 番目の値が y-threshold として用いられる。
値は 1 から 20 までの数値で指定する。
デフォルトは 2。
.\"O .SS "Video Hardware"
.SS ビデオ機器
.TP
.B "'no-scroll'"
.\"O This option tells the console driver not to use hardware scroll
.\"O (where a scroll is effected by moving the screen origin in video
.\"O memory, instead of moving the data).
.\"O It is required by certain
.\"O Braille machines.
このオプションは、コンソールドライバに、
ハードウェアスクロールを用いないよう伝える
(ここで言うハードウェアスクロールとは、
ビデオメモリ上のデータを移動させることによって
スクリーン表示領域をスクロールさせることを指す)。
特定の点字マシンではこの指定が必要となる。
.\"O .\" .SH AUTHORS
.\"O .\" Linus Torvalds (and many others)
.\" .SH 著者
.\" Linus Torvalds (他多数)
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR lilo.conf (5),
.BR klogd (8),
.BR lilo (8),
.BR mount (8),
.BR rdev (8)

.\"O Large parts of this man page have been derived from the
.\"O Boot Parameter HOWTO (version 1.0.1) written by Paul Gortmaker.
.\"O More information may be found in this (or a more recent) HOWTO.
.\"O An up-to-date source of information is
.\"O .IR /usr/src/linux/Documentation/kernel-parameters.txt .
このマニュアルページの大部分は Paul Gortmaker による
Boot Parameter HOWTO (version 1.0.1) を基にしている。
この (あるいは最新の) HOWTO をあたれば、
さらに多くの情報が入手できるだろう。
最新の情報源は
.I /usr/src/linux/Documentation/kernel-parameters.txt
である。

(訳注) Boot Parameter HOWTO は現在 BootPrompt-HOWTO として
メンテナンスされています。堀江誠一さんによる日本語版は、
.UR http://www.linux.or.jp/JF/JFdocs/BootPrompt-HOWTO.html
http://www.linux.or.jp/JF/JFdocs/BootPrompt-HOWTO.html
.UE
にあります。英語版オリジナルは、
.UR http://linuxdoc.org/HOWTO/BootPrompt-HOWTO.html
http://linuxdoc.org/HOWTO/BootPrompt-HOWTO.html
.UE
にあります。
が、いずれも May 1999 までのものなのでやや古いです。
