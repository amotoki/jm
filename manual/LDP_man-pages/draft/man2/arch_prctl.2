.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 2003 Andi Kleen
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated 2004-06-08, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated 2005-11-19, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-02-10, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.77
.\"
.TH ARCH_PRCTL 2 2007-12-26 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O arch_prctl \- set architecture-specific thread state
arch_prctl \- アーキテクチャ固有のスレッド状態を設定する
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <asm/prctl.h>
.br
.B #include <sys/prctl.h>
.sp
.BI "int arch_prctl(int " code ", unsigned long *" addr );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O The
.\"O .BR arch_prctl ()
.\"O function sets architecture-specific process or thread state.
.BR arch_prctl ()
関数はアーキテクチャ固有のプロセス状態またはスレッド状態を設定する。
.\"O .I code
.\"O selects a subfunction
.\"O and passes argument
.\"O .I addr
.\"O to it;
.\"O .I addr
.\"O is interpreted as either an
.\"O .I "unsigned long"
.\"O for the "set" operations, or as an
.\"O .IR "unsigned long *" ,
.\"O for the "get" operations.
.I code
は副機能を選択し、引き数
.I addr
を副機能に渡す。
.I addr
は、"set" 操作では
.I "unsigned long"
として、"get" 操作では
.I "unsigned long *"
として解釈される。
.LP
.\"O Sub functions for x86-64 are:
x86-64 の副機能は以下の通り:
.TP
.B ARCH_SET_FS
.\"O Set the 64-bit base for the
.\"O .I FS
.\"O register to
.\"O .IR addr .
.I FS
レジスタの 64 ビットベースを
.I addr
に設定する。
.TP
.B ARCH_GET_FS
.\"O Return the 64-bit base value for the
.\"O .I FS
.\"O register of the current thread in the
.\"O .I unsigned long
.\"O pointed to by
.\"O .IR addr .
現在のスレッドの
.I FS
レジスタの 64 ビットベース値を、
.I addr
が指す
.I unsigned long
の領域に格納する。
.TP
.B ARCH_SET_GS
.\"O Set the 64-bit base for the
.\"O .I GS
.\"O register to
.\"O .IR addr .
.I GS
レジスタの 64 ビットベースを
.I addr
に設定する。
.TP
.B ARCH_GET_GS
.\"O Return the 64-bit base value for the
.\"O .I GS
.\"O register of the current thread in the
.\"O .I unsigned long
.\"O pointed to by
.\"O .IR addr .
現在のスレッドの
.I GS
レジスタの 64 ビットベース値を、
.I addr
が指す
.I unsigned long
の領域に格納する。
.\"O .SH RETURN VALUE
.SH 返り値
.\"O On success,
.\"O .BR arch_prctl ()
.\"O returns 0; on error, \-1 is returned, and
.\"O .I errno
.\"O is set to indicate the error.
成功すると、
.BR arch_prctl ()
は 0 を返す。エラーの場合、\-1 を返し、
.I errno
をエラーを示す値に設定する。
.\"O .SH ERRORS
.SH エラー
.TP
.B EFAULT
.\"O .I addr
.\"O points to an unmapped address or is outside the process address space.
.I addr
がアンマップされたアドレスを指しているか、プロセスのアドレス空間の外にある。
.TP
.B EINVAL
.\"O .I code
.\"O is not a valid subcommand.
.I code
が有効なサブコマンドでない。
.TP
.B EPERM
.\"O .I addr
.\"O is outside the process address space.
.I addr
がプロセスのアドレス空間の外にある。
.\"O .\" .SH AUTHOR
.\" .SH 著者
.\"O .\" Man page written by Andi Kleen.
.\" この man ページは Andi Kleen によって書かれた。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O .BR arch_prctl ()
.\"O is a Linux/x86-64 extension and should not be used in programs intended
.\"O to be portable.
.BR arch_prctl ()
は Linux/x86-64 拡張であり、移植性を意図したプログラムでは使うべきでない。
.\"O .SH NOTES
.SH 注意
.\"O .BR arch_prctl ()
.\"O is only supported on Linux/x86-64 for 64-bit programs currently.
.BR arch_prctl ()
は現在のところ Linux/x86-64 上の 64 ビットプログラムでのみサポートされている。

.\"O The 64-bit base changes when a new 32-bit segment selector is loaded.
新しい 32 ビットセグメントセレクタがロードされた場合、
64 ビットベースは変更される。

.\"O .B ARCH_SET_GS
.\"O is disabled in some kernels.
.B ARCH_SET_GS
が無効にされているカーネルもある。

.\"O Context switches for 64-bit segment bases are rather expensive.
.\"O It may be a faster alternative to set a 32-bit base using a
.\"O segment selector by setting up an LDT with
.\"O .BR modify_ldt (2)
.\"O or using the
.\"O .BR set_thread_area (2)
.\"O system call in kernel 2.5 or later.
64 ビットセグメントベースのコンテキストスイッチは、やや高価である。
LDT を
.BR modify_ldt (2)
で設定してセグメントセレクタを使うか、
(カーネル 2.5 以降の)
.BR set_thread_area (2)
システムコールを使うことにより、
32 ビットベースを設定するという高速な代替手段もある。
.\"O .BR arch_prctl ()
.\"O is only needed when you want to set bases that are larger than 4GB.
4GB より大きなベースを設定したい場合にのみ、
.BR arch_prctl ()
が必要である。
.\"O Memory in the first 2GB of address space can be allocated by using
.\"O .BR mmap (2)
.\"O with the
.\"O .B MAP_32BIT
.\"O flag.
アドレス空間の最初の 2GB にあるメモリは、
.BR mmap (2)
に
.B MAP_32BIT
フラグを指定して割り当てることができる。

.\"O As of version 2.7, glibc provides no prototype for
.\"O .BR arch_prctl ().
.\"O You have to declare it yourself for now.
.\"O This may be fixed in future glibc versions.
バージョン 2.7 時点では、glibc には
.BR arch_prctl ()
のプロトタイプがない。
今のところユーザは自分自身で宣言する必要がある。
これは将来の glibc のバージョンで修正されるかもしれない。

.\"O .I FS
.\"O may be already used by the threading library.
.I FS
はスレッドライブラリで既に使われているかもしれない。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR mmap (2),
.BR modify_ldt (2),
.BR prctl (2),
.BR set_thread_area (2)
.sp
AMD X86-64 Programmer's manual
