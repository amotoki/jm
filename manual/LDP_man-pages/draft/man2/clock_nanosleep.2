.\" Copyright (c) 2008, Linux Foundation, written by Michael Kerrisk
.\" <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2008  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2008-08-21, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.04
.\" 
.TH CLOCK_NANOSLEEP 2 2010-12-03 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O clock_nanosleep \- high-resolution sleep with specifiable clock
clock_nanosleep \- 指定したクロックでの高精度な実行停止 (sleep)
.\"O .SH SYNOPSIS
.SH 書式
.B #include <time.h>
.nf
.sp
.BI "int clock_nanosleep(clockid_t " clock_id ", int " flags ,
.BI "                    const struct timespec *" request ,
.BI "                    struct timespec *" remain );
.fi
.sp
.\"O Link with \fI\-lrt\fP.
\fI\-lrt\fP でリンクする。
.sp
.ad l
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR clock_nanosleep ():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _POSIX_C_SOURCE\ >=\ 200112L
.RE
.ad
.\"O .SH DESCRIPTION
.SH 説明
.\"O Like
.\"O .BR nanosleep (2),
.\"O .BR clock_nanosleep ()
.\"O allows the calling thread to sleep for an interval specified
.\"O with nanosecond precision.
.\"O It differs in allowing the caller to select the clock against
.\"O which the sleep interval is to be measured,
.\"O and in allowing the sleep interval to be specified as
.\"O either an absolute or a relative value.
.BR clock_nanosleep ()
を使うと、
.BR nanosleep (2)
同様、ナノ秒の精度で指定された期間だけ呼び出したスレッドの実行を
停止することができる。
.BR nanosleep (2)
と違うのは、呼び出し側が停止期間をどのクロックに対して計測するのかを選択
できる点と、停止期間を絶対値でも相対値でも指定できる点である。

.\"O The time values passed to and returned by this call are specified using
.\"O .I timespec
.\"O structures, defined as follows:
このシステムコールに渡したり、このシステムコールが返したりする時間の値は
.I timespec
構造体を使って指定される。この構造体の定義は以下の通りである。
.sp
.in +4n
.nf
struct timespec {
    time_t tv_sec;        /* seconds */
    long   tv_nsec;       /* nanoseconds [0 .. 999999999] */
};
.fi
.in

.\"O The
.\"O .I clock_id
.\"O argument specifies the clock against which the sleep interval
.\"O is to be measured.
.\"O This argument can have one of the following values:
.I clock_id
引き数で、停止期間をどのクロックに対して計測するかを指定する。
この引き数には以下の値のいずれか一つを指定できる。
.TP 17
.BR CLOCK_REALTIME
.\"O A settable system-wide real-time clock.
システム全体で使われる実時間クロック。
このクロックは変更可能である。
.TP
.BR CLOCK_MONOTONIC
.\"O A nonsettable, monotonically increasing clock that measures time
.\"O since some unspecified point in the past that does not change after
.\"O system startup.
.\"O .\" On Linux this clock measures time since boot.
過去のある時点からの時間を計測する、単調増加のクロック。
起点となる時点はシステム起動後には変更されない。
このクロックは変更することができない。
.\" Linux では、このクロックは起動からの時間を計測する。
.TP
.BR CLOCK_PROCESS_CPUTIME_ID
.\"O A settable per-process clock that measures CPU time consumed
.\"O by all threads in the process.
そのプロセスの全スレッドで消費される CPU 時間を計測するプロセス単位の
クロック。このクロックは設定可能である。
.\" There is some trickery between glibc and the kernel
.\" to deal with the CLOCK_PROCESS_CPUTIME_ID case.
.PP
.\"O See
.\"O .BR clock_getres (2)
.\"O for further details on these clocks.
これらのクロックの詳細については
.BR clock_getres (2)
を参照。

.\"O If
.\"O .I flags
.\"O is 0, then the value specified in
.\"O .I request
.\"O is interpreted as an interval relative to the current
.\"O value of the clock specified by
.\"O .IR clock_id .
.I flags
が 0 の場合、
.I request
に指定された値は
.I clock_id
で指定されたクロックの現在の値からの相対的な期間と解釈される。

.\"O If
.\"O .I flags
.\"O is
.\"O .BR TIMER_ABSTIME ,
.\"O then
.\"O .I request
.\"O is interpreted as an absolute time as measured by the clock,
.\"O .IR clock_id .
.\"O If
.\"O .I request
.\"O is less than or equal to the current value of the clock,
.\"O then
.\"O .BR clock_nanosleep ()
.\"O returns immediately without suspending the calling thread.
.I flags
が
.B TIMER_ABSTIME
の場合、
.I request
は指定されたクロックで計測される絶対時刻と解釈される。
.I request
が指定されたクロックの現在の値以下の場合、
.BR clock_nanosleep ()
は、呼び出したスレッドの停止を行わず、すぐに返る。

.\"O .BR clock_nanosleep ()
.\"O suspends the execution of the calling thread
.\"O until either at least the time specified by
.\"O .IR request
.\"O has elapsed,
.\"O or a signal is delivered that causes a signal handler to be called or
.\"O that terminates the process.
.BR clock_nanosleep ()
は、少なくとも
.I request
で指定された時間が経過するまで、呼び出したスレッドの実行を停止する。
シグナルハンドラが呼び出されたり、そのプロセスを終了させるような
シグナルが配送されたりした場合にも、スレッドの実行停止は終了する。

.\"O If the call is interrupted by a signal handler,
.\"O .BR clock_nanosleep ()
.\"O fails with the error
.\"O .BR EINTR .
.\"O In addition, if
.\"O .I remain
.\"O is not NULL, and
.\"O .I flags
.\"O was not
.\"O .BR TIMER_ABSTIME ,
.\"O it returns the remaining unslept time in
.\"O .IR remain .
.\"O This value can then be used to call
.\"O .BR clock_nanosleep ()
.\"O again and complete a (relative) sleep.
呼び出しがシグナルハンドラによって割り込まれた場合、
.BR clock_nanosleep ()
はエラー
.B EINTR
で失敗する。さらに、
.I remain
が NULL でなく、かつ
.I flags
が
.B TIMER_ABSTIME
でない場合には、
.I remain
に残りの停止時間が返される。
この値を使って
.BR clock_nanosleep ()
を再度呼び出すことで、(相対的な期間の) 停止を完了することができる。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O On successfully sleeping for the requested interval,
.\"O .BR clock_nanosleep ()
.\"O returns 0.
.\"O If the call is interrupted by a signal handler or encounters an error,
.\"O then it returns one of the positive error number listed in ERRORS.
要求された期間の停止に成功すると、
.BR clock_nanosleep ()
は 0 を返す。
シグナルハンドラで割り込まれたり、エラーが発生したりした場合、
「エラー」の節のリストにある正のエラー番号のいずれか一つを返す。
.\"O .SH ERRORS
.SH エラー
.TP
.B EFAULT
.\"O .I request
.\"O or
.\"O .I remain
.\"O specified an invalid address.
.I request
や
.I remain
に無効なアドレスが指定された。
.TP
.B EINTR
.\"O The sleep was interrupted by a signal handler.
停止がシグナルハンドラにより割り込まれた。
.TP
.B EINVAL
.\"O The value in the
.\"O .I tv_nsec
.\"O field was not in the range 0 to 999999999 or
.\"O .I tv_sec
.\"O was negative.
.I tv_nsec
フィールドの値が 0 から 999999999 の範囲でないか、
.I tv_sec
の値が負であった。
.TP
.B EINVAL
.\"O .I clock_id
.\"O was invalid.
.\"O .RB ( CLOCK_THREAD_CPUTIME_ID
.\"O is not a permitted value for
.\"O .IR clock_id .)
.I clock_id
が無効であった
.RB ( CLOCK_THREAD_CPUTIME_ID
が
.I clock_id
として有効な値ではない)。
.\"O .SH VERSIONS
.SH バージョン
.\"O The
.\"O .BR clock_nanosleep ()
.\"O system call first appeared in Linux 2.6.
.\"O Support is available in glibc since version 2.1.
.BR clock_nanosleep ()
システムコールは Linux 2.6 で初めて登場した。
glibc ではバージョン 2.1 以降でサポートされている。
.\"O .SH "CONFORMING TO"
.SH 準拠
POSIX.1-2001.
.\"O .SH NOTES
.SH 注意
.\"O If the interval specified in
.\"O .I request
.\"O is not an exact multiple of the granularity underlying clock (see
.\"O .BR time (7)),
.\"O then the interval will be rounded up to the next multiple.
.\"O Furthermore, after the sleep completes, there may still be a delay before
.\"O the CPU becomes free to once again execute the calling thread.
.I request
で指定された停止期間が、時間の計測に使用されるクロック
.RB ( time (7)
参照) の精度の倍数ちょうどでない場合、停止期間は一番近い次の倍数に
切り上げられる。さらに、停止が完了した後に、CPU が呼び出したスレッドを
もう一度実行できるようになるまでには、遅延が入る可能性がある。

.\"O Using an absolute timer is useful for preventing
.\"O timer drift problems of the type described in
.\"O .BR nanosleep (2).
.\"O (Such problems are exacerbated in programs that try to restart
.\"O a relative sleep that is repeatedly interrupted by signals.)
絶対値指定のタイマを使うのは、
.BR nanosleep (2)
に書かれている類のタイマのずれの問題を防止するのに役立つ
(この種の問題は、シグナルに割り込まれた際に相対指定の停止を
繰り返し再開しようとするプログラムでは、かえって悪化する)。
.\"O To perform a relative sleep that avoids these problems, call
.\"O .BR clock_gettime (2)
.\"O for the desired clock,
.\"O add the desired interval to the returned time value,
.\"O and then call
.\"O .BR clock_nanosleep ()
.\"O with the
.\"O .B TIMER_ABSTIME
.\"O flag.
これらの問題を回避して相対指定の停止を実行するには、
希望するクロックで
.BR clock_gettime (2)
を呼び出し、その返り値の時刻値に希望する期間を加算してから、
.B TIMER_ABSTIME
フラグを指定して
.BR clock_nanosleep ()
を呼び出す。

.\"O .BR clock_nanosleep ()
.\"O is never restarted after being interrupted by a signal handler,
.\"O regardless of the use of the
.\"O .BR sigaction (2)
.\"O .B SA_SIGACTION
.\"O flag.
.BR sigaction (2)
で
.BR SA_RESTART
フラグが指定されているかに関わらず、
シグナルハンドラにより割り込まれた後に
.BR clock_nanosleep ()
が再開されることは決してない。

.\"O The
.\"O .I remain
.\"O argument is unused, and unnecessary, when
.\"O .I flags
.\"O is
.\"O .BR TIMER_ABSTIME .
.\"O (An absolute sleep can be restarted using the same
.\"O .I request
.\"O argument.)
.I flags
が
.B TIMER_ABSTIME
の場合、
.I remain
引き数は使用されず、不要である
(絶対値での停止では、同じ
.I request
引き数を使って再度呼び出すことができる)。

.\"O POSIX.1 specifies that
.\"O .BR clock_nanosleep ()
.\"O has no effect on signals dispositions or the signal mask.
POSIX.1 の規定では、
.BR clock_nanosleep ()
はシグナルの処理方法やシグナルマスクに影響を与えない、とされている。

.\"O POSIX.1 specifies that after changing the value of the
.\"O .B CLOCK_REALTIME
.\"O clock via
.\"O .BR clock_settime (2),
.\"O the new clock value shall be used to determine the time
.\"O at which a thread blocked on an absolute
.\"O .BR clock_nanosleep ()
.\"O will wake up;
.\"O if the new clock value falls past the end of the sleep interval, then the
.\"O .BR clock_nanosleep ()
.\"O call will return immediately.
POSIX.1 の規定では、
.BR clock_settime (2)
で
.B CLOCK_REALTIME
クロックの値を変更した後は、絶対値指定の
.BR clock_nanosleep ()
で停止しているスレッドを起動させる時刻の判定は、
新しいクロック値を使って行われる、とされている。
新しいクロック値において停止期間の終了時刻が過去になってしまった場合には、
.BR clock_nanosleep ()
はすぐに返ることになる。

.\"O POSIX.1 specifies that
.\"O changing the value of the
.\"O .B CLOCK_REALTIME
.\"O clock via
.\"O .BR clock_settime (2)
.\"O shall have no effect on a thread that is blocked on a relative
.\"O .BR clock_nanosleep ().
POSIX.1 の規定では、
.BR clock_settime (2)
で
.B CLOCK_REALTIME
クロックの値を変更しても、相対値指定の
.BR clock_nanosleep ()
で停止しているスレッドには影響を与えない、とされている。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR clock_getres (2),
.BR nanosleep (2),
.BR timer_create (2),
.BR sleep (3),
.BR usleep (3),
.BR time (7)
