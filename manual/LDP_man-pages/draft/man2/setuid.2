.\" Copyright (C), 1994, Graeme W. Wilford (Wilf).
.\" and Copyright (C) 2010, 2014, 2015, Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Fri Jul 29th 12:56:44 BST 1994  Wilf. <G.Wilford@ee.surrey.ac.uk>
.\" Changes inspired by patch from Richard Kettlewell
.\"   <richard@greenend.org.uk>, aeb 970616.
.\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capability requirements
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Sat Mar  1 16:32:11 JST 1997
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Modified Sun Sep 28 20:26:49 JST 1997
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated & Modified Sat May 22 18:21:45 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Wed Jan  5 00:51:28 JST 2005 by Yuichi SATO
.\" Updated 2010-04-10, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.24
.\" Updated 2012-04-30, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH SETUID 2 2019\-03\-06 Linux "Linux Programmer's Manual"
.SH 名前
setuid \- ユーザー識別 (identity) を設定する
.SH 書式
\fB#include <sys/types.h>\fP
.br
\fB#include <unistd.h>\fP
.PP
\fBint setuid(uid_t \fP\fIuid\fP\fB);\fP
.SH 説明
\fBsetuid\fP()  sets the effective user ID of the calling process.  If the
calling process is privileged (more precisely: if the process has the
\fBCAP_SETUID\fP capability in its user namespace), the real UID and saved
set\-user\-ID are also set.
.PP
Linux では、 \fBsetuid\fP()  は \fB_POSIX_SAVED_IDS\fP をもった POSIX 版のように実装されている。 これは
(ルート以外の) set\-user\-ID プログラムにそのユーザーの特権を 全て与え、特権の必要ない仕事をし、本来の実効ユーザー ID に
安全な方法で再び戻すことを許す。
.PP
If the user is root or the program is set\-user\-ID\-root, special care must be
taken: \fBsetuid\fP()  checks the effective user ID of the caller and if it is
the superuser, all process\-related user ID's are set to \fIuid\fP.  After this
has occurred, it is impossible for the program to regain root privileges.
.PP
したがって、set\-user\-ID\-root プログラムで、一時的にルート特権を解除し、
非特権ユーザーであるかのように振舞い、後でルート権限をもう一度得ようと する場合には、 \fBsetuid\fP()  を使うことができない。その場合には、
\fBseteuid\fP(2)  を使う必要がある。
.SH 返り値
成功した場合は 0 が返される。エラーの場合は \-1 が返され、 \fIerrno\fP が適切に設定される。
.PP
\fI注意\fP: 呼び出し元が UID 0 であっても \fBsetuid\fP() が失敗する場合がある。 \fBsetuid\fP()
からのリターンが失敗かどうかの確認を省略することは重大なセキュリティ上のエラーとなる。
.SH エラー
.TP 
\fBEAGAIN\fP
この呼び出しで呼び出し元の実 UID が変更されるはずだったが (つまり、 \fIuid\fP が呼び出し元の実 UID と一致していない)、
必要なカーネルのデータ構造体の割り当てで一時的な失敗があった。
.TP 
\fBEAGAIN\fP
\fIuid\fP は呼び出し元の実 UID と一致しておらず、 この呼び出しで実ユーザー ID \fIruid\fP に属するプロセス数が呼び出し元の
\fBRLIMIT_NPROC\fP リソース上限を超過するところであった。 Linux 3.1 以降では、このエラーはもはや発生することはない
(しかし、堅牢性が求められるアプリケーションではこのエラーを確認すべきである)。 \fBexecve\fP(2) の \fBEAGAIN\fP の説明を参照。
.TP 
\fBEINVAL\fP
\fIuid\fP で指定されたユーザー ID がこのユーザー名前空間では有効ではない。
.TP 
\fBEPERM\fP
The user is not privileged (Linux: does not have the \fBCAP_SETUID\fP
capability in its user namespace) and \fIuid\fP does not match the real UID or
saved set\-user\-ID of the calling process.
.SH 準拠
.\" SVr4 documents an additional EINVAL error condition.
POSIX.1\-2001, POSIX.1\-2008, SVr4.  Not quite compatible with the 4.4BSD
call, which sets all of the real, saved, and effective user IDs.
.SH 注意
Linux はファイルシステムユーザー ID の概念を持つ。
通常、これは実効ユーザー ID に等しい。
\fBsetuid\fP()  コールは呼び出し元のプロセスの
ファイルシステムユーザー ID も設定する。
\fBsetfsuid\fP(2) も参照すること。
.PP
\fIuid\fP が前の実効 UID と異っていた場合、
プロセスはコアダンプすることを禁止される。
.PP
.\"
元々の Linux の \fBsetuid\fP() システムコールは
16 ビットのグループ ID だけに対応していた。
その後、Linux 2.4 で、32 ビットの ID に対応した
\fBsetuid32\fP() が追加された。
glibc の \fBsetuid\fP() のラッパー関数は
カーネルバージョンによるこの違いを吸収している。
.SS "C library/kernel differences"
At the kernel level, user IDs and group IDs are a per\-thread attribute.
However, POSIX requires that all threads in a process share the same
credentials.  The NPTL threading implementation handles the POSIX
requirements by providing wrapper functions for the various system calls
that change process UIDs and GIDs.  These wrapper functions (including the
one for \fBsetuid\fP())  employ a signal\-based technique to ensure that when
one thread changes credentials, all of the other threads in the process also
change their credentials.  For details, see \fBnptl\fP(7).
.SH 関連項目
\fBgetuid\fP(2), \fBseteuid\fP(2), \fBsetfsuid\fP(2), \fBsetreuid\fP(2),
\fBcapabilities\fP(7), \fBcredentials\fP(7), \fBuser_namespaces\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 5.10 の一部である。プロジェクトの説明とバグ報告に関する情報は
\%https://www.kernel.org/doc/man\-pages/ に書かれている。
