.\" Copyright (c) 2007 Silicon Graphics, Inc. All Rights Reserved
.\" Written by Dave Chinner <dgc@sgi.com>
.\" May be distributed as per GNU General Public License version 2.
.\"
.\" Japanese Version Copyright (c) 2007  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2007-10-16, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.66
.\" Updated 2008-10-13, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.11
.\" 
.TH FALLOCATE 2 2010-09-10 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O fallocate \- manipulate file space
fallocate \- ファイル空間の操作
.\"O .SH SYNOPSIS
.SH 書式
.nf
.\"O .BR "#define _GNU_SOURCE" "             /* See feature_test_macros(7) */"
.BR "#define _GNU_SOURCE" "             /* feature_test_macros(7) 参照 */"
.B #include <fcntl.h>

.BI "int fallocate(int " fd ", int " mode ", off_t " offset \
", off_t " len ");"
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O This is a nonportable, Linux-specific system call.
.\"O For the portable, POSIX.1-specified method of ensuring that space
.\"O is allocated for a file, see
.\"O .BR posix_fallocate ().
このシステムコールは、移植性のない、Linux 固有のシステムコールである。
移植性が必要な場合は、ファイルに対してディスク空間を確実に確保するために、
POSIX.1 で規定された方法である
.BR posix_fallocate (3)
を使うこと。

.\"O .BR fallocate ()
.\"O allows the caller to directly manipulate the allocated disk space
.\"O for the file referred to by
.\"O .I fd
.\"O for the byte range starting at
.\"O .I offset
.\"O and continuing for
.\"O .I len
.\"O bytes.
.BR fallocate ()
を使うと、
.I fd
が参照するファイルに割り当てられたディスク空間を直接操作できる。
操作対象は、
.I offset
から始まる長さ
.I len
バイトの領域である。

.\"O The
.\"O .I mode
.\"O argument determines the operation to be performed on the given range.
.\"O Currently only one flag is supported for
.\"O .IR mode :
.I mode
引き数は、指定された領域に対して実行する操作を指定する。
現在のところ、
.I mode
に指定できるフラグは以下の一つだけである。
.TP
.B FALLOC_FL_KEEP_SIZE
.\"O This flag allocates and initializes to zero the disk space
.\"O within the range specified by
.\"O .I offset
.\"O and
.\"O .IR len .
.\"O After a successful call, subsequent writes into this range
.\"O are guaranteed not to fail because of lack of disk space.
このフラグは、
.I offset
と
.I len
で指定された領域のディスク空間を割り当て、その空間を 0 で初期化する。
呼び出しが成功すると、それに続いてこの領域への書き込みが行われるが、
ディスク空間の不足による書き込み失敗が発生しないことが保証される。
.\"O Preallocating zeroed blocks beyond the end of the file
.\"O is useful for optimizing append workloads.
.\"O Preallocating blocks does not change
.\"O the file size (as reported by
.\"O .BR stat (2))
.\"O even if it is less than
.\"O .IR offset + len .
ファイル末尾より後ろの領域について 0 で埋めたブロックを前もって
割り当てておくことは、追記 (append) の作業負荷を最適化するのに
有用である。
ファイルサイズが
.IR offset + len
よりも小さい場合であっても、ブロックの前もっての割り当てにより
.RB ( stat (2)
が返す) ファイルサイズは変更されることはない。
.\"
.\" Note from Amit Arora:
.\" There were few more flags which were discussed, but none of
.\" them have been finalized upon. Here are these flags:
.\" FA_FL_DEALLOC, FA_FL_DEL_DATA, FA_FL_ERR_FREE, FA_FL_NO_MTIME,
.\" FA_FL_NO_CTIME
.\" All of the above flags were debated upon and we can not say
.\" if any/which one of these flags will make it to the later kernels.
.PP
.\"O If
.\"O .B FALLOC_FL_KEEP_SIZE
.\"O flag is not specified in
.\"O .IR mode ,
.\"O the default behavior is almost same as when this flag is specified.
.\"O The only difference is that on success,
.\"O the file size will be changed if
.\"O .I "offset + len"
.\"O is greater than the file size.
.\"O This default behavior closely resembles the behavior of the
.\"O .BR posix_fallocate (3)
.\"O library function,
.\"O and is intended as a method of optimally implementing that function.
.B FALLOC_FL_KEEP_SIZE
フラグが
.I mode
に指定されなかった場合、デフォルトの動作は
.B FALLOC_FL_KEEP_SIZE
フラグが指定された場合とほとんど同じとなる。
唯一の違いは、
.I "offset + len"
がファイルサイズよりも大きかった場合、呼び出しが成功すると
ファイルサイズが変更される点である。
このデフォルトの動作は、ライブラリ関数
.BR posix_fallocate (3)
の動作と非常に似ている。これは
.BR posix_fallocate (3)
を最適に実装する手段を提供することを目的としているからである。
.PP
.\"O Because allocation is done in block size chunks,
.\"O .BR fallocate ()
.\"O may allocate a larger range than that which was specified.
割り当てはブロックサイズ単位で行われるため、
.BR fallocate ()
は指定されたよりも大きな領域を割り当てることがある。
.\"O .SH RETURN VALUE
.SH 返り値
.\"O .BR fallocate ()
.\"O returns zero on success, and -1 on failure.
.BR fallocate ()
は成功すると 0 を返し、エラーの場合は \-1 を返す。
.\"O .SH ERRORS
.SH エラー
.TP
.B EBADF
.\"O .I fd
.\"O is not a valid file descriptor, or is not opened for writing.
.I fd
が有効なファイルディスクリプタでないか、
書き込み用としてオープンされていない。
.TP
.B EFBIG
.\"O .IR offset + len
.\"O exceeds the maximum file size.
.I offset + len
がファイルサイズの最大値よりも大きい。
.TP
.B EINTR
.\"O A signal was caught during execution.
実行中にシグナルが捕捉された。
.TP
.B EINVAL
.\"O .I offset
.\"O was less than 0, or
.\"O .I len
.\"O was less than or equal to 0.
.I offset
が 0 未満であるか、
.I len
が 0 以下である。
.TP
.B EIO
.\"O An I/O error occurred while reading from or writing to a file system.
ファイルシステムとの読み書き中に入出力エラーが発生した。
.TP
.B ENODEV
.\"O .I fd
.\"O does not refer to a regular file or a directory.
.\"O (If
.\"O .I fd
.\"O is a pipe or FIFO, a different error results.)
.I fd
が通常のファイルかディレクトリを参照していない
.RI ( fd
がパイプや FIFO を参照している場合、別のエラーが発生する)。
.TP
.B ENOSPC
.\"O There is not enough space left on the device containing the file
.\"O referred to by
.\"O .IR fd .
.I fd
が参照するファイルを含むデバイスに十分な空き領域がない。
.TP
.B ENOSYS
.\"O The file system containing the file referred to by
.\"O .I fd
.\"O does not support this operation.
.I fd
が参照するファイルを含むファイルシステムが
指定された操作をサポートしていない。
.TP
.B EOPNOTSUPP
.\"O The
.\"O .I mode
.\"O is not supported by the file system containing the file referred to by
.\"O .IR fd .
.I fd
が参照するファイルを含むファイルシステムが
.I mode
をサポートしていない。
.\"O .SH VERSIONS
.SH バージョン
.\"O .BR fallocate ()
.\"O is available on Linux since kernel 2.6.23.
.\"O Support is provided by glibc since version 2.10.
.BR fallocate ()
はカーネル 2.6.23 以降の Linux で利用可能である。
glibc での対応はバージョン 3.10 以降で行われている。
.\"O .SH CONFORMING TO
.SH 準拠
.\"O .BR fallocate ()
.\"O is Linux-specific.
.BR fallocate ()
は Linux 固有である。
.\"O .SH SEE ALSO
.SH 関連項目
.BR ftruncate (2),
.BR posix_fadvise (3),
.BR posix_fallocate (3)
