.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     $Id: getsockopt.2,v 1.1 1999/05/24 14:57:04 freitag Exp $
.\"
.\" Modified Sat Jul 24 16:19:32 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon Apr 22 02:29:06 1996 by Martin Schulze (joey@infodrom.north.de)
.\" Modified Tue Aug 27 10:52:51 1996 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Thu Jan 23 13:29:34 1997 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Sun Mar 28 21:26:46 1999 by Andries Brouwer (aeb@cwi.nl)
.\" Modified 1999 by Andi Kleen <ak@muc.de>.
.\"     Removed most stuff because it is in socket.7 now.
.\"
.\" Japanese Version Copyright (c) 1996 Akira Yoshiyama
.\"         all rights reserved.
.\" Translated Sat Jul  6 00:43:37 JST 1996
.\"         by Akira Yoshiyama <yosshy@jedi.seg.kobe-u.ac.jp>
.\" Modified Fri Nov  7 22:45:27 JST 1997
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated Sun Oct 12 JST 2003 by Kentaro Shirakata <argrath@ub32.org>
.\"
.TH GETSOCKOPT 2 2008-12-03 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O getsockopt, setsockopt \- get and set options on sockets
getsockopt, setsockopt \- ソケットのオプションの設定と取得を行なう
.\"O .SH SYNOPSIS
.SH 書式
.nf
.\"O .BR "#include <sys/types.h>" "          /* See NOTES */"
.BR "#include <sys/types.h>" "          /* 「注意」参照 */"
.br
.B #include <sys/socket.h>
.sp
.BI "int getsockopt(int " sockfd ", int " level ", int " optname ,
.BI "               void *" optval ", socklen_t *" optlen );
.BI "int setsockopt(int " sockfd ", int " level ", int " optname ,
.BI "               const void *" optval ", socklen_t " optlen );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O .BR getsockopt ()
.\"O and
.\"O .BR setsockopt ()
.\"O manipulate options for the socket referred to by the file descriptor
.\"O .IR sockfd .
.\"O Options may exist at multiple
.\"O protocol levels; they are always present at the uppermost
.\"O socket level.
.BR getsockopt ()
と
.BR setsockopt ()
は、ファイルディスクリプタ
.I socket
で参照されるソケットに関連するオプションの操作を行う。
オプションは複数のプロトコル層(level)に存在するかもしれないが、
これらは常に最上位のソケット層へと設定される。

.\"O When manipulating socket options, the level at which the
.\"O option resides and the name of the option must be specified.
.\"O To manipulate options at the sockets API level,
.\"O .I level
.\"O is specified as
.\"O .BR SOL_SOCKET .
.\"O To manipulate options at any
.\"O other level the protocol number of the appropriate protocol
.\"O controlling the option is supplied.
.\"O For example,
.\"O to indicate that an option is to be interpreted by the
.\"O .B TCP
.\"O protocol,
.\"O .I level
.\"O should be set to the protocol number of
.\"O .BR TCP ;
.\"O see
.\"O .BR getprotoent (3).
ソケット・オプションを操作する際には、オプションの層 (level) と
オプションの名前を指定しなければならない。
ソケット API 層でオプションを操作する為には、
.I level
を
.B SOL_SOCKET
に指定する。
他の全ての層でオプションを操作する為には、与えられたオプションの
制御主体となるプロトコルのプロトコル番号を指定する。例えば、
オプションが
.B TCP
プロトコルで解釈されるべきことを指示するには、
.I level
に
.B TCP
のプロトコル番号を指定しなければならない。
.BR getprotoent (3)
を参照すること。

.\"O The arguments
.\"O .I optval
.\"O and
.\"O .I optlen
.\"O are used to access option values for
.\"O .BR setsockopt ().
.I optval
と
.I optlen
引き数は
.BR setsockopt ()
のオプションの値にアクセスするために用いられる。
.\"O For
.\"O .BR getsockopt ()
.\"O they identify a buffer in which the value for the
.\"O requested option(s) are to be returned.
.BR getsockopt ()
では要求したオプションの値を返すためのバッファーを指定する。
.\"O For
.\"O .BR getsockopt (),
.\"O .I optlen
.\"O is a value-result argument, initially containing the
.\"O size of the buffer pointed to by
.\"O .IR optval ,
.\"O and modified on return to indicate the actual size of
.\"O the value returned.
.\"O If no option value is to be supplied or returned,
.\"O .I optval
.\"O may be NULL.
.BR getsockopt ()
では
.I optlen
は値と結果両用の引き数で、最初に
.I optval
の指しているバッファーのサイズを与え、実際に返される値のサイズに
書き換えられる。もしオプション値を与えず、返されもしない場合には
.I optval
は NULL でも良い。

.\"O .I Optname
.\"O and any specified options are passed uninterpreted to the appropriate
.\"O protocol module for interpretation.
.\"O The include file
.\"O .I <sys/socket.h>
.\"O contains definitions for socket level options, described below.
.\"O Options at
.\"O other protocol levels vary in format and name; consult the appropriate
.\"O entries in section 4 of the manual.
.I optname
および指定されたオプションは解釈されずに、適切なプロトコル・モジュールに
渡されて解釈される。インクルード・ファイル
.I <sys/socket.h>
には後述のソケット層のオプションの定義が含まれている。
他のプロトコル層では名前や形式は異なる。
マニュアルのセクション 4 の適切なエントリを参照すること。

.\"O Most socket-level options utilize an
.\"O .I int
.\"O argument for
.\"O .IR optval .
.\"O For
.\"O .BR setsockopt (),
.\"O the argument should be nonzero to enable a boolean option, or zero if the
.\"O option is to be disabled.
ほとんどのソケット層のオプションは
.I optval
に
.I int
引き数を利用する。
.BR setsockopt ()
で、二値(boolean)オプションを有効(enable)にするにはゼロ以外を指定し、
無効(disable)にするにはゼロを指定する。
.PP
.\"O For a description of the available socket options see
.\"O .BR socket (7)
.\"O and the appropriate protocol man pages.
利用可能なソケットオプションの説明に関しては、
.BR socket (7)
と適切なプロトコルの man ページを参照のこと。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O On success, zero is returned.
.\"O On error, \-1 is returned, and
.\"O .I errno
.\"O is set appropriately.
成功した場合にはゼロを返す。エラー時には \-1 が返され、
.I errno
が適切に設定される。
.\"O .SH ERRORS
.SH エラー
.TP 10
.B EBADF
.\"O The argument
.\"O .I sockfd
.\"O is not a valid descriptor.
引き数
.I sockfd
が有効なディスクリプタでない。
.TP
.B EFAULT
.\"O The address pointed to by
.\"O .I optval
.\"O is not in a valid part of the process address space.
.\"O For
.\"O .BR getsockopt (),
.\"O this error may also be returned if
.\"O .I optlen
.\"O is not in a valid part of the process address space.
.I optval
で指定されたアドレスがプロセスのアドレス空間の有効な部分ではない。
.BR getsockopt ()
の場合、
.I optlen
がプロセスのアドレス空間の有効な部分でない場合にもこのエラーが返される。
.TP
.B EINVAL
.\"O .I optlen
.\"O invalid in
.\"O .BR setsockopt ().
.BR setsockopt ()
で
.I option
が不正である。
.\"O In some cases this error can also occur for an invalid value in
.\"O .IR optval
.\"O (e.g., for the
.\"O .B IP_ADD_MEMBERSHIP
.\"O option described in
.\"O .BR ip (7)).
.I optval
に無効な値が指定された場合にも、このエラーが発生する可能性がある
(例えば、
.BR ip (7)
に説明がある
.B IP_ADD_MEMBERSHIP
オプションなど)。
.TP
.B ENOPROTOOPT
.\"O The option is unknown at the level indicated.
指定された層(level)にはこのオプションは存在しない。
.TP
.B ENOTSOCK
.\"O The argument
.\"O .I sockfd
.\"O is a file, not a socket.
引き数
.I sockfd
はファイルであり、ソケットでない。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O SVr4, 4.4BSD (these system calls first appeared in 4.2BSD),
.\"O POSIX.1-2001.
.\"O .\" SVr4 documents additional ENOMEM and ENOSR error codes, but does
.\"O .\" not document the
.\"O .\" .BR SO_SNDLOWAT ", " SO_RCVLOWAT ", " SO_SNDTIMEO ", " SO_RCVTIMEO
.\"O .\" options
SVr4, 4.4BSD (これらのシステム・コールは 4.2BSD で最初に現れた),
POSIX.1-2001.
.\" SVr4 には他に ENOMEM と ENOSR エラー・コードについても記述されている。
.\" しかし、
.\" .BR SO_SNDLOWAT ", " SO_RCVLOWAT ", " SO_SNDTIMEO ", " SO_RCVTIMEO
.\" オプションに関する記述はない。
.\"O .SH NOTES
.SH 注意
.\"O POSIX.1-2001 does not require the inclusion of
.\"O .IR <sys/types.h> ,
.\"O and this header file is not required on Linux.
.\"O However, some historical (BSD) implementations required this header
.\"O file, and portable applications are probably wise to include it.
POSIX.1-2001 では
.I <sys/types.h>
のインクルードは必須とされておらず、
Linux ではこのヘッダファイルは必要ではない。
しかし、歴史的には、いくつかの実装 (BSD 系) でこのヘッダファイルが
必要であり、移植性が必要なアプリケーションではこのファイルを
インクルードするのが賢明であろう。

.\"O The
.\"O .I optlen
.\"O argument of
.\"O .BR getsockopt ()
.\"O and
.\"O .BR setsockopt ()
.\"O is in reality an
.\"O .I "int [*]"
.\"O (and this is what 4.x BSD and libc4 and libc5 have).
.BR getsockopt ()
と
.BR setsockopt ()
の
.I optlen
引き数は実際は
.I int [*]
である (そして 4.x BSD と libc4 と libc5 はそうなっている)。
.\"O Some POSIX confusion resulted in the present
.\"O .IR socklen_t ,
.\"O also used by glibc.
.\"O See also
POSIX では紆余曲折を経て現在の
.I socklen_t
になっており、
glibc でも
.I socklen_t
を使っている。
.BR accept (2)
も参照のこと。
.\"O .SH BUGS
.SH バグ
.\"O Several of the socket options should be handled at lower levels of the
.\"O system.
ソケットのオプションのいくつかはシステムのより低い層で
処理されるべきである。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR ioctl (2),
.BR socket (2),
.BR getprotoent (3),
.BR protocols (5),
.BR socket (7),
.BR tcp (7),
.BR unix (7)
