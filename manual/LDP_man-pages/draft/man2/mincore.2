.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 2001 Bert Hubert <ahu@ds9a.nl>
.\" and Copyright (C) 2007 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Created Sun Jun 3 17:23:32 2001 by bert hubert <ahu@ds9a.nl>
.\" Slightly adapted, following comments by Hugh Dickins, aeb, 2001-06-04.
.\" Modified, 20 May 2003, Michael Kerrisk <mtk.manpages@gmail.com>
.\" Modified, 30 Apr 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\" 2005-04-05 mtk, Fixed error descriptions
.\" 	after message from <gordon.jin@intel.com>
.\" 2007-01-08 mtk, rewrote various parts
.\"
.\" Japanese Version Copyright (c) 2001-2005 Yuichi SATO
.\"         all rights reserved.
.\" Translated Sun Jul  8 21:09:35 JST 2001
.\"         by Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified Sat Jul 26 13:54:03 JST 2003
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified Fri Dec 31 05:59:40 JST 2004 by Yuichi SATO
.\" Updated & Modified Fri Apr 22 02:35:03 JST 2005 by Yuichi SATO
.\" Updated 2007-05-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.44
.\"
.\"WORD:	least significant bit	最下位ビット
.\"
.TH MINCORE 2 2008-04-22 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O mincore \- determine whether pages are resident in memory
mincore \- ページがメモリ内にあるかどうかを判定する
.\"O .SH SYNOPSIS
.SH 書式
.B #include <unistd.h>
.br
.B #include <sys/mman.h>
.sp
.BI "int mincore(void *" addr ", size_t " length ", unsigned char *" vec );
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR mincore ():
_BSD_SOURCE || _SVID_SOURCE
.\"O .SH DESCRIPTION
.SH 説明
.\"O .BR mincore ()
.\"O returns a vector that indicates whether pages
.\"O of the calling process's virtual memory are resident in core (RAM),
.\"O and so will not cause a disk access (page fault) if referenced.
.\"O The kernel returns residency information about the pages
.\"O starting at the address
.\"O .IR addr ,
.\"O and continuing for
.\"O .I length
.\"O bytes.
.BR mincore ()
は、呼び出し元プロセスの仮想メモリのページがコア (RAM) 内に存在し、
ページ参照時にディスクアクセス (ページ・フォールト) を起こさないか
どうかを示すベクトルを返す。カーネルは、アドレス
.I addr
から始まる
.I length
バイトの範囲のページに関する存在情報を返す。

.\"O The
.\"O .I addr
.\"O argument must be a multiple of the system page size.
.\"O The
.\"O .I length
.\"O argument need not be a multiple of the page size,
.\"O but since residency information is returned for whole pages,
.\"O .I length
.\"O is effectively rounded up to the next multiple of the page size.
.\"O One may obtain the page size
.\"O .RB ( PAGE_SIZE )
.\"O using
.\"O .IR sysconf(_SC_PAGESIZE) .
.I addr
引き数はシステムのページサイズの倍数でなければならない。
.I length
引き数はページサイズの倍数である必要はないが、
ページ全体に関する存在情報が返されるので、事実上
.I length
はページサイズの倍数に切り上げられることになる。
ページサイズ
.RB ( PAGE_SIZE )
は
.I sysconf(_SC_PAGESIZE)
を使って入手できる。

.\"O The
.\"O .I vec
.\"O argument must point to an array containing at least
.\"O .I "(length+PAGE_SIZE\-1) / PAGE_SIZE"
.\"O bytes.
.\"O On return,
.\"O the least significant bit of each byte will be set if
.\"O the corresponding page is currently resident in memory,
.\"O and be clear otherwise.
.\"O (The settings of the other bits in each byte are undefined;
.\"O these bits are reserved for possible later use.)
.I vec
引き数は、少なくとも
.I "(length+PAGE_SIZE\-1) / PAGE_SIZE"
バイトが格納できる配列を指していなければならない。
この呼び出しが返るとき、
各バイトの最下位ビットは、対応するページがメモリ内にそのとき存在すれば
セットされ、そうでない場合はクリアされる
(各バイトのその他のビットは未定義であり、これらのビットは将来の使用に
そなえて予約されている)。
.\"O Of course the information returned in
.\"O .I vec
.\"O is only a snapshot: pages that are not
.\"O locked in memory can come and go at any moment, and the contents of
.\"O .I vec
.\"O may already be stale by the time this call returns.
もちろん、
.I vec
で返された情報はスナップショットでしかない。
メモリ内にロックされていないページは、任意の時点でメモリ内に
入ったり出たりでき、この呼び出しが返るときには
.I vec
の内容はすでに古くなっているかもしれない。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O On success,
.\"O .BR mincore ()
.\"O returns zero.
成功した場合、
.BR mincore ()
は 0 を返す。
.\"O On error, \-1 is returned, and
.\"O .I errno
.\"O is set appropriately.
エラーの場合は \-1 を返して、
.I errno
を適切な値に設定する。
.\"O .SH ERRORS
.SH エラー
.B EAGAIN
.\"O kernel is temporarily out of resources.
カーネルが一時的にリソースを使い果たしている。
.TP
.B EFAULT
.\"O .I vec
.\"O points to an invalid address.
.I vec
が無効なアドレスを指している。
.TP
.B EINVAL
.\"O .I addr
.\"O is not a multiple of the page size.
.I addr
がページサイズの倍数でない。
.TP
.B ENOMEM
.\"O .I length
.\"O is greater than
.\"O .RI ( TASK_SIZE " \- " addr ).
.I length
が
.RI ( TASK_SIZE " \- " addr )
より大きい。
.\"O (This could occur if a negative value is specified for
.\"O .IR length ,
.\"O since that value will be interpreted as a large
.\"O unsigned integer.)
.RI ( length
に負の値が指定された場合、
その値が大きな符号なし整数として解釈されるために起こることがある。)
.\"O In Linux 2.6.11 and earlier, the error
.\"O .B EINVAL
.\"O was returned for this condition.
Linux 2.6.11 以前では、この条件の場合はエラー
.B EINVAL
が返されていた。
.TP
.B ENOMEM
.\"O .I addr
.\"O to
.\"O .I addr
.\"O +
.\"O .I length
.\"O contained unmapped memory.
.I addr
から
.I addr
+
.I length
の間にマップされていないメモリがあった。
.\"O .SH VERSIONS
.\"O Since Linux 2.3.99pre1 and glibc 2.2.
.SH バージョン
Linux 2.3.99pre1 と glibc 2.2 から利用可能である。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O .BR mincore ()
.\"O is not specified in POSIX.1-2001,
.\"O and it is not available on all UNIX implementations.
.BR mincore ()
は POSIX.1-2001 に記述されておらず、
全ての UNIX 実装で利用可能であるわけではない。
.\" It is on at least NetBSD, FreeBSD, OpenBSD, Solaris 8,
.\" AIX 5.1, SunOS 4.1
.\"O .\" .SH HISTORY
.\" .SH 歴史
.\"O .\" The
.\"O .\" .BR mincore ()
.\"O .\" function first appeared in 4.4BSD.
.\" .BR mincore ()
.\" 関数は 4.4BSD で初めて登場した。
.\"O .SH "BUGS"
.SH バグ
.\"O Before kernel 2.6.21,
.\"O .BR mincore ()
.\"O did not return correct information for
.\"O .B MAP_PRIVATE
.\"O mappings, or for nonlinear mappings (established using
.\"O .BR remap_file_pages (2)).
カーネル 2.6.21 より前は、
.BR mincore ()
は、
.B MAP_PRIVATE
マッピングや非線形マッピング
.RB ( remap_file_pages (2)
を使って作成される) について正しい情報を返さなかった。
.\"O .\" Linux (up to now, 2.6.5),
.\"O .\" .B mincore
.\"O .\" does not return correct information for MAP_PRIVATE mappings:
.\" Linux では (2.6.5 の現在に至るまで)、
.\" .B mincore
.\" は MAP_PRIVATE マッピングについての正しい情報を返さない。
.\"O .\" for a MAP_PRIVATE file mapping,
.\"O .\" .B mincore
.\"O .\" returns the residency of the file pages, rather than any
.\"O .\" modified process-private pages that have been copied on write;
.\" MAP_PRIVATE ファイルマッピングについて、
.\" .B mincore
.\" は書き込み時コピー (copy on write) されていて
.\" 修正されたプロセスのプライベートページを返すのではなく、
.\" ファイルページが存在するか否かを返す。
.\"O .\" for a MAP_PRIVATE mapping of
.\"O .\" .IR /dev/zero ,
.\"O .\" .B mincore
.\"O .\" always reports pages as nonresident;
.\" .I /dev/zero
.\" の MAP_PRIVATE マッピングについて、
.\" .B mincore
.\" は常にページが存在しないという答えを返す。
.\"O .\" and for a MAP_PRIVATE, MAP_ANONYMOUS mapping,
.\"O .\" .B mincore
.\"O .\" always fails with the error
.\"O .\" .BR ENOMEM .
.\" MAP_PRIVATE, MAP_ANONYMOUS マッピングについて、
.\" .B mincore
.\" は常に
.\" .B ENOMEM
.\" で失敗する。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR mlock (2),
.BR mmap (2)
