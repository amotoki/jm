.\" Copyright (C) 2011, Eric Biederman <ebiederm@xmission.com>
.\" Licensed under the GPLv2
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SETNS 2 2011\-10\-04 Linux "Linux Programmer's Manual"
.SH 名前
setns \- reassociate thread with a namespace
.SH 書式
.nf
\fB#define _GNU_SOURCE\fP             /* feature_test_macros(7) 参照 */
\fB#include <sched.h>\fP
.sp
\fBint setns(int \fP\fIfd\fP\fB, int \fP\fInstype\fP\fB);\fP
.fi
.SH 説明
Given a file descriptor referring to a namespace, reassociate the calling
thread with that namespace.

The \fIfd\fP argument is a file descriptor referring to one of the namespace
entries in a \fI/proc/[pid]/ns/\fP directory; see \fBproc\fP(5)  for further
information on \fI/proc/[pid]/ns/\fP.  The calling thread will be reassociated
with the corresponding namespace, subject to any constraints imposed by the
\fInstype\fP argument.

The \fInstype\fP argument specifies which type of namespace the calling thread
may be reassociated with.  This argument can have one of the following
values:
.TP 
\fB0\fP
Allow any type of namespace to be joined.
.TP 
\fBCLONE_NEWIPC\fP
\fIfd\fP must refer to an IPC namespace.
.TP 
\fBCLONE_NEWNET\fP
\fIfd\fP must refer to a network namespace.
.TP 
\fBCLONE_NEWUTS\fP
\fIfd\fP must refer to a UTS namespace.
.PP
Specifying \fInstype\fP as 0 suffices if the caller knows (or does not care)
what type of namespace is referred to by \fIfd\fP.  Specifying a nonzero value
for \fInstype\fP is useful if the caller does not know what type of namespace
is referred to by \fIfd\fP and wants to ensure that the namespace is of a
particular type.  (The caller might not know the type of the namespace
referred to by \fIfd\fP if the file descriptor was opened by another process
and, for example, passed to the caller via a UNIX domain socket.)
.SH 返り値
On success, \fIsetns\fP()  returns 0.  On failure, \-1 is returned and \fIerrno\fP
is set to indicate the error.
.SH エラー
.TP 
\fBEBADF\fP
\fIfd\fP is not a valid file descriptor.
.TP 
\fBEINVAL\fP
\fIfd\fP refers to a namespace whose type does not match that specified in
\fInstype\fP, or there is problem with reassociating the the thread with the
specified namespace.
.TP 
\fBENOMEM\fP
Cannot allocate sufficient memory to change the specified namespace.
.TP 
\fBEPERM\fP
The calling thread did not have the required privilege (\fBCAP_SYS_ADMIN\fP)
for this operation.
.SH バージョン
The \fBsetns\fP()  system call first appeared in Linux in kernel 3.0
.SH 準拠
The \fBsetns\fP()  system call is Linux\-specific.
.SH 注意
Not all of the attributes that can be shared when a new thread is created
using \fBclone\fP(2)  can be changed using \fBsetns\fP().
.SH バグ
The PID namespace and the mount namespace are not currently supported.  (See
the descriptions of \fBCLONE_NEWPID\fP and \fBCLONE_NEWNS\fP in \fBclone\fP(2).)
.SH 関連項目
\fBclone\fP(2), \fBfork\fP(2), \fBvfork\fP(2), \fBproc\fP(5), \fBunix\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.40 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
