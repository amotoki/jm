.\" Copyright (C) 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 June 1995 by Andries Brouwer <aeb@cwi.nl>
.\" 2008-02-15, Jeremy Kerr <jk@ozlabs.org>
.\"     Add info on command type 10; add details on types 6, 7, 8, & 9.
.\" 2008-02-15, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Update LOG_BUF_LEN details; update RETURN VALUE section.
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Mon Dec 16 11:16:34 JST 2001
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated Thu Mar 6 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2005-09-06, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-04-04, Akihiro MOTOKI, LDP v2.79
.\" Updated 2008-07-31, Akihiro MOTOKI, LDP v3.05
.\"
.\"WORD:	kernel			カーネル
.\"WORD:	message ring buffer	メッセージ・リング・バッファ
.\"WORD:	library			ライブラリ
.\"WORD:	kernel log buffer	カーネル・ログ・バッファ
.\"WORD:	console			コンソール
.\"WORD:	kernel panic		カーネル・パニック
.\"WORD:	loglevel		ログレベル
.\"WORD:	debug message		デバッグ・メッセージ
.\"
.TH SYSLOG 2  2008-06-20 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O syslog, klogctl \- read and/or clear kernel message ring buffer;
.\"O set console_loglevel
syslog, klogctl \- カーネルのメッセージ・リング・バッファを読んだり消去したりする;
console_loglevel の設定を行う
.\"O .SH SYNOPSIS
.SH 書式
.nf
.BI "int syslog(int " type ", char *" bufp ", int " len );
.\"O .B  "                /* No wrapper provided in glibc */"
.B  "                /* glibc ではラッパー関数は提供されていない */"
.sp
.\"O /* The glibc interface */
/* glibc のインタフェース */
.br
.B "#include <sys/klog.h>"
.sp
.BI "int klogctl(int " type ", char *" bufp ", int " len );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O If you need the C library function
.\"O .BR syslog ()
.\"O (which talks to
.\"O .BR syslogd (8)),
.\"O then look at
.\"O .BR syslog (3).
.\"O The system call of this name is about controlling the kernel
.\"O .IR printk ()
.\"O buffer, and the glibc version is called
.\"O .BR klogctl ().
.RB ( syslogd (8)
と話す) C ライブラリ関数の
.BR syslog ()
が必要な場合は、
.BR syslog (3)
を見ること。
この名前のシステム・コールはカーネルの
.IR printk ()
バッファを制御するものであり、glibc では
.BR klogctl ()
と呼ばれている。

.\"O .The \fItype\fP argument determines the action taken by this function.
\fItype\fP 引き数はこの関数の動作を決定する。

.\"O Quoting from
.\"O .IR kernel/printk.c :
.I kernel/printk.c
からの引用 :
.nf
.\"O /*
.\"O  * Commands to sys_syslog:
.\"O  *
.\"O  *      0 \-\- Close the log.  Currently a NOP.
.\"O  *      1 \-\- Open the log. Currently a NOP.
.\"O  *      2 \-\- Read from the log.
.\"O  *      3 \-\- Read all messages remaining in the ring buffer.
.\"O  *      4 \-\- Read and clear all messages remaining in the ring buffer
.\"O  *      5 \-\- Clear ring buffer.
.\"O  *      6 \-\- Disable printk to console
.\"O  *      7 \-\- Enable printk to console
.\"O  *      8 \-\- Set level of messages printed to console
.\"O  *      9 \-\- Return number of unread characters in the log buffer
.\"O  *     10 \-\- Return size of the log buffer
.\"O  */
/*
 * Commands to sys_syslog:
 *
 *      0 \-\- ログを閉じる。現在の実装では何もしない (NOP) 。
 *      1 \-\- ログを開く。現在の実装では何もしない (NOP) 。
 *      2 \-\- ログから読み出す。
 *      3 \-\- リング・バッファに残っているメッセージをすべて読み出す。
 *      4 \-\- リング・バッファに残っているメッセージをすべて読み出し、消去する。
 *      5 \-\- リングバッファを消去する。
 *      6 \-\- コンソールへの printk を無効にする。
 *      7 \-\- コンソールへの printk を有効にする。
 *      8 \-\- コンソールに表示されるメッセージのレベルを設定する。
 *      9 \-\- ログバッファの未読の文字数を返す。
 *      10 \-\- ログバッファのサイズを返す。
 */
.fi

.\"O Only command types 3 and 10 are allowed to unprivileged processes.
.\"O Type 9 was added in 2.4.10; type 10 in 2.6.6.
非特権プロセスにはコマンド 3 と 10 のみが許可されている
(コマンド 9 は Linux 2.4.10 で、コマンド 10 は Linux 2.6.6 で追加された)。
.\"O .SS The kernel log buffer
.SS カーネル・ログ・バッファ (kernel log buffer)
.\"O The kernel has a cyclic buffer of length
.\"O .B LOG_BUF_LEN
.\"O in which messages given as arguments to the kernel function
.\"O .BR printk ()
.\"O are stored (regardless of their loglevel).
.\"O In early kernels,
.\"O .B LOG_BUF_LEN
.\"O had the value 4096;
.\"O from kernel 1.3.54, it was 8192;
.\"O from kernel 2.1.113 it was 16384;
.\"O since 2.4.23/2.6 the value is a kernel configuration option.
.\"O .\" Under "General setup" ==> "Kernel log buffer size"
.\"O .\" For 2.6, precisely the option seems to have appeared in 2.5.55.
.\"O In recent kernels the size can be queried with command type 10.
カーネルは長さ
.B LOG_BUF_LEN
の巡回式のバッファを持っており、
それにはカーネル関数の
.BR printk ()
の引き数として与えられた
メッセージが (そのログレベルにかかわらず) 格納される。
初期のカーネルでは
.B LOG_BUF_LEN
の値は 4096 であった。
カーネル 1.3.54 からは 8192、
カーネル 2.1.113 からは 16384 になり、
カーネル 2.4.23 以降および 2.6 以降ではカーネルのコンパイル時に
値を設定できるようになっている。
.\" Under "General setup" ==> "Kernel log buffer size"
.\" For 2.6, precisely the option seems to have appeared in 2.5.55.
最近のカーネルでは、コマンド 10 でバッファのサイズを問い合わせできる。

.\"O The call
.\"O .I "syslog(2,buf,len)"
.\"O waits until this kernel log buffer is nonempty, and then reads
.\"O at most \fIlen\fP bytes into the buffer \fIbuf\fP.
.\"O It returns
.\"O the number of bytes read.
.\"O Bytes read from the log disappear from
.\"O the log buffer: the information can only be read once.
.\"O This is the function executed by the kernel when a user program
.\"O reads
.\"O .IR /proc/kmsg .
.I "syslog(2,buf,len)"
の呼び出しはカーネル・ログ・バッファが空でなくなるまで待って、
最大 \fIlen\fP バイトまで \fIbuf\fP へと読み出し、読み込んだ
バイト数を返す。ログから読まれたバイトはログ・バッファから消える:
情報は一度しか読むことができない。
これはユーザーのプログラムが
.I /proc/kmsg
を読んだ時にカーネルによって実行される関数でもある。

.\"O The call
.\"O .I syslog(3,buf,len)
.\"O will read the last \fIlen\fP bytes from the log buffer (nondestructively),
.\"O but will not read more than was written into the buffer since the
.\"O last "clear ring buffer" command (which does not clear the buffer at all).
.\"O It returns the number of bytes read.
.I syslog(3,buf,len)
の呼び出しはログ・バッファの最後の \fIlen\fP バイトを
(非破壊的に)読み出す、しかし、直近の「リング・バッファ消去」命令
(この命令はバッファを消去するわけではない)
以降にバッファに書き込まれた情報しか読み出せない。
返り値は読み込んだバイト数である。

.\"O The call
.\"O .I syslog(4,buf,len)
.\"O does precisely the same, but also executes the "clear ring buffer" command.
.I syslog(4,buf,len)
呼び出しは「リング・バッファ消去」命令も実行する以外は
機能 3 と完全に同じである。

.\"O The call
.\"O .I syslog(5,dummy,dummy)
.\"O executes just the "clear ring buffer" command.
.\"O (In each call where
.\"O .I buf
.\"O or
.\"O .I len
.\"O is shown as "dummy", the value of the argument is ignored by the call.)
.I syslog(5,dummy,dummy)
呼び出しは「リング・バッファ消去」命令のみを実行する
(呼び出しの書式で、
.I buf
や
.I len
が "dummy" と記載されている場合、その引き数の値が無視されることを表す)。

.\"O The call
.\"O .I syslog(6,dummy,dummy)
.\"O sets the console log level to minimum, so that no messages are printed
.\"O to the console.
.I syslog(6,dummy,dummy)
呼び出しはコンソールのログレベルを最小に設定し、
コンソールにメッセージが表示されないようにする。

.\"O The call
.\"O .I syslog(7,dummy,dummy)
.\"O sets the console log level to default, so that messages are printed
.\"O to the console.
.I syslog(7,dummy,dummy)
呼び出しはコンソールのログレベルをデフォルトに設定し、
コンソールにメッセージが表示されるようにする。

.\"O The call
.\"O .I syslog(8,dummy,level)
.\"O sets the console log level to
.\"O .IR level ,
.\"O which must be an integer between 1 and 8 (inclusive).
.\"O See the
.\"O .B loglevel
.\"O section for details.
.I syslog(8,dummy,level)
呼び出しはコンソールのログレベルを
.I level
に設定する。
.I level
は 1 以上 8 以下の整数でなければならない。
詳細は
.B ログレベル (loglevel)
の節を参照のこと。

.\"O The call
.\"O .I syslog(9,dummy,dummy)
.\"O returns the number of bytes currently available to be read
.\"O on the kernel log buffer.
.I syslog(9,dummy,dummy)
呼び出しはカーネル・ログバッファにある現在読み出し可能なバイト数を返す。

.\"O The call
.\"O .I syslog(10,dummy,dummy)
.\"O returns the total size of the kernel log buffer.
.I syslog(10,dummy,dummy)
呼び出しはカーネル・ログバッファの総量を返す。
.\"O .SS The loglevel
.SS ログレベル (loglevel)
.\"O The kernel routine
.\"O .BR printk ()
.\"O will only print a message on the
.\"O console, if it has a loglevel less than the value of the variable
.\"O .IR console_loglevel .
.\"O This variable initially has the value
.\"O .B DEFAULT_CONSOLE_LOGLEVEL
.\"O (7), but is set to 10 if the
.\"O kernel command line contains the word "debug", and to 15 in case
.\"O  of a kernel fault (the 10 and 15 are just silly, and equivalent to 8).
カーネル・ルーチンの
.BR printk ()
は、ログレベルが
.I console_loglevel
変数より小さいときにのみ、コンソールにメッセージを表示する。
.I console_loglevel
は最初
.B DEFAULT_CONSOLE_LOGLEVEL
(7) に設定されるが、起動時にカーネルの
コマンド・ライン・オプションに "debug" という単語が含まれている場合は
10 に設定され、カーネル・フォールトが発生した場合には 15 に設定される
(但し、10 や 15 という数字に意味はなく、8 と同等である)。
.\"O This variable is set (to a value in the range 1-8) by the call
.\"O .IR syslog(8,dummy,value) .
.\"O The calls
.\"O .I syslog(type,dummy,dummy)
.\"O with \fItype\fP equal to 6 or 7, set it to 1 (kernel panics only)
.\"O or 7 (all except debugging messages), respectively.
この変数は
.IR syslog(8,dummy,value) .
呼び出しによって設定され、値の範囲は 1-8 である。
.I syslog(type,dummy,dummy)
呼び出しで \fItype\fP が 6 もしくは 7 の場合、
console_loglevel は 1 (カーネル・パニックのみ)、
7 (デバッグ・メッセージ以外の全て) にそれぞれ設定される。

.\"O Every text line in a message has its own loglevel.
.\"O This level is
.\"O .I "DEFAULT_MESSAGE_LOGLEVEL \- 1"
.\"O (6) unless the line starts with <d>
.\"O where \fId\fP is a digit in the range 1-7, in which case the level
.\"O is \fId\fP.
.\"O The conventional meaning of the loglevel is defined in
.\"O .I <linux/kernel.h>
.\"O as follows:
メッセージの各行はそれぞれにログレベルを持つ。このログレベルは
.I "DEFAULT_MESSAGE_LOGLEVEL \- 1"
(6) であるが、 <d> (\fId\fP は 1-7 の範囲の数字) で始まる行の
ログレベルは \fId\fP である。
ログレベルの慣習的な意味は
.I <linux/kernel.h>
に以下のように定義されている:

.nf
.\"O #define KERN_EMERG    "<0>"  /* system is unusable               */
.\"O #define KERN_ALERT    "<1>"  /* action must be taken immediately */
.\"O #define KERN_CRIT     "<2>"  /* critical conditions              */
.\"O #define KERN_ERR      "<3>"  /* error conditions                 */
.\"O #define KERN_WARNING  "<4>"  /* warning conditions               */
.\"O #define KERN_NOTICE   "<5>"  /* normal but significant condition */
.\"O #define KERN_INFO     "<6>"  /* informational                    */
.\"O #define KERN_DEBUG    "<7>"  /* debug-level messages             */
#define KERN_EMERG    "<0>"  /* システムが使用不能    	    */
#define KERN_ALERT    "<1>"  /* 直ちに対処が必要      	    */
#define KERN_CRIT     "<2>"  /* 致命的な状態          	    */
#define KERN_ERR      "<3>"  /* エラー状態            	    */
#define KERN_WARNING  "<4>"  /* 警告状態              	    */
#define KERN_NOTICE   "<5>"  /* 通常状態だが大事な情報	    */
#define KERN_INFO     "<6>"  /* 通知                  	    */
#define KERN_DEBUG    "<7>"  /* デバッグレベルの情報        */
.fi
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O For \fItype\fP equal to 2, 3, or 4, a successful call to
.\"O .BR syslog ()
.\"O returns the number
.\"O of bytes read.
.\"O For \fItype\fP 9,
.\"O .BR syslog ()
.\"O returns the number of bytes currently
.\"O available to be read on the kernel log buffer.
.\"O For \fItype\fP 10,
.\"O .BR syslog ()
.\"O returns the total size of the kernel log buffer.
.\"O For other values of \fItype\fP, 0 is returned on success.
\fItype\fP が 2, 3, 4 の場合、成功すると
.BR syslog ()
は読み出したバイト数を返す。
\fItype\fP が 9 の場合、
カーネル・ログバッファにある現在読み出し可能なバイト数を返す。
\fItype\fP が 10 の場合、
カーネル・ログバッファの総量を返す。
\fItype\fP がそれ以外の値の場合、成功すると 0 が返される。

.\"O In case of error, \-1 is returned,
.\"O and \fIerrno\fP is set to indicate the error.
エラーの場合は、\-1\ が返り、
\fIerrno\fP にエラーを示す値が設定される。
.\"O .SH ERRORS
.SH エラー
.TP
.B EINVAL
.\"O Bad arguments (e.g.,
.\"O bad
.\"O .IR type ;
.\"O or for
.\"O .I type
.\"O 2, 3, or 4,
.\"O .I buf
.\"O is NULL,
.\"O or
.\"O .I len
.\"O is less than zero; or for
.\"O .I type
.\"O 8, the
.\"O .I level
.\"O is outside the range 1 to 8).
不正な引き数
(具体的には、
.I type
が正しくない、もしくは
.I type
が 2, 3, 4 の場合に
.I buf
が NULL か
.I len
が 0 未満である、もしくは
.I type
が 8 の場合に
.I level
が 1 以上 8 以下の範囲に入っていない)。
.TP
.B ENOSYS
.\"O This
.\"O .BR syslog ()
.\"O system call is not available, because the kernel was compiled with the
.\"O .BR CONFIG_PRINTK
.\"O kernel-configuration option disabled.
カーネルの設定オプション
.BR CONFIG_PRINTK
を無効にしてカーネルがコンパイルされているため、
.BR syslog ()
システムコールが利用できない。
.TP
.B EPERM
.\"O An attempt was made to change console_loglevel or clear the kernel
.\"O message ring buffer by a process without sufficient privilege
.\"O (more precisely: without the
.\"O .B CAP_SYS_ADMIN
.\"O capability).
十分な権限を持たないプロセス (正確には
.B CAP_SYS_ADMIN
ケーパビリティを持たないプロセス) が console_loglevelを変更しようとしたか、
カーネル・メッセージ・リングを消去しようとした。
.TP
.B ERESTARTSYS
.\"O System call was interrupted by a signal - nothing was read.
.\"O (This can be seen only during a trace.)
システム・コールがシグナルによって割り込まれ、何も読み出せなかった。
(トレース中にしか発生することはない)
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O This system call is Linux-specific and should not be used in programs
.\"O intended to be portable.
このシステム・コールは Linux 特有であり、移植を意図したプログラムでは
使用してはいけない。
.\"O .SH NOTES
.SH 注意
.\"O From the very start people noted that it is unfortunate that
.\"O a system call and a library routine of the same name are entirely
.\"O different animals.
.\"O In libc4 and libc5 the number of this call was defined by
.\"O .BR SYS_klog .
.\"O In glibc 2.0 the syscall is baptized
.\"O .BR klogctl ().
かなり初期の頃から、同じ名前を持つシステム・コールと
ライブラリ・ルーチンが全く異なる代物であるのは不幸なことだと
気付かれていた。
libc4 と libc5 ではこのコールの番号は
.B SYS_klog
と定義されていた。
glibc2.0 でこのシステムコールは
.BR klogctl ()
という名前に改められた。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR syslog (3)
