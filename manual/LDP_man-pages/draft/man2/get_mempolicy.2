.\" Copyright 2003,2004 Andi Kleen, SuSE Labs.
.\" and Copyright 2007 Lee Schermerhorn, Hewlett Packard
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" 2006-02-03, mtk, substantial wording changes and other improvements
.\" 2007-08-27, Lee Schermerhorn <Lee.Schermerhorn@hp.com>
.\"     more precise specification of behavior.
.\"
.\" Japanese Version Copyright (c) 2006 Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2006-08-14, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.39
.\" Updated 2008-02-13, Akihiro MOTOKI, LDP v2.77
.\" Updated 2008-08-06, Akihiro MOTOKI, LDP v3.05
.\" Updated 2008-08-21, Akihiro MOTOKI, LDP v3.07
.\" Updated 2008-11-19, Akihiro MOTOKI, LDP v3.13
.\"
.TH GET_MEMPOLICY 2 2008-08-15 Linux "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O get_mempolicy \- Retrieve NUMA memory policy for a process
get_mempolicy \- プロセスの NUMA メモリのポリシーを取得する
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B "#include <numaif.h>"
.sp
.BI "int get_mempolicy(int *" mode ", unsigned long *" nodemask ,
.BI "                  unsigned long " maxnode ", unsigned long " addr ,
.BI "                  unsigned long " flags );
.sp
.\"O Link with \fI\-lnuma\fP.
\fI\-lnuma\fP でリンクする。
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O .BR get_mempolicy ()
.\"O retrieves the NUMA policy of the calling process or of a memory address,
.\"O depending on the setting of
.\"O .IR flags .
.BR get_mempolicy ()
は、呼び出し元プロセスもしくは指定されたメモリアドレスの
NUMA ポリシーを
.I flags
の設定に従って取得する。

.\"O A NUMA machine has different
.\"O memory controllers with different distances to specific CPUs.
.\"O The memory policy defines from which node memory is allocated for
.\"O the process.
NUMA (非対称メモリアクセス) マシンでは、CPU により
メモリコントローラが異なり、距離も異なっている。
メモリポリシーは、どのノードからメモリをそのプロセスに
割り当てるかを定めるものである。

.\"O If
.\"O .I flags
.\"O is specified as 0,
.\"O then information about the calling process's default policy
.\"O (as set by
.\"O .BR set_mempolicy (2))
.\"O is returned.
.I flags
に 0 が指定された場合、
.RB ( set_mempolicy (2)
で設定された)
呼び出し元プロセスのデフォルトポリシーに関する情報を返す。
.\"O The policy returned
.\"O .RI [ mode
.\"O and
.\"O .IR nodemask ]
.\"O may be used to restore the process's policy to its state at
.\"O the time of the call to
.\"O .BR get_mempolicy ()
.\"O using
.\"O .BR set_mempolicy (2).
返されたポリシー
.RI [ mode
と
.IR nodemask ]
を
.BR set_mempolicy (2)
に渡すことで、そのプロセスのポリシーを
.BR get_mempolicy ()
を呼び出した時点の状態に戻すことができる。

.\"O If
.\"O .I flags
.\"O specifies
.\"O .BR MPOL_F_MEMS_ALLOWED
.\"O (available since Linux 2.6.24), the
.\"O .I mode
.\"O argument is ignored and the set of nodes [memories] that the
.\"O process is allowed to specify in subsequent calls to
.\"O .BR mbind (2)
.\"O or
.\"O .BR set_mempolicy (2)
.\"O [in the absence of any
.\"O .IR "mode flags" ]
.\"O is returned in
.\"O .IR nodemask .
.\"O It is not permitted to combine
.\"O .B MPOL_F_MEMS_ALLOWED
.\"O with either
.\"O .B MPOL_F_ADDR
.\"O or
.\"O .BR MPOL_F_NODE .
.I flags
に
.B MPOL_F_MEMS_ALLOWED
(Linux 2.6.24 以降で利用可能) を指定すると、
.I mode
引き数は無視され、
そのプロセスがその後の
.BR mbind (2)
や
.BR set_mempolicy (2)
で
.RI [ "モードフラグ"
が指定されていない場合に ] 指定できるノード (メモリ) の集合が
.I nodemask
に返される。
.B MPOL_F_MEMS_ALLOWED
を、
.B MPOL_F_ADDR
や
.B MPOL_F_NODE
と同時に指定することはできない。

.\"O If
.\"O .I flags
.\"O specifies
.\"O .BR MPOL_F_ADDR ,
.\"O then information is returned about the policy governing the memory
.\"O address given in
.\"O .IR addr .
.\"O This policy may be different from the process's default policy if
.\"O .BR mbind (2)
.\"O or one of the helper functions described in
.\"O .BR numa (3)
.\"O has been used to establish a policy for the memory range containing
.\"O .IR addr .
.I flags
に
.B MPOL_F_ADDR
が指定された場合、
.I addr
で指定されたメモリアドレスに適用されているポリシーに関する情報を返す。
.BR mbind (2)
や
.BR numa (3)
で説明されているヘルパー関数を使って、
.I addr
を含むメモリ領域に対するポリシーが設定されていた場合には、
返されるポリシーはプロセスのデフォルトポリシーと違うことがある。

.\"O If the
.\"O .I mode
.\"O argument is not NULL, then
.\"O .BR get_mempolicy ()
.\"O will store the policy mode and any optional
.\"O .I "mode flags"
.\"O of the requested NUMA policy in the location pointed to by this argument.
.I mode
引き数が NULL でない場合、
.BR get_mempolicy ()
は要求された NUMA ポリシーのモードと追加の
.I "モードフラグ"
を
.I mode
が指す場所に格納する。
.\"O If
.\"O .I nodemask
.\"O is not NULL, then the nodemask associated with the policy will be stored
.\"O in the location pointed to by this argument.
.\"O .I maxnode
.\"O specifies the number of node IDs
.\"O that can be stored into
.\"O .IR nodemask \(emthat
.\"O is, the maximum node ID plus one.
.\"O The value specified by
.\"O .I maxnode
.\"O is always rounded to a multiple of
.\"O .IR "sizeof(unsigned long)" .
.I nodemask
が NULL 以外の場合、そのポリシーに対応するノードマスクを
この引き数が指す場所に格納する。
.I maxnode
には
.I nodemask
に格納できるノード ID の数、つまり最大ノード ID に 1 を足した値を指定する。
.I maxnode
で指定された値は常に
.I sizeof(unsigned long)
の倍数に切り上げられる。

.\"O If
.\"O .I flags
.\"O specifies both
.\"O .B MPOL_F_NODE
.\"O and
.\"O .BR MPOL_F_ADDR ,
.\"O .BR get_mempolicy ()
.\"O will return the node ID of the node on which the address
.\"O .I addr
.\"O is allocated into the location pointed to by
.\"O .IR mode .
.\"O If no page has yet been allocated for the specified address,
.\"O .BR get_mempolicy ()
.\"O will allocate a page as if the process had performed a read
.\"O [load] access to that address, and return the ID of the node
.\"O where that page was allocated.
.I flags
で
.B MPOL_F_NODE
と
.B MPOL_F_ADDR
の両方が指定された場合、
.BR get_mempolicy ()
はアドレス
.I addr
が割り当てられているノードのノード ID を
.I mode
が指す場所に入れて返す。
指定されたアドレスにどのページもまだ割り当てられていない場合、
.BR get_mempolicy ()
は、あたかもそのプロセスがそのアドレスに対して読み込みアクセスを
実行したかのようにページの割り当てを行い、ページが割り当てられた
ノードの ID を返す。

.\"O If
.\"O .I flags
.\"O specifies
.\"O .BR MPOL_F_NODE ,
.\"O but not
.\"O .BR MPOL_F_ADDR ,
.\"O and the process's current policy is
.\"O .BR MPOL_INTERLEAVE ,
.\"O then
.\"O .BR get_mempolicy ()
.\"O will return in the location pointed to by a non-NULL
.\"O .I mode
.\"O argument,
.\"O the node ID of the next node that will be used for
.\"O interleaving of internal kernel pages allocated on behalf of the process.
.I flags
で
.B MPOL_F_NODE
は指定されたが、
.B MPOL_F_ADDR
は指定されていない場合で、かつ
そのプロセスの現在のポリシーが
.B MPOL_INTERLEAVE
の場合、
.BR get_mempolicy ()
は、そのプロセスに対して割り当てられたカーネルの内部ページで
次にインターリーブ用に使用されるノードのノード ID を、
NULL でない
.I mode
引き数が指す場所に入れて返す。
.\" Note:  code returns next interleave node via 'mode' argument -Lee Schermerhorn
.\"O These allocations include pages for memory mapped files in
.\"O process memory ranges mapped using the
.\"O .BR mmap (2)
.\"O call with the
.\"O .B MAP_PRIVATE
.\"O flag for read accesses, and in memory ranges mapped with the
.\"O .B MAP_SHARED
.\"O flag for all accesses.
読み込みアクセス用として
.B MAP_PRIVATE
フラグ付きで
.BR mmap (2)
したプロセスメモリ領域や、
任意のアクセス用として
.B MAP_SHARED
フラグ付きで
.BR mmap (2)
したメモリ領域の、メモリマップされたファイルに対するページも
上記のプロセスに対して割り当てられたページに含まれる。

.\"O Other flag values are reserved.
他のフラグは予約されている。

.\"O For an overview of the possible policies see
.\"O .BR set_mempolicy (2).
設定可能なポリシーの概要については
.BR set_mempolicy (2)
を参照。
.\"O .SH RETURN VALUE
.SH 返り値
.\"O On success,
.\"O .BR get_mempolicy ()
.\"O returns 0;
.\"O on error, \-1 is returned and
.\"O .I errno
.\"O is set to indicate the error.
成功すると、
.BR get_mempolicy ()
は 0 を返す。エラーの場合、\-1 を返し、
.I errno
にエラーを示す値を設定する。
.\"O .SH ERRORS
.SH エラー
.TP
.B EFAULT
.\"O Part of all of the memory range specified by
.\"O .I nodemask
.\"O and
.\"O .I maxnode
.\"O points outside your accessible address space.
.\"motoki: Part of all of the memory は Part or all .. の間違い？
.I nodemask
と
.I maxnode
で指定されたメモリ領域の一部または全部が、
呼び出し元がアクセス可能なアドレス空間外を指している。
.TP
.B EINVAL
.\"O The value specified by
.\"O .I maxnode
.\"O is less than the number of node IDs supported by the system.
.I maxnode
で指定された値がシステムがサポートするノード ID の数よりも少ない。
.\"O Or
.\"O .I flags
.\"O specified values other than
.\"O .B MPOL_F_NODE
.\"O or
.\"O .BR MPOL_F_ADDR ;
または、
.I flags
に
.B MPOL_F_NODE
でも
.B MPOL_F_ADDR
でもない値が指定された。
.\"O or
.\"O .I flags
.\"O specified
.\"O .B MPOL_F_ADDR
.\"O and
.\"O .I addr
.\"O is NULL,
または、
.I flags
に
.B MPOL_F_ADDR
が指定されており、
.I addr
が NULL である。
.\"O or
.\"O .I flags
.\"O did not specify
.\"O .B MPOL_F_ADDR
.\"O and
.\"O .I addr
.\"O is not NULL.
または、
.I flags
に
.B MPOL_F_ADDR
がされておらず、
.I addr
が NULL でない。
.\"O Or,
.\"O .I flags
.\"O specified
.\"O .B MPOL_F_NODE
.\"O but not
.\"O .B MPOL_F_ADDR
.\"O and the current process policy is not
.\"O .BR MPOL_INTERLEAVE .
または、
.I flags
に
.B MPOL_F_NODE
が指定されており、
.B MPOL_F_ADDR
が指定されておらず、
プロセスの現在のポリシーが
.B MPOL_INTERLEAVE
でない。
.\"O Or,
.\"O .I flags
.\"O specified
.\"O .B MPOL_F_MEMS_ALLOWED
.\"O with either
.\"O .B MPOL_F_ADDR
.\"O or
.\"O .BR MPOL_F_NODE .
または、
.I flags
に
.B MPOL_F_MEMS_ALLOWED
が指定されており、さらに
.B MPOL_F_ADDR
か
.B MPOL_F_NODE
のいずれかが指定されている。
.\"O (And there are other
.\"O .B EINVAL
.\"O cases.)
(他にも
.B EINVAL
となる場合がある。)
.\"O .SH VERSIONS
.SH バージョン
.\"O The
.\"O .BR get_mempolicy ()
.\"O system call was added to the Linux kernel in version 2.6.7.
.BR get_mempolicy ()
システムコールはバージョン 2.6.7 で Linux カーネルに追加された。
.\"O .SH CONFORMING TO
.SH 準拠
.\"O This system call is Linux-specific.
このシステムコールは Linux 固有である。
.\"O .SH NOTES
.SH 注意
.\"O For information on library support, see
.\"O .BR numa (7).
ライブラリによるサポートについては
.BR numa (7)
を参照。
.\"O .SH SEE ALSO
.SH 関連項目
.BR getcpu (2),
.BR mbind (2),
.BR mmap (2),
.BR set_mempolicy (2),
.BR numa (3),
.BR numa (7),
.BR numactl (8)
