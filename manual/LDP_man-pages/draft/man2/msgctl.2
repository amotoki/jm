.\" Copyright 1993 Giorgio Ciucci (giorgio@crcc.it)
.\" and Copyright 2004, 2005 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Sun Feb 18 01:59:29 2001 by Andries E. Brouwer <aeb@cwi.nl>
.\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on CAP_IPC_OWNER requirement
.\" Modified, 17 Jun 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on CAP_SYS_ADMIN requirement for IPC_SET and IPC_RMID
.\" Modified, 11 Nov 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Language and formatting clean-ups
.\"	Added msqid_ds and ipc_perm structure definitions
.\" 2005-08-02, mtk: Added IPC_INFO, MSG_INFO, MSG_STAT descriptions
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated 1997-02-23, HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated & Modified 2001-06-04, Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified 2002-07-06, Yuichi SATO
.\" Updated & Modified 2004-12-31, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified 2005-10-10, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.\"WORD:	message			メッセージ
.\"WORD:	queue			キュー
.\"WORD:	member			メンバー
.\"WORD:	structure		構造体
.\"WORD:	effective user ID	実効ユーザ ID
.\"WORD:	creator			作成者
.\"WORD:	owner			所有者
.\"WORD:	feature test macro	機能検査マクロ
.\"
.TH MSGCTL 2 2008-08-06 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O msgctl \- message control operations
msgctl \- メッセージ制御操作
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B #include <sys/types.h>
.B #include <sys/ipc.h>
.B #include <sys/msg.h>

.BI "int msgctl(int " msqid ", int " cmd ", struct msqid_ds *" buf );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O .BR msgctl ()
.\"O performs the control operation specified by
.\"O .I cmd
.\"O on the message queue with identifier
.\"O .IR msqid .
.BR msgctl ()
はメッセージ・キュー識別子
.I msqid
で指定されたメッセージ・キュー (message queue) に対して
.I cmd
で指定された制御操作を行なう。
.PP
.\"O The
.\"O .I msqid_ds
.\"O data structure is defined in \fI<sys/msg.h>\fP as follows:
.I msqid_ds
データ構造体は \fI<sys/msg.h>\fP で以下のように定義されている:
.nf
.in +4n

struct msqid_ds {
.\"O     struct ipc_perm msg_perm;     /* Ownership and permissions */
.\"O     time_t          msg_stime;    /* Time of last msgsnd(2) */
.\"O     time_t          msg_rtime;    /* Time of last msgrcv(2) */
.\"O     time_t          msg_ctime;    /* Time of last change */
.\"O     unsigned long   __msg_cbytes; /* Current number of bytes in
.\"O                                      queue (nonstandard) */
.\"O     msgqnum_t       msg_qnum;     /* Current number of messages
.\"O                                      in queue */
.\"O     msglen_t        msg_qbytes;   /* Maximum number of bytes
.\"O                                      allowed in queue */
.\"O     pid_t           msg_lspid;    /* PID of last msgsnd(2) */
.\"O     pid_t           msg_lrpid;    /* PID of last msgrcv(2) */
    struct ipc_perm msg_perm;     /* 所有権と許可 */
    time_t          msg_stime;    /* 最後の msgsnd(2) の時刻 */
    time_t          msg_rtime;    /* 最後の msgrcv(2) の時刻 */
    time_t          msg_ctime;    /* 最後に変更が行われた時刻 */
    unsigned long   __msg_cbytes; /* キューにある現在のバイト数
                                     (非標準) */
    msgqnum_t       msg_qnum;     /* キューにある現在入っている
                                     メッセージの数 */
    msglen_t        msg_qbytes;   /* キューに許可されている
                                     最大バイト数 */
    pid_t           msg_lspid;    /* 最後の msgsnd(2) の PID */
    pid_t           msg_lrpid;    /* 最後の msgrcv(2) の PID */
};
.in
.fi
.PP
.\"O The
.\"O .I ipc_perm
.\"O structure is defined in \fI<sys/ipc.h>\fP as follows
.\"O (the highlighted fields are settable using
.\"O .BR IPC_SET ):
.I ipc_perm
構造体は \fI<sys/ipc.h>\fP で以下のように定義されている
(強調されたフィールドは
.B IPC_SET
を使って設定可能である):
.PP
.nf
.in +4n
struct ipc_perm {
.\"O     key_t          __key;       /* Key supplied to msgget(2) */
.\"O     uid_t          \fBuid\fP;         /* Effective UID of owner */
.\"O     gid_t          \fBgid\fP;         /* Effective GID of owner */
.\"O     uid_t          cuid;        /* Effective UID of creator */
.\"O     gid_t          cgid;        /* Effective GID of creator */
.\"O     unsigned short \fBmode\fP;        /* Permissions */
.\"O     unsigned short __seq;       /* Sequence number */
    key_t          __key;       /* msgget(2) に与えるキー */
    uid_t          \fBuid\fP;         /* 所有者の実効 UID */
    gid_t          \fBgid\fP;         /* 所有者の実効 GID */
    uid_t          cuid;        /* 作成者の実効 UID */
    gid_t          cgid;        /* 作成者の実効 GID */
    unsigned short \fBmode\fP;        /* 許可 */
    unsigned short __seq;       /* シーケンス番号 */
};
.in
.fi
.PP
.\"O Valid values for
.\"O .I cmd
.\"O are:
.I cmd
として有効な値は:
.TP
.B IPC_STAT
.\"O Copy information from the kernel data structure associated with
.\"O .I msqid
.\"O into the
.\"O .I msqid_ds
.\"O structure pointed to by
.\"O .IR buf .
.\"O The caller must have read permission on the message queue.
.I msqid
に関連づけられたメッセージ・キュー・データ構造体から、ポインタ
.I buf
が指し示す
.I msqid_ds
構造体に情報をコピーする。
呼び出し側はメッセージ・キューに対する読み込み許可を持っていなければならない。
.TP
.B IPC_SET
.\"O Write the values of some members of the
.\"O .I msqid_ds
.\"O structure pointed to by
.\"O .I buf
.\"O to the kernel data structure associated with this message queue,
.\"O updating also its
.\"O .I msg_ctime
.\"O member.
ポインタ
.I buf
が指し示す
.I msqid_ds
構造体のメンバーの値を、メッセージ・キューに関連づけられた
カーネル・データ構造体に書き込み、
.I msg_ctime
メンバーも更新する。
.\"O The following members of the structure are updated:
構造体のメンバーのうち、更新されるものを以下に示す:
.\"O .IR msg_qbytes ,
.\"O .IR msg_perm.uid ,
.\"O .IR msg_perm.gid ,
.\"O and (the least significant 9 bits of)
.\"O .IR msg_perm.mode .
.IR msg_qbytes ,
.IR msg_perm.uid ,
.IR msg_perm.gid ,
.I msg_perm.mode
(の下位 9 ビット)。
.\"O The effective UID of the calling process must match the owner
.\"O .RI ( msg_perm.uid )
.\"O or creator
.\"O .RI ( msg_perm.cuid )
.\"O of the message queue, or the caller must be privileged.
呼び出したプロセスの実効ユーザ ID が、メッセージ・キューの所有者
.RI ( msg_perm.uid )
または作成者
.RI ( msg_perm.cuid )
と一致するか、呼び出し元が特権を持たなければならない。
.\"O Appropriate privilege (Linux: the
.\"O .B CAP_IPC_RESOURCE
.\"O capability) is required to raise the
.\"O .I msg_qbytes
.\"O value beyond the system parameter
.\"O .BR MSGMNB .
.I msg_qbytes
をシステム・パラメータの
.B MSGMNB
を超えて設定するには、適切な特権 (Linux では
.B CAP_IPC_RESOURCE
ケーパビリティ (capability)) が必要である。
.TP
.B IPC_RMID
.\"O Immediately remove the message queue,
.\"O awakening all waiting reader and writer processes (with an error
.\"O return and
.\"O .I errno
.\"O set to
.\"O .BR EIDRM ).
メッセージ・キューをただちに削除する。
同時にその構造体の読み書きの待ち状態にあったプロセスに通知する
(エラーが返り、
.I errno
が
.B EIDRM
に設定される)。
.\"O The calling process must have appropriate privileges
.\"O or its effective user ID must be either that of the creator or owner
.\"O of the message queue.
呼び出したプロセスが適切な特権を持っているか、
呼び出したプロセスの実効ユーザ ID がメッセージ・キューの作成者か
所有者の実効ユーザ ID でなければならない。
.TP
.\"O .BR IPC_INFO " (Linux-specific)"
.BR IPC_INFO " (Linux 固有)"
.\"O Returns information about system-wide message queue limits and
.\"O parameters in the structure pointed to by
.\"O .IR buf .
システム全体でのメッセージ・キューの制限とパラメータに関する情報を、
.I buf
が指す構造体に入れて返す。
.\"O This structure is of type
.\"O .I msginfo
.\"O (thus, a cast is required),
.\"O defined in
.\"O .I <sys/msg.h>
.\"O if the
.\"O .B _GNU_SOURCE
.\"O feature test macro is defined:
この構造体は
.I msginfo
型である (そのためキャストが必要である)。
.I msginfo
は
.B _GNU_SOURCE
機能検査マクロが定義された場合に
.I <sys/msg.h>
で以下のように定義される:
.nf
.in +4n

struct msginfo {
.\"O     int msgpool; /* Size in kibibytes of buffer pool
.\"O                     used to hold message data;
.\"O                     unused within kernel */
.\"O     int msgmap;  /* Maximum number of entries in message
.\"O                     map; unused within kernel */
.\"O     int msgmax;  /* Maximum number of bytes that can be
.\"O                     written in a single message */
.\"O     int msgmnb;  /* Maximum number of bytes that can be
.\"O                     written to queue; used to initialize
.\"O                     msg_qbytes during queue creation
.\"O                     (msgget(2)) */
.\"O     int msgmni;  /* Maximum number of message queues */
.\"O     int msgssz;  /* Message segment size;
.\"O                     unused within kernel */
.\"O     int msgtql;  /* Maximum number of messages on all queues
.\"O                     in system; unused within kernel */
.\"O     unsigned short int msgseg;
.\"O                  /* Maximum number of segments;
.\"O                     unused within kernel */
    int msgpool; /* メッセージ・データの保持に使用される
                    バッファ・プールの大きさ (1024 バイト単位);
                    カーネル内では未使用 */
    int msgmap;  /* メッセージ・マップの最大エントリ数;
                    カーネル内では未使用 */
    int msgmax;  /* 一つのメッセージに書き込み可能な
                    最大バイト数 */
    int msgmnb;  /* 一つのキューに書き込み可能な最大バイト数;
                    (msgget(2) での) キュー作成中の msg_qbytes
                    の初期化に使用される */
    int msgmni;  /* メッセージ・キューの数の最大値 */
    int msgssz;  /* メッセージ・セグメントのサイズ;
                    カーネル内では未使用 */
    int msgtql;  /* システム上の全キューの最大メッセージ数;
                    カーネル内では未使用 */
    unsigned short int msgseg;
                 /* 最大セグメント数; カーネル内では未使用 */
};

.in
.fi
.\"O The
.\"O .IR msgmni ,
.\"O .IR msgmax ,
.\"O and
.\"O .I msgmnb
.\"O settings can be changed via
.\"O .I /proc
.\"O files of the same name; see
.\"O .BR proc (5)
.\"O for details.
設定
.I msgmni ,
.I msgmax ,
.I msgmnb
は
.I /proc
にある同じ名前のファイル経由で変更可能である。
詳しくは
.BR proc (5)
を参照。
.TP
.\"O .BR MSG_INFO " (Linux-specific)"
.BR MSG_INFO " (Linux 固有)"
.\"O Returns a
.\"O .I msginfo
.\"O structure containing the same information as for
.\"O .BR IPC_INFO ,
.\"O except that the following fields are returned with information
.\"O about system resources consumed by message queues: the
.\"O .I msgpool
.\"O field returns the number of message queues that currently exist
.\"O on the system; the
.\"O .I msgmap
.\"O field returns the total number of messages in all queues
.\"O on the system; and the
.\"O .I msgtql
.\"O field returns the total number of bytes in all messages
.\"O in all queues on the system.
.B IPC_INFO
のときと同じ情報を格納した
.I msginfo
構造体を返す。
但し、以下のフィールドにはメッセージ・キューが
消費しているシステム資源に関する情報が格納される点が異なる。
.I msgpool
フィールドは現在システム上に存在するメッセージ・キューの数を返す。
.I msgmap
フィールドはシステム上の全てのキューに入っているメッセージ総数を返す。
.I msgtql
フィールドはシステム上の全てのキューに入っている全メッセージの
総バイト数を返す。
.TP
.\"O .BR MSG_STAT " (Linux-specific)"
.BR MSG_STAT " (Linux 固有)"
.\"O Returns a
.\"O .I msqid_ds
.\"O structure as for
.\"O .BR IPC_STAT .
.B IPC_STAT
と同じく
.I msqid_ds
構造体を返す。
.\"O However, the
.\"O .I msqid
.\"O argument is not a queue identifier, but instead an index into
.\"O the kernel's internal array that maintains information about
.\"O all message queues on the system.
但し、
.I msqid
引き数は、キュー識別子ではなく、システム上の全てのメッセージ・キュー
に関する情報を管理するカーネルの内部配列へのインデックスである。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O On success,
.\"O .BR IPC_STAT ,
.\"O .BR IPC_SET ,
.\"O and
.\"O .B IPC_RMID
.\"O return 0.
成功すると、
.BR IPC_STAT ,
.BR IPC_SET ,
.B IPC_RMID
は 0 を返す。
.\"O A successful
.\"O .B IPC_INFO
.\"O or
.\"O .B MSG_INFO
.\"O operation returns the index of the highest used entry in the
.\"O kernel's internal array recording information about all
.\"O message queues.
.B IPC_INFO
と
.B MSG_INFO
操作は、成功すると、全てのメッセージ・キューに関する情報を
管理しているカーネルの内部配列の使用中エントリのインデックスの
うち最大値を返す
.\"O (This information can be used with repeated
.\"O .B MSG_STAT
.\"O operations to obtain information about all queues on the system.)
(この情報は、システムの全てのメッセージ・キューに関する情報を
取得するために、
.B MSG_STAT
操作を繰り返し実行する際に使用できる)。
.\"O A successful
.\"O .B MSG_STAT
.\"O operation returns the identifier of the queue whose index was given in
.\"O .IR msqid .
.B MSG_STAT
操作は、成功すると、
.I msqid
で指定されたインデックスを持つメッセージ・キューの識別子を返す。

.\"O On error, \-1 is returned with
.\"O .I errno
.\"O indicating the error.
エラーの場合は \-1 を返し、
.I errno
を適切に設定する。
.\"O .SH ERRORS
.SH エラー
.\"O On failure,
.\"O .I errno
.\"O is set to one of the following:
失敗した場合、
.I errno
は以下の値の中のどれか一つに設定される:
.TP
.B EACCES
.\"O The argument
.\"O .I cmd
.\"O is equal to
.\"O .B IPC_STAT
.\"O or
.\"O .BR MSG_STAT ,
.\"O but the calling process does not have read permission on the message queue
.\"O .IR msqid ,
.\"O and does not have the
.\"O .B CAP_IPC_OWNER
.\"O capability.
引き数
.I cmd
が
.B IPC_STAT
または
.B MSG_STAT
に等しいが、呼び出したプロセスがメッセージ・キュー
.I msqid
に対する読み込み許可を持っておらず、かつ
.B CAP_IPC_OWNER
ケーパビリティを持っていない。
.TP
.B EFAULT
.\"O The argument
.\"O .I cmd
.\"O has the value
.\"O .B IPC_SET
.\"O or
.\"O .BR IPC_STAT ,
.\"O but the address pointed to by
.\"O .I buf
.\"O isn't accessible.
引き数
.I cmd
が
.B IPC_SET
か
.B IPC_STAT
で、ポインタ
.I buf
で指されているアドレスがアクセス可能でない。
.TP
.B EIDRM
.\"O The message queue was removed.
メッセージ・キューが削除された。
.TP
.B EINVAL
.\"O Invalid value for
.\"O .I cmd
.\"O or
.\"O .IR msqid .
.\"O Or: for a
.\"O .B MSG_STAT
.\"O operation, the index value specified in
.\"O .I msqid
.\"O referred to an array slot that is currently unused.
.I cmd
または
.I msqid
に不正な値が設定された。
もしくは、
.B MSG_STAT
操作の場合に、
.I msqid
で指定されたインデックス値が現在未使用の配列のスロットを参照いていた。
.TP
.B EPERM
.\"O The argument
.\"O .I cmd
.\"O has the value
.\"O .B IPC_SET
.\"O or
.\"O .BR IPC_RMID ,
.\"O but the effective user ID of the calling process is not the creator
.\"O (as found in
.\"O .IR msg_perm.cuid )
.\"O or the owner
.\"O (as found in
.\"O .IR msg_perm.uid )
.\"O of the message queue,
.\"O and the process is not privileged (Linux: it does not have the
.\"O .B CAP_SYS_ADMIN
.\"O capability).
引き数
.I cmd
が
.B IPC_SET
か
.B IPC_RMID
であるが、呼び出したプロセスの実効ユーザ ID がメッセージキューの
.RI ( msg_perm.cuid
として見つかる) 作成者
と
.RI ( msg_perm.uid
として見つかる) 所有者のいずれでもなく、
かつ呼び出したプロセスに特権 (Linux では
.B CAP_SYS_ADMIN
ケーパビリティ) がない。
.\"O .SH "CONFORMING TO"
.SH 準拠
SVr4, POSIX.1-2001.
.\"O .\" SVID does not document the EIDRM error condition.
.\" SVID には EIDRM エラーについての記述はない。
.\"O .SH NOTES
.SH 注意
.\"O The
.\"O .BR IPC_INFO ,
.\"O .B MSG_STAT
.\"O and
.\"O .B MSG_INFO
.\"O operations are used by the
.\"O .BR ipcs (1)
.\"O program to provide information on allocated resources.
.\"O In the future these may modified or moved to a /proc file system
.\"O interface.
.BR IPC_INFO ,
.BR MSG_STAT ,
.B MSG_INFO
操作は、
.BR ipcs (1)
プログラムで割り当て済の資源に関する情報を提供するために
使用されている。将来、これらの操作は変更されたり、
/proc ファイルシステムのインタフェースに移動されるかもしれない。


.\"O Various fields in the \fIstruct msqid_ds\fP were
.\"O typed as
.\"O .I short
.\"O under Linux 2.2
.\"O and have become
.\"O .I long
.\"O under Linux 2.4.
.\"O To take advantage of this,
.\"O a recompilation under glibc-2.1.91 or later should suffice.
.\"O (The kernel distinguishes old and new calls by an
.\"O .B IPC_64
.\"O flag in
.\"O .IR cmd .)
\fIstruct msqid_ds\fP 内の多くのフィールドは、
Linux 2.2 では
.I short
だったが、Linux 2.4 では
.I long
になった。
この利点を生かすには、glibc-2.1.91 以降の環境下で
再コンパイルすれば十分である。
(カーネルは新しい形式の呼び出しと古い形式の呼び出しを
.I cmd
内の
.B IPC_64
フラグで区別する。)
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR msgget (2),
.BR msgrcv (2),
.BR msgsnd (2),
.BR capabilities (7),
.BR mq_overview (7),
.BR svipc (7)
