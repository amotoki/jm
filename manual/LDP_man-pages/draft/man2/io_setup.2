.\" Copyright (C) 2003 Free Software Foundation, Inc.
.\" This file is distributed according to the GNU General Public License.
.\" See the file COPYING in the top level source directory for details.
.\"
.\" Japanese Version Copyright (c) 2003 Akihiro MOTOKI, all rights reserved.
.\" Translated Mon Mar  8 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.\" .de Sh \" Subsection
.\" .br
.\" .if t .Sp
.\" .ne 5
.\" .PP
.\" \fB\\$1\fP
.\" .PP
.\" ..
.\" .de Sp \" Vertical space (when we can't use .PP)
.\" .if t .sp .5v
.\" .if n .sp
.\" ..
.\" .de Ip \" List item
.\" .br
.\" .ie \\n(.$>=3 .ne \\$3
.\" .el .ne 3
.\" .IP "\\$1" \\$2
.\" ..
.TH IO_SETUP 2 2003-06-18 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.\"O io_setup \- create an asynchronous I/O context
.SH 名前
io_setup \- 非同期 I/O コンテキストを作成する
.\"O .SH "SYNOPSIS"
.SH 書式
.nf
.\" .ad l
.\" .hy 0
.B #include <libaio.h>
.\" #include <linux/aio.h>
.sp
.\" .HP 15
.BI "int io_setup(unsigned " nr_events ", aio_context_t *" ctxp );
.\" .ad
.\" .hy
.sp
.\"O Link with \fI\-laio\fP.
\fI\-laio\fP とリンクする。
.fi
.\"O .SH "DESCRIPTION"
.SH 説明
.PP
.\"O .BR io_setup ()
.\"O creates an asynchronous I/O context capable of receiving
.\"O at least \fInr_events\fP.
.BR io_setup ()
は、少なくとも \fInr_events\fP 個のイベントを受信可能な
非同期 I/O (AIO) コンテキストの作成を行う。
.\"O \fIctxp\fP must not point to an AIO context that already exists, and must
.\"O be initialized to 0 prior to the call.
\fIctxp\fP は、すでに存在する AIO コンテキストを指していてはならず、
.BR io_setup ()
の呼び出しの前に 0 に初期化されていなければならない。
.\"O On successful creation of the AIO context, \fI*ctxp\fP is filled in
.\"O with the resulting handle.
AIO コンテキストの作成に成功すると、\fI*ctxp\fP に作成された
AIO コンテキストへのポインタがセットされる。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O On success,
.\"O .BR io_setup ()
.\"O returns 0.
.\"O For the failure return, see NOTES.
成功した場合、
.BR io_setup ()
は 0 を返す。
失敗時の返り値については、「注意」の節を参照すること。
.\"O .SH "ERRORS"
.SH エラー
.TP
.B EAGAIN
.\"O The specified \fInr_events\fP exceeds the user's limit of available events.
指定された \fInr_events\fP がユーザが使用できるイベント数の上限を越えている。
.TP
.B EFAULT
.\"O An invalid pointer is passed for \fIctxp\fP.
\fIctxp\fP に無効なポインタが指定されている。
.TP
.B EINVAL
.\"O \fIctxp\fP is not initialized, or the specified \fInr_events\fP
.\"O exceeds internal limits.
.\"O \fInr_events\fP should be greater than 0.
\fIctxp\fP が初期化されていないか、指定された \fInr_events\fP が
内部の制限値を越えている。また、 \fInr_events\fP は 0 より大きい値に
設定すべきである。
.TP
.B ENOMEM
.\"O Insufficient kernel resources are available.
必要なカーネル・リソースを得られない。
.TP
.B ENOSYS
.\"O .BR io_setup ()
.\"O is not implemented on this architecture.
.BR io_setup ()
がこのアーキテクチャでは実装されていない。
.\"O .SH "VERSIONS"
.SH バージョン
.PP
.\"O The asynchronous I/O system calls first appeared in Linux 2.5, August 2002.
非同期 I/O システム・コールは 2002年8月に Linux 2.5 で初めて登場した。
.\"O .SH "CONFORMING TO"
.SH 準拠
.PP
.\"O .BR io_setup ()
.\"O is Linux-specific and should not be used in programs
.\"O that are intended to be portable.
.BR io_setup ()
は Linux 固有であり、移植を想定したプログラムで
使用すべきではない。
.\"O .SH NOTES
.SH 注意
.\"O Glibc does not provide a wrapper function for this system call.
glibc はこのシステムコール用のラッパー関数を提供していない。

.\"O The wrapper provided in
.\"O .I libaio
.\"O for
.\"O .BR io_setup ()
.\"O does not follow the usual C library conventions for indicating error:
.\"O on error it returns a negated error number
.\"O (the negative of one of the values listed in ERRORS).
.\"O If the system call is invoked via
.\"O .BR syscall (2),
.\"O then the return value follows the usual conventions for
.\"O indicating an error: \-1, with
.\"O .I errno
.\"O set to a (positive) value that indicates the error.
.I libaio
で
.BR io_setup ()
用に提供されているラッパー関数は、エラーの通知が通常の C ライブラリの
慣習にしたがっておらず、エラーの場合には負のエラー番号
(エラーの節に列挙されている値の一つを負にしたもの) が返り値となる。
.BR syscall (2)
経由でシステムコールを起動すると、返り値は通常のエラー通知の慣習に
したがってものとなり、エラーの場合には \-1 が返り、
.I errno
にエラーを示す (正の) 値が設定される。
.\"O .SH "SEE ALSO"
.SH 関連項目
.PP
.BR io_cancel (2),
.BR io_destroy (2),
.BR io_getevents (2),
.BR io_submit (2),
.BR aio (7)
.\"O .\" .SH "NOTES"
.\" .SH 注
.\" .PP
.\"O .\" The asynchronous I/O system calls were written by Benjamin LaHaise.
.\" 非同期 I/O システム・コールは Benjamin LaHaise が書いた。
.\"O .\" .SH AUTHOR
.\" .SH 著者
.\" Kent Yoder.
