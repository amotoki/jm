.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt <drew@cs.colorado.edu>, March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified 1993-07-24 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1996-11-04 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2001-06-04 by aeb
.\" Modified 2004-05-27 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Japanese Version Copyright (c) 1997 SUTO, Mitsuaki
.\"         all rights reserved.
.\" Translated 1997-06-26, SUTO, Mitsuaki <suto@av.crl.sony.co.jp>
.\" Updated 2001-06-25, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2005-09-03, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2005-10-07, Akihiro MOTOKI
.\"
.TH NICE 2 2007-07-26 "Linux" "Linux Programmer's Manual"
.SH 名前
nice \- プロセスの優先度を変更する
.SH 書式
.B #include <unistd.h>
.sp
.BI "int nice(int " inc );
.sp
.in -4n
.\"O Feature Test Macro Requirements for glibc (see
.\"O .BR feature_test_macros (7)):
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR nice ():
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE
.\"O .SH DESCRIPTION
.SH 説明
.\"O .BR nice ()
.\"O adds
.\"O .I inc
.\"O to the nice value for the calling process.
.\"O (A higher nice value means a low priority.)
.\"O Only the super\%user may specify a negative increment,
.\"O or priority increase.
.\"O The range for nice values is described in
.\"O .BR getpriority (2).
.BR nice ()
は
.I inc
の値を
.B nice
を呼んだプロセスの nice 値に加える
(nice 値が大きい数値ほど低い優先度を表す)。
負の数を指定する、つまり、以前よりも優先度を上げるという指定ができるのは
スーパーユーザーだけである。
nice 値の範囲については
.BR getpriority (2)
で説明されている。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O On success, the new nice value is returned (but see NOTES below).
.\"O On error, \-1 is returned, and
.\"O .I errno
.\"O is set appropriately.
成功した場合、新しい nice 値が返る (但し、下記の「注意」を参照)。
失敗した場合 \-1 が返り、
.I errno
がエラーの内容に従って設定される。
.\"O .SH ERRORS
.SH エラー
.TP
.B EPERM
.\"O A non-super user attempts to do a priority increase
.\"O by supplying a negative
スーパーユーザー以外が
.I inc
に負の数値を指定して優先度を上げようとした。
.\"O The calling process attempted to increase its priority by
.\"O supplying a negative
.\"O .I inc
.\"O but has insufficient privileges.
.\"O Under Linux the
.\"O .B CAP_SYS_NICE
.\"O capability is required.
.\"O (But see the discussion of the
.\"O .B RLIMIT_NICE
.\"O resource limit in
.\"O .BR setrlimit (2).)
呼び出し元のプロセスが
.I inc
に負の数値を指定して優先度を上げようとしたが、
十分な権限を持っていなかった。
Linux では
.B CAP_SYS_NICE
ケーパビリティが必要である。
.RB ( setrlimit (2)
のリソース上限
.B RLIMIT_NICE
に関する議論も参照のこと)。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O SVr4, 4.3BSD, POSIX.1-2001.
.\"O However, the Linux and (g)libc
.\"O (earlier than glibc 2.2.4) return value is nonstandard, see below.
.\"O SVr4 documents an additional
.\"O .B EINVAL
.\"O error code.
SVr4, 4.3BSD, POSIX.1-2001.
しかし、Linux と (2.2.4より古い) (g)libc では返り値は標準と異なる。
詳細は以下を参照のこと。
SVr4 には他に
.B EINVAL
エラーコードについての記述がある。
.\"O .SH NOTES
.SH 注意
.\"O SUSv2 and POSIX.1-2001 specify that
.\"O .BR nice ()
.\"O should return the new nice value.
.\"O However, the Linux syscall and the
.\"O .BR nice ()
.\"O library function provided in older versions of (g)libc
.\"O (earlier than glibc 2.2.4) return 0 on success.
.\"O The new nice value can be found using
.\"O .BR getpriority (2).
SUSv2 と POSIX 1003.1-2003 では、
.BR nice ()
は新しい nice 値を返すと規定されている。
一方、Linux システムコールと (2.2.4 より古い) (g)libc ライブラリ関数は
成功時に 0 を返す。新しい nice 値は
.BR getpriority (2)
を使って取得できる。

.\"O Since glibc 2.2.4,
.\"O .BR nice ()
.\"O is implemented as a library function that calls
.\"O .BR getpriority (2)
.\"O to obtain the new nice value to be returned to the caller.
.\"O With this implementation,
.\"O a successful call can legitimately return \-1.
glibc 2.2.4 以降では、
.BR nice ()
は
.BR getpriority (2)
を呼び出すライブラリ関数として実装されており、
呼び出し元に返す新しい nice 値を
.BR getpriority (2)
を呼び出して取得するようになっている。
この実装では、正常な動作でも \-1 が返される可能性がある。
.\"O To reliably detect an error, set
.\"O .I errno
.\"O to 0 before the call, and check its value when
.\"O .BR nice ()
.\"O returns \-1.
確実にエラーを検出するためには、
呼び出しの前に
.I errno
に 0 を設定し、
.BR nice ()
が \-1 を返したときに errno をチェックすると良い。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR nice (1),
.BR renice (1),
.BR fork (2),
.BR getpriority (2),
.BR setpriority (2),
.BR capabilities (7)
