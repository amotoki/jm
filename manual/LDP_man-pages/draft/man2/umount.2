.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 1993 Rickard E. Faith <faith@cs.unc.edu>
.\" and Copyright (C) 1994 Andries E. Brouwer <aeb@cwi.nl>
.\" and Copyright (C) 2002, 2005 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" 2008-10-06, mtk: Created this as a new page by splitting
.\"     umount/umount2 material out of mount.2
.\"
.\" Japanese Version Copyright (c) 2008  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2008-11-20, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.13
.\" 
.TH UMOUNT 2 2009-09-03 "Linux" "Linux Programmer's Manual"
.\"O .SH NAME
.SH 名前
.\"O umount, umount2 \- unmount file system
umount, umount2 \- ファイルシステムをアンマウントする
.\"O .SH SYNOPSIS
.SH 書式
.nf
.B "#include <sys/mount.h>"
.sp
.BI "int umount(const char *" target );
.sp
.BI "int umount2(const char *" target ", int " flags );
.fi
.\"O .SH DESCRIPTION
.SH 説明
.\"O .BR umount ()
.\"O and
.\"O .BR umount2 ()
.\"O remove the attachment of the (topmost) file system mounted on
.\"O .IR target .
.BR umount ()
と
.BR umount2 ()
は
.I target
にマウントされている (最上位の) ファイルシステムを外す。
.\" Note: the kernel naming differs from the glibc naming
.\" umount2 is the glibc name for what the kernel now calls umount
.\" and umount is the glibc name for oldumount

.\"O Appropriate privilege (Linux: the
.\"O .B CAP_SYS_ADMIN
.\"O capability) is required to unmount file systems.
ファイルシステムのアンマウントを行うには、
適切な権限 (Linux では
.B CAP_SYS_ADMIN
ケーパビリティ) が必要である。

.\"O Linux 2.1.116 added the
.\"O .BR umount2 ()
.\"O system call, which, like
.\"O .BR umount (),
.\"O unmounts a target, but allows additional
.\"O .I flags
.\"O controlling the behavior of the operation:
Linux 2.1.116 から、
.BR umount2 ()
システムコールが追加された。これは
.BR umount ()
と同様に
.I target
をアンマウントするが、
.I flags
が追加されており、操作時の振る舞いを制御できる。
.TP
.\"O .BR MNT_FORCE " (since Linux 2.1.116)"
.BR MNT_FORCE " (2.1.116 以降)"
.\"O Force unmount even if busy.
.\"O This can cause data loss.
.\"O (Only for NFS mounts.)
使用中 (busy) でも強制的にアンマウントを実行する。
これを行うとデータを失う可能性がある。
(NFS マウント専用)
.TP
.\"O .BR MNT_DETACH " (since Linux 2.4.11)"
.BR MNT_DETACH " (2.4.11 以降)"
.\"O Perform a lazy unmount: make the mount point unavailable for
.\"O new accesses, and actually perform the unmount when the mount point
.\"O ceases to be busy.
遅延アンマウントを行う。マウントポイントに対する新規のアクセスは
不可能となり、実際のアンマウントはマウントポイントがビジーで
なくなった時点で行う。
.TP
.\"O .BR MNT_EXPIRE " (since Linux 2.6.8)"
.BR MNT_EXPIRE " (Linux 2.6.8 以降)"
.\"O Mark the mount point as expired.
マウントポイントに期限切れの印をつける。
.\"O If a mount point is not currently in use, then an initial call to
.\"O .BR umount2 ()
.\"O with this flag fails with the error
.\"O .BR EAGAIN ,
.\"O but marks the mount point as expired.
マウントポイントが現在使用中でない場合、このフラグをつけて
.BR umount2 ()
を初めて呼び出すと
.B EAGAIN
エラーで失敗するが、マウントポイントには期限切れ (expire)
の印がつけられる。
.\"O The mount point remains expired as long as it isn't accessed
.\"O by any process.
そのマウントポイントはいずれかのプロセスがアクセスしない限り
期限切れの印がついたままとなる。
.\"O A second
.\"O .BR umount2 ()
.\"O call specifying
.\"O .B MNT_EXPIRE
.\"O unmounts an expired mount point.
もう一度
.B MNT_EXPIRE
をつけて
.BR umount2 ()
を呼び出すと、期限切れの印のついたマウントポイントが
アンマウントされる。
.\"O This flag cannot be specified with either
.\"O .B MNT_FORCE
.\"O or
.\"O .BR MNT_DETACH .
このフラグを
.B MNT_FORCE
もしくは
.B MNT_DETACH
と同時に指定することはできない。
.\"O .SH "RETURN VALUE"
.SH 返り値
.\"O On success, zero is returned.
.\"O On error, \-1 is returned, and
.\"O .I errno
.\"O is set appropriately.
成功した場合 0 が返る。
エラーの場合、\-1 が返り、
.I errno
がエラーの内容にしたがって設定される。
.\"O .SH ERRORS
.SH エラー
.\"O The error values given below result from filesystem type independent
.\"O errors.
.\"O Each filesystem type may have its own special errors and its
.\"O own special behavior.
.\"O See the kernel source code for details.
以下に示すエラーは、ファイルシステムに依存しないものである。
それぞれのファイルシステムタイプには固有のエラーが存在する場合があり、
独自の動作をすることもある。詳しくはカーネルのソースを見て欲しい。
.TP
.B EAGAIN
.\"O A call to
.\"O .BR umount2 ()
.\"O specifying
.\"O .B MNT_EXPIRE
.\"O successfully marked an unbusy file system as expired.
.B MNT_EXPIRE
を指定した
.BR umount2 ()
の呼び出しで、正常に未使用のファイルシステムに期限切れの印を
つけることができた。
.TP
.B EBUSY
.\"O .I target
.\"O could not be unmounted because it is busy.
使用中 (busy) のため、
.I target
をアンマウントできなかった。
.TP
.B EFAULT
.\"O .I target
.\"O points outside the user address space.
.I target
がユーザアドレス空間の外を指している。
.TP
.B EINVAL
.\"O .I target
.\"O is not a mount point.
.\"O Or,
.\"O .BR umount2 ()
.\"O was called with
.\"O .B MNT_EXPIRE
.\"O and either
.\"O .B MNT_DETACH
.\"O or
.\"O .BR MNT_FORCE .
.I target
がマウントポイントではない。
または、
.BR umount2 ()
で、
.B MNT_EXPIRE
が指定された
.BR umount2 ()
で、
.B MNT_DETACH
か
.B MNT_FORCE
が同時に指定された。
.TP
.B ENAMETOOLONG
.\"O A pathname was longer than
.\"O .BR MAXPATHLEN .
パス名の長さが
.B MAXPATHLEN
より長かった。
.TP
.B ENOENT
.\"O A pathname was empty or had a nonexistent component.
パス名が空である。もしくは指定されたパスが存在しない。
.TP
.B ENOMEM
.\"O The kernel could not allocate a free page to copy filenames or data into.
カーネルがファイル名やデータをコピーするための空きページを確保できなかった。
.TP
.B EPERM
.\"O The caller does not have the required privileges.
呼び出し元が必要な権限を持っていない。
.\"O .SH VERSIONS
.SH バージョン
.\"O .BR MNT_DETACH
.\"O and
.\"O .BR MNT_EXPIRE
.\" http://sourceware.org/bugzilla/show_bug.cgi?id=10092
.\"O are only available in glibc since version 2.11.
.BR MNT_DETACH
と
.BR MNT_EXPIRE
はバージョン 2.11 以降の glibc でのみ利用できる。
.\"O .SH "CONFORMING TO"
.SH 準拠
.\"O These functions are Linux-specific and should not be used in
.\"O programs intended to be portable.
この関数は Linux 固有の関数であり、移植を考慮したプログラムでは
使用すべきでない。
.\"O .SH NOTES
.SH 注意
.\"O The original
.\"O .BR umount ()
.\"O function was called as \fIumount(device)\fP and would return
.\"O .B ENOTBLK
.\"O when called with something other than a block device.
元々の
.BR umount ()
関数は \fIumount(device)\fP の形で呼び出され、
ブロックデバイス以外を指定して呼び出すと
.B ENOTBLK
を返した。
.\"O In Linux 0.98p4 a call \fIumount(dir)\fP was added, in order to
.\"O support anonymous devices.
Linux 0.98p4 で、無名デバイス (anonymous device) に対応するために
\fIumount(dir)\fP の形での呼び出しが加えられた。
.\"O In Linux 2.3.99-pre7 the call \fIumount(device)\fP was removed,
.\"O leaving only \fIumount(dir)\fP (since now devices can be mounted
.\"O in more than one place, so specifying the device does not suffice).
Linux 2.3.99-pre7 で、\fIumount(device)\fP は削除され、
\fIumount(dir)\fP だけが残された
(一つのデバイスを複数の位置にマウント出来るようになったため、
デバイスを指定しただけでは不十分だからである)。
.\"O .SH "SEE ALSO"
.SH 関連項目
.BR mount (2),
.BR path_resolution (7),
.BR mount (8),
.BR umount (8)
