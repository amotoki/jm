.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 18:34:44 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Japanese Version Copyright (c) 1998 Shigeru Tada
.\"	all rights reserved.
.\" Translated Mon, 25 May 1998 
.\"	by Shigeru Tada <stada@mech.titech.ac.jp>
.\"
.TH READV 3  "April 25, 1993" "GNU" "Linux Programmer's Manual"
.SH 名前
readv, writev \- 複数のバッファーを用いたファイル入出力
.SH 書式
.nf
.B #include <sys/uio.h>
.sp
.BI "int readv(int " filedes ", const struct iovec *" vector ,
.BI "          size_t " count );
.sp
.BI "int writev(int " filedes ", const struct iovec *" vector ,
.BI "          size_t " count );
.fi
.SH 説明
.B readv()
関数はファイル・ディスクリプター\fIfiledes\fPに連結されたファイルから
\fIcount\fPブロックを、\fIvector\fPで指定された複数のバッファーに読
み込む。
.PP
\fBwritev()\fP関数はファイル・ディスクリプター\fIfiledes\fP
に連結されたファイルに\fIvector\fPポインタで指定された最大
\fIcount\fPブロックまでをバッファーから書き込む。
.PP
.I vector
ポインタは
.PP
.br
.nf
.in 10
struct iovec {
.in 14
void *iov_base;   /* Starting address */
size_t iov_len;   /* Number of bytes */
.in 10
} ;
.fi
.PP
のように\fB<sys/uio.h>\fPの中で定義される構造体\fBiovec\fPを指す。
.PP
バッファは
.IR "vector[0]" ", " vector[1] ", ... " "vector[count-1]" .
の順で処理される。
.PP
\fBreadv()\fP関数は複数のバッファーに読み込むということを除けば、
\fBread(2)\fPとまったく同じように動作する。
.PP
\fBwritev()\fP関数は複数のバッファーから書き込むということを除けば、
\fBwrite(2)\fPとまったく同じように動作する。
.SH 返り値
\fBreadv()\fP関数は書き込まれたバイト数を返す。
エラーの場合は \-1 を返す。
\fBwritev()\fP関数は読み込まれたバイト数を返す。
エラーの場合は \-1 を返す。
.SH エラー
\fBreadv()\fPと\fBwritev()\fP関数は失敗した場合\fIerrno\fPを以下の値に
設定する。
.TP
.B EBADDF
\fI fd\fPが有効なファイル・ディスクリプターではない
.TP
.B EINVAL
\fI fd\fPが（\fBR readv()\fPの場合）読み込めないか、
（\fBR writev()\fPの場合）書き込めない。
.TP
.B EFAULT
\fI buf\fPがアクセス可能なアドレス空間の外にある。
.TP
.B EAGAIN 
\fB open()\fP関数を呼び出す時に非停止(Non-blocking) I/O が選択されており、
すぐにデータが読み込み可能ではなかった。
.TP
.B EINTR
データが引き渡される前に、読みこみあるいは書き込みへの
割り込みがおこった。
.SH 準拠
不明
.SH バグ
\fBR readv() "あるいは" writev()\fPのようなファイル・ディスクリプターを
操作する関数を、stdioライブラリーから呼び出される関数と組み合わせて呼
び出すことは推奨できない。その結果は定義されないものであり，おそらく
期待した結果は得られない。
.SH 関連項目
.BR read (2),
.BR write (2)
