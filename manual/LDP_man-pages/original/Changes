==================== Changes in man-pages-3.64 ====================

Released: 2014-04-06, Munich


Contributors
------------

The following people contributed patches/fixes or (noted in brackets
in the changelog below) reports, notes, and ideas that have been
incorporated in changes in this release:

Abhay Sachan <sachan.abhay@gmail.com>
Alexey Samsonov <samsonov@google.com>
Andrey Vagin <avagin@openvz.org>
Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Christoph Hellwig <hch@infradead.org>
David Pr√©vot <taffit@debian.org>
Eric Dumazet <edumazet@google.com>
Eric W. Biederman <ebiederm@xmission.com>
Jan Kara <jack@suse.cz>
Kir Kolyshkin <kir@openvz.org>
Michael Kerrisk <mtk.manpages@gmail.com>
Mike Frysinger <vapier@gentoo.org>
NeilBrown <neilb@suse.de>
Peng Haitao <penght@cn.fujitsu.com>
Peter Hurley <peter@hurleysoftware.com>
Petr Gajdos <pgajdos@suse.cz>
Robert P. J. Day <rpjday@crashcourse.ca>
Vince Weaver <vincent.weaver@maine.edu>
Yuri Kozlov <yuray@komyakino.ru>

Apologies if I missed anyone!


New and rewritten pages
-----------------------

open_by_handle_at.2
    Michael Kerrisk [Mike Frysinger, Neil Brown, Aneesh Kumar K.V,
    Christoph Hellwig]
        New page describing name_to_handle_at(2) and open_by_handle_at(2)

inotify.7
    Michael Kerrisk
        Rewrite introductory section
        Reorganize "Limitations and caveats" subsection
    Michael Kerrisk
        Further describe the race when adding a watch to a new subtree
    Michael Kerrisk
        Directory renames may invalidate multiple paths cached by application
    Michael Kerrisk
        Add paragraph on cache consistency checking
    Michael Kerrisk
        Mention cache rebuilding to handle overflow events
    Michael Kerrisk
        Moving an object to another filesystem generates IN_DELETE_SELF
    Michael Kerrisk [Jan Kara]
        Add text on dealing with rename() events
    Michael Kerrisk
        Note rationale and consequences of event coalescing
    Michael Kerrisk  [Eric W. Biederman]
        Inotify doesn't work for remote and pseudo filesystems
    Michael Kerrisk
        Add some examples of events generated by various system calls
    Michael Kerrisk
        BUGS: IN_ONESHOT does now cause IN_IGNORED when the watch is dropped
            A silent change as a result of the fanotify work in kernel 2.6.36.
    Michael Kerrisk
        Note that IN_DELETE_SELF will be followed by IN_IGNORED
    Michael Kerrisk
        Note that IN_UNMOUNT will be followed by an IN_IGNORED event
    Michael Kerrisk
        Inotify does not report events for mmap(2) and msync(2)
    Michael Kerrisk
        Add examples of syscalls that trigger IN_ATTRIB
    Michael Kerrisk
        Add some examples of syscalls that trigger IN_MODIFY
    Michael Kerrisk
        execve(2) also generates IN_ACCESS
    Michael Kerrisk
        Add examples of syscalls that trigger IN_CREATE


Newly documented interfaces in existing pages
---------------------------------------------

perf_event_open.2
    Vince Weaver [Michael Kerrisk]
        Document the PERF_FLAG_FD_CLOEXEC flag
            The Linux 3.14 release adds support for the PERF_FLAG_FD_CLOEXEC
            flag.

feature_test_macros.7
    Michael Kerrisk
        Document _LARGEFILE_SOURCE


New and changed links
---------------------

name_to_handle_at.2
    Michael Kerrisk
        New link to new open_by_name_at(2) page


Global changes
--------------

fmemopen.3
getaddrinfo.3
mq_notify.3
offsetof.3
aio.7
    Michael Kerrisk
        Print size_t/ssize_t values using %z printf() modifier
            There are fewer and fewer systems these days that don't
            support the %z specifier mandated in C99.  So replace the
            use of %ld/%lu + (long) cast with %zd/%zu.


Changes to individual pages
---------------------------

bdflush.2
fsync.2
sync.2
    Kir Kolyshkin
        SEE ALSO: remove update(8) reference
            Remove reference to update(8) man page, since there is no such
            page. This is an ancient BSD leftover I believe.

chown.2
    Michael Kerrisk
        Note that 'dirfd' can be AT_FDCWD when AT_EMPTY_PATH is used

getxattr.2
    Abhay Sachan
        Fix REURN VALUE description
            A EA can have length zero.

inotify_add_watch.2
    Michael Kerrisk
        ERRORS: add ENAMETOOLONG

inotify_init.2
    Michael Kerrisk
        Add pointer to inotify(7)

link.2
    Michael Kerrisk
        When AT_EMPTY_PATH is specified, 'olddirfd' must not refer to a
        directory

mmap.2
    Andrey Vagin
        The file descriptor for a file mapping must be readable
            There is no difference between MAP_SHARED and MAP_PRIVATE.

open.2
    Michael Kerrisk
        SEE ALSO: add open_by_name_at(2)

            Various clean-ups and bug fixes after review by Mike Frysinger.

perf_event_open.2
    Vince Weaver
        Document PERF_EVENT_IOC_PERIOD behavior change
            Linux 3.14 (in commit bad7192b842c83e580747ca57104dd51fe08c223)
            changes the perf_event PERF_EVENT_IOC_PERIOD ioctl() behavior
            on all architectures to update immediately, to match the behavior
            found on ARM.

stat.2
    Michael Kerrisk
        Note that 'dirfd' can be AT_FDCWD when AT_EMPTY_PATH is used

syscalls.2
    Michael Kerrisk
        Add sched_getattr() and sched_setattr()
            And update kernel version to 3.14

abort.3
    Peng Haitao
        ATTRIBUTES: Note function that is thread-safe
            The function abort() is thread safe.

confstr.3
    Michael Kerrisk
        SEE ALSO: add getconf(1), fpathconf(3), sysconf(3), pathconf(3)

exit.3
    Peng Haitao
        ATTRIBUTES: Note function that is not thread-safe
            The function exit() is not thread safe.

fenv.3
    Peng Haitao
        ATTRIBUTES: Note functions that are thread-safe
            The functions feclearexcept(), fegetexceptflag(), feraiseexcept(),
            fesetexceptflag(), fetestexcept(), fegetround(), fesetround(),
            fegetenv(), feholdexcept(), fesetenv(), feupdateenv(),
            feenableexcept(), fedisableexcept() and fegetexcept() are thread
            safe.

fpathconf.3
    Michael Kerrisk
        SEE ALSO: add confstr(3)

fseek.3
    Michael Kerrisk  [Petr Gajdos]
        Document EINVAL error for negative file offset

fseeko.3
    Michael Kerrisk
        Add feature test macro requirements

fts.3
    Michael Kerrisk  [Mike Frysinger]
        Remove mention of "32-bit systems" in BUGS

fwide.3
wprintf.3
    Michael Kerrisk  [Robert P. J. Day]
        Remove mention of bogus _ISOC95_SOURCE feature test macro

getline.3
    Alexey Samsonov
        Caller should free the allocated buffer even if getline() failed
            Relevant discussion in glibc bugzilla:
            https://sourceware.org/bugzilla/show_bug.cgi?id=5666

getloadavg.3
    Peng Haitao
        ATTRIBUTES: Note function that is thread-safe
            The function getloadavg() is thread safe.

getpt.3
    Peng Haitao
        ATTRIBUTES: Note function that is thread-safe
            The function getpt() is thread safe.

if_nametoindex.3
    Peng Haitao
        ATTRIBUTES: Note functions that are thread-safe
            The functions if_nametoindex() and if_indextoname() are thread safe.

index.3
    Peng Haitao
        ATTRIBUTES: Note functions that are thread-safe
            The functions index() and rindex() are thread safe.

mkfifo.3
    Peng Haitao
        ATTRIBUTES: Note functions that are thread-safe
            The functions mkfifo() and mkfifoat() are thread safe.

netlink.3
    Michael Kerrisk
        SEE ALSO: make the reference for libnetlink the libnetlink(3) man page

random.3
    Peng Haitao
        ATTRIBUTES: Note functions that are thread-safe
            The functions random(), srandom(), initstate() and setstate()
            are thread safe.

random_r.3
    Peng Haitao
        ATTRIBUTES: Note functions that are thread-safe
            The functions random_r(), srandom_r(), initstate_r() and
            setstate_r() are thread safe.

sigvec.3
    Peng Haitao
        ATTRIBUTES: Note functions that are thread-safe
            The functions sigvec(), sigblock(), sigsetmask() and
            siggetmask() are thread safe.

            The macro sigmask() is thread safe.

sysconf.3
    Michael Kerrisk
        SEE ALSO: add confstr(3)

termios.3
    Michael Kerrisk  [Peter Hurley]
        Fix error in discussion of MIN > 0, TIME == 0 noncanonical mode
            As reported by Peter Hurley, for the MIN > 0, TIME == 0 case:

                read() may unblock when MIN bytes are available but return
                up to the 'count' parameter if more input arrives in between
                waking and copying into the user buffer.
                ...
                read() may also _not_ return until MIN bytes have been
                received, even if 'count' bytes have been received.
    Michael Kerrisk
        Add a note on interaction of O_NONBLOCK with noncanonical MIN/TIME
            POSIX leaves the behavior open.
    Michael Kerrisk
        Clarify termination conditions for MIN > 0, TIME > 0
    Michael Kerrisk
        Clarify behavior if data is available before noncanonical read()
    Michael Kerrisk
        Add descriptive titles to noncanonical read() cases

symlink.7
    Michael Kerrisk
        Add subsection on opening a symbolic link with O_PATH
    Michael Kerrisk
        name_to_handle_at(2) and open_by_handle_at(2) optionally follow symlinks
    Michael Kerrisk
        Mention use of readlink(2) to read contents of a symlink

tcp.7
    Michael Kerrisk  [Eric Dumazet]
        Document /proc/sys/net/ipv4/tcp_autocorking
            Text heavily based on Documentation/networking/ip-sysctl.txt
