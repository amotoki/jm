.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright (C) 2011 Michael Kerrisk <mtk.manpages@gamil.com>
.\" Distributed under GPL
.\"
.\" Japanese Version Copyright (c) 2003  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated Wed Jul 23 05:24:21 JST 2003
.\"         by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.\"WORD:	arc sine	逆正弦
.\"WORD:	arc cosine	逆余弦
.\"WORD:	arc tangent	逆正接
.\"WORD:	real part	実部
.\"WORD:	imaginary part	虚部
.\"
.TH CACOS 3 2011-09-15 "" "Linux Programmer's Manual"
.SH 名前
cacos, cacosf, cacosl \- 複素数の逆余弦 (arc cosine)
.SH 書式
.B #include <complex.h>
.sp
.BI "double complex cacos(double complex " z );
.br
.BI "float complex cacosf(float complex " z );
.br
.BI "long double complex cacosl(long double complex " z );
.sp
\fI\-lm\fP でリンクする。
.SH 説明
.BR cacos ()
関数は複素数
.I z
の逆余弦 (arc cosine) を計算する。
\fIy\ =\ cacos(z)\fP ならば、 \fIz\ =\ ccos(y)\fP が成立する。
.I y
の実部の値は区間 [0,pi] から選択される。
.LP
次の関係が成立する:
.nf

    cacos(z) = \-i * clog(z + i * csqrt(1 \- z * z))
.fi
.SH バージョン
これらの関数は glibc バージョン 2.1 で初めて登場した。
.SH 準拠
C99.
.SH 例
.nf
/* Link with "\-lm" */

#include <complex.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>

int
main(int argc, char *argv[])
{
    double complex z, c, f;
    double complex i = I;

    if (argc != 3) {
        fprintf(stderr, "Usage: %s <real> <imag>\\n", argv[0]);
        exit(EXIT_FAILURE);
    }

    z = atof(argv[1]) + atof(argv[2]) * I;

    c = cacos(z);

    printf("cacos() = %6.3f %6.3f*i\\n", creal(c), cimag(c));

    f = \-i * clog(z + i * csqrt(1 \- z * z));

    printf("formula = %6.3f %6.3f*i\\n", creal(f), cimag(f));

    exit(EXIT_SUCCESS);
}
.fi
.SH 関連項目
.BR ccos (3),
.BR clog (3),
.BR complex (7)
