.\" Copyright (c) 2007 Silicon Graphics, Inc. All Rights Reserved
.\" Written by Dave Chinner <dgc@sgi.com>
.\"
.\" %%%LICENSE_START(GPLv2_ONELINE)
.\" May be distributed as per GNU General Public License version 2.
.\" %%%LICENSE_END
.\"
.\" 2011-09-19: Added FALLOC_FL_PUNCH_HOLE
.\" 2011-09-19: Substantial restructuring of the page
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 2007  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated 2007-10-16, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.66
.\" Updated 2008-10-13, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.11
.\" Updated 2013-05-01, Akihiro MOTOKI <amotoki@gmail.com>
.\" Updated 2013-05-07, Akihiro MOTOKI <amotoki@gmail.com>
.\" Updated 2013-07-22, Akihiro MOTOKI <amotoki@gmail.com>
.\"
.TH FALLOCATE 2 2013\-06\-10 Linux "Linux Programmer's Manual"
.SH 名前
fallocate \- ファイル空間の操作
.SH 書式
.nf
\fB#define _GNU_SOURCE\fP             /* feature_test_macros(7) 参照 */
\fB#include <fcntl.h>\fP

\fBint fallocate(int \fP\fIfd\fP\fB, int \fP\fImode\fP\fB, off_t \fP\fIoffset\fP\fB, off_t \fP\fIlen\fP\fB);\fP
.fi
.SH 説明
このシステムコールは、移植性のない、Linux 固有のシステムコールである。 移植性が必要な場合は、ファイルに対してディスク空間を確実に確保するために、
POSIX.1 で規定された方法である \fBposix_fallocate\fP(3)  を使うこと。

\fBfallocate\fP()  を使うと、 \fIfd\fP が参照するファイルに割り当てられたディスク空間を直接操作できる。 操作対象は、
\fIoffset\fP から始まる長さ \fIlen\fP バイトの領域である。

\fImode\fP 引き数は、指定された領域に対して実行する操作を指定する。
サポートされている操作の詳細は以下のサブセクションで説明する。
.SS ディスク領域の割り当て
\fBfallocate\fP() のデフォルトの動作 (つまり \fImode\fP が 0 の場合) は、
\fIoffset\fP と \fIlen\fP で指定された範囲のディスク領域の割り当てと初期化を行う。
\fIoffset\fP+\fIlen\fP がファイルサイズよりも大きかった場合、
(\fBstat\fP(2) で報告される) ファイルサイズが変更される。このデフォルトの動作は、
ライブラリ関数 \fBposix_fallocate\fP(3) の動作と非常に似ている。これは、
このシステムコールが \fBposix_fallocate\fP(3) を最適に実装する手段を提供する
ことを目的としているからである。

呼び出しが成功した場合、
\fIoffset\fP と \fIlen\fP で指定された範囲へのそれ以降の書き込みでは、
ディスクの領域不足での書き込み失敗が起こらないことが保証される。

\fBFALLOC_FL_KEEP_SIZE\fP フラグが \fImode\fP に指定された場合、このシステムコール
の動作は似ているが、 \fIoffset\fP+\fIlen\fP がファイルサイズよりも大きい場合で
あってもファイルサイズは変更されない点が異なる。この場合のファイルの末尾
よりも後ろの前もって割り当てられた 0 で埋められたブロックは、ファイルへの
追記を最適化したい場合に役に立つ。
.PP
割り当てはブロックサイズ単位で行われるため、 \fBfallocate\fP() は指定されたより
も大きなディスク領域を割り当てることがある。
.SS ファイル空間の割り当て解除
Specifying the \fBFALLOC_FL_PUNCH_HOLE\fP flag (available since Linux 2.6.38)
in \fImode\fP deallocates space (i.e., creates a hole)  in the byte range
starting at \fIoffset\fP and continuing for \fIlen\fP bytes.  Within the specified
range, partial filesystem blocks are zeroed, and whole filesystem blocks are
removed from the file.  After a successful call, subsequent reads from this
range will return zeroes.

\fBFALLOC_FL_PUNCH_HOLE\fP フラグは \fBFALLOC_FL_KEEP_SIZE\fP と論理和 (OR) をとって \fImode\fP
に指定しなければならない。 つまり、 ファイル末尾の punch off を行った場合でも、 (\fBstat\fP(2) で報告される)
ファイルサイズが変化しない。

Not all filesystems support \fBFALLOC_FL_PUNCH_HOLE\fP; if a filesystem doesn't
support the operation, an error is returned.
.SH 返り値
成功の場合、 \fBfallocate\fP() は 0 を返す。 エラーの場合、\-1 を返し、 \fIerror\fP にエラーを示す値を設定する。
.SH エラー
.TP 
\fBEBADF\fP
\fIfd\fP が有効なファイルディスクリプタでないか、 書き込み用としてオープンされていない。
.TP 
\fBEFBIG\fP
\fIoffset + len\fP がファイルサイズの最大値よりも大きい。
.TP 
\fBEINTR\fP
実行中にシグナルが捕捉された。
.TP 
\fBEINVAL\fP
.\" FIXME (raise a kernel bug) Probably the len==0 case should be
.\" a no-op, rather than an error. That would be consistent with
.\" similar APIs for the len==0 case.
.\" See "Re: [PATCH] fallocate.2: add FALLOC_FL_PUNCH_HOLE flag definition"
.\" 21 Sep 2012
.\" http://thread.gmane.org/gmane.linux.file-systems/48331/focus=1193526
\fIoffset\fP が 0 未満だったか、 \fIlen\fP が 0 以下だった。
.TP 
\fBEIO\fP
An I/O error occurred while reading from or writing to a filesystem.
.TP 
\fBENODEV\fP
\fIfd\fP が通常のファイルかディレクトリを参照していない (\fIfd\fP がパイプや FIFO を参照している場合、別のエラーが発生する)。
.TP 
\fBENOSPC\fP
\fIfd\fP が参照するファイルを含むデバイスに十分な空き領域がない。
.TP 
\fBENOSYS\fP
このカーネルでは \fBfallocate\fP() は実装されていない。
.TP 
\fBEOPNOTSUPP\fP
The filesystem containing the file referred to by \fIfd\fP does not support
this operation; or the \fImode\fP is not supported by the filesystem containing
the file referred to by \fIfd\fP.
.TP 
\fBEPERM\fP
\fIfd\fP が参照するファイルに変更不可 (immutable) の属性が付いている (\fBchattr\fP(1) 参照)。 \fImode\fP に
\fBFALLOC_FL_PUNCH_HOLE\fP が指定されたが、 \fIfd\fP が参照するファイルに追加のみ (append\-only)
の属性が付いている (\fBchattr\fP(1) 参照)。
.TP 
\fBESPIPE\fP
\fIfd\fP がパイプか FIFO を参照している。
.SH バージョン
.\" See http://sourceware.org/bugzilla/show_bug.cgi?id=14964
\fBfallocate\fP()  はカーネル 2.6.23 以降の Linux で利用可能である。 glibc での対応はバージョン 3.10
以降で行われている。 \fBFALLOC_FL_*\fP が glibc のヘッダファイルで定義されているのは、バージョン 2.18 以降のみである。
.SH 準拠
\fBfallocate\fP()  は Linux 固有である。
.SH 関連項目
\fBfallocate\fP(1), \fBftruncate\fP(2), \fBposix_fadvise\fP(3), \fBposix_fallocate\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.54 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
