.\" Copyright (c) 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\" and Copyright 2003,2004 Andi Kleen, SuSE Labs.
.\" numa_maps material Copyright (c) 2005 Silicon Graphics Incorporated.
.\"     Christoph Lameter, <cl@linux-foundation.org>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH NUMA 7 2008\-08\-15 Linux "Linux Programmer's Manual"
.SH 名前
numa \- overview of Non\-Uniform Memory Architecture
.SH 説明
Non\-Uniform Memory Access (NUMA) refers to multiprocessor systems whose
memory is divided into multiple memory nodes.  The access time of a memory
node depends on the relative locations of the accessing CPU and the accessed
node.  (This contrasts with a symmetric multiprocessor system, where the
access time for all of the memory is the same for all CPUs.)  Normally, each
CPU on a NUMA system has a local memory node whose contents can be accessed
faster than the memory in the node local to another CPU or the memory on a
bus shared by all CPUs.
.SS "NUMA system calls"
The Linux kernel implements the following NUMA\-related system calls:
\fBget_mempolicy\fP(2), \fBmbind\fP(2), \fBmigrate_pages\fP(2), \fBmove_pages\fP(2), and
\fBset_mempolicy\fP(2).  However, applications should normally use the
interface provided by \fIlibnuma\fP; see "Library Support" below.
.SS "/proc/[number]/numa_maps  (since Linux 2.6.14)"
.\" See also Changelog-2.6.14
This file displays information about a process's NUMA memory policy and
allocation.

Each line contains information about a memory range used by the process,
displaying\(emamong other information\(emthe effective memory policy for
that memory range and on which nodes the pages have been allocated.

\fInuma_maps\fP is a read\-only file.  When \fI/proc/<pid>/numa_maps\fP is
read, the kernel will scan the virtual address space of the process and
report how memory is used.  One line is displayed for each unique memory
range of the process.

The first field of each line shows the starting address of the memory
range.  This field allows a correlation with the contents of the
\fI/proc/<pid>/maps\fP file, which contains the end address of the
range and other information, such as the access permissions and sharing.

The second field shows the memory policy currently in effect for the memory
range.  Note that the effective policy is not necessarily the policy
installed by the process for that memory range.  Specifically, if the
process installed a "default" policy for that range, the effective policy
for that range will be the process policy, which may or may not be
"default".

The rest of the line contains information about the pages allocated in the
memory range, as follows:
.TP 
\fIN<node>=<nr_pages>\fP
The number of pages allocated on \fI<node>\fP.  \fI<nr_pages>\fP
includes only pages currently mapped by the process.  Page migration and
memory reclaim may have temporarily unmapped pages associated with this
memory range.  These pages may only show up again after the process has
attempted to reference them.  If the memory range represents a shared memory
area or file mapping, other processes may currently have additional pages
mapped in a corresponding memory range.
.TP 
\fIfile=<filename>\fP
The file backing the memory range.  If the file is mapped as private, write
accesses may have generated COW (Copy\-On\-Write) pages in this memory range.
These pages are displayed as anonymous pages.
.TP 
\fIheap\fP
Memory range is used for the heap.
.TP 
\fIstack\fP
Memory range is used for the stack.
.TP 
\fIhuge\fP
Huge memory range.  The page counts shown are huge pages and not regular
sized pages.
.TP 
\fIanon=<pages>\fP
The number of anonymous page in the range.
.TP 
\fIdirty=<pages>\fP
Number of dirty pages.
.TP 
\fImapped=<pages>\fP
Total number of mapped pages, if different from \fIdirty\fP and \fIanon\fP pages.
.TP 
\fImapmax=<count>\fP
Maximum mapcount (number of processes mapping a single page) encountered
during the scan.  This may be used as an indicator of the degree of sharing
occurring in a given memory range.
.TP 
\fIswapcache=<count>\fP
Number of pages that have an associated entry on a swap device.
.TP 
\fIactive=<pages>\fP
The number of pages on the active list.  This field is only shown if
different from the number of pages in this range.  This means that some
inactive pages exist in the memory range that may be removed from memory by
the swapper soon.
.TP 
\fIwriteback=<pages>\fP
Number of pages that are currently being written out to disk.
.SH 注意
The Linux NUMA system calls and \fI/proc\fP interface are only available if the
kernel was configured and built with the \fBCONFIG_NUMA\fP option.
.SS "Library Support"
Link with \fI\-lnuma\fP to get the system call definitions.  \fIlibnuma\fP and the
required \fI<numaif.h>\fP header are available in the \fInumactl\fP
package.

However, applications should not use these system calls directly.  Instead,
the higher level interface provided by the \fBnuma\fP(3)  functions in the
\fInumactl\fP package is recommended.  The \fInumactl\fP package is available at
\fIftp://oss.sgi.com/www/projects/libnuma/download/\fP.  The package is also
included in some Linux distributions.  Some distributions include the
development library and header in the separate \fInumactl\-devel\fP package.
.SH 準拠
No standards govern NUMA interfaces.
.SH 関連項目
\fBget_mempolicy\fP(2), \fBmbind\fP(2), \fBmove_pages\fP(2), \fBset_mempolicy\fP(2),
\fBnuma\fP(3), \fBcpuset\fP(7), \fBnumactl\fP(8)
