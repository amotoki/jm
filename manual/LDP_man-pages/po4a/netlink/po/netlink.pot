# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-04-13 10:27+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man3/netlink.3:10 build/C/man7/netlink.7:11
#, no-wrap
msgid "NETLINK"
msgstr ""

#. type: TH
#: build/C/man3/netlink.3:10
#, no-wrap
msgid "2012-08-05"
msgstr ""

#. type: TH
#: build/C/man3/netlink.3:10 build/C/man3/rtnetlink.3:12
#, no-wrap
msgid "GNU"
msgstr ""

#. type: TH
#: build/C/man3/netlink.3:10 build/C/man7/netlink.7:11 build/C/man3/rtnetlink.3:12 build/C/man7/rtnetlink.7:15
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#: build/C/man3/netlink.3:11 build/C/man7/netlink.7:12 build/C/man3/rtnetlink.3:13 build/C/man7/rtnetlink.7:16
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:13
msgid "netlink - Netlink macros"
msgstr ""

#. type: SH
#: build/C/man3/netlink.3:13 build/C/man7/netlink.7:14 build/C/man3/rtnetlink.3:15 build/C/man7/rtnetlink.7:18
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#.  FIXME . what will glibc 2.1 use here?
#.  May 2007: glibc 2.5, things look to be unchanged -- the header file
#.  is still linux/netlink.h -- mtk
#. type: Plain text
#: build/C/man3/netlink.3:19
#, no-wrap
msgid "B<#include E<lt>asm/types.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:21
#, no-wrap
msgid "B<#include E<lt>linux/netlink.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:23
#, no-wrap
msgid "B<int NLMSG_ALIGN(size_t >I<len>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:25
#, no-wrap
msgid "B<int NLMSG_LENGTH(size_t >I<len>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:27
#, no-wrap
msgid "B<int NLMSG_SPACE(size_t >I<len>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:29
#, no-wrap
msgid "B<void *NLMSG_DATA(struct nlmsghdr *>I<nlh>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:31
#, no-wrap
msgid "B<struct nlmsghdr *NLMSG_NEXT(struct nlmsghdr *>I<nlh>B<, int >I<len>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:33
#, no-wrap
msgid "B<int NLMSG_OK(struct nlmsghdr *>I<nlh>B<, int >I<len>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:35
#, no-wrap
msgid "B<int NLMSG_PAYLOAD(struct nlmsghdr *>I<nlh>B<, int >I<len>B<);>\n"
msgstr ""

#. type: SH
#: build/C/man3/netlink.3:36 build/C/man7/netlink.7:22 build/C/man3/rtnetlink.3:39 build/C/man7/rtnetlink.7:28
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:44
msgid ""
"I<E<lt>linux/netlink.hE<gt>> defines several standard macros to access or "
"create a netlink datagram.  They are similar in spirit to the macros defined "
"in B<cmsg>(3)  for auxiliary data.  The buffer passed to and from a netlink "
"socket should be accessed using only these macros."
msgstr ""

#. type: TP
#: build/C/man3/netlink.3:44
#, no-wrap
msgid "B<NLMSG_ALIGN>()"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:47
msgid "Round the length of a netlink message up to align it properly."
msgstr ""

#. type: TP
#: build/C/man3/netlink.3:47
#, no-wrap
msgid "B<NLMSG_LENGTH>()"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:55
msgid ""
"Given the payload length, I<len>, this macro returns the aligned length to "
"store in the I<nlmsg_len> field of the I<nlmsghdr>."
msgstr ""

#. type: TP
#: build/C/man3/netlink.3:55
#, no-wrap
msgid "B<NLMSG_SPACE>()"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:60
msgid ""
"Return the number of bytes that a netlink message with payload of I<len> "
"would occupy."
msgstr ""

#. type: TP
#: build/C/man3/netlink.3:60
#, no-wrap
msgid "B<NLMSG_DATA>()"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:64
msgid "Return a pointer to the payload associated with the passed I<nlmsghdr>."
msgstr ""

#.  this is bizarre, maybe the interface should be fixed.
#. type: TP
#: build/C/man3/netlink.3:64
#, no-wrap
msgid "B<NLMSG_NEXT>()"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:80
msgid ""
"Get the next I<nlmsghdr> in a multipart message.  The caller must check if "
"the current I<nlmsghdr> didn't have the B<NLMSG_DONE> set\\(emthis function "
"doesn't return NULL on end.  The I<len> argument is an lvalue containing the "
"remaining length of the message buffer.  This macro decrements it by the "
"length of the message header."
msgstr ""

#. type: TP
#: build/C/man3/netlink.3:80
#, no-wrap
msgid "B<NLMSG_OK>()"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:84
msgid ""
"Return true if the netlink message is not truncated and is in a form "
"suitable for parsing."
msgstr ""

#. type: TP
#: build/C/man3/netlink.3:84
#, no-wrap
msgid "B<NLMSG_PAYLOAD>()"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:88
msgid "Return the length of the payload associated with the I<nlmsghdr>."
msgstr ""

#. type: SH
#: build/C/man3/netlink.3:88 build/C/man3/rtnetlink.3:82
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:90 build/C/man3/rtnetlink.3:84
msgid "These macros are nonstandard Linux extensions."
msgstr ""

#. type: SH
#: build/C/man3/netlink.3:90 build/C/man7/netlink.7:387
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:94
msgid ""
"It is often better to use netlink via I<libnetlink> than via the low-level "
"kernel interface."
msgstr ""

#. type: SH
#: build/C/man3/netlink.3:94 build/C/man7/netlink.7:470 build/C/man3/rtnetlink.3:122 build/C/man7/rtnetlink.7:470
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:96
msgid "B<netlink>(7)"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:100
msgid "E<.UR ftp://ftp.inr.ac.ru\\:/ip-routing\\:/iproute2*> E<.UE> for libnetlink"
msgstr ""

#. type: SH
#: build/C/man3/netlink.3:100 build/C/man7/netlink.7:485 build/C/man3/rtnetlink.3:126 build/C/man7/rtnetlink.7:475
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man3/netlink.3:107 build/C/man7/netlink.7:492 build/C/man3/rtnetlink.3:133 build/C/man7/rtnetlink.7:482
msgid ""
"This page is part of release 3.63 of the Linux I<man-pages> project.  A "
"description of the project, and information about reporting bugs, can be "
"found at \\%http://www.kernel.org/doc/man-pages/."
msgstr ""

#. type: TH
#: build/C/man7/netlink.7:11
#, no-wrap
msgid "2013-03-15"
msgstr ""

#. type: TH
#: build/C/man7/netlink.7:11 build/C/man7/rtnetlink.7:15
#, no-wrap
msgid "Linux"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:14
msgid "netlink - communication between kernel and user space (AF_NETLINK)"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:19
#, no-wrap
msgid ""
"B<#include E<lt>asm/types.hE<gt>>\n"
"B<#include E<lt>sys/socket.hE<gt>>\n"
"B<#include E<lt>linux/netlink.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:21
#, no-wrap
msgid ""
"B<netlink_socket = socket(AF_NETLINK, >I<socket_type>B<, "
">I<netlink_family>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:31
msgid ""
"Netlink is used to transfer information between kernel and user-space "
"processes.  It consists of a standard sockets-based interface for user space "
"processes and an internal kernel API for kernel modules.  The internal "
"kernel interface is not documented in this manual page.  There is also an "
"obsolete netlink interface via netlink character devices; this interface is "
"not documented here and is provided only for backward compatibility."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:41
msgid ""
"Netlink is a datagram-oriented service.  Both B<SOCK_RAW> and B<SOCK_DGRAM> "
"are valid values for I<socket_type>.  However, the netlink protocol does not "
"distinguish between datagram and raw sockets."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:45
msgid ""
"I<netlink_family> selects the kernel module or netlink group to communicate "
"with.  The currently assigned netlink families are:"
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:45
#, no-wrap
msgid "B<NETLINK_ROUTE>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:52
msgid ""
"Receives routing and link updates and may be used to modify the routing "
"tables (both IPv4 and IPv6), IP addresses, link parameters, neighbor setups, "
"queueing disciplines, traffic classes and packet classifiers (see "
"B<rtnetlink>(7))."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:52
#, no-wrap
msgid "B<NETLINK_W1>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:55
msgid "Messages from 1-wire subsystem."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:55
#, no-wrap
msgid "B<NETLINK_USERSOCK>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:58
msgid "Reserved for user-mode socket protocols."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:58
#, no-wrap
msgid "B<NETLINK_FIREWALL>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:64
msgid ""
"Transport IPv4 packets from netfilter to user space.  Used by I<ip_queue> "
"kernel module."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:64
#, no-wrap
msgid "B<NETLINK_INET_DIAG>"
msgstr ""

#.  FIXME More details on NETLINK_INET_DIAG needed.
#. type: Plain text
#: build/C/man7/netlink.7:68
msgid "INET socket monitoring."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:68
#, no-wrap
msgid "B<NETLINK_NFLOG>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:71
msgid "Netfilter/iptables ULOG."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:71
#, no-wrap
msgid "B<NETLINK_XFRM>"
msgstr ""

#.  FIXME More details on NETLINK_XFRM needed.
#. type: Plain text
#: build/C/man7/netlink.7:75
msgid "IPsec."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:75
#, no-wrap
msgid "B<NETLINK_SELINUX>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:78
msgid "SELinux event notifications."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:78
#, no-wrap
msgid "B<NETLINK_ISCSI>"
msgstr ""

#.  FIXME More details on NETLINK_ISCSI needed.
#. type: Plain text
#: build/C/man7/netlink.7:82
msgid "Open-iSCSI."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:82
#, no-wrap
msgid "B<NETLINK_AUDIT>"
msgstr ""

#.  FIXME More details on NETLINK_AUDIT needed.
#. type: Plain text
#: build/C/man7/netlink.7:86
msgid "Auditing."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:86
#, no-wrap
msgid "B<NETLINK_FIB_LOOKUP>"
msgstr ""

#.  FIXME More details on NETLINK_FIB_LOOKUP needed.
#. type: Plain text
#: build/C/man7/netlink.7:90
msgid "Access to FIB lookup from user space."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:90
#, no-wrap
msgid "B<NETLINK_CONNECTOR>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:96
msgid ""
"Kernel connector.  See I<Documentation/connector/*> in the Linux kernel "
"source tree for further information."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:96
#, no-wrap
msgid "B<NETLINK_NETFILTER>"
msgstr ""

#.  FIXME More details on NETLINK_NETFILTER needed.
#. type: Plain text
#: build/C/man7/netlink.7:100
msgid "Netfilter subsystem."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:100
#, no-wrap
msgid "B<NETLINK_IP6_FW>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:106
msgid ""
"Transport IPv6 packets from netfilter to user space.  Used by I<ip6_queue> "
"kernel module."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:106
#, no-wrap
msgid "B<NETLINK_DNRTMSG>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:109
msgid "DECnet routing messages."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:109
#, no-wrap
msgid "B<NETLINK_KOBJECT_UEVENT>"
msgstr ""

#.  FIXME More details on NETLINK_KOBJECT_UEVENT needed.
#. type: Plain text
#: build/C/man7/netlink.7:113
msgid "Kernel messages to user space."
msgstr ""

#. type: TP
#: build/C/man7/netlink.7:113
#, no-wrap
msgid "B<NETLINK_GENERIC>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:116
msgid "Generic netlink family for simplified netlink usage."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:126
msgid ""
"Netlink messages consist of a byte stream with one or multiple I<nlmsghdr> "
"headers and associated payload.  The byte stream should be accessed only "
"with the standard B<NLMSG_*> macros.  See B<netlink>(3)  for further "
"information."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:134
msgid ""
"In multipart messages (multiple I<nlmsghdr> headers with associated payload "
"in one byte stream) the first and all following headers have the "
"B<NLM_F_MULTI> flag set, except for the last header which has the type "
"B<NLMSG_DONE>."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:138
msgid "After each I<nlmsghdr> the payload follows."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:148
#, no-wrap
msgid ""
"struct nlmsghdr {\n"
"    __u32 nlmsg_len;    /* Length of message including header. */\n"
"    __u16 nlmsg_type;   /* Type of message content. */\n"
"    __u16 nlmsg_flags;  /* Additional flags. */\n"
"    __u32 nlmsg_seq;    /* Sequence number. */\n"
"    __u32 nlmsg_pid;    /* Sender port ID. */\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:161
msgid ""
"I<nlmsg_type> can be one of the standard message types: B<NLMSG_NOOP> "
"message is to be ignored, B<NLMSG_ERROR> message signals an error and the "
"payload contains an I<nlmsgerr> structure, B<NLMSG_DONE> message terminates "
"a multipart message."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:168
#, no-wrap
msgid ""
"struct nlmsgerr {\n"
"    int error;        /* Negative errno or 0 for acknowledgements */\n"
"    struct nlmsghdr msg;  /* Message header that caused the error */\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:176
msgid ""
"A netlink family usually specifies more message types, see the appropriate "
"manual pages for that, for example, B<rtnetlink>(7)  for B<NETLINK_ROUTE>."
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:180
#, no-wrap
msgid "Standard flag bits in I<nlmsg_flags>\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:181 build/C/man7/netlink.7:199 build/C/man7/netlink.7:224 build/C/man7/rtnetlink.7:99 build/C/man7/rtnetlink.7:167 build/C/man7/rtnetlink.7:218 build/C/man7/rtnetlink.7:244 build/C/man7/rtnetlink.7:324 build/C/man7/rtnetlink.7:442
#, no-wrap
msgid "_\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:182
#, no-wrap
msgid "NLM_F_REQUEST:Must be set on all request messages.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:183
#, no-wrap
msgid "NLM_F_MULTI:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:184
#, no-wrap
msgid "The message is part of a multipart message terminated by\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:185
#, no-wrap
msgid "B<NLMSG_DONE>.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:186 build/C/man7/netlink.7:204 build/C/man7/netlink.7:209 build/C/man7/rtnetlink.7:224 build/C/man7/rtnetlink.7:227 build/C/man7/rtnetlink.7:236 build/C/man7/rtnetlink.7:248 build/C/man7/rtnetlink.7:273 build/C/man7/rtnetlink.7:295
#, no-wrap
msgid "T}\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:187
#, no-wrap
msgid "NLM_F_ACK:Request for an acknowledgment on success.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:188
#, no-wrap
msgid "NLM_F_ECHO:Echo this request.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:198
#, no-wrap
msgid "Additional flag bits for GET requests\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:200
#, no-wrap
msgid "NLM_F_ROOT:Return the complete table instead of a single entry.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:201
#, no-wrap
msgid "NLM_F_MATCH:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:202
#, no-wrap
msgid "Return all entries matching criteria passed in message content.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:203
#, no-wrap
msgid "Not implemented yet.\n"
msgstr ""

#.  FIXME NLM_F_ATOMIC is not used any more?
#. type: tbl table
#: build/C/man7/netlink.7:206
#, no-wrap
msgid "NLM_F_ATOMIC:Return an atomic snapshot of the table.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:207
#, no-wrap
msgid "NLM_F_DUMP:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:208
#, no-wrap
msgid "Convenience macro; equivalent to (NLM_F_ROOT|NLM_F_MATCH).\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:218
msgid ""
"Note that B<NLM_F_ATOMIC> requires the B<CAP_NET_ADMIN> capability or an "
"effective UID of 0."
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:223
#, no-wrap
msgid "Additional flag bits for NEW requests\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:225
#, no-wrap
msgid "NLM_F_REPLACE:Replace existing matching object.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:226
#, no-wrap
msgid "NLM_F_EXCL:Don't replace if the object already exists.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:227
#, no-wrap
msgid "NLM_F_CREATE:Create object if it doesn't already exist.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/netlink.7:228
#, no-wrap
msgid "NLM_F_APPEND:Add to the end of the object list.\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:245
msgid ""
"I<nlmsg_seq> and I<nlmsg_pid> are used to track messages.  I<nlmsg_pid> "
"shows the origin of the message.  Note that there isn't a 1:1 relationship "
"between I<nlmsg_pid> and the PID of the process if the message originated "
"from a netlink socket.  See the B<ADDRESS FORMATS> section for further "
"information."
msgstr ""

#.  FIXME Explain more about nlmsg_seq and nlmsg_pid.
#. type: Plain text
#: build/C/man7/netlink.7:252
msgid "Both I<nlmsg_seq> and I<nlmsg_pid> are opaque to netlink core."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:270
msgid ""
"Netlink is not a reliable protocol.  It tries its best to deliver a message "
"to its destination(s), but may drop messages when an out-of-memory condition "
"or other error occurs.  For reliable transfer the sender can request an "
"acknowledgement from the receiver by setting the B<NLM_F_ACK> flag.  An "
"acknowledgment is an B<NLMSG_ERROR> packet with the error field set to 0.  "
"The application must generate acknowledgements for received messages "
"itself.  The kernel tries to send an B<NLMSG_ERROR> message for every failed "
"packet.  A user process should follow this convention too."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:281
msgid ""
"However, reliable transmissions from kernel to user are impossible in any "
"case.  The kernel can't send a netlink message if the socket buffer is full: "
"the message will be dropped and the kernel and the user-space process will "
"no longer have the same view of kernel state.  It is up to the application "
"to detect when this happens (via the B<ENOBUFS> error returned by "
"B<recvmsg>(2))  and resynchronize."
msgstr ""

#. type: SS
#: build/C/man7/netlink.7:281
#, no-wrap
msgid "Address formats"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:291
msgid ""
"The I<sockaddr_nl> structure describes a netlink client in user space or in "
"the kernel.  A I<sockaddr_nl> can be either unicast (only sent to one peer) "
"or sent to netlink multicast groups (I<nl_groups> not equal 0)."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:300
#, no-wrap
msgid ""
"struct sockaddr_nl {\n"
"    sa_family_t     nl_family;  /* AF_NETLINK */\n"
"    unsigned short  nl_pad;     /* Zero. */\n"
"    pid_t           nl_pid;     /* Port ID. */\n"
"    __u32           nl_groups;  /* Multicast groups mask. */\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:331
msgid ""
"I<nl_pid> is the unicast address of netlink socket.  It's always 0 if the "
"destination is in the kernel.  For a user-space process, I<nl_pid> is "
"usually the PID of the process owning the destination socket.  However, "
"I<nl_pid> identifies a netlink socket, not a process.  If a process owns "
"several netlink sockets, then I<nl_pid> can be equal to the process ID only "
"for at most one socket.  There are two ways to assign I<nl_pid> to a netlink "
"socket.  If the application sets I<nl_pid> before calling B<bind>(2), then "
"it is up to the application to make sure that I<nl_pid> is unique.  If the "
"application sets it to 0, the kernel takes care of assigning it.  The kernel "
"assigns the process ID to the first netlink socket the process opens and "
"assigns a unique I<nl_pid> to every netlink socket that the process "
"subsequently creates."
msgstr ""

#.  commit d629b836d151d43332492651dd841d32e57ebe3b
#. type: Plain text
#: build/C/man7/netlink.7:368
msgid ""
"I<nl_groups> is a bit mask with every bit representing a netlink group "
"number.  Each netlink family has a set of 32 multicast groups.  When "
"B<bind>(2)  is called on the socket, the I<nl_groups> field in the "
"I<sockaddr_nl> should be set to a bit mask of the groups which it wishes to "
"listen to.  The default value for this field is zero which means that no "
"multicasts will be received.  A socket may multicast messages to any of the "
"multicast groups by setting I<nl_groups> to a bit mask of the groups it "
"wishes to send to when it calls B<sendmsg>(2)  or does a B<connect>(2).  "
"Only processes with an effective UID of 0 or the B<CAP_NET_ADMIN> capability "
"may send or listen to a netlink multicast group.  Since Linux 2.6.13, "
"messages can't be broadcast to multiple groups.  Any replies to a message "
"received for a multicast group should be sent back to the sending PID and "
"the multicast group.  Some Linux kernel subsystems may additionally allow "
"other users to send and/or receive messages.  As at Linux 3.0, the "
"B<NETLINK_KOBJECT_UEVENT>, B<NETLINK_GENERIC>, B<NETLINK_ROUTE>, and "
"B<NETLINK_SELINUX> groups allow other users to receive messages.  No groups "
"allow other users to send messages."
msgstr ""

#. type: SH
#: build/C/man7/netlink.7:368 build/C/man7/rtnetlink.7:465
#, no-wrap
msgid "VERSIONS"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:370
msgid "The socket interface to netlink is a new feature of Linux 2.2."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:374
msgid ""
"Linux 2.0 supported a more primitive device-based netlink interface (which "
"is still available as a compatibility option).  This obsolete interface is "
"not described here."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:376
msgid "NETLINK_SELINUX appeared in Linux 2.6.4."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:378
msgid "NETLINK_AUDIT appeared in Linux 2.6.6."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:380
msgid "NETLINK_KOBJECT_UEVENT appeared in Linux 2.6.10."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:382
msgid "NETLINK_W1 and NETLINK_FIB_LOOKUP appeared in Linux 2.6.13."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:385
msgid ""
"NETLINK_INET_DIAG, NETLINK_CONNECTOR and NETLINK_NETFILTER appeared in Linux "
"2.6.14."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:387
msgid "NETLINK_GENERIC and NETLINK_ISCSI appeared in Linux 2.6.15."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:393
msgid ""
"It is often better to use netlink via I<libnetlink> or I<libnl> than via the "
"low-level kernel interface."
msgstr ""

#. type: SH
#: build/C/man7/netlink.7:393 build/C/man3/rtnetlink.3:84 build/C/man7/rtnetlink.7:468
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:395
msgid "This manual page is not complete."
msgstr ""

#. type: SH
#: build/C/man7/netlink.7:395 build/C/man3/rtnetlink.3:86
#, no-wrap
msgid "EXAMPLE"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:403
msgid ""
"The following example creates a B<NETLINK_ROUTE> netlink socket which will "
"listen to the B<RTMGRP_LINK> (network interface create/delete/up/down "
"events) and B<RTMGRP_IPV4_IFADDR> (IPv4 addresses add/delete events) "
"multicast groups."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:407
#, no-wrap
msgid "struct sockaddr_nl sa;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:411
#, no-wrap
msgid ""
"memset(&sa, 0, sizeof(sa));\n"
"sa.nl_family = AF_NETLINK;\n"
"sa.nl_groups = RTMGRP_LINK | RTMGRP_IPV4_IFADDR;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:414
#, no-wrap
msgid ""
"fd = socket(AF_NETLINK, SOCK_RAW, NETLINK_ROUTE);\n"
"bind(fd, (struct sockaddr *) &sa, sizeof(sa));\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:421
msgid ""
"The next example demonstrates how to send a netlink message to the kernel "
"(pid 0).  Note that application must take care of message sequence numbers "
"in order to reliably track acknowledgements."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:428
#, no-wrap
msgid ""
"struct nlmsghdr *nh;    /* The nlmsghdr with payload to send. */\n"
"struct sockaddr_nl sa;\n"
"struct iovec iov = { nh, nh-E<gt>nlmsg_len };\n"
"struct msghdr msg;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:436
#, no-wrap
msgid ""
"msg = { &sa, sizeof(sa), &iov, 1, NULL, 0, 0 };\n"
"memset(&sa, 0, sizeof(sa));\n"
"sa.nl_family = AF_NETLINK;\n"
"nh-E<gt>nlmsg_pid = 0;\n"
"nh-E<gt>nlmsg_seq = ++sequence_number;\n"
"/* Request an ack from kernel by setting NLM_F_ACK. */\n"
"nh-E<gt>nlmsg_flags |= NLM_F_ACK;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:438
#, no-wrap
msgid "sendmsg(fd, &msg, 0);\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:442
msgid "And the last example is about reading netlink message."
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:451
#, no-wrap
msgid ""
"int len;\n"
"char buf[4096];\n"
"struct iovec iov = { buf, sizeof(buf) };\n"
"struct sockaddr_nl sa;\n"
"struct msghdr msg;\n"
"struct nlmsghdr *nh;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:454
#, no-wrap
msgid ""
"msg = { &sa, sizeof(sa), &iov, 1, NULL, 0, 0 };\n"
"len = recvmsg(fd, &msg, 0);\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:460
#, no-wrap
msgid ""
"for (nh = (struct nlmsghdr *) buf; NLMSG_OK (nh, len);\n"
"     nh = NLMSG_NEXT (nh, len)) {\n"
"    /* The end of multipart message. */\n"
"    if (nh-E<gt>nlmsg_type == NLMSG_DONE)\n"
"        return;\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:464
#, no-wrap
msgid ""
"    if (nh-E<gt>nlmsg_type == NLMSG_ERROR)\n"
"        /* Do some error handling. */\n"
"    ...\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:468
#, no-wrap
msgid ""
"    /* Continue with parsing payload. */\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:475
msgid "B<cmsg>(3), B<netlink>(3), B<capabilities>(7), B<rtnetlink>(7)"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:479
msgid ""
"E<.UR ftp://ftp.inr.ac.ru\\:/ip-routing\\:/iproute2*> information about "
"libnetlink E<.UE>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:483
msgid ""
"E<.UR http://people.suug.ch\\:/~tgr\\:/libnl/> information about libnl "
"E<.UE>"
msgstr ""

#. type: Plain text
#: build/C/man7/netlink.7:485
msgid "RFC 3549 \"Linux Netlink as an IP Services Protocol\""
msgstr ""

#. type: TH
#: build/C/man3/rtnetlink.3:12 build/C/man7/rtnetlink.7:15
#, no-wrap
msgid "RTNETLINK"
msgstr ""

#. type: TH
#: build/C/man3/rtnetlink.3:12
#, no-wrap
msgid "2012-03-24"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:15
msgid "rtnetlink - macros to manipulate rtnetlink messages"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:17 build/C/man7/rtnetlink.7:20
msgid "B<#include E<lt>asm/types.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:19 build/C/man7/rtnetlink.7:22
msgid "B<#include E<lt>linux/netlink.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:21 build/C/man7/rtnetlink.7:24
msgid "B<#include E<lt>linux/rtnetlink.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:23 build/C/man7/rtnetlink.7:26
msgid "B<#include E<lt>sys/socket.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:26 build/C/man7/rtnetlink.7:28
msgid ""
"B<rtnetlink_socket = socket(AF_NETLINK, int >I<socket_type>B<, "
"NETLINK_ROUTE);>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:28
msgid "B<int RTA_OK(struct rtattr *>I<rta>B<, int >I<rtabuflen>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:30
msgid "B<void *RTA_DATA(struct rtattr *>I<rta>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:32
msgid "B<unsigned int RTA_PAYLOAD(struct rtattr *>I<rta>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:35
msgid ""
"B<struct rtattr *RTA_NEXT(struct rtattr *>I<rta>B<, unsigned int "
">I<rtabuflen>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:37
msgid "B<unsigned int RTA_LENGTH(unsigned int >I<length>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:39
msgid "B<unsigned int RTA_SPACE(unsigned int >I<length>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:46
msgid ""
"All B<rtnetlink>(7)  messages consist of a B<netlink>(7)  message header and "
"appended attributes.  The attributes should be manipulated only using the "
"macros provided here."
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:57
msgid ""
"B<RTA_OK(>I<rta>B<, >I<attrlen>B<)> returns true if I<rta> points to a valid "
"routing attribute; I<attrlen> is the running length of the attribute "
"buffer.  When not true then you must assume there are no more attributes in "
"the message, even if I<attrlen> is nonzero."
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:60
msgid ""
"B<RTA_DATA(>I<rta>B<)> returns a pointer to the start of this attribute's "
"data."
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:63
msgid "B<RTA_PAYLOAD(>I<rta>B<)> returns the length of this attribute's data."
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:72
msgid ""
"B<RTA_NEXT(>I<rta>B<, >I<attrlen>B<)> gets the next attribute after I<rta>.  "
"Calling this macro will update I<attrlen>.  You should use B<RTA_OK> to "
"check the validity of the returned pointer."
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:77
msgid ""
"B<RTA_LENGTH(>I<len>B<)> returns the length which is required for I<len> "
"bytes of data plus the header."
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:82
msgid ""
"B<RTA_SPACE(>I<len>B<)> returns the amount of space which will be needed in "
"a message with I<len> bytes of data."
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:86 build/C/man7/rtnetlink.7:470
msgid "This manual page is incomplete."
msgstr ""

#.  FIXME ? would be better to use libnetlink in the EXAMPLE code here
#. type: Plain text
#: build/C/man3/rtnetlink.3:90
msgid "Creating a rtnetlink message to set the MTU of a device:"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:92
#, no-wrap
msgid "    #include E<lt>linux/rtnetlink.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:94
#, no-wrap
msgid "    ...\n"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:100
#, no-wrap
msgid ""
"    struct {\n"
"        struct nlmsghdr  nh;\n"
"        struct ifinfomsg if;\n"
"        char             attrbuf[512];\n"
"    } req;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:103
#, no-wrap
msgid ""
"    struct rtattr *rta;\n"
"    unsigned int mtu = 1000;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:105
#, no-wrap
msgid "    int rtnetlink_sk = socket(AF_NETLINK, SOCK_DGRAM, NETLINK_ROUTE);\n"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:121
#, no-wrap
msgid ""
"    memset(&req, 0, sizeof(req));\n"
"    req.nh.nlmsg_len = NLMSG_LENGTH(sizeof(struct ifinfomsg));\n"
"    req.nh.nlmsg_flags = NLM_F_REQUEST;\n"
"    req.nh.nlmsg_type = RTM_NEWLINK;\n"
"    req.if.ifi_family = AF_UNSPEC;\n"
"    req.if.ifi_index = INTERFACE_INDEX;\n"
"    req.if.ifi_change = 0xffffffff; /* ??? */\n"
"    rta = (struct rtattr *)(((char *) &req) +\n"
"                             NLMSG_ALIGN(req.nh.nlmsg_len));\n"
"    rta-E<gt>rta_type = IFLA_MTU;\n"
"    rta-E<gt>rta_len = RTA_LENGTH(sizeof(unsigned int));\n"
"    req.n.nlmsg_len = NLMSG_ALIGN(req.nh.nlmsg_len) +\n"
"                                  RTA_LENGTH(sizeof(mtu));\n"
"    memcpy(RTA_DATA(rta), &mtu, sizeof(mtu));\n"
"    send(rtnetlink_sk, &req, req.nh.nlmsg_len);\n"
msgstr ""

#. type: Plain text
#: build/C/man3/rtnetlink.3:126
msgid "B<netlink>(3), B<netlink>(7), B<rtnetlink>(7)"
msgstr ""

#. type: TH
#: build/C/man7/rtnetlink.7:15
#, no-wrap
msgid "2013-03-05"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:18
msgid "rtnetlink - Linux IPv4 routing socket"
msgstr ""

#.  FIXME ? all these macros could be moved to rtnetlink(3)
#. type: Plain text
#: build/C/man7/rtnetlink.7:42
msgid ""
"Rtnetlink allows the kernel's routing tables to be read and altered.  It is "
"used within the kernel to communicate between various subsystems, though "
"this usage is not documented here, and for communication with user-space "
"programs.  Network routes, IP addresses, link parameters, neighbor setups, "
"queueing disciplines, traffic classes and packet classifiers may all be "
"controlled through B<NETLINK_ROUTE> sockets.  It is based on netlink "
"messages; see B<netlink>(7)  for more information."
msgstr ""

#. type: SS
#: build/C/man7/rtnetlink.7:42
#, no-wrap
msgid "Routing attributes"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:44
msgid "Some rtnetlink messages have optional attributes after the initial header:"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:52
#, no-wrap
msgid ""
"struct rtattr {\n"
"    unsigned short rta_len;    /* Length of option */\n"
"    unsigned short rta_type;   /* Type of option */\n"
"    /* Data follows */\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:58
msgid ""
"These attributes should be manipulated using only the RTA_* macros or "
"libnetlink, see B<rtnetlink>(3)."
msgstr ""

#. type: SS
#: build/C/man7/rtnetlink.7:58
#, no-wrap
msgid "Messages"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:61
msgid ""
"Rtnetlink consists of these message types (in addition to standard netlink "
"messages):"
msgstr ""

#. type: TP
#: build/C/man7/rtnetlink.7:61
#, no-wrap
msgid "B<RTM_NEWLINK>, B<RTM_DELLINK>, B<RTM_GETLINK>"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:69
msgid ""
"Create, remove or get information about a specific network interface.  These "
"messages contain an I<ifinfomsg> structure followed by a series of I<rtattr> "
"structures."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:78
#, no-wrap
msgid ""
"struct ifinfomsg {\n"
"    unsigned char  ifi_family; /* AF_UNSPEC */\n"
"    unsigned short ifi_type;   /* Device type */\n"
"    int            ifi_index;  /* Interface index */\n"
"    unsigned int   ifi_flags;  /* Device flags  */\n"
"    unsigned int   ifi_change; /* change mask */\n"
"};\n"
msgstr ""

#.  FIXME ifi_type
#. type: Plain text
#: build/C/man7/rtnetlink.7:92
msgid ""
"I<ifi_flags> contains the device flags, see B<netdevice>(7); I<ifi_index> is "
"the unique interface index (since Linux 3.7, it is possible to feed a "
"nonzero value with the B<RTM_NEWLINK> message, thus creating a link with the "
"given I<ifindex>); I<ifi_change> is reserved for future use and should be "
"always set to 0xFFFFFFFF."
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:97
#, no-wrap
msgid "Routing attributes\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:98 build/C/man7/rtnetlink.7:166 build/C/man7/rtnetlink.7:323
#, no-wrap
msgid "rta_type:value type:description\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:100
#, no-wrap
msgid "IFLA_UNSPEC:-:unspecified.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:101
#, no-wrap
msgid "IFLA_ADDRESS:hardware address:interface L2 address\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:102
#, no-wrap
msgid "IFLA_BROADCAST:hardware address:L2 broadcast address.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:103
#, no-wrap
msgid "IFLA_IFNAME:asciiz string:Device name.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:104
#, no-wrap
msgid "IFLA_MTU:unsigned int:MTU of the device.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:105
#, no-wrap
msgid "IFLA_LINK:int:Link type.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:106
#, no-wrap
msgid "IFLA_QDISC:asciiz string:Queueing discipline.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:107
#, no-wrap
msgid "IFLA_STATS:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:108
#, no-wrap
msgid "see below\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:109
#, no-wrap
msgid "T}:Interface Statistics.\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:119
msgid ""
"The value type for B<IFLA_STATS> is I<struct rtnl_link_stats> (I<struct "
"net_device_stats> in Linux 2.4 and earlier)."
msgstr ""

#. type: TP
#: build/C/man7/rtnetlink.7:119
#, no-wrap
msgid "B<RTM_NEWADDR>, B<RTM_DELADDR>, B<RTM_GETADDR>"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:132
msgid ""
"Add, remove or receive information about an IP address associated with an "
"interface.  In Linux 2.2, an interface can carry multiple IP addresses, this "
"replaces the alias device concept in 2.0.  In Linux 2.2, these messages "
"support IPv4 and IPv6 addresses.  They contain an I<ifaddrmsg> structure, "
"optionally followed by I<rtattr> routing attributes."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:141
#, no-wrap
msgid ""
"struct ifaddrmsg {\n"
"    unsigned char ifa_family;    /* Address type */\n"
"    unsigned char ifa_prefixlen; /* Prefixlength of address */\n"
"    unsigned char ifa_flags;     /* Address flags */\n"
"    unsigned char ifa_scope;     /* Address scope */\n"
"    int           ifa_index;     /* Interface index */\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:161
msgid ""
"I<ifa_family> is the address family type (currently B<AF_INET> or "
"B<AF_INET6>), I<ifa_prefixlen> is the length of the address mask of the "
"address if defined for the family (like for IPv4), I<ifa_scope> is the "
"address scope, I<ifa_index> is the interface index of the interface the "
"address is associated with.  I<ifa_flags> is a flag word of "
"B<IFA_F_SECONDARY> for secondary address (old alias interface), "
"B<IFA_F_PERMANENT> for a permanent address set by the user and other "
"undocumented flags."
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:165 build/C/man7/rtnetlink.7:322 build/C/man7/rtnetlink.7:440
#, no-wrap
msgid "Attributes\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:168
#, no-wrap
msgid "IFA_UNSPEC:-:unspecified.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:169
#, no-wrap
msgid "IFA_ADDRESS:raw protocol address:interface address\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:170
#, no-wrap
msgid "IFA_LOCAL:raw protocol address:local address\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:171
#, no-wrap
msgid "IFA_LABEL:asciiz string:name of the interface\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:172
#, no-wrap
msgid "IFA_BROADCAST:raw protocol address:broadcast address.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:173
#, no-wrap
msgid "IFA_ANYCAST:raw protocol address:anycast address\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:174
#, no-wrap
msgid "IFA_CACHEINFO:struct ifa_cacheinfo:Address information.\n"
msgstr ""

#. type: TP
#: build/C/man7/rtnetlink.7:177
#, no-wrap
msgid "B<RTM_NEWROUTE>, B<RTM_DELROUTE>, B<RTM_GETROUTE>"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:197
msgid ""
"Create, remove or receive information about a network route.  These messages "
"contain an I<rtmsg> structure with an optional sequence of I<rtattr> "
"structures following.  For B<RTM_GETROUTE>, setting I<rtm_dst_len> and "
"I<rtm_src_len> to 0 means you get all entries for the specified routing "
"table.  For the other fields, except I<rtm_table> and I<rtm_protocol>, 0 is "
"the wildcard."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:204
#, no-wrap
msgid ""
"struct rtmsg {\n"
"    unsigned char rtm_family;   /* Address family of route */\n"
"    unsigned char rtm_dst_len;  /* Length of destination */\n"
"    unsigned char rtm_src_len;  /* Length of source */\n"
"    unsigned char rtm_tos;      /* TOS filter */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:209
#, no-wrap
msgid ""
"    unsigned char rtm_table;    /* Routing table ID */\n"
"    unsigned char rtm_protocol; /* Routing protocol; see below */\n"
"    unsigned char rtm_scope;    /* See below */\n"
"    unsigned char rtm_type;     /* See below */\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:212
#, no-wrap
msgid ""
"    unsigned int  rtm_flags;\n"
"};\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:217
#, no-wrap
msgid "rtm_type:Route type\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:219
#, no-wrap
msgid "RTN_UNSPEC:unknown route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:220
#, no-wrap
msgid "RTN_UNICAST:a gateway or direct route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:221
#, no-wrap
msgid "RTN_LOCAL:a local interface route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:222
#, no-wrap
msgid "RTN_BROADCAST:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:223
#, no-wrap
msgid "a local broadcast route (sent as a broadcast)\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:225
#, no-wrap
msgid "RTN_ANYCAST:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:226
#, no-wrap
msgid "a local broadcast route (sent as a unicast)\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:228
#, no-wrap
msgid "RTN_MULTICAST:a multicast route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:229
#, no-wrap
msgid "RTN_BLACKHOLE:a packet dropping route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:230
#, no-wrap
msgid "RTN_UNREACHABLE:an unreachable destination\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:231
#, no-wrap
msgid "RTN_PROHIBIT:a packet rejection route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:232
#, no-wrap
msgid "RTN_THROW:continue routing lookup in another table\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:233
#, no-wrap
msgid "RTN_NAT:a network address translation rule\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:234
#, no-wrap
msgid "RTN_XRESOLVE:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:235
#, no-wrap
msgid "refer to an external resolver (not implemented)\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:243
#, no-wrap
msgid "rtm_protocol:Route origin.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:245
#, no-wrap
msgid "RTPROT_UNSPEC:unknown\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:246
#, no-wrap
msgid "RTPROT_REDIRECT:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:247
#, no-wrap
msgid "by an ICMP redirect (currently unused)\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:249
#, no-wrap
msgid "RTPROT_KERNEL:by the kernel\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:250
#, no-wrap
msgid "RTPROT_BOOT:during boot\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:251
#, no-wrap
msgid "RTPROT_STATIC:by the administrator\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:263
msgid ""
"Values larger than B<RTPROT_STATIC> are not interpreted by the kernel, they "
"are just for user information.  They may be used to tag the source of a "
"routing information or to distinguish between multiple routing daemons.  See "
"I<E<lt>linux/rtnetlink.hE<gt>> for the routing daemon identifiers which are "
"already assigned."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:266
msgid "I<rtm_scope> is the distance to the destination:"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:270
#, no-wrap
msgid "RT_SCOPE_UNIVERSE:global route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:271
#, no-wrap
msgid "RT_SCOPE_SITE:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:272
#, no-wrap
msgid "interior route in the local autonomous system\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:274
#, no-wrap
msgid "RT_SCOPE_LINK:route on this link\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:275
#, no-wrap
msgid "RT_SCOPE_HOST:route on the local host\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:276
#, no-wrap
msgid "RT_SCOPE_NOWHERE:destination doesn't exist\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:285
msgid ""
"The values between B<RT_SCOPE_UNIVERSE> and B<RT_SCOPE_SITE> are available "
"to the user."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:289
msgid "The I<rtm_flags> have the following meanings:"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:293
#, no-wrap
msgid "RTM_F_NOTIFY:T{\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:294
#, no-wrap
msgid "if the route changes, notify the user via rtnetlink\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:296
#, no-wrap
msgid "RTM_F_CLONED:route is cloned from another route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:297
#, no-wrap
msgid "RTM_F_EQUALIZE:a multipath equalizer (not yet implemented)\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:303
msgid "I<rtm_table> specifies the routing table"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:306
#, no-wrap
msgid "RT_TABLE_UNSPEC:an unspecified routing table\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:307
#, no-wrap
msgid "RT_TABLE_DEFAULT:the default table\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:308
#, no-wrap
msgid "RT_TABLE_MAIN:the main table\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:309
#, no-wrap
msgid "RT_TABLE_LOCAL:the local table\n"
msgstr ""

#.  Keep table on same page
#. type: Plain text
#: build/C/man7/rtnetlink.7:317
msgid ""
"The user may assign arbitrary values between B<RT_TABLE_UNSPEC> and "
"B<RT_TABLE_DEFAULT>."
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:325
#, no-wrap
msgid "RTA_UNSPEC:-:ignored.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:326
#, no-wrap
msgid "RTA_DST:protocol address:Route destination address.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:327
#, no-wrap
msgid "RTA_SRC:protocol address:Route source address.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:328
#, no-wrap
msgid "RTA_IIF:int:Input interface index.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:329
#, no-wrap
msgid "RTA_OIF:int:Output interface index.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:330
#, no-wrap
msgid "RTA_GATEWAY:protocol address:The gateway of the route\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:331
#, no-wrap
msgid "RTA_PRIORITY:int:Priority of route.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:332
#, no-wrap
msgid "RTA_PREFSRC::\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:333
#, no-wrap
msgid "RTA_METRICS:int:Route metric\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:334
#, no-wrap
msgid "RTA_MULTIPATH::\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:335
#, no-wrap
msgid "RTA_PROTOINFO::\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:336
#, no-wrap
msgid "RTA_FLOW::\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:337
#, no-wrap
msgid "RTA_CACHEINFO::\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:341
msgid "B<Fill these values in!>"
msgstr ""

#. type: TP
#: build/C/man7/rtnetlink.7:341
#, no-wrap
msgid "B<RTM_NEWNEIGH>, B<RTM_DELNEIGH>, B<RTM_GETNEIGH>"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:348
msgid ""
"Add, remove or receive information about a neighbor table entry (e.g., an "
"ARP entry).  The message contains an I<ndmsg> structure."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:357
#, no-wrap
msgid ""
"struct ndmsg {\n"
"    unsigned char ndm_family;\n"
"    int           ndm_ifindex;  /* Interface index */\n"
"    __u16         ndm_state;    /* State */\n"
"    __u8          ndm_flags;    /* Flags */\n"
"    __u8          ndm_type;\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:364
#, no-wrap
msgid ""
"struct nda_cacheinfo {\n"
"    __u32         ndm_confirmed;\n"
"    __u32         ndm_used;\n"
"    __u32         ndm_updated;\n"
"    __u32         ndm_refcnt;\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:368
msgid "I<ndm_state> is a bit mask of the following states:"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:371
#, no-wrap
msgid "NUD_INCOMPLETE:a currently resolving cache entry\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:372
#, no-wrap
msgid "NUD_REACHABLE:a confirmed working cache entry\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:373
#, no-wrap
msgid "NUD_STALE:an expired cache entry\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:374
#, no-wrap
msgid "NUD_DELAY:an entry waiting for a timer\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:375
#, no-wrap
msgid "NUD_PROBE:a cache entry that is currently reprobed\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:376
#, no-wrap
msgid "NUD_FAILED:an invalid cache entry\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:377
#, no-wrap
msgid "NUD_NOARP:a device with no destination cache\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:378
#, no-wrap
msgid "NUD_PERMANENT:a static entry\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:384
msgid "Valid I<ndm_flags> are:"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:387
#, no-wrap
msgid "NTF_PROXY:a proxy arp entry\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:388
#, no-wrap
msgid "NTF_ROUTER:an IPv6 router\n"
msgstr ""

#.  FIXME
#.  document the members of the struct better
#. type: Plain text
#: build/C/man7/rtnetlink.7:398
msgid "The I<rtattr> struct has the following meanings for the I<rta_type> field:"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:401
#, no-wrap
msgid "NDA_UNSPEC:unknown type\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:402
#, no-wrap
msgid "NDA_DST:a neighbor cache n/w layer destination address\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:403
#, no-wrap
msgid "NDA_LLADDR:a neighbor cache link layer address\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:404
#, no-wrap
msgid "NDA_CACHEINFO:cache statistics.\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:414
msgid ""
"If the I<rta_type> field is B<NDA_CACHEINFO> then a I<struct nda_cacheinfo> "
"header follows"
msgstr ""

#. type: TP
#: build/C/man7/rtnetlink.7:414
#, no-wrap
msgid "B<RTM_NEWRULE>, B<RTM_DELRULE>, B<RTM_GETRULE>"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:419
msgid "Add, delete or retrieve a routing rule.  Carries a I<struct rtmsg>"
msgstr ""

#. type: TP
#: build/C/man7/rtnetlink.7:419
#, no-wrap
msgid "B<RTM_NEWQDISC>, B<RTM_DELQDISC>, B<RTM_GETQDISC>"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:426
msgid ""
"Add, remove or get a queueing discipline.  The message contains a I<struct "
"tcmsg> and may be followed by a series of attributes."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:435
#, no-wrap
msgid ""
"struct tcmsg {\n"
"    unsigned char    tcm_family;\n"
"    int              tcm_ifindex;   /* interface index */\n"
"    __u32            tcm_handle;    /* Qdisc handle */\n"
"    __u32            tcm_parent;    /* Parent qdisc */\n"
"    __u32            tcm_info;\n"
"};\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:441
#, no-wrap
msgid "rta_type:value type:Description\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:443
#, no-wrap
msgid "TCA_UNSPEC:-:unspecified\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:444
#, no-wrap
msgid "TCA_KIND:asciiz string:Name of queueing discipline\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:445
#, no-wrap
msgid "TCA_OPTIONS:byte sequence:Qdisc-specific options follow\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:446
#, no-wrap
msgid "TCA_STATS:struct tc_stats:Qdisc statistics.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:447
#, no-wrap
msgid "TCA_XSTATS:qdisc-specific:Module-specific statistics.\n"
msgstr ""

#. type: tbl table
#: build/C/man7/rtnetlink.7:448
#, no-wrap
msgid "TCA_RATE:struct tc_estimator:Rate limit.\n"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:453
msgid ""
"In addition, various other qdisc-module-specific attributes are allowed.  "
"For more information see the appropriate include files."
msgstr ""

#. type: TP
#: build/C/man7/rtnetlink.7:453
#, no-wrap
msgid "B<RTM_NEWTCLASS>, B<RTM_DELTCLASS>, B<RTM_GETTCLASS>"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:459
msgid ""
"Add, remove or get a traffic class.  These messages contain a I<struct "
"tcmsg> as described above."
msgstr ""

#. type: TP
#: build/C/man7/rtnetlink.7:459
#, no-wrap
msgid "B<RTM_NEWTFILTER>, B<RTM_DELTFILTER>, B<RTM_GETTFILTER>"
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:465
msgid ""
"Add, remove or receive information about a traffic filter.  These messages "
"contain a I<struct tcmsg> as described above."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:468
msgid "B<rtnetlink> is a new feature of Linux 2.2."
msgstr ""

#. type: Plain text
#: build/C/man7/rtnetlink.7:475
msgid "B<cmsg>(3), B<rtnetlink>(3), B<ip>(7), B<netlink>(7)"
msgstr ""
