# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-04-23 07:52+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man7/inotify.7:26
#, no-wrap
msgid "INOTIFY"
msgstr ""

#. type: TH
#: build/C/man7/inotify.7:26
#, no-wrap
msgid "2011-12-07"
msgstr ""

#. type: TH
#: build/C/man7/inotify.7:26 build/C/man2/inotify_add_watch.2:29 build/C/man2/inotify_init.2:29 build/C/man2/inotify_rm_watch.2:28
#, no-wrap
msgid "Linux"
msgstr ""

#. type: TH
#: build/C/man7/inotify.7:26 build/C/man2/inotify_add_watch.2:29 build/C/man2/inotify_init.2:29 build/C/man2/inotify_rm_watch.2:28
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#: build/C/man7/inotify.7:27 build/C/man2/inotify_add_watch.2:30 build/C/man2/inotify_init.2:30 build/C/man2/inotify_rm_watch.2:29
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:29
msgid "inotify - monitoring file system events"
msgstr ""

#. type: SH
#: build/C/man7/inotify.7:29 build/C/man2/inotify_add_watch.2:36 build/C/man2/inotify_init.2:39 build/C/man2/inotify_rm_watch.2:37
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:37
msgid ""
"The I<inotify> API provides a mechanism for monitoring file system events.  "
"Inotify can be used to monitor individual files, or to monitor directories.  "
"When a directory is monitored, inotify will return events for the directory "
"itself, and for files inside the directory."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:47
msgid ""
"The following system calls are used with this API: B<inotify_init>(2)  (or "
"B<inotify_init1>(2)), B<inotify_add_watch>(2), B<inotify_rm_watch>(2), "
"B<read>(2), and B<close>(2)."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:56
msgid ""
"B<inotify_init>(2)  creates an inotify instance and returns a file "
"descriptor referring to the inotify instance.  The more recent "
"B<inotify_init1>(2)  is like B<inotify_init>(2), but provides some extra "
"functionality."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:69
msgid ""
"B<inotify_add_watch>(2)  manipulates the \"watch list\" associated with an "
"inotify instance.  Each item (\"watch\") in the watch list specifies the "
"pathname of a file or directory, along with some set of events that the "
"kernel should monitor for the file referred to by that pathname.  "
"B<inotify_add_watch>(2)  either creates a new watch item, or modifies an "
"existing watch.  Each watch has a unique \"watch descriptor\", an integer "
"returned by B<inotify_add_watch>(2)  when the watch is created."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:72
msgid "B<inotify_rm_watch>(2)  removes an item from an inotify watch list."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:78
msgid ""
"When all file descriptors referring to an inotify instance have been closed, "
"the underlying object and its resources are freed for reuse by the kernel; "
"all associated watches are automatically freed."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:91
msgid ""
"To determine what events have occurred, an application B<read>(2)s from the "
"inotify file descriptor.  If no events have so far occurred, then, assuming "
"a blocking file descriptor, B<read>(2)  will block until at least one event "
"occurs (unless interrupted by a signal, in which case the call fails with "
"the error B<EINTR>; see B<signal>(7))."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:95
msgid ""
"Each successful B<read>(2)  returns a buffer containing one or more of the "
"following structures:"
msgstr ""

#.  FIXME . The type of the 'wd' field should probably be "int32_t".
#.  I submitted a patch to fix this.  See the LKML thread
#.  "[patch] Fix type errors in inotify interfaces", 18 Nov 2008
#.  Glibc bug filed: http://sources.redhat.com/bugzilla/show_bug.cgi?id=7040
#. type: Plain text
#: build/C/man7/inotify.7:110
#, no-wrap
msgid ""
"struct inotify_event {\n"
"    int      wd;       /* Watch descriptor */\n"
"    uint32_t mask;     /* Mask of events */\n"
"    uint32_t cookie;   /* Unique cookie associating related\n"
"                          events (for rename(2)) */\n"
"    uint32_t len;      /* Size of I<name> field */\n"
"    char     name[];   /* Optional null-terminated name */\n"
"};\n"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:117
msgid ""
"I<wd> identifies the watch for which this event occurs.  It is one of the "
"watch descriptors returned by a previous call to B<inotify_add_watch>(2)."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:120
msgid "I<mask> contains bits that describe the event that occurred (see below)."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:132
msgid ""
"I<cookie> is a unique integer that connects related events.  Currently this "
"is only used for rename events, and allows the resulting pair of "
"B<IN_MOVE_FROM> and B<IN_MOVE_TO> events to be connected by the "
"application.  For all other event types, I<cookie> is set to 0."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:141
msgid ""
"The I<name> field is only present when an event is returned for a file "
"inside a watched directory; it identifies the file pathname relative to the "
"watched directory.  This pathname is null-terminated, and may include "
"further null bytes to align subsequent reads to a suitable address boundary."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:151
msgid ""
"The I<len> field counts all of the bytes in I<name>, including the null "
"bytes; the length of each I<inotify_event> structure is thus "
"I<sizeof(inotify_event)+len>."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:161
msgid ""
"The behavior when the buffer given to B<read>(2)  is too small to return "
"information about the next event depends on the kernel version: in kernels "
"before 2.6.21, B<read>(2)  returns 0; since kernel 2.6.21, B<read>(2)  fails "
"with the error B<EINVAL>."
msgstr ""

#. type: SS
#: build/C/man7/inotify.7:161
#, no-wrap
msgid "inotify events"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:181
msgid ""
"The B<inotify_add_watch>(2)  I<mask> argument and the I<mask> field of the "
"I<inotify_event> structure returned when B<read>(2)ing an inotify file "
"descriptor are both bit masks identifying inotify events.  The following "
"bits can be specified in I<mask> when calling B<inotify_add_watch>(2)  and "
"may be returned in the I<mask> field returned by B<read>(2):"
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:184
#, no-wrap
msgid "B<IN_ACCESS>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:187
msgid "File was accessed (read) (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:187
#, no-wrap
msgid "B<IN_ATTRIB>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:191
msgid ""
"Metadata changed, e.g., permissions, timestamps, extended attributes, link "
"count (since Linux 2.6.25), UID, GID, etc. (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:191
#, no-wrap
msgid "B<IN_CLOSE_WRITE>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:194
msgid "File opened for writing was closed (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:194
#, no-wrap
msgid "B<IN_CLOSE_NOWRITE>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:197
msgid "File not opened for writing was closed (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:197
#, no-wrap
msgid "B<IN_CREATE>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:200
msgid "File/directory created in watched directory (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:200
#, no-wrap
msgid "B<IN_DELETE>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:203
msgid "File/directory deleted from watched directory (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:203
#, no-wrap
msgid "B<IN_DELETE_SELF>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:206
msgid "Watched file/directory was itself deleted."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:206
#, no-wrap
msgid "B<IN_MODIFY>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:209
msgid "File was modified (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:209
#, no-wrap
msgid "B<IN_MOVE_SELF>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:212
msgid "Watched file/directory was itself moved."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:212
#, no-wrap
msgid "B<IN_MOVED_FROM>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:215
msgid "File moved out of watched directory (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:215
#, no-wrap
msgid "B<IN_MOVED_TO>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:218
msgid "File moved into watched directory (*)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:218
#, no-wrap
msgid "B<IN_OPEN>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:221
msgid "File was opened (*)."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:231
msgid ""
"When monitoring a directory, the events marked with an asterisk (*) above "
"can occur for files in the directory, in which case the I<name> field in the "
"returned I<inotify_event> structure identifies the name of the file within "
"the directory."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:239
msgid ""
"The B<IN_ALL_EVENTS> macro is defined as a bit mask of all of the above "
"events.  This macro can be used as the I<mask> argument when calling "
"B<inotify_add_watch>(2)."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:248
msgid ""
"Two additional convenience macros are B<IN_MOVE>, which equates to "
"IN_MOVED_FROM|IN_MOVED_TO, and B<IN_CLOSE>, which equates to "
"IN_CLOSE_WRITE|IN_CLOSE_NOWRITE."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:253
msgid ""
"The following further bits can be specified in I<mask> when calling "
"B<inotify_add_watch>(2):"
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:256
#, no-wrap
msgid "B<IN_DONT_FOLLOW> (since Linux 2.6.15)"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:259
msgid "Don't dereference I<pathname> if it is a symbolic link."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:259
#, no-wrap
msgid "B<IN_EXCL_UNLINK> (since Linux 2.6.36)"
msgstr ""

#.  commit 8c1934c8d70b22ca8333b216aec6c7d09fdbd6a6
#. type: Plain text
#: build/C/man7/inotify.7:275
msgid ""
"By default, when watching events on the children of a directory, events are "
"generated for children even after they have been unlinked from the "
"directory.  This can result in large numbers of uninteresting events for "
"some applications (e.g., if watching I</tmp>, in which many applications "
"create temporary files whose names are immediately unlinked).  Specifying "
"B<IN_EXCL_UNLINK> changes the default behavior, so that events are not "
"generated for children after they have been unlinked from the watched "
"directory."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:275
#, no-wrap
msgid "B<IN_MASK_ADD>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:279
msgid ""
"Add (OR) events to watch mask for this pathname if it already exists "
"(instead of replacing mask)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:279
#, no-wrap
msgid "B<IN_ONESHOT>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:283
msgid "Monitor I<pathname> for one event, then remove from watch list."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:283
#, no-wrap
msgid "B<IN_ONLYDIR> (since Linux 2.6.15)"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:286
msgid "Only watch I<pathname> if it is a directory."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:293
msgid "The following bits may be set in the I<mask> field returned by B<read>(2):"
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:296
#, no-wrap
msgid "B<IN_IGNORED>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:300
msgid ""
"Watch was removed explicitly (B<inotify_rm_watch>(2))  or automatically "
"(file was deleted, or file system was unmounted)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:300
#, no-wrap
msgid "B<IN_ISDIR>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:303
msgid "Subject of this event is a directory."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:303
#, no-wrap
msgid "B<IN_Q_OVERFLOW>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:306
msgid "Event queue overflowed (I<wd> is -1 for this event)."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:306
#, no-wrap
msgid "B<IN_UNMOUNT>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:309
msgid "File system containing watched object was unmounted."
msgstr ""

#. type: SS
#: build/C/man7/inotify.7:311
#, no-wrap
msgid "/proc interfaces"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:314
msgid ""
"The following interfaces can be used to limit the amount of kernel memory "
"consumed by inotify:"
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:314
#, no-wrap
msgid "I</proc/sys/fs/inotify/max_queued_events>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:323
msgid ""
"The value in this file is used when an application calls B<inotify_init>(2)  "
"to set an upper limit on the number of events that can be queued to the "
"corresponding inotify instance.  Events in excess of this limit are dropped, "
"but an B<IN_Q_OVERFLOW> event is always generated."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:323
#, no-wrap
msgid "I</proc/sys/fs/inotify/max_user_instances>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:327
msgid ""
"This specifies an upper limit on the number of inotify instances that can be "
"created per real user ID."
msgstr ""

#. type: TP
#: build/C/man7/inotify.7:327
#, no-wrap
msgid "I</proc/sys/fs/inotify/max_user_watches>"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:331
msgid ""
"This specifies an upper limit on the number of watches that can be created "
"per real user ID."
msgstr ""

#. type: SH
#: build/C/man7/inotify.7:331 build/C/man2/inotify_add_watch.2:115 build/C/man2/inotify_init.2:91 build/C/man2/inotify_rm_watch.2:67
#, no-wrap
msgid "VERSIONS"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:339
msgid ""
"Inotify was merged into the 2.6.13 Linux kernel.  The required library "
"interfaces were added to glibc in version 2.4.  (B<IN_DONT_FOLLOW>, "
"B<IN_MASK_ADD>, and B<IN_ONLYDIR> were only added in version 2.5.)"
msgstr ""

#. type: SH
#: build/C/man7/inotify.7:339 build/C/man2/inotify_add_watch.2:117 build/C/man2/inotify_init.2:96 build/C/man2/inotify_rm_watch.2:69
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:341
msgid "The inotify API is Linux-specific."
msgstr ""

#. type: SH
#: build/C/man7/inotify.7:341
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:348
msgid ""
"Inotify file descriptors can be monitored using B<select>(2), B<poll>(2), "
"and B<epoll>(7).  When an event is available, the file descriptor indicates "
"as readable."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:377
msgid ""
"Since Linux 2.6.25, signal-driven I/O notification is available for inotify "
"file descriptors; see the discussion of B<F_SETFL> (for setting the "
"B<O_ASYNC> flag), B<F_SETOWN>, and B<F_SETSIG> in B<fcntl>(2).  The "
"I<siginfo_t> structure (described in B<sigaction>(2))  that is passed to the "
"signal handler has the following fields set: I<si_fd> is set to the inotify "
"file descriptor number; I<si_signo> is set to the signal number; I<si_code> "
"is set to B<POLL_IN>; and B<POLLIN> is set in I<si_band>."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:387
msgid ""
"If successive output inotify events produced on the inotify file descriptor "
"are identical (same I<wd>, I<mask>, I<cookie>, and I<name>)  then they are "
"coalesced into a single event if the older event has not yet been read (but "
"see BUGS)."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:393
msgid ""
"The events returned by reading from an inotify file descriptor form an "
"ordered queue.  Thus, for example, it is guaranteed that when renaming from "
"one directory to another, events will be produced in the correct order on "
"the inotify file descriptor."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:399
msgid ""
"The B<FIONREAD> B<ioctl>(2)  returns the number of bytes available to read "
"from an inotify file descriptor."
msgstr ""

#. type: SS
#: build/C/man7/inotify.7:399
#, no-wrap
msgid "Limitations and caveats"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:404
msgid ""
"Inotify monitoring of directories is not recursive: to monitor "
"subdirectories under a directory, additional watches must be created.  This "
"can take a significant amount time for large directory trees."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:407
msgid ""
"The inotify API provides no information about the user or process that "
"triggered the inotify event."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:412
msgid ""
"Note that the event queue can overflow.  In this case, events are lost.  "
"Robust applications should handle the possibility of lost events gracefully."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:416
msgid ""
"The inotify API identifies affected files by filename.  However, by the time "
"an application processes an inotify event, the filename may already have "
"been deleted or renamed."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:423
msgid ""
"If monitoring an entire directory subtree, and a new subdirectory is created "
"in that tree, be aware that by the time you create a watch for the new "
"subdirectory, new files may already have been created in the subdirectory.  "
"Therefore, you may want to scan the contents of the subdirectory immediately "
"after adding the watch."
msgstr ""

#. type: SH
#: build/C/man7/inotify.7:423
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:428
msgid "In kernels before 2.6.16, the B<IN_ONESHOT> I<mask> flag does not work."
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:436
msgid ""
"Before kernel 2.6.25, the kernel code that was intended to coalesce "
"successive identical events (i.e., the two most recent events could "
"potentially be coalesced if the older had not yet been read)  instead "
"checked if the most recent event could be coalesced with the I<oldest> "
"unread event."
msgstr ""

#. type: SH
#: build/C/man7/inotify.7:436 build/C/man2/inotify_add_watch.2:119 build/C/man2/inotify_init.2:98 build/C/man2/inotify_rm_watch.2:71
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:444
msgid ""
"B<inotify_add_watch>(2), B<inotify_init>(2), B<inotify_init1>(2), "
"B<inotify_rm_watch>(2), B<read>(2), B<stat>(2), "
"I<Documentation/filesystems/inotify.txt>."
msgstr ""

#. type: SH
#: build/C/man7/inotify.7:444 build/C/man2/inotify_add_watch.2:123 build/C/man2/inotify_init.2:102 build/C/man2/inotify_rm_watch.2:75
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man7/inotify.7:451 build/C/man2/inotify_add_watch.2:130 build/C/man2/inotify_init.2:109 build/C/man2/inotify_rm_watch.2:82
msgid ""
"This page is part of release 3.38 of the Linux I<man-pages> project.  A "
"description of the project, and information about reporting bugs, can be "
"found at http://www.kernel.org/doc/man-pages/."
msgstr ""

#. type: TH
#: build/C/man2/inotify_add_watch.2:29
#, no-wrap
msgid "INOTIFY_ADD_WATCH"
msgstr ""

#. type: TH
#: build/C/man2/inotify_add_watch.2:29
#, no-wrap
msgid "2010-10-20"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:32
msgid "inotify_add_watch - add a watch to an initialized inotify instance"
msgstr ""

#. type: SH
#: build/C/man2/inotify_add_watch.2:32 build/C/man2/inotify_init.2:32 build/C/man2/inotify_rm_watch.2:31
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:34 build/C/man2/inotify_rm_watch.2:33
msgid "B<#include E<lt>sys/inotify.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:36
msgid ""
"B<int inotify_add_watch(int >I<fd>B<, const char *>I<pathname>B<, uint32_t "
">I<mask>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:55
msgid ""
"B<inotify_add_watch>()  adds a new watch, or modifies an existing watch, for "
"the file whose location is specified in I<pathname>; the caller must have "
"read permission for this file.  The I<fd> argument is a file descriptor "
"referring to the inotify instance whose watch list is to be modified.  The "
"events to be monitored for I<pathname> are specified in the I<mask> bit-mask "
"argument.  See B<inotify>(7)  for a description of the bits that can be set "
"in I<mask>."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:69
msgid ""
"A successful call to B<inotify_add_watch>()  returns the unique watch "
"descriptor associated with I<pathname> for this inotify instance.  If "
"I<pathname> was not previously being watched by this inotify instance, then "
"the watch descriptor is newly allocated.  If I<pathname> was already being "
"watched, then the descriptor for the existing watch is returned."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:80
msgid ""
"The watch descriptor is returned by later B<read>(2)s from the inotify file "
"descriptor.  These reads fetch I<inotify_event> structures (see "
"B<inotify>(7))  indicating file system events; the watch descriptor inside "
"this structure identifies the object for which the event occurred."
msgstr ""

#. type: SH
#: build/C/man2/inotify_add_watch.2:80 build/C/man2/inotify_init.2:71 build/C/man2/inotify_rm_watch.2:49
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:87
msgid ""
"On success, B<inotify_add_watch>()  returns a nonnegative watch descriptor.  "
"On error -1 is returned and I<errno> is set appropriately."
msgstr ""

#. type: SH
#: build/C/man2/inotify_add_watch.2:87 build/C/man2/inotify_init.2:76 build/C/man2/inotify_rm_watch.2:55
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: TP
#: build/C/man2/inotify_add_watch.2:88
#, no-wrap
msgid "B<EACCES>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:91
msgid "Read access to the given file is not permitted."
msgstr ""

#. type: TP
#: build/C/man2/inotify_add_watch.2:91 build/C/man2/inotify_rm_watch.2:56
#, no-wrap
msgid "B<EBADF>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:94
msgid "The given file descriptor is not valid."
msgstr ""

#. type: TP
#: build/C/man2/inotify_add_watch.2:94
#, no-wrap
msgid "B<EFAULT>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:98
msgid "I<pathname> points outside of the process's accessible address space."
msgstr ""

#. type: TP
#: build/C/man2/inotify_add_watch.2:98 build/C/man2/inotify_init.2:77 build/C/man2/inotify_rm_watch.2:60
#, no-wrap
msgid "B<EINVAL>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:103
msgid ""
"The given event mask contains no valid events; or I<fd> is not an inotify "
"file descriptor."
msgstr ""

#. type: TP
#: build/C/man2/inotify_add_watch.2:103
#, no-wrap
msgid "B<ENOENT>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:108
msgid ""
"A directory component in I<pathname> does not exist or is a dangling "
"symbolic link."
msgstr ""

#. type: TP
#: build/C/man2/inotify_add_watch.2:108 build/C/man2/inotify_init.2:88
#, no-wrap
msgid "B<ENOMEM>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:111
msgid "Insufficient kernel memory was available."
msgstr ""

#. type: TP
#: build/C/man2/inotify_add_watch.2:111
#, no-wrap
msgid "B<ENOSPC>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:115
msgid ""
"The user limit on the total number of inotify watches was reached or the "
"kernel failed to allocate a needed resource."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:117 build/C/man2/inotify_rm_watch.2:69
msgid "Inotify was merged into the 2.6.13 Linux kernel."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:119 build/C/man2/inotify_rm_watch.2:71
msgid "This system call is Linux-specific."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_add_watch.2:123
msgid "B<inotify_init>(2), B<inotify_rm_watch>(2), B<inotify>(7)"
msgstr ""

#. type: TH
#: build/C/man2/inotify_init.2:29
#, no-wrap
msgid "INOTIFY_INIT"
msgstr ""

#. type: TH
#: build/C/man2/inotify_init.2:29
#, no-wrap
msgid "2008-10-10"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:32
msgid "inotify_init, inotify_init1 - initialize an inotify instance"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:35
#, no-wrap
msgid "B<#include E<lt>sys/inotify.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:38
#, no-wrap
msgid ""
"B<int inotify_init(void);>\n"
"B<int inotify_init1(int >I<flags>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:43
msgid ""
"B<inotify_init>()  initializes a new inotify instance and returns a file "
"descriptor associated with a new inotify event queue."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:53
msgid ""
"If I<flags> is 0, then B<inotify_init1>()  is the same as "
"B<inotify_init>().  The following values can be bitwise ORed in I<flags> to "
"obtain different behavior:"
msgstr ""

#. type: TP
#: build/C/man2/inotify_init.2:53
#, no-wrap
msgid "B<IN_NONBLOCK>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:61
msgid ""
"Set the B<O_NONBLOCK> file status flag on the new open file description.  "
"Using this flag saves extra calls to B<fcntl>(2)  to achieve the same "
"result."
msgstr ""

#. type: TP
#: build/C/man2/inotify_init.2:61
#, no-wrap
msgid "B<IN_CLOEXEC>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:71
msgid ""
"Set the close-on-exec (B<FD_CLOEXEC>)  flag on the new file descriptor.  See "
"the description of the B<O_CLOEXEC> flag in B<open>(2)  for reasons why this "
"may be useful."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:76
msgid ""
"On success, these system calls return a new file descriptor.  On error, -1 "
"is returned, and I<errno> is set to indicate the error."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:82
msgid "(B<inotify_init1>())  An invalid value was specified in I<flags>."
msgstr ""

#. type: TP
#: build/C/man2/inotify_init.2:82
#, no-wrap
msgid "B<EMFILE>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:85
msgid "The user limit on the total number of inotify instances has been reached."
msgstr ""

#. type: TP
#: build/C/man2/inotify_init.2:85
#, no-wrap
msgid "B<ENFILE>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:88
msgid "The system limit on the total number of file descriptors has been reached."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:91
msgid "Insufficient kernel memory is available."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:96
msgid ""
"B<inotify_init>()  first appeared in Linux 2.6.13.  B<inotify_init1>()  was "
"added in Linux 2.6.27."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:98
msgid "These system calls are Linux-specific."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_init.2:102
msgid "B<inotify_add_watch>(2), B<inotify_rm_watch>(2), B<inotify>(7)"
msgstr ""

#. type: TH
#: build/C/man2/inotify_rm_watch.2:28
#, no-wrap
msgid "INOTIFY_RM_WATCH"
msgstr ""

#. type: TH
#: build/C/man2/inotify_rm_watch.2:28
#, no-wrap
msgid "2010-10-15"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_rm_watch.2:31
msgid "inotify_rm_watch - remove an existing watch from an inotify instance"
msgstr ""

#.  Before glibc 2.10, the second argument was types as uint32_t.
#.  http://sources.redhat.com/bugzilla/show_bug.cgi?id=7040
#. type: Plain text
#: build/C/man2/inotify_rm_watch.2:37
msgid "B<int inotify_rm_watch(int >I<fd>B<, int >I<wd>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_rm_watch.2:43
msgid ""
"B<inotify_rm_watch>()  removes the watch associated with the watch "
"descriptor I<wd> from the inotify instance associated with the file "
"descriptor I<fd>."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_rm_watch.2:49
msgid ""
"Removing a watch causes an B<IN_IGNORED> event to be generated for this "
"watch descriptor.  (See B<inotify>(7).)"
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_rm_watch.2:55
msgid ""
"On success, B<inotify_rm_watch>()  returns zero, or -1 if an error occurred "
"(in which case, I<errno> is set appropriately)."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_rm_watch.2:60
msgid "I<fd> is not a valid file descriptor."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_rm_watch.2:67
msgid ""
"The watch descriptor I<wd> is not valid; or I<fd> is not an inotify file "
"descriptor."
msgstr ""

#. type: Plain text
#: build/C/man2/inotify_rm_watch.2:75
msgid "B<inotify_add_watch>(2), B<inotify_init>(2), B<inotify>(7)"
msgstr ""
