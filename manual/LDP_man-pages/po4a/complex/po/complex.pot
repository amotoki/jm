# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-04-23 07:52+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man3/cabs.3:4
#, no-wrap
msgid "CABS"
msgstr ""

#. type: TH
#: build/C/man3/cabs.3:4 build/C/man3/carg.3:4 build/C/man3/casin.3:4 build/C/man3/casinh.3:4 build/C/man3/ccos.3:4 build/C/man3/ccosh.3:4 build/C/man3/cexp.3:4 build/C/man3/cimag.3:4 build/C/man3/clog.3:4 build/C/man3/clog10.3:4 build/C/man3/conj.3:4 build/C/man3/cpow.3:4 build/C/man3/creal.3:4 build/C/man3/csin.3:4 build/C/man3/csinh.3:4 build/C/man3/csqrt.3:4 build/C/man3/ctan.3:4 build/C/man3/ctanh.3:4
#, no-wrap
msgid "2008-08-11"
msgstr ""

#. type: TH
#: build/C/man3/cabs.3:4 build/C/man3/cacos.3:5 build/C/man3/cacosh.3:5 build/C/man3/carg.3:4 build/C/man3/casin.3:4 build/C/man3/casinh.3:4 build/C/man3/catan.3:5 build/C/man3/catanh.3:5 build/C/man3/ccos.3:4 build/C/man3/ccosh.3:4 build/C/man3/cerf.3:4 build/C/man3/cexp.3:4 build/C/man3/cexp2.3:4 build/C/man3/cimag.3:4 build/C/man3/clog.3:4 build/C/man3/clog10.3:4 build/C/man3/clog2.3:4 build/C/man7/complex.7:4 build/C/man3/conj.3:4 build/C/man3/cpow.3:4 build/C/man3/cproj.3:4 build/C/man3/creal.3:4 build/C/man3/csin.3:4 build/C/man3/csinh.3:4 build/C/man3/csqrt.3:4 build/C/man3/ctan.3:4 build/C/man3/ctanh.3:4
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:5 build/C/man3/cacos.3:6 build/C/man3/cacosh.3:6 build/C/man3/carg.3:5 build/C/man3/casin.3:5 build/C/man3/casinh.3:5 build/C/man3/catan.3:6 build/C/man3/catanh.3:6 build/C/man3/ccos.3:5 build/C/man3/ccosh.3:5 build/C/man3/cerf.3:5 build/C/man3/cexp.3:5 build/C/man3/cexp2.3:5 build/C/man3/cimag.3:5 build/C/man3/clog.3:5 build/C/man3/clog10.3:5 build/C/man3/clog2.3:5 build/C/man7/complex.7:5 build/C/man3/conj.3:5 build/C/man3/cpow.3:5 build/C/man3/cproj.3:5 build/C/man3/creal.3:5 build/C/man3/csin.3:5 build/C/man3/csinh.3:5 build/C/man3/csqrt.3:5 build/C/man3/ctan.3:5 build/C/man3/ctanh.3:5
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:7
msgid "cabs, cabsf, cabsl - absolute value of a complex number"
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:7 build/C/man3/cacos.3:8 build/C/man3/cacosh.3:8 build/C/man3/carg.3:7 build/C/man3/casin.3:7 build/C/man3/casinh.3:7 build/C/man3/catan.3:8 build/C/man3/catanh.3:8 build/C/man3/ccos.3:7 build/C/man3/ccosh.3:7 build/C/man3/cerf.3:7 build/C/man3/cexp.3:7 build/C/man3/cexp2.3:7 build/C/man3/cimag.3:7 build/C/man3/clog.3:7 build/C/man3/clog10.3:7 build/C/man3/clog2.3:7 build/C/man7/complex.7:7 build/C/man3/conj.3:7 build/C/man3/cpow.3:7 build/C/man3/cproj.3:7 build/C/man3/creal.3:7 build/C/man3/csin.3:7 build/C/man3/csinh.3:7 build/C/man3/csqrt.3:7 build/C/man3/ctan.3:7 build/C/man3/ctanh.3:7
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:9 build/C/man3/cacos.3:10 build/C/man3/cacosh.3:10 build/C/man3/carg.3:9 build/C/man3/casin.3:9 build/C/man3/casinh.3:9 build/C/man3/catan.3:10 build/C/man3/catanh.3:10 build/C/man3/ccos.3:9 build/C/man3/ccosh.3:9 build/C/man3/cerf.3:9 build/C/man3/cexp.3:9 build/C/man3/cexp2.3:9 build/C/man3/cimag.3:9 build/C/man3/clog.3:9 build/C/man3/clog10.3:11 build/C/man3/clog2.3:9 build/C/man7/complex.7:9 build/C/man3/conj.3:9 build/C/man3/cproj.3:9 build/C/man3/creal.3:9 build/C/man3/csin.3:9 build/C/man3/csinh.3:9 build/C/man3/csqrt.3:9 build/C/man3/ctan.3:9 build/C/man3/ctanh.3:9
msgid "B<#include E<lt>complex.hE<gt>>"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:11
msgid "B<double cabs(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:13
msgid "B<float cabsf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:15
msgid "B<long double cabsl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:17 build/C/man3/cacos.3:18 build/C/man3/cacosh.3:18 build/C/man3/carg.3:17 build/C/man3/casin.3:17 build/C/man3/casinh.3:17 build/C/man3/catan.3:18 build/C/man3/catanh.3:18 build/C/man3/ccos.3:17 build/C/man3/ccosh.3:17 build/C/man3/cerf.3:23 build/C/man3/cexp.3:17 build/C/man3/cexp2.3:17 build/C/man3/cimag.3:17 build/C/man3/clog.3:17 build/C/man3/clog10.3:19 build/C/man3/conj.3:17 build/C/man3/cproj.3:17 build/C/man3/creal.3:17 build/C/man3/csin.3:17 build/C/man3/csinh.3:17 build/C/man3/csqrt.3:17 build/C/man3/ctan.3:17 build/C/man3/ctanh.3:17
msgid "Link with I<-lm>."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:17 build/C/man3/cacos.3:18 build/C/man3/cacosh.3:18 build/C/man3/carg.3:17 build/C/man3/casin.3:17 build/C/man3/casinh.3:17 build/C/man3/catan.3:18 build/C/man3/catanh.3:18 build/C/man3/ccos.3:17 build/C/man3/ccosh.3:17 build/C/man3/cerf.3:23 build/C/man3/cexp.3:17 build/C/man3/cexp2.3:17 build/C/man3/cimag.3:17 build/C/man3/clog.3:17 build/C/man3/clog10.3:19 build/C/man3/clog2.3:17 build/C/man7/complex.7:9 build/C/man3/conj.3:17 build/C/man3/cpow.3:20 build/C/man3/cproj.3:17 build/C/man3/creal.3:17 build/C/man3/csin.3:17 build/C/man3/csinh.3:17 build/C/man3/csqrt.3:17 build/C/man3/ctan.3:17 build/C/man3/ctanh.3:17
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:23
msgid ""
"The B<cabs>()  function returns the absolute value of the complex number "
"I<z>.  The result is a real number."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:23 build/C/man3/cacos.3:33 build/C/man3/cacosh.3:36 build/C/man3/carg.3:45 build/C/man3/casin.3:32 build/C/man3/casinh.3:32 build/C/man3/catan.3:31 build/C/man3/catanh.3:33 build/C/man3/ccos.3:23 build/C/man3/ccosh.3:23 build/C/man3/cexp.3:27 build/C/man3/cimag.3:28 build/C/man3/clog.3:36 build/C/man3/clog10.3:32 build/C/man3/conj.3:29 build/C/man3/cpow.3:28 build/C/man3/cproj.3:27 build/C/man3/creal.3:28 build/C/man3/csin.3:23 build/C/man3/csinh.3:23 build/C/man3/csqrt.3:24 build/C/man3/ctan.3:23 build/C/man3/ctanh.3:24
#, no-wrap
msgid "VERSIONS"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:25 build/C/man3/cacos.3:35 build/C/man3/cacosh.3:38 build/C/man3/carg.3:47 build/C/man3/casin.3:34 build/C/man3/casinh.3:34 build/C/man3/catan.3:33 build/C/man3/catanh.3:35 build/C/man3/ccos.3:25 build/C/man3/ccosh.3:25 build/C/man3/cexp.3:29 build/C/man3/cimag.3:30 build/C/man3/clog.3:38 build/C/man3/clog10.3:34 build/C/man3/conj.3:31 build/C/man3/cpow.3:30 build/C/man3/cproj.3:29 build/C/man3/creal.3:30 build/C/man3/csin.3:25 build/C/man3/csinh.3:25 build/C/man3/csqrt.3:26 build/C/man3/ctan.3:25 build/C/man3/ctanh.3:26
msgid "These functions first appeared in glibc in version 2.1."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:25 build/C/man3/cacos.3:35 build/C/man3/cacosh.3:38 build/C/man3/carg.3:47 build/C/man3/casin.3:34 build/C/man3/casinh.3:34 build/C/man3/catan.3:33 build/C/man3/catanh.3:35 build/C/man3/ccos.3:25 build/C/man3/ccosh.3:25 build/C/man3/cerf.3:32 build/C/man3/cexp.3:29 build/C/man3/cexp2.3:20 build/C/man3/cimag.3:30 build/C/man3/clog.3:38 build/C/man3/clog10.3:34 build/C/man3/clog2.3:31 build/C/man3/conj.3:31 build/C/man3/cpow.3:30 build/C/man3/cproj.3:29 build/C/man3/creal.3:30 build/C/man3/csin.3:25 build/C/man3/csinh.3:25 build/C/man3/csqrt.3:26 build/C/man3/ctan.3:25 build/C/man3/ctanh.3:26
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:27 build/C/man3/cacos.3:37 build/C/man3/cacosh.3:40 build/C/man3/carg.3:49 build/C/man3/casin.3:36 build/C/man3/casinh.3:36 build/C/man3/catan.3:35 build/C/man3/catanh.3:37 build/C/man3/ccos.3:27 build/C/man3/ccosh.3:27 build/C/man3/cexp.3:31 build/C/man3/cimag.3:32 build/C/man3/clog.3:40 build/C/man3/conj.3:33 build/C/man3/cpow.3:32 build/C/man3/cproj.3:31 build/C/man3/creal.3:32 build/C/man3/csin.3:27 build/C/man3/csinh.3:27 build/C/man3/csqrt.3:28 build/C/man3/ctan.3:27 build/C/man3/ctanh.3:28
msgid "C99."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:27 build/C/man3/cimag.3:32 build/C/man3/cproj.3:31 build/C/man3/creal.3:32
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:32
msgid ""
"The function is actually an alias for I<hypot(a,\\ b)> (or, equivalently, "
"I<sqrt(a*a\\ +\\ b*b)>)."
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:32 build/C/man3/cacos.3:70 build/C/man3/cacosh.3:70 build/C/man3/carg.3:49 build/C/man3/casin.3:36 build/C/man3/casinh.3:36 build/C/man3/catan.3:66 build/C/man3/catanh.3:67 build/C/man3/ccos.3:27 build/C/man3/ccosh.3:27 build/C/man3/cerf.3:37 build/C/man3/cexp.3:31 build/C/man3/cexp2.3:25 build/C/man3/cimag.3:35 build/C/man3/clog.3:40 build/C/man3/clog10.3:37 build/C/man3/clog2.3:36 build/C/man7/complex.7:52 build/C/man3/conj.3:33 build/C/man3/cpow.3:32 build/C/man3/cproj.3:35 build/C/man3/creal.3:35 build/C/man3/csin.3:27 build/C/man3/csinh.3:27 build/C/man3/csqrt.3:28 build/C/man3/ctan.3:27 build/C/man3/ctanh.3:28
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:37
msgid "B<abs>(3), B<cimag>(3), B<hypot>(3), B<complex>(7)"
msgstr ""

#. type: SH
#: build/C/man3/cabs.3:37 build/C/man3/cacos.3:74 build/C/man3/cacosh.3:76 build/C/man3/carg.3:52 build/C/man3/casin.3:40 build/C/man3/casinh.3:42 build/C/man3/catan.3:71 build/C/man3/catanh.3:73 build/C/man3/ccos.3:33 build/C/man3/ccosh.3:33 build/C/man3/cerf.3:40 build/C/man3/cexp.3:37 build/C/man3/cexp2.3:30 build/C/man3/cimag.3:39 build/C/man3/clog.3:46 build/C/man3/clog10.3:43 build/C/man3/clog2.3:42 build/C/man7/complex.7:79 build/C/man3/conj.3:37 build/C/man3/cpow.3:36 build/C/man3/cproj.3:38 build/C/man3/creal.3:39 build/C/man3/csin.3:33 build/C/man3/csinh.3:33 build/C/man3/csqrt.3:32 build/C/man3/ctan.3:33 build/C/man3/ctanh.3:34
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man3/cabs.3:44 build/C/man3/cacos.3:81 build/C/man3/cacosh.3:83 build/C/man3/carg.3:59 build/C/man3/casin.3:47 build/C/man3/casinh.3:49 build/C/man3/catan.3:78 build/C/man3/catanh.3:80 build/C/man3/ccos.3:40 build/C/man3/ccosh.3:40 build/C/man3/cerf.3:47 build/C/man3/cexp.3:44 build/C/man3/cexp2.3:37 build/C/man3/cimag.3:46 build/C/man3/clog.3:53 build/C/man3/clog10.3:50 build/C/man3/clog2.3:49 build/C/man7/complex.7:86 build/C/man3/conj.3:44 build/C/man3/cpow.3:43 build/C/man3/cproj.3:45 build/C/man3/creal.3:46 build/C/man3/csin.3:40 build/C/man3/csinh.3:40 build/C/man3/csqrt.3:39 build/C/man3/ctan.3:40 build/C/man3/ctanh.3:41
msgid ""
"This page is part of release 3.38 of the Linux I<man-pages> project.  A "
"description of the project, and information about reporting bugs, can be "
"found at http://www.kernel.org/doc/man-pages/."
msgstr ""

#. type: TH
#: build/C/man3/cacos.3:5
#, no-wrap
msgid "CACOS"
msgstr ""

#. type: TH
#: build/C/man3/cacos.3:5 build/C/man3/cacosh.3:5 build/C/man3/catan.3:5 build/C/man3/catanh.3:5
#, no-wrap
msgid "2011-09-15"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:8
msgid "cacos, cacosf, cacosl - complex arc cosine"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:12
msgid "B<double complex cacos(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:14
msgid "B<float complex cacosf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:16
msgid "B<long double complex cacosl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:27
msgid ""
"The B<cacos>()  function calculates the complex arc cosine of I<z>.  If "
"I<y\\ =\\ cacos(z)>, then I<z\\ =\\ ccos(y)>.  The real part of I<y> is "
"chosen in the interval [0,pi]."
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:29 build/C/man3/cacosh.3:32 build/C/man3/carg.3:39 build/C/man3/casin.3:28 build/C/man3/casinh.3:28 build/C/man3/catan.3:27 build/C/man3/catanh.3:29 build/C/man3/cexp.3:23 build/C/man3/cimag.3:24 build/C/man3/clog.3:28 build/C/man3/conj.3:25 build/C/man3/creal.3:24
msgid "One has:"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:32
#, no-wrap
msgid "    cacos(z) = -i * clog(z + i * csqrt(1 - z * z))\n"
msgstr ""

#. type: SH
#: build/C/man3/cacos.3:37 build/C/man3/cacosh.3:40 build/C/man3/catan.3:35 build/C/man3/catanh.3:37 build/C/man7/complex.7:33
#, no-wrap
msgid "EXAMPLE"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:40 build/C/man3/cacosh.3:43 build/C/man3/catan.3:38 build/C/man3/catanh.3:40
#, no-wrap
msgid "/* Link with \"-lm\" */\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:45 build/C/man3/cacosh.3:48 build/C/man3/catan.3:43 build/C/man3/catanh.3:45
#, no-wrap
msgid ""
"#include E<lt>complex.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:51 build/C/man3/catan.3:49
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    double complex z, c, f;\n"
"    double complex i = I;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:56 build/C/man3/cacosh.3:58 build/C/man3/catan.3:54 build/C/man3/catanh.3:55
#, no-wrap
msgid ""
"    if (argc != 3) {\n"
"        fprintf(stderr, \"Usage: %s E<lt>realE<gt> E<lt>imagE<gt>\\en\", "
"argv[0]);\n"
"        exit(EXIT_FAILURE);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:58 build/C/man3/cacosh.3:60 build/C/man3/catan.3:56 build/C/man3/catanh.3:57
#, no-wrap
msgid "    z = atof(argv[1]) + atof(argv[2]) * I;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:60
#, no-wrap
msgid "    c = cacos(z);\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:62
#, no-wrap
msgid "    printf(\"cacos() = %6.3f %6.3f*i\\en\", creal(c), cimag(c));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:64
#, no-wrap
msgid "    f = -i * clog(z + i * csqrt(1 - z * z));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:66
#, no-wrap
msgid "    printf(\"formula = %6.3f %6.3f*i\\en\", creal(f), cimag(f));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:69 build/C/man3/cacosh.3:69 build/C/man3/catan.3:65 build/C/man3/catanh.3:66
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacos.3:74
msgid "B<ccos>(3), B<clog>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cacosh.3:5
#, no-wrap
msgid "CACOSH"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:8
msgid "cacosh, cacoshf, cacoshl - complex arc hyperbolic cosine"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:12
msgid "B<double complex cacosh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:14
msgid "B<float complex cacoshf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:16
msgid "B<long double complex cacoshl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:30
msgid ""
"The B<cacosh>()  function calculates the complex arc hyperpolic cosine of "
"I<z>.  If I<y\\ =\\ cacosh(z)>, then I<z\\ =\\ ccosh(y)>.  The imaginary "
"part of I<y> is chosen in the interval [-pi,pi].  The real part of I<y> is "
"chosen nonnegative."
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:35
#, no-wrap
msgid "    cacosh(z) = 2 * clog(csqrt((z + 1) / 2) + csqrt((z - 1) / 2))\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:53 build/C/man3/catanh.3:50
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    double complex z, c, f;\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:63
#, no-wrap
msgid ""
"    c = cacosh(z);\n"
"    printf(\"cacosh() = %6.3f %6.3f*i\\en\", creal(c), cimag(c));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:66
#, no-wrap
msgid ""
"    f = 2 * clog(csqrt((z + 1)/2) + csqrt((z - 1)/2));\n"
"    printf(\"formula  = %6.3f %6.3f*i\\en\", creal(f2), cimag(f2));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cacosh.3:76
msgid "B<acosh>(3), B<cabs>(3), B<ccosh>(3), B<cimag>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/carg.3:4
#, no-wrap
msgid "CARG"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:7
msgid "carg, cargf, cargl - calculate the complex argument"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:11
msgid "B<double carg(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:13
msgid "B<float cargf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:15
msgid "B<long double cargl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:20
msgid ""
"A complex number can be described by two real coordinates.  One may use "
"rectangular coordinates and gets"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:23
#, no-wrap
msgid "    z = x + I * y\n"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:26
msgid "where I<x\\ =\\ creal(z)> and I<y\\ =\\ cimag(z)>."
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:28
msgid "Or one may use polar coordinates and gets"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:31
#, no-wrap
msgid "    z = r * cexp(I * a)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:37
msgid ""
"where I<r\\ =\\ cabs(z)> is the \"radius\", the \"modulus\", the absolute "
"value of I<z>, and I<a\\ =\\ carg(z)> is the \"phase angle\", the argument "
"of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:42
#, no-wrap
msgid "    tan(carg(z)) = cimag(z) / creal(z)\n"
msgstr ""

#. type: SH
#: build/C/man3/carg.3:43
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:45
msgid "The return value is the range of [-pi,pi]."
msgstr ""

#. type: Plain text
#: build/C/man3/carg.3:52 build/C/man3/cproj.3:38
msgid "B<cabs>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/casin.3:4
#, no-wrap
msgid "CASIN"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:7
msgid "casin, casinf, casinl - complex arc sine"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:11
msgid "B<double complex casin(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:13
msgid "B<float complex casinf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:15
msgid "B<long double complex casinl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:26
msgid ""
"The B<casin>()  function calculates the complex arc sine of I<z>.  If I<y\\ "
"=\\ casin(z)>, then I<z\\ =\\ csin(y)>.  The real part of I<y> is chosen in "
"the interval [-pi/2,pi/2]."
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:31
#, no-wrap
msgid "    casin(z) = -i clog(iz + csqrt(1 - z * z))\n"
msgstr ""

#. type: Plain text
#: build/C/man3/casin.3:40
msgid "B<clog>(3), B<csin>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/casinh.3:4
#, no-wrap
msgid "CASINH"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:7
msgid "casinh, casinhf, casinhl - complex arc sine hyperbolic"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:11
msgid "B<double complex casinh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:13
msgid "B<float complex casinhf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:15
msgid "B<long double complex casinhl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:26
msgid ""
"The B<casinh>()  function calculates the complex arc hyperbolic sine of "
"I<z>.  If I<y\\ =\\ casinh(z)>, then I<z\\ =\\ csinh(y)>.  The imaginary "
"part of I<y> is chosen in the interval [-pi/2,pi/2]."
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:31
#, no-wrap
msgid "    casinh(z) = clog(z + csqrt(z * z + 1))\n"
msgstr ""

#. type: Plain text
#: build/C/man3/casinh.3:42
msgid "B<asinh>(3), B<cabs>(3), B<cimag>(3), B<csinh>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/catan.3:5
#, no-wrap
msgid "CATAN"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:8
msgid "catan, catanf, catanl - complex arc tangents"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:12
msgid "B<double complex catan(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:14
msgid "B<float complex catanf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:16
msgid "B<long double complex catanl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:25
msgid ""
"The B<catan>()  function calculates the complex arc tangent of I<z>.  If "
"I<y\\ =\\ catan(z)>, then I<z\\ =\\ ctan(y)>.  The real part of y is chosen "
"in the interval [-pi/2,pi/2]."
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:30
#, no-wrap
msgid "    catan(z) = (clog(1 + i * z) - clog(1 - i * z)) / (2 * i)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:59
#, no-wrap
msgid ""
"    c = catan(z);\n"
"    printf(\"catan() = %6.3f %6.3f*i\\en\", creal(c), cimag(c));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:62
#, no-wrap
msgid ""
"    f = (clog(1 + i * z) - clog(1 - i * z)) / (2 * i);\n"
"    printf(\"formula = %6.3f %6.3f*i\\en\", creal(f2), cimag(f2));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catan.3:71
msgid "B<ccos>(3), B<clog>(3), B<ctan>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/catanh.3:5
#, no-wrap
msgid "CATANH"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:8
msgid "catanh, catanhf, catanhl - complex arc tangents hyperbolic"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:12
msgid "B<double complex catanh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:14
msgid "B<float complex catanhf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:16
msgid "B<long double complex catanhl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:27
msgid ""
"The B<catanh>()  function calculates the complex arc hyperbolic tangent of "
"I<z>.  If I<y\\ =\\ catanh(z)>, then I<z\\ =\\ ctanh(y)>.  The imaginary "
"part of I<y> is chosen in the interval [-pi/2,pi/2]."
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:32
#, no-wrap
msgid "    catanh(z) = 0.5 * (clog(1 + z) - clog(1 - z))\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:60
#, no-wrap
msgid ""
"    c = catanh(z);\n"
"    printf(\"catanh() = %6.3f %6.3f*i\\en\", creal(c), cimag(c));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:63
#, no-wrap
msgid ""
"    f = 0.5 * (clog(1 + z) - clog(1 - z));\n"
"    printf(\"formula  = %6.3f %6.3f*i\\en\", creal(f2), cimag(f2));\n"
msgstr ""

#. type: Plain text
#: build/C/man3/catanh.3:73
msgid "B<atanh>(3), B<cabs>(3), B<cimag>(3), B<ctanh>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/ccos.3:4
#, no-wrap
msgid "CCOS"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:7
msgid "ccos, ccosf, ccosl - complex cosine function"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:11
msgid "B<double complex ccos(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:13
msgid "B<float complex ccosf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:15
msgid "B<long double complex ccosl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:19
msgid "The complex cosine function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:22
#, no-wrap
msgid "    ccos(z) = (exp(i * z) + exp(-i * z)) / 2\n"
msgstr ""

#. type: Plain text
#: build/C/man3/ccos.3:33
msgid "B<cabs>(3), B<cacos>(3), B<csin>(3), B<ctan>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/ccosh.3:4
#, no-wrap
msgid "CCOSH"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:7
msgid "ccosh, ccoshf, ccoshl - complex hyperbolic cosine"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:11
msgid "B<double complex ccosh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:13
msgid "B<float complex ccoshf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:15
msgid "B<long double complex ccoshl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:19
msgid "The complex hyperbolic cosine function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:22
#, no-wrap
msgid "    ccosh(z) = (exp(z)+exp(-z))/2\n"
msgstr ""

#. type: Plain text
#: build/C/man3/ccosh.3:33
msgid "B<cabs>(3), B<cacosh>(3), B<csinh>(3), B<ctanh>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cerf.3:4
#, no-wrap
msgid "CERF"
msgstr ""

#. type: TH
#: build/C/man3/cerf.3:4
#, no-wrap
msgid "2010-09-12"
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:7
msgid "cerf, cerff, cerfl, cerfc, cerfcf, cerfcl - complex error function"
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:11
msgid "B<double complex cerf(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:13
msgid "B<float complex cerff(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:15
msgid "B<long double complex cerfl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:17
msgid "B<double complex cerfc(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:19
msgid "B<float complex cerfcf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:21
msgid "B<long double complex cerfcl(long double complex >I<z>B<);>"
msgstr ""

#.  must check 1/sqrt(2*pi) ?
#. type: Plain text
#: build/C/man3/cerf.3:32
msgid ""
"The (unimplemented) function B<cerf>()  is the complex version of the error "
"function.  erf(z) = 2/sqrt(pi) * integral from 0 to z of exp(-t*t) dt.  The "
"function B<cerfc>()  is defined as cerfc(z) = 1-cerf(z)."
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:34
msgid "The function names are reserved for future use in C99."
msgstr ""

#. type: SH
#: build/C/man3/cerf.3:34 build/C/man3/cexp2.3:22 build/C/man3/clog2.3:33
#, no-wrap
msgid "AVAILABILITY"
msgstr ""

#.  But reserved in NAMESPACE.
#. type: Plain text
#: build/C/man3/cerf.3:37
msgid "Not yet in glibc, as at version 2.12."
msgstr ""

#. type: Plain text
#: build/C/man3/cerf.3:40
msgid "B<erf>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cexp.3:4
#, no-wrap
msgid "CEXP"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:7
msgid "cexp, cexpf, cexpl - complex exponential function"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:11
msgid "B<double complex cexp(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:13
msgid "B<float complex cexpf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:15
msgid "B<long double complex cexpl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:21
msgid ""
"The function calculates e (2.71828..., the base of natural logarithms)  "
"raised to the power of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:26
#, no-wrap
msgid "    cexp(I * z) = ccos(z) + I * csin(z)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp.3:37
msgid "B<cabs>(3), B<cexp2>(3), B<clog>(3), B<cpow>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cexp2.3:4
#, no-wrap
msgid "CEXP2"
msgstr ""

#. type: TH
#: build/C/man3/cexp2.3:4 build/C/man3/clog2.3:4
#, no-wrap
msgid "2008-08-07"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:7
msgid "cexp2, cexp2f, cexp2l - base-2 exponent of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:11
msgid "B<double complex cexp2(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:13
msgid "B<float complex cexp2f(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:15
msgid "B<long double complex cexp2l(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:20
msgid "The function returns 2 raised to the power of I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:22 build/C/man3/clog2.3:33
msgid "These function names are reserved for future use in C99."
msgstr ""

#.  But reserved in NAMESPACE.
#. type: Plain text
#: build/C/man3/cexp2.3:25 build/C/man3/clog2.3:36
msgid "Not yet in glibc, as at version 2.8."
msgstr ""

#. type: Plain text
#: build/C/man3/cexp2.3:30
msgid "B<cabs>(3), B<cexp>(3), B<clog10>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cimag.3:4
#, no-wrap
msgid "CIMAG"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:7
msgid "cimag, cimagf, cimagl - get imaginary part of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:11
msgid "B<double cimag(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:13
msgid "B<float cimagf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:15
msgid "B<long double cimagl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:22
msgid ""
"The B<cimag>()  function returns the imaginary part of the complex number "
"I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:27 build/C/man3/creal.3:27
#, no-wrap
msgid "    z = creal(z) + I * cimag(z)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:35
msgid "gcc also supports __imag__.  That is a GNU extension."
msgstr ""

#. type: Plain text
#: build/C/man3/cimag.3:39
msgid "B<cabs>(3), B<creal>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/clog.3:4
#, no-wrap
msgid "CLOG"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:7
msgid "clog, clogf, clogl - natural logarithm of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:11
msgid "B<double complex clog(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:13
msgid "B<float complex clogf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:15
msgid "B<long double complex clogl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:26
msgid ""
"The logarithm B<clog>()  is the inverse function of the exponential "
"B<cexp>(3).  Thus, if I<y\\ =\\ clog(z)>, then I<z\\ =\\ cexp(y)>.  The "
"imaginary part of I<y> is chosen in the interval [-pi,pi]."
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:31
#, no-wrap
msgid "    clog(z) = log(cabs(z)) + I * carg(z)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:36 build/C/man3/clog10.3:32 build/C/man3/clog2.3:31
msgid "Note that I<z> close to zero will cause an overflow."
msgstr ""

#. type: Plain text
#: build/C/man3/clog.3:46
msgid "B<cabs>(3), B<cexp>(3), B<clog10>(3), B<clog2>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/clog10.3:4
#, no-wrap
msgid "CLOG10"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:7
msgid "clog10, clog10f, clog10l - base-10 logarithm of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:9
msgid "B<#define _GNU_SOURCE> /* See feature_test_macros(7) */"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:13
msgid "B<double complex clog10(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:15
msgid "B<float complex clog10f(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:17
msgid "B<long double complex clog10l(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:28
msgid ""
"The call I<clog10(z)> is equivalent to I<clog(z)/log(10)>.  The other "
"functions perform the same task for I<float> and I<long double>."
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:37
msgid "This function is a GNU extension.  It is reserved for future use in C99."
msgstr ""

#. type: Plain text
#: build/C/man3/clog10.3:43
msgid "B<cabs>(3), B<cexp>(3), B<clog>(3), B<clog2>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/clog2.3:4
#, no-wrap
msgid "CLOG2"
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:7
msgid "clog2, clog2f, clog2l - base-2 logarithm of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:11
msgid "B<double complex clog2(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:13
msgid "B<float complex clog2f(float complex >I<z>B<);>"
msgstr ""

#.  .sp
#.  Link with \fI\-lm\fP.
#. type: Plain text
#: build/C/man3/clog2.3:17
msgid "B<long double complex clog2l(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:22
msgid "The call I<clog2(z)> is equivalent to I<clog(z)/log(2)>."
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:27
msgid "The other functions perform the same task for I<float> and I<long double>."
msgstr ""

#. type: Plain text
#: build/C/man3/clog2.3:42
msgid "B<cabs>(3), B<cexp>(3), B<clog>(3), B<clog10>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man7/complex.7:4
#, no-wrap
msgid "COMPLEX"
msgstr ""

#. type: TH
#: build/C/man7/complex.7:4
#, no-wrap
msgid "2011-09-16"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:7
msgid "complex - basics of complex mathematics"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:12
msgid ""
"Complex numbers are numbers of the form z = a+b*i, where a and b are real "
"numbers and i = sqrt(-1), so that i*i = -1."
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:22
msgid ""
"There are other ways to represent that number.  The pair (a,b) of real "
"numbers may be viewed as a point in the plane, given by X- and "
"Y-coordinates.  This same point may also be described by giving the pair of "
"real numbers (r,phi), where r is the distance to the origin O, and phi the "
"angle between the X-axis and the line Oz.  Now z = r*exp(i*phi) = "
"r*(cos(phi)+i*sin(phi))."
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:24
msgid "The basic operations are defined on z = a+b*i and w = c+d*i as:"
msgstr ""

#. type: TP
#: build/C/man7/complex.7:24
#, no-wrap
msgid "B<addition: z+w = (a+c) + (b+d)*i>"
msgstr ""

#. type: TP
#: build/C/man7/complex.7:26
#, no-wrap
msgid "B<multiplication: z*w = (a*c - b*d) + (a*d + b*c)*i>"
msgstr ""

#. type: TP
#: build/C/man7/complex.7:28
#, no-wrap
msgid "B<division: z/w = ((a*c + b*d)/(c*c + d*d)) + ((b*c - a*d)/(c*c + d*d))*i>"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:33
msgid ""
"Nearly all math function have a complex counterpart but there are some "
"complex-only functions."
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:37
msgid ""
"Your C-compiler can work with complex numbers if it supports the C99 "
"standard.  Link with I<-lm>.  The imaginary unit is represented by I."
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:43
#, no-wrap
msgid ""
"/* check that exp(i * pi) == -1 */\n"
"#include E<lt>math.hE<gt>        /* for atan */\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>complex.hE<gt>\n"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:51
#, no-wrap
msgid ""
"int\n"
"main(void)\n"
"{\n"
"    double pi = 4 * atan(1.0);\n"
"    double complex z = cexp(I * pi);\n"
"    printf(\"%f + %f * i\\en\", creal(z), cimag(z));\n"
"}\n"
msgstr ""

#. type: Plain text
#: build/C/man7/complex.7:79
msgid ""
"B<cabs>(3), B<cacos>(3), B<cacosh>(3), B<carg>(3), B<casin>(3), "
"B<casinh>(3), B<catan>(3), B<catanh>(3), B<ccos>(3), B<ccosh>(3), "
"B<cerf>(3), B<cexp>(3), B<cexp2>(3), B<cimag>(3), B<clog>(3), B<clog10>(3), "
"B<clog2>(3), B<conj>(3), B<cpow>(3), B<cproj>(3), B<creal>(3), B<csin>(3), "
"B<csinh>(3), B<csqrt>(3), B<ctan>(3), B<ctanh>(3)"
msgstr ""

#. type: TH
#: build/C/man3/conj.3:4
#, no-wrap
msgid "CONJ"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:7
msgid "conj, conjf, conjl - calculate the complex conjugate"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:11
msgid "B<double complex conj(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:13
msgid "B<float complex conjf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:15
msgid "B<long double complex conjl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:23
msgid ""
"The B<conj>()  function returns the complex conjugate value of I<z>.  That "
"is the value obtained by changing the sign of the imaginary part."
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:28
#, no-wrap
msgid "    cabs(z) = csqrt(z * conj(z))\n"
msgstr ""

#. type: Plain text
#: build/C/man3/conj.3:37
msgid "B<cabs>(3), B<csqrt>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cpow.3:4
#, no-wrap
msgid "CPOW"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:7
msgid "cpow, cpowf, cpowl - complex power function"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:10
#, no-wrap
msgid "B<#include E<lt>complex.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:12
#, no-wrap
msgid "B<double complex cpow(double complex >I<x>B<, complex double >I<z>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:14
#, no-wrap
msgid "B<float complex cpowf(float complex >I<x>B<, complex float >I<z>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:17
#, no-wrap
msgid ""
"B<long double complex cpowl(long double complex >I<x>B<,>\n"
"B<                          complex long double >I<z>B<);>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:19
#, no-wrap
msgid "Link with I<-lm>.\n"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:28
msgid ""
"The function calculates I<x> raised to the power I<z>.  (With a branch cut "
"for I<x> along the negative real axis.)"
msgstr ""

#. type: Plain text
#: build/C/man3/cpow.3:36
msgid "B<cabs>(3), B<pow>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/cproj.3:4
#, no-wrap
msgid "CPROJ"
msgstr ""

#. type: TH
#: build/C/man3/cproj.3:4
#, no-wrap
msgid "2010-06-10"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:7
msgid "cproj, cprojf, cprojl - project into Riemann Sphere"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:11
msgid "B<double complex cproj(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:13
msgid "B<float complex cprojf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:15
msgid "B<long double complex cprojl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/cproj.3:27
msgid ""
"This function projects a point in the plane onto the surface of a Riemann "
"Sphere, the one-point compactification of the complex plane.  Each finite "
"point I<z> projects to I<z> itself.  Every complex infinite value is "
"projected to a single infinite value, namely to positive infinity on the "
"real axis."
msgstr ""

#.  http://sources.redhat.com/bugzilla/show_bug.cgi?id=10401
#. type: Plain text
#: build/C/man3/cproj.3:35
msgid ""
"In glibc 2.11 and earlier, the implementation does something different (a "
"I<stereographic> projection onto a Riemann Sphere)."
msgstr ""

#. type: TH
#: build/C/man3/creal.3:4
#, no-wrap
msgid "CREAL"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:7
msgid "creal, crealf, creall - get real part of a complex number"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:11
msgid "B<double creal(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:13
msgid "B<float crealf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:15
msgid "B<long double creall(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:22
msgid "The B<creal>()  function returns the real part of the complex number I<z>."
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:35
msgid "The gcc supports also __real__.  That is a GNU extension."
msgstr ""

#. type: Plain text
#: build/C/man3/creal.3:39
msgid "B<cabs>(3), B<cimag>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/csin.3:4
#, no-wrap
msgid "CSIN"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:7
msgid "csin, csinf, csinl - complex sine function"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:11
msgid "B<double complex csin(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:13
msgid "B<float complex csinf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:15
msgid "B<long double complex csinl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:19
msgid "The complex sine function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:22
#, no-wrap
msgid "    csin(z) = (exp(i * z) - exp(-i * z)) / (2 * i)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/csin.3:33
msgid "B<cabs>(3), B<casin>(3), B<ccos>(3), B<ctan>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/csinh.3:4
#, no-wrap
msgid "CSINH"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:7
msgid "csinh, csinhf, csinhl - complex hyperbolic sine"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:11
msgid "B<double complex csinh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:13
msgid "B<float complex csinhf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:15
msgid "B<long double complex csinhl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:19
msgid "The complex hyperbolic sine function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:22
#, no-wrap
msgid "    csinh(z) = (exp(z)-exp(-z))/2\n"
msgstr ""

#. type: Plain text
#: build/C/man3/csinh.3:33
msgid "B<cabs>(3), B<casinh>(3), B<ccosh>(3), B<ctanh>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/csqrt.3:4
#, no-wrap
msgid "CSQRT"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:7
msgid "csqrt, csqrtf, csqrtl - complex square root"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:11
msgid "B<double complex csqrt(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:13
msgid "B<float complex csqrtf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:15
msgid "B<long double complex csqrtl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:24
msgid ""
"Calculate the square root of a given complex number, with nonnegative real "
"part, and with a branch cut along the negative real axis.  (That means that "
"I<csqrt(-1+eps*I)> will be close to I while I<csqrt(-1-eps*I)> will be close "
"to -I, I<if eps> is a small positive real number.)"
msgstr ""

#. type: Plain text
#: build/C/man3/csqrt.3:32
msgid "B<cabs>(3), B<cexp>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/ctan.3:4
#, no-wrap
msgid "CTAN"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:7
msgid "ctan, ctanf, ctanl - complex tangent function"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:11
msgid "B<double complex ctan(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:13
msgid "B<float complex ctanf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:15
msgid "B<long double complex ctanl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:19
msgid "The complex tangent function is defined as:"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:22
#, no-wrap
msgid "    ctan(z) = csin(z) / ccos(z)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/ctan.3:33
msgid "B<cabs>(3), B<catan>(3), B<ccos>(3), B<csin>(3), B<complex>(7)"
msgstr ""

#. type: TH
#: build/C/man3/ctanh.3:4
#, no-wrap
msgid "CTANH"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:7
msgid "ctanh, ctanhf, ctanhl - complex hyperbolic tangent"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:11
msgid "B<double complex ctanh(double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:13
msgid "B<float complex ctanhf(float complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:15
msgid "B<long double complex ctanhl(long double complex >I<z>B<);>"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:20
msgid "The complex hyperbolic tangent function is defined mathematically as:"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:23
#, no-wrap
msgid "    ctanh(z) = csinh(z) / ccosh(z)\n"
msgstr ""

#. type: Plain text
#: build/C/man3/ctanh.3:34
msgid "B<cabs>(3), B<catanh>(3), B<ccosh>(3), B<csinh>(3), B<complex>(7)"
msgstr ""
