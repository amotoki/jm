# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-04-25 05:36+0900\n"
"PO-Revision-Date: 2012-03-23 05:18+0900\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man3/closedir.3:29
#, no-wrap
msgid "CLOSEDIR"
msgstr "CLOSEDIR"

#. type: TH
#: build/C/man3/closedir.3:29
#, no-wrap
msgid "2008-09-23"
msgstr "2008-09-23"

#. type: TH
#: build/C/man3/closedir.3:29 build/C/man3/dirfd.3:23
#: build/C/man2/getdents.2:27 build/C/man3/getdirentries.3:27
#: build/C/man3/opendir.3:30 build/C/man2/readdir.2:28
#: build/C/man3/readdir.3:34 build/C/man3/rewinddir.3:29
#: build/C/man3/scandir.3:34 build/C/man3/scandirat.3:26
#: build/C/man3/seekdir.3:28 build/C/man3/telldir.3:28
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux Programmer's Manual"

#. type: SH
#: build/C/man3/closedir.3:30 build/C/man3/dirfd.3:24
#: build/C/man2/getdents.2:28 build/C/man3/getdirentries.3:28
#: build/C/man3/opendir.3:31 build/C/man2/readdir.2:29
#: build/C/man3/readdir.3:35 build/C/man3/rewinddir.3:30
#: build/C/man3/scandir.3:35 build/C/man3/scandirat.3:27
#: build/C/man3/seekdir.3:29 build/C/man3/telldir.3:29
#, no-wrap
msgid "NAME"
msgstr "名前"

#. type: Plain text
#: build/C/man3/closedir.3:32
msgid "closedir - close a directory"
msgstr "closedir - ディレクトリをクローズする"

#. type: SH
#: build/C/man3/closedir.3:32 build/C/man3/dirfd.3:26
#: build/C/man2/getdents.2:30 build/C/man3/getdirentries.3:30
#: build/C/man3/opendir.3:33 build/C/man2/readdir.2:31
#: build/C/man3/readdir.3:37 build/C/man3/rewinddir.3:32
#: build/C/man3/scandir.3:37 build/C/man3/scandirat.3:29
#: build/C/man3/seekdir.3:32 build/C/man3/telldir.3:31
#, no-wrap
msgid "SYNOPSIS"
msgstr "書式"

#. type: Plain text
#: build/C/man3/closedir.3:35 build/C/man3/opendir.3:36
#: build/C/man3/rewinddir.3:35
#, no-wrap
msgid "B<#include E<lt>sys/types.hE<gt>>\n"
msgstr "B<#include E<lt>sys/types.hE<gt>>\n"

#. type: Plain text
#: build/C/man3/closedir.3:37 build/C/man3/opendir.3:38
#: build/C/man3/readdir.3:40 build/C/man3/rewinddir.3:37
#: build/C/man3/scandir.3:40 build/C/man3/seekdir.3:35
#: build/C/man3/telldir.3:34
#, no-wrap
msgid "B<#include E<lt>dirent.hE<gt>>\n"
msgstr "B<#include E<lt>dirent.hE<gt>>\n"

#. type: Plain text
#: build/C/man3/closedir.3:39
#, no-wrap
msgid "B<int closedir(DIR *>I<dirp>B<);>\n"
msgstr "B<int closedir(DIR *>I<dirp>B<);>\n"

#. type: SH
#: build/C/man3/closedir.3:40 build/C/man3/dirfd.3:52
#: build/C/man2/getdents.2:35 build/C/man3/getdirentries.3:43
#: build/C/man3/opendir.3:61 build/C/man2/readdir.2:37
#: build/C/man3/readdir.3:59 build/C/man3/rewinddir.3:40
#: build/C/man3/scandir.3:63 build/C/man3/scandirat.3:45
#: build/C/man3/seekdir.3:46 build/C/man3/telldir.3:45
#, no-wrap
msgid "DESCRIPTION"
msgstr "説明"

#. type: Plain text
#: build/C/man3/closedir.3:51
msgid ""
"The B<closedir>()  function closes the directory stream associated with "
"I<dirp>.  A successful call to B<closedir>()  also closes the underlying "
"file descriptor associated with I<dirp>.  The directory stream descriptor "
"I<dirp> is not available after this call."
msgstr ""
"B<closedir>()  関数は I<dirp> に関連付けられた ディレクトリストリームをクロー"
"ズする。\n"
"B<closedir>()  の呼び出しが成功すると、 I<dirp> に関連付けられた\n"
"ファイルディスクリプタもクローズされる。\n"
"ディレクトリストリームディスクリプタ (directory stream descriptor) I<dirp> "
"は、\n"
"この呼び出しの後では使用することができない。"

#. type: SH
#: build/C/man3/closedir.3:51 build/C/man3/dirfd.3:67
#: build/C/man2/getdents.2:136 build/C/man3/getdirentries.3:56
#: build/C/man3/opendir.3:81 build/C/man2/readdir.2:86
#: build/C/man3/readdir.3:117 build/C/man3/rewinddir.3:45
#: build/C/man3/scandir.3:90 build/C/man3/scandirat.3:79
#: build/C/man3/seekdir.3:58 build/C/man3/telldir.3:50
#, no-wrap
msgid "RETURN VALUE"
msgstr "返り値"

#. type: Plain text
#: build/C/man3/closedir.3:58
msgid ""
"The B<closedir>()  function returns 0 on success.  On error, -1 is returned, "
"and I<errno> is set appropriately."
msgstr ""
"B<closedir>()  関数は成功時に 0 を返す。 エラーの場合は、-1 が返されて、 "
"I<errno> が適切に設定される。"

#. type: SH
#: build/C/man3/closedir.3:58 build/C/man3/dirfd.3:70
#: build/C/man2/getdents.2:142 build/C/man3/getdirentries.3:62
#: build/C/man3/opendir.3:90 build/C/man2/readdir.2:92
#: build/C/man3/readdir.3:141 build/C/man3/scandir.3:103
#: build/C/man3/scandirat.3:86 build/C/man3/telldir.3:58
#, no-wrap
msgid "ERRORS"
msgstr "エラー"

#. type: TP
#: build/C/man3/closedir.3:59 build/C/man2/getdents.2:143
#: build/C/man3/opendir.3:94 build/C/man2/readdir.2:93
#: build/C/man3/readdir.3:142 build/C/man3/scandirat.3:93
#: build/C/man3/telldir.3:59
#, no-wrap
msgid "B<EBADF>"
msgstr "B<EBADF>"

#. type: Plain text
#: build/C/man3/closedir.3:62 build/C/man3/readdir.3:145
#: build/C/man3/telldir.3:62
msgid "Invalid directory stream descriptor I<dirp>."
msgstr "ディレクトリストリームディスクリプタ I<dirp> が無効である。"

#. type: SH
#: build/C/man3/closedir.3:62 build/C/man3/dirfd.3:83
#: build/C/man2/getdents.2:159 build/C/man3/getdirentries.3:64
#: build/C/man3/opendir.3:116 build/C/man2/readdir.2:109
#: build/C/man3/readdir.3:145 build/C/man3/rewinddir.3:49
#: build/C/man3/scandir.3:116 build/C/man3/scandirat.3:106
#: build/C/man3/seekdir.3:62 build/C/man3/telldir.3:62
#, no-wrap
msgid "CONFORMING TO"
msgstr "準拠"

#. type: Plain text
#: build/C/man3/closedir.3:64
msgid "SVr4, POSIX.1-2001, 4.3BSD."
msgstr "SVr4, POSIX.1-2001, 4.3BSD."

#. type: SH
#: build/C/man3/closedir.3:64 build/C/man3/dirfd.3:95
#: build/C/man2/getdents.2:273 build/C/man3/getdirentries.3:72
#: build/C/man3/opendir.3:138 build/C/man2/readdir.2:117
#: build/C/man3/readdir.3:239 build/C/man3/rewinddir.3:51
#: build/C/man3/scandir.3:172 build/C/man3/scandirat.3:113
#: build/C/man3/seekdir.3:72 build/C/man3/telldir.3:72
#, no-wrap
msgid "SEE ALSO"
msgstr "関連項目"

#. type: Plain text
#: build/C/man3/closedir.3:71
msgid ""
"B<close>(2), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), B<scandir>(3), "
"B<seekdir>(3), B<telldir>(3)"
msgstr ""
"B<close>(2), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), B<scandir>(3), "
"B<seekdir>(3), B<telldir>(3)"

#. type: TH
#: build/C/man3/dirfd.3:23
#, no-wrap
msgid "DIRFD"
msgstr "DIRFD"

#. type: TH
#: build/C/man3/dirfd.3:23
#, no-wrap
msgid "2010-09-26"
msgstr "2010-09-26"

#. type: TH
#: build/C/man3/dirfd.3:23 build/C/man2/getdents.2:27
#: build/C/man2/readdir.2:28 build/C/man3/scandirat.3:26
#, no-wrap
msgid "Linux"
msgstr "Linux"

#. type: Plain text
#: build/C/man3/dirfd.3:26
msgid "dirfd - get directory stream file descriptor"
msgstr "dirfd - ディレクトリストリームのファイルディスクリプタを取得する"

#. type: Plain text
#: build/C/man3/dirfd.3:28
msgid "B<#include E<lt>sys/types.hE<gt>>"
msgstr "B<#include E<lt>sys/types.hE<gt>>"

#. type: Plain text
#: build/C/man3/dirfd.3:30 build/C/man3/getdirentries.3:32
msgid "B<#include E<lt>dirent.hE<gt>>"
msgstr "B<#include E<lt>dirent.hE<gt>>"

#. type: Plain text
#: build/C/man3/dirfd.3:32
msgid "B<int dirfd(DIR *>I<dirp>B<);>"
msgstr "B<int dirfd(DIR *>I<dirp>B<);>"

#. type: Plain text
#: build/C/man3/dirfd.3:36 build/C/man3/getdirentries.3:39
#: build/C/man3/opendir.3:46 build/C/man3/readdir.3:50
#: build/C/man3/scandir.3:55 build/C/man3/seekdir.3:42
#: build/C/man3/telldir.3:41
msgid ""
"Feature Test Macro Requirements for glibc (see B<feature_test_macros>(7)):"
msgstr "glibc 向けの機能検査マクロの要件 (B<feature_test_macros>(7)  参照):"

#. type: Plain text
#: build/C/man3/dirfd.3:39
msgid "B<dirfd>():"
msgstr "B<dirfd>():"

#. type: Plain text
#: build/C/man3/dirfd.3:44
msgid "_BSD_SOURCE || _SVID_SOURCE"
msgstr "_BSD_SOURCE || _SVID_SOURCE"

#. type: Plain text
#: build/C/man3/dirfd.3:46
msgid "|| /* Since glibc 2.10: */"
msgstr "|| /* glibc 2.10 以降: */"

#. type: Plain text
#: build/C/man3/dirfd.3:48
msgid "(_POSIX_C_SOURCE\\ E<gt>=\\ 200809L || _XOPEN_SOURCE\\ E<gt>=\\ 700)"
msgstr "(_POSIX_C_SOURCE\\ E<gt>=\\ 200809L || _XOPEN_SOURCE\\ E<gt>=\\ 700)"

#. type: Plain text
#: build/C/man3/dirfd.3:57
msgid ""
"The function B<dirfd>()  returns the file descriptor associated with the "
"directory stream I<dirp>."
msgstr ""
"関数 B<dirfd>()  はディレクトリストリーム I<dirp> に関連づけられたファイル"
"ディスクリプタを返す。"

#. type: Plain text
#: build/C/man3/dirfd.3:67
msgid ""
"This descriptor is the one used internally by the directory stream.  As a "
"result, it is only useful for functions which do not depend on or alter the "
"file position, such as B<fstat>(2)  and B<fchdir>(2).  It will be "
"automatically closed when B<closedir>(3)  is called."
msgstr ""
"このディスクリプタはディレクトリストリームが内部で使用するものである。 よっ"
"て、ファイルの位置に依存せず、かつその位置を変更しない関数 B<fstat>(2)  や "
"B<fchdir>(2)  などでしか役に立たない。 このディスクリプタは B<closedir>(3)  "
"が呼ばれたときに自動的にクローズされる。"

#. type: Plain text
#: build/C/man3/dirfd.3:70
msgid ""
"On success, a nonnegative file descriptor is returned.  On error, -1 is "
"returned."
msgstr ""
"成功すると、負でない値のファイルディスクリプタが返される。 エラーの場合は -1 "
"が返される。"

#.  glibc 2.8
#. type: Plain text
#: build/C/man3/dirfd.3:75
msgid ""
"POSIX.1-2008 specifies two errors, neither of which is returned by the "
"current implementation."
msgstr ""
"POSIX.1-2008 では 2 つのエラーが規定されている。 現在の実装ではどちらのエラー"
"も返されない。"

#. type: TP
#: build/C/man3/dirfd.3:75 build/C/man2/getdents.2:150
#: build/C/man2/readdir.2:100
#, no-wrap
msgid "B<EINVAL>"
msgstr "B<EINVAL>"

#. type: Plain text
#: build/C/man3/dirfd.3:79
msgid "I<dirp> does not refer to a valid directory stream."
msgstr "I<dirp> が有効なディレクトリストリームを参照していない。"

#. type: TP
#: build/C/man3/dirfd.3:79
#, no-wrap
msgid "B<ENOTSUP>"
msgstr "B<ENOTSUP>"

#. type: Plain text
#: build/C/man3/dirfd.3:83
msgid ""
"The implementation does not support the association of a file descriptor "
"with a directory."
msgstr ""
"この実装では、ファイルディスクリプタのディレクトリとの関連付けが サポートされ"
"ていない。"

#.  It is present in libc5 (since 5.1.2) and in glibc2.
#. type: Plain text
#: build/C/man3/dirfd.3:87
msgid ""
"POSIX.1-2008.  This function was a BSD extension, present in 4.3BSD-Reno, "
"not in 4.2BSD."
msgstr ""
"POSIX.1-2008.  この関数は BSD 拡張であった。 4.3BSD-Reno には存在するが、"
"4.2BSD には存在しない。"

#. type: SH
#: build/C/man3/dirfd.3:87 build/C/man2/getdents.2:162
#: build/C/man3/opendir.3:121 build/C/man2/readdir.2:111
#: build/C/man3/readdir.3:147 build/C/man3/scandirat.3:108
#: build/C/man3/seekdir.3:64 build/C/man3/telldir.3:64
#, no-wrap
msgid "NOTES"
msgstr "注意"

#. type: Plain text
#: build/C/man3/dirfd.3:95
msgid ""
"The prototype for B<dirfd>()  is only available if B<_BSD_SOURCE> or "
"B<_SVID_SOURCE> is defined."
msgstr ""
"B<dirfd>()  のプロトタイプが使用可能なのは、 B<_BSD_SOURCE> または "
"B<_SVID_SOURCE> が定義されたときのみである。"

#. type: Plain text
#: build/C/man3/dirfd.3:103
msgid ""
"B<open>(2), B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3), B<telldir>(3)"
msgstr ""
"B<open>(2), B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3), B<telldir>(3)"

#. type: TH
#: build/C/man2/getdents.2:27
#, no-wrap
msgid "GETDENTS"
msgstr "GETDENTS"

#. type: TH
#: build/C/man2/getdents.2:27
#, fuzzy, no-wrap
msgid "2010-11-21"
msgstr "2010-11-21"

#. type: Plain text
#: build/C/man2/getdents.2:30
msgid "getdents - get directory entries"
msgstr "getdents - ディレクトリ・エントリを取得する"

#. type: Plain text
#: build/C/man2/getdents.2:34
#, no-wrap
msgid ""
"B<int getdents(unsigned int >I<fd>B<, struct linux_dirent *>I<dirp>B<,>\n"
"B<             unsigned int >I<count>B<);>\n"
msgstr ""
"B<int getdents(unsigned int >I<fd>B<, struct linux_dirent *>I<dirp>B<,>\n"
"B<             unsigned int >I<count>B<);>\n"

#. type: Plain text
#: build/C/man2/getdents.2:41
msgid ""
"This is not the function you are interested in.  Look at B<readdir>(3)  for "
"the POSIX conforming C library interface.  This page documents the bare "
"kernel system call interface."
msgstr ""
"これはあなたの関心を引くような関数ではない。 POSIX 準拠の C ライブラリイン"
"ターフェースについては B<readdir>(3)  を見ること。 このページは、カーネルシス"
"テムコールの生のインターフェースについて 記載したものである。"

#. type: Plain text
#: build/C/man2/getdents.2:54
msgid ""
"The system call B<getdents>()  reads several I<linux_dirent> structures from "
"the directory referred to by the open file descriptor I<fd> into the buffer "
"pointed to by I<dirp>.  The argument I<count> specifies the size of that "
"buffer."
msgstr ""
"B<getdents>()  システムコールは、オープン済みのファイルディスクリプタ I<fd> "
"で参照されるディレクトリから I<linux_dirent> 構造体をいくつか読み出し、 "
"I<dirp> が指しているバッファに格納する。 I<count> 引き数はそのバッファのサイ"
"ズを示す。"

#. type: Plain text
#: build/C/man2/getdents.2:58
msgid "The I<linux_dirent> structure is declared as follows:"
msgstr "I<linux_dirent> 構造体は以下のように宣言されている:"

#. type: Plain text
#: build/C/man2/getdents.2:73
#, no-wrap
msgid ""
"struct linux_dirent {\n"
"    unsigned long  d_ino;     /* Inode number */\n"
"    unsigned long  d_off;     /* Offset to next I<linux_dirent> */\n"
"    unsigned short d_reclen;  /* Length of this I<linux_dirent> */\n"
"    char           d_name[];  /* Filename (null-terminated) */\n"
"                        /* length is actually (d_reclen - 2 -\n"
"                           offsetof(struct linux_dirent, d_name) */\n"
"    /*\n"
"    char           pad;       // Zero padding byte\n"
"    char           d_type;    // File type (only since Linux 2.6.4;\n"
"                              // offset is (d_reclen - 1))\n"
"    */\n"
msgstr ""
"struct linux_dirent {\n"
"    unsigned long  d_ino;     /* Inode number */\n"
"    unsigned long  d_off;     /* Offset to next I<linux_dirent> */\n"
"    unsigned short d_reclen;  /* Length of this I<linux_dirent> */\n"
"    char           d_name[];  /* Filename (null-terminated) */\n"
"                        /* length is actually (d_reclen - 2 -\n"
"                           offsetof(struct linux_dirent, d_name) */\n"
"    /*\n"
"    char           pad;       // Zero padding byte\n"
"    char           d_type;    // File type (only since Linux 2.6.4;\n"
"                              // offset is (d_reclen - 1))\n"
"    */\n"

#. type: Plain text
#: build/C/man2/getdents.2:75
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: build/C/man2/getdents.2:88
msgid ""
"I<d_ino> is an inode number.  I<d_off> is the distance from the start of the "
"directory to the start of the next I<linux_dirent>.  I<d_reclen> is the size "
"of this entire I<linux_dirent>.  I<d_name> is a null-terminated filename."
msgstr ""
"I<d_ino> は inode 番号である。 I<d_off> はディレクトリの先頭から次の "
"I<linux_dirent> の先頭までの距離である。 I<d_reclen> はこの I<linux_dirent> "
"全体のサイズである。 I<d_name> はヌル(null)文字で終わるファイル名である。"

#. type: Plain text
#: build/C/man2/getdents.2:93
msgid ""
"I<d_type> is a byte at the end of the structure that indicates the file "
"type.  It contains one of the following values (defined in I<E<lt>dirent."
"hE<gt>>):"
msgstr ""
"I<d_type> は、構造体の最後のバイトであり、ファイルタイプを示す。 I<d_type> は"
"以下の値の一つを取る (I<E<lt>dirent.hE<gt>> で定義されている)。"

#. type: TP
#: build/C/man2/getdents.2:93 build/C/man3/readdir.3:176
#, no-wrap
msgid "B<DT_BLK>"
msgstr "B<DT_BLK>"

#. type: Plain text
#: build/C/man2/getdents.2:96 build/C/man3/readdir.3:179
msgid "This is a block device."
msgstr "ブロックデバイスである。"

#. type: TP
#: build/C/man2/getdents.2:96 build/C/man3/readdir.3:179
#, no-wrap
msgid "B<DT_CHR>"
msgstr "B<DT_CHR>"

#. type: Plain text
#: build/C/man2/getdents.2:99 build/C/man3/readdir.3:182
msgid "This is a character device."
msgstr "キャラクタデバイスである。"

#. type: TP
#: build/C/man2/getdents.2:99 build/C/man3/readdir.3:182
#, no-wrap
msgid "B<DT_DIR>"
msgstr "B<DT_DIR>"

#. type: Plain text
#: build/C/man2/getdents.2:102 build/C/man3/readdir.3:185
msgid "This is a directory."
msgstr "ディレクトリである。"

#. type: TP
#: build/C/man2/getdents.2:102 build/C/man3/readdir.3:185
#, no-wrap
msgid "B<DT_FIFO>"
msgstr "B<DT_FIFO>"

#. type: Plain text
#: build/C/man2/getdents.2:105 build/C/man3/readdir.3:188
msgid "This is a named pipe (FIFO)."
msgstr "名前付きパイプ (FIFO) である。"

#. type: TP
#: build/C/man2/getdents.2:105 build/C/man3/readdir.3:188
#, no-wrap
msgid "B<DT_LNK>"
msgstr "B<DT_LNK>"

#. type: Plain text
#: build/C/man2/getdents.2:108 build/C/man3/readdir.3:191
msgid "This is a symbolic link."
msgstr "シンボリックリンクである。"

#. type: TP
#: build/C/man2/getdents.2:108 build/C/man3/readdir.3:191
#, no-wrap
msgid "B<DT_REG>"
msgstr "B<DT_REG>"

#. type: Plain text
#: build/C/man2/getdents.2:111 build/C/man3/readdir.3:194
msgid "This is a regular file."
msgstr "通常のファイルである。"

#. type: TP
#: build/C/man2/getdents.2:111 build/C/man3/readdir.3:194
#, no-wrap
msgid "B<DT_SOCK>"
msgstr "B<DT_SOCK>"

#. type: Plain text
#: build/C/man2/getdents.2:114 build/C/man3/readdir.3:197
msgid "This is a UNIX domain socket."
msgstr "UNIX ドメインソケットである。"

#. type: TP
#: build/C/man2/getdents.2:114 build/C/man3/readdir.3:197
#, no-wrap
msgid "B<DT_UNKNOWN>"
msgstr "B<DT_UNKNOWN>"

#.  The glibc manual says that on some systems this is the only
#.  value returned
#. type: Plain text
#: build/C/man2/getdents.2:117 build/C/man3/readdir.3:202
msgid "The file type is unknown."
msgstr "ファイルタイプが不明である。"

#. type: Plain text
#: build/C/man2/getdents.2:127
msgid ""
"The I<d_type> field is implemented since Linux 2.6.4.  It occupies a space "
"that was previously a zero-filled padding byte in the I<linux_dirent> "
"structure.  Thus, on kernels before 2.6.3, attempting to access this field "
"always provides the value 0 (B<DT_UNKNOWN>)."
msgstr ""
"I<d_type> フィールドは Linux 2.6.4 から実装されている。 これは "
"I<linux_dirent> 構造体のうち、以前はゼロで埋められていた空間に配置されてい"
"る。 従って、2.6.3 以前のカーネルでは、このフィールドにアクセスしようとする"
"と 常に値 0 (B<DT_UNKNOWN>)  が返される。"

#.  kernel 2.6.27
#.  The same sentence is in getdents.2
#. type: Plain text
#: build/C/man2/getdents.2:136 build/C/man3/readdir.3:216
msgid ""
"Currently, only some file systems (among them: Btrfs, ext2, ext3, and ext4)  "
"have full support for returning the file type in I<d_type>.  All "
"applications must properly handle a return of B<DT_UNKNOWN>."
msgstr ""
"現在のところ、 I<d_type> でファイルタイプを返す機能が完全にサポートされている"
"のは、 いくつかのファイルシステムにおいてのみである (Btrfs, ext2, ext3, ext4 "
"はサポートしている)。 どのアプリケーションも、 B<DT_UNKNOWN> が返された際に適"
"切に処理できなければならない。"

#. type: Plain text
#: build/C/man2/getdents.2:142
msgid ""
"On success, the number of bytes read is returned.  On end of directory, 0 is "
"returned.  On error, -1 is returned, and I<errno> is set appropriately."
msgstr ""
"成功した場合は、読み込んだバイト数が返される。 ディレクトリの終わりならば 0 "
"が返される。 エラーの場合は -1 を返され、 I<errno> に適切な値が設定される。"

#. type: Plain text
#: build/C/man2/getdents.2:147 build/C/man2/readdir.2:97
msgid "Invalid file descriptor I<fd>."
msgstr "ファイルディスクリプタ I<fd> が不正である。"

#. type: TP
#: build/C/man2/getdents.2:147 build/C/man2/readdir.2:97
#, no-wrap
msgid "B<EFAULT>"
msgstr "B<EFAULT>"

#. type: Plain text
#: build/C/man2/getdents.2:150 build/C/man2/readdir.2:100
msgid "Argument points outside the calling process's address space."
msgstr "引き数が呼び出したプロセスのアドレス空間外を指している。"

#. type: Plain text
#: build/C/man2/getdents.2:153 build/C/man2/readdir.2:103
msgid "Result buffer is too small."
msgstr "結果用のバッファーが小さすぎる。"

#. type: TP
#: build/C/man2/getdents.2:153 build/C/man3/opendir.3:104
#: build/C/man2/readdir.2:103 build/C/man3/scandir.3:104
#, no-wrap
msgid "B<ENOENT>"
msgstr "B<ENOENT>"

#. type: Plain text
#: build/C/man2/getdents.2:156 build/C/man2/readdir.2:106
msgid "No such directory."
msgstr "そのようなディレクトリは存在しない。"

#. type: TP
#: build/C/man2/getdents.2:156 build/C/man3/opendir.3:110
#: build/C/man2/readdir.2:106 build/C/man3/scandir.3:110
#: build/C/man3/scandirat.3:97
#, no-wrap
msgid "B<ENOTDIR>"
msgstr "B<ENOTDIR>"

#. type: Plain text
#: build/C/man2/getdents.2:159 build/C/man2/readdir.2:109
msgid "File descriptor does not refer to a directory."
msgstr "ファイルディスクリプタがディレクトリを参照していない。"

#.  SVr4 documents additional ENOLINK, EIO error conditions.
#. type: Plain text
#: build/C/man2/getdents.2:162
msgid "SVr4."
msgstr "SVr4."

#. type: Plain text
#: build/C/man2/getdents.2:168
msgid ""
"Glibc does not provide a wrapper for this system call; call it using "
"B<syscall>(2).  You will need to define the I<linux_dirent> structure "
"yourself."
msgstr ""
"glibc はこのシステムコールに対するラッパー関数を提供していないので、 "
"B<syscall>(2)  を使って呼び出すこと。 I<linux_dirent> 構造体は自分で定義する"
"必要がある。"

#. type: Plain text
#: build/C/man2/getdents.2:171
msgid "This call supersedes B<readdir>(2)."
msgstr "このシステムコールは B<readdir>(2)  を置き換えるものである。"

#. type: Plain text
#: build/C/man2/getdents.2:184
msgid ""
"The original Linux B<getdents>()  system call did not handle large file "
"systems and large file offsets.  Consequently, Linux 2.4 added B<getdents64>"
"(), with wider types for the I<d_ino> and I<d_off> fields employed in the "
"I<linux_dirent> structure."
msgstr ""

#. type: SH
#: build/C/man2/getdents.2:184 build/C/man3/scandir.3:148
#, no-wrap
msgid "EXAMPLE"
msgstr "例"

#.  FIXME: This program uses the older getdents(0 system call
#.  and the structure with smaller field widths.
#. type: Plain text
#: build/C/man2/getdents.2:191
msgid ""
"The program below demonstrates the use of B<getdents>().  The following "
"output shows an example of what we see when running this program on an ext2 "
"directory:"
msgstr ""
"下記のプログラムは B<getdents>()  の使用例を示したものである。 以下は、このプ"
"ログラムを ext2 ディレクトリで実行した際に得られる 出力の例である。"

#. type: Plain text
#: build/C/man2/getdents.2:204
#, no-wrap
msgid ""
"$B< ./a.out /testfs/>\n"
"--------------- nread=120 ---------------\n"
"i-node#  file type  d_reclen  d_off   d_name\n"
"       2  directory    16         12  .\n"
"       2  directory    16         24  ..\n"
"      11  directory    24         44  lost+found\n"
"      12  regular      16         56  a\n"
"  228929  directory    16         68  sub\n"
"   16353  directory    16         80  sub2\n"
"  130817  directory    16       4096  sub3\n"
msgstr ""
"$B< ./a.out /testfs/>\n"
"--------------- nread=120 ---------------\n"
"i-node#  file type  d_reclen  d_off   d_name\n"
"       2  directory    16         12  .\n"
"       2  directory    16         24  ..\n"
"      11  directory    24         44  lost+found\n"
"      12  regular      16         56  a\n"
"  228929  directory    16         68  sub\n"
"   16353  directory    16         80  sub2\n"
"  130817  directory    16       4096  sub3\n"

#. type: SS
#: build/C/man2/getdents.2:206
#, no-wrap
msgid "Program source"
msgstr "プログラムのソース"

#. type: Plain text
#: build/C/man2/getdents.2:217
#, no-wrap
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>dirent.hE<gt>     /* Defines DT_* constants */\n"
"#include E<lt>fcntl.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>sys/stat.hE<gt>\n"
"#include E<lt>sys/syscall.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>dirent.hE<gt>     /* Defines DT_* constants */\n"
"#include E<lt>fcntl.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>sys/stat.hE<gt>\n"
"#include E<lt>sys/syscall.hE<gt>\n"

#. type: Plain text
#: build/C/man2/getdents.2:220
#, no-wrap
msgid ""
"#define handle_error(msg) \\e\n"
"        do { perror(msg); exit(EXIT_FAILURE); } while (0)\n"
msgstr ""
"#define handle_error(msg) \\e\n"
"        do { perror(msg); exit(EXIT_FAILURE); } while (0)\n"

#. type: Plain text
#: build/C/man2/getdents.2:227
#, no-wrap
msgid ""
"struct linux_dirent {\n"
"    long           d_ino;\n"
"    off_t          d_off;\n"
"    unsigned short d_reclen;\n"
"    char           d_name[];\n"
"};\n"
msgstr ""
"struct linux_dirent {\n"
"    long           d_ino;\n"
"    off_t          d_off;\n"
"    unsigned short d_reclen;\n"
"    char           d_name[];\n"
"};\n"

#. type: Plain text
#: build/C/man2/getdents.2:229
#, no-wrap
msgid "#define BUF_SIZE 1024\n"
msgstr "#define BUF_SIZE 1024\n"

#. type: Plain text
#: build/C/man2/getdents.2:238
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    int fd, nread;\n"
"    char buf[BUF_SIZE];\n"
"    struct linux_dirent *d;\n"
"    int bpos;\n"
"    char d_type;\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    int fd, nread;\n"
"    char buf[BUF_SIZE];\n"
"    struct linux_dirent *d;\n"
"    int bpos;\n"
"    char d_type;\n"

#. type: Plain text
#: build/C/man2/getdents.2:242
#, no-wrap
msgid ""
"    fd = open(argc E<gt> 1 ? argv[1] : \".\", O_RDONLY | O_DIRECTORY);\n"
"    if (fd == -1)\n"
"        handle_error(\"open\");\n"
msgstr ""
"    fd = open(argc E<gt> 1 ? argv[1] : \".\", O_RDONLY | O_DIRECTORY);\n"
"    if (fd == -1)\n"
"        handle_error(\"open\");\n"

#. type: Plain text
#: build/C/man2/getdents.2:247
#, no-wrap
msgid ""
"    for ( ; ; ) {\n"
"        nread = syscall(SYS_getdents, fd, buf, BUF_SIZE);\n"
"        if (nread == -1)\n"
"            handle_error(\"getdents\");\n"
msgstr ""
"    for ( ; ; ) {\n"
"        nread = syscall(SYS_getdents, fd, buf, BUF_SIZE);\n"
"        if (nread == -1)\n"
"            handle_error(\"getdents\");\n"

#. type: Plain text
#: build/C/man2/getdents.2:250
#, no-wrap
msgid ""
"        if (nread == 0)\n"
"            break;\n"
msgstr ""
"        if (nread == 0)\n"
"            break;\n"

#. type: Plain text
#: build/C/man2/getdents.2:269
#, no-wrap
msgid ""
"        printf(\"--------------- nread=%d ---------------\\en\", nread);\n"
"        printf(\"i-node#  file type  d_reclen  d_off   d_name\\en\");\n"
"        for (bpos = 0; bpos E<lt> nread;) {\n"
"            d = (struct linux_dirent *) (buf + bpos);\n"
"            printf(\"%8ld  \", d-E<gt>d_ino);\n"
"            d_type = *(buf + bpos + d-E<gt>d_reclen - 1);\n"
"            printf(\"%-10s \", (d_type == DT_REG) ?  \"regular\" :\n"
"                             (d_type == DT_DIR) ?  \"directory\" :\n"
"                             (d_type == DT_FIFO) ? \"FIFO\" :\n"
"                             (d_type == DT_SOCK) ? \"socket\" :\n"
"                             (d_type == DT_LNK) ?  \"symlink\" :\n"
"                             (d_type == DT_BLK) ?  \"block dev\" :\n"
"                             (d_type == DT_CHR) ?  \"char dev\" : \"???\");\n"
"            printf(\"%4d %10lld  %s\\en\", d-E<gt>d_reclen,\n"
"                    (long long) d-E<gt>d_off, (char *) d-E<gt>d_name);\n"
"            bpos += d-E<gt>d_reclen;\n"
"        }\n"
"    }\n"
msgstr ""
"        printf(\"--------------- nread=%d ---------------\\en\", nread);\n"
"        printf(\"i-node#  file type  d_reclen  d_off   d_name\\en\");\n"
"        for (bpos = 0; bpos E<lt> nread;) {\n"
"            d = (struct linux_dirent *) (buf + bpos);\n"
"            printf(\"%8ld  \", d-E<gt>d_ino);\n"
"            d_type = *(buf + bpos + d-E<gt>d_reclen - 1);\n"
"            printf(\"%-10s \", (d_type == DT_REG) ?  \"regular\" :\n"
"                             (d_type == DT_DIR) ?  \"directory\" :\n"
"                             (d_type == DT_FIFO) ? \"FIFO\" :\n"
"                             (d_type == DT_SOCK) ? \"socket\" :\n"
"                             (d_type == DT_LNK) ?  \"symlink\" :\n"
"                             (d_type == DT_BLK) ?  \"block dev\" :\n"
"                             (d_type == DT_CHR) ?  \"char dev\" : \"???\");\n"
"            printf(\"%4d %10lld  %s\\en\", d-E<gt>d_reclen,\n"
"                    (long long) d-E<gt>d_off, (char *) d-E<gt>d_name);\n"
"            bpos += d-E<gt>d_reclen;\n"
"        }\n"
"    }\n"

#. type: Plain text
#: build/C/man2/getdents.2:272
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""
"    exit(EXIT_SUCCESS);\n"
"}\n"

#. type: Plain text
#: build/C/man2/getdents.2:275
msgid "B<readdir>(2), B<readdir>(3)"
msgstr "B<readdir>(2), B<readdir>(3)"

#. type: TH
#: build/C/man3/getdirentries.3:27
#, no-wrap
msgid "GETDIRENTRIES"
msgstr "GETDIRENTRIES"

#. type: TH
#: build/C/man3/getdirentries.3:27
#, no-wrap
msgid "2007-07-26"
msgstr "2007-07-26"

#. type: TH
#: build/C/man3/getdirentries.3:27 build/C/man3/opendir.3:30
#: build/C/man3/scandir.3:34
#, no-wrap
msgid "GNU"
msgstr "GNU"

#. type: Plain text
#: build/C/man3/getdirentries.3:30
msgid ""
"getdirentries - get directory entries in a file system-independent format"
msgstr ""
"getdirentries - ディレクトリのエントリをファイルシステムに依存しない形式で取"
"得する"

#. type: Plain text
#: build/C/man3/getdirentries.3:35
msgid ""
"B<ssize_t getdirentries(int >I<fd>B<, char *>I<buf>B<, size_t >I<nbytes> B<, "
"off_t *>I<basep>B<);>"
msgstr ""
"B<ssize_t getdirentries(int >I<fd>B<, char *>I<buf>B<, size_t >I<nbytes> B<, "
"off_t *>I<basep>B<);>"

#. type: Plain text
#: build/C/man3/getdirentries.3:43
msgid "B<getdirentries>(): _BSD_SOURCE || _SVID_SOURCE"
msgstr "B<getdirentries>(): _BSD_SOURCE || _SVID_SOURCE"

#. type: Plain text
#: build/C/man3/getdirentries.3:56
msgid ""
"Read directory entries from the directory specified by I<fd> into I<buf>.  "
"At most I<nbytes> are read.  Reading starts at offset I<*basep>, and "
"I<*basep> is updated with the new position after reading."
msgstr ""
"I<fd> で指定されたディレクトリからエントリを読み、 I<buf> に格納する。最大で "
"I<nbytes> が読み込まれる。読み込みはオフセット I<*basep> から開始され、読み込"
"み終了時には I<*basep> は新しい位置に更新される。"

#. type: Plain text
#: build/C/man3/getdirentries.3:62
msgid ""
"B<getdirentries>()  returns the number of bytes read or zero when at the end "
"of the directory.  If an error occurs, -1 is returned, and I<errno> is set "
"appropriately."
msgstr ""
"B<getdirentries>()  は読み込んだバイト数を返すか、ディレクトリの最後にきた場"
"合は 0 を返す。 エラーが起こったら -1 を返し、 I<errno> をエラーに対応する値"
"にセットする。"

#. type: Plain text
#: build/C/man3/getdirentries.3:64
msgid "See the Linux library source code for details."
msgstr "詳細は Linux のライブラリソースコードを読んでほしい。"

#. type: Plain text
#: build/C/man3/getdirentries.3:72
msgid ""
"Not in POSIX.1-2001.  Present on the BSDs, and a few other systems.  Use "
"B<opendir>(3)  and B<readdir>(3)  instead."
msgstr ""
"POSIX.1-2001 にはない。 BSD に存在し、他にもいくつかのシステムにもある。 代わ"
"りに B<opendir>(3)  と B<readdir>(3)  を使用すること。"

#. type: Plain text
#: build/C/man3/getdirentries.3:74
msgid "B<lseek>(2), B<open>(2)"
msgstr "B<lseek>(2), B<open>(2)"

#. type: TH
#: build/C/man3/opendir.3:30
#, no-wrap
msgid "OPENDIR"
msgstr "OPENDIR"

#. type: TH
#: build/C/man3/opendir.3:30
#, no-wrap
msgid "2010-06-20"
msgstr "2010-06-20"

#. type: Plain text
#: build/C/man3/opendir.3:33
msgid "opendir, fdopendir - open a directory"
msgstr "opendir, fdopendir - ディレクトリをオープンする"

#. type: Plain text
#: build/C/man3/opendir.3:41
#, no-wrap
msgid ""
"B<DIR *opendir(const char *>I<name>B<);>\n"
"B<DIR *fdopendir(int >I<fd>B<);>\n"
msgstr ""
"B<DIR *opendir(const char *>I<name>B<);>\n"
"B<DIR *fdopendir(int >I<fd>B<);>\n"

#. type: Plain text
#: build/C/man3/opendir.3:49
msgid "B<fdopendir>():"
msgstr "B<fdopendir>():"

#. type: TP
#: build/C/man3/opendir.3:52
#, no-wrap
msgid "Since glibc 2.10:"
msgstr "glibc 2.10 以降:"

#. type: Plain text
#: build/C/man3/opendir.3:55
msgid "_XOPEN_SOURCE\\ E<gt>=\\ 700 || _POSIX_C_SOURCE\\ E<gt>=\\ 200809L"
msgstr "_XOPEN_SOURCE\\ E<gt>=\\ 700 || _POSIX_C_SOURCE\\ E<gt>=\\ 200809L"

#. type: TP
#: build/C/man3/opendir.3:55
#, no-wrap
msgid "Before glibc 2.10:"
msgstr "glibc 2.10 より前:"

#. type: Plain text
#: build/C/man3/opendir.3:58
msgid "_GNU_SOURCE"
msgstr "_GNU_SOURCE"

#. type: Plain text
#: build/C/man3/opendir.3:67
msgid ""
"The B<opendir>()  function opens a directory stream corresponding to the "
"directory I<name>, and returns a pointer to the directory stream.  The "
"stream is positioned at the first entry in the directory."
msgstr ""
"B<opendir>()  関数はディレクトリ I<name> に対応する ディレクトリストリームを"
"オープンし、そのストリームへのポインタを返す。 ストリームの位置はディレクトリ"
"の先頭のエントリに設定される。"

#. type: Plain text
#: build/C/man3/opendir.3:81
msgid ""
"The B<fdopendir>()  function is like B<opendir>(), but returns a directory "
"stream for the directory referred to by the open file descriptor I<fd>.  "
"After a successful call to B<fdopendir>(), I<fd> is used internally by the "
"implementation, and should not otherwise be used by the application."
msgstr ""
"B<fdopendir>()  関数は B<opendir>()  と同様だが、オープン済みのファイルディス"
"クリプタ I<fd> により参照されるディレクトリに対する ディレクトリストリームを"
"返す。 B<fdopendir>()  の呼び出しが成功した後は、 I<fd> は実装の内部で使用さ"
"れる。アプリケーションは I<fd> を他の場面で使用すべきではない。"

#. type: Plain text
#: build/C/man3/opendir.3:90
msgid ""
"The B<opendir>()  and B<fdopendir>()  functions return a pointer to the "
"directory stream.  On error, NULL is returned, and I<errno> is set "
"appropriately."
msgstr ""
"関数 B<opendir>()  と B<fdopendir>()  はディレクトリストリームへのポインタを"
"返す。 エラーの場合は、NULL が返されて、 I<errno> が適切に設定される。"

#. type: TP
#: build/C/man3/opendir.3:91
#, no-wrap
msgid "B<EACCES>"
msgstr "B<EACCES>"

#. type: Plain text
#: build/C/man3/opendir.3:94
msgid "Permission denied."
msgstr "アクセス権限がない。"

#. type: Plain text
#: build/C/man3/opendir.3:98
msgid "I<fd> is not a valid file descriptor opened for reading."
msgstr ""
"I<fd> が読み出し用にオープンされた、有効なファイルディスクリプタではない。"

#. type: TP
#: build/C/man3/opendir.3:98
#, no-wrap
msgid "B<EMFILE>"
msgstr "B<EMFILE>"

#. type: Plain text
#: build/C/man3/opendir.3:101
msgid "Too many file descriptors in use by process."
msgstr "プロセスが使用中のファイルディスクリプタが多すぎる。"

#. type: TP
#: build/C/man3/opendir.3:101
#, no-wrap
msgid "B<ENFILE>"
msgstr "B<ENFILE>"

#. type: Plain text
#: build/C/man3/opendir.3:104
msgid "Too many files are currently open in the system."
msgstr "システムでオープンされているファイルが多すぎる。"

#. type: Plain text
#: build/C/man3/opendir.3:107
msgid "Directory does not exist, or I<name> is an empty string."
msgstr "ディレクトリが存在しないか、または I<name> が空文字列である。"

#. type: TP
#: build/C/man3/opendir.3:107 build/C/man3/scandir.3:107
#, no-wrap
msgid "B<ENOMEM>"
msgstr "B<ENOMEM>"

#. type: Plain text
#: build/C/man3/opendir.3:110 build/C/man3/scandir.3:110
msgid "Insufficient memory to complete the operation."
msgstr "操作を完了するのに十分なメモリがない。"

#. type: Plain text
#: build/C/man3/opendir.3:113
msgid "I<name> is not a directory."
msgstr "I<name> はディレクトリではない。"

#. type: SH
#: build/C/man3/opendir.3:113 build/C/man3/scandir.3:113
#: build/C/man3/scandirat.3:103
#, no-wrap
msgid "VERSIONS"
msgstr "バージョン"

#. type: Plain text
#: build/C/man3/opendir.3:116
msgid "B<fdopendir>()  is available in glibc since version 2.4."
msgstr "B<fdopendir>()  は glibc 2.4 以降で利用可能である。"

#. type: Plain text
#: build/C/man3/opendir.3:121
msgid ""
"B<opendir>()  is present on SVr4, 4.3BSD, and specified in POSIX.1-2001.  "
"B<fdopendir>()  is specified in POSIX.1-2008."
msgstr ""
"B<opendir>()  は SVr4 と 4.3BSD に存在し、 POSIX.1-2001 で規定されている。 "
"B<fdopendir>()  は POSIX.1-2008 で規定されている。"

#. type: Plain text
#: build/C/man3/opendir.3:124
msgid ""
"The underlying file descriptor of the directory stream can be obtained using "
"B<dirfd>(3)."
msgstr ""
"ディレクトリストリームに対応するファイルディスクリプタは B<dirfd>(3)  を使用"
"して得ることができる。"

#. type: Plain text
#: build/C/man3/opendir.3:138
msgid ""
"The B<opendir>()  function sets the close-on-exec flag for the file "
"descriptor underlying the I<DIR *>.  The B<fdopendir>()  function leaves the "
"setting of the close-on-exec flag unchanged for the file descriptor, I<fd>.  "
"POSIX.1-200x leaves it unspecified whether a successful call to B<fdopendir>"
"()  will set the close-on-exec flag for the file descriptor, I<fd>."
msgstr ""
"B<opendir>()  関数は、 I<DIR *> の背後にあるファイルディスクリプタの close-"
"on-exec フラグを設定する。 B<fdopendir>()  関数は、ファイルディスクリプタの "
"close-on-exec フラグの設定を変更しない。 B<fdopendir>()  の呼び出しが成功した"
"際に、ファイルディスクリプタ I<fd> の close-on-exec を設定するかどうかは、 "
"POSIX.1-200x では規定されていない。"

#. type: Plain text
#: build/C/man3/opendir.3:146
msgid ""
"B<open>(2), B<closedir>(3), B<dirfd>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3), B<telldir>(3)"
msgstr ""
"B<open>(2), B<closedir>(3), B<dirfd>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<seekdir>(3), B<telldir>(3)"

#. type: TH
#: build/C/man2/readdir.2:28 build/C/man3/readdir.3:34
#, no-wrap
msgid "READDIR"
msgstr "READDIR"

#. type: TH
#: build/C/man2/readdir.2:28
#, no-wrap
msgid "2008-10-02"
msgstr "2008-10-02"

#. type: Plain text
#: build/C/man2/readdir.2:31
msgid "readdir - read directory entry"
msgstr "readdir - ディレクトリ・エントリを読み込む"

#. type: Plain text
#: build/C/man2/readdir.2:36
#, no-wrap
msgid ""
"B<int readdir(unsigned int >I<fd>B<, struct old_linux_dirent *>I<dirp>B<,>\n"
"B<            unsigned int >I<count>B<);>\n"
msgstr ""
"B<int readdir(unsigned int >I<fd>B<, struct old_linux_dirent *>I<dirp>B<,>\n"
"B<            unsigned int >I<count>B<);>\n"

#. type: Plain text
#: build/C/man2/readdir.2:45
msgid ""
"This is not the function you are interested in.  Look at B<readdir>(3)  for "
"the POSIX conforming C library interface.  This page documents the bare "
"kernel system call interface, which is superseded by B<getdents>(2)."
msgstr ""
"これはあなたの興味をもっている関数ではない。 POSIX 準拠の C ライブラリ・イン"
"ターフェースについては B<readdir>(3)  を見ること。 このページは裸のカーネルの"
"システムコール・インターフェースについて 記述しているが、このインターフェース"
"は B<getdents>(2)  によって取って代わられた。"

#. type: Plain text
#: build/C/man2/readdir.2:59
msgid ""
"B<readdir>()  reads one I<old_linux_dirent> structure from the directory "
"referred to by the file descriptor I<fd> into the buffer pointed to by "
"I<dirp>.  The argument I<count> is ignored; at most one I<old_linux_dirent> "
"structure is read."
msgstr ""
"B<readdir>()  は、ファイルディスクリプタ I<fd> が参照しているディレクトリか"
"ら I<old_linux_dirent> 構造体を読み込み、 I<dirp> で指されたバッファに格納す"
"る。 I<count> 引き数は(ほとんどの I<old_linux_dirent> 構造体の読み込みにおい"
"て)無視される"

#. type: Plain text
#: build/C/man2/readdir.2:63
msgid "The I<old_linux_dirent> structure is declared as follows:"
msgstr "I<old_linux_dirent> 構造体は以下のように宣言される:"

#. type: Plain text
#: build/C/man2/readdir.2:72
#, no-wrap
msgid ""
"struct old_linux_dirent {\n"
"    long  d_ino;              /* inode number */\n"
"    off_t d_off;              /* offset to this I<old_linux_dirent> */\n"
"    unsigned short d_reclen;  /* length of this I<d_name> */\n"
"    char  d_name[NAME_MAX+1]; /* filename (null-terminated) */\n"
"}\n"
msgstr ""
"struct old_linux_dirent {\n"
"    long  d_ino;              /* inode number */\n"
"    off_t d_off;              /* offset to this I<old_linux_dirent> */\n"
"    unsigned short d_reclen;  /* length of this I<d_name> */\n"
"    char  d_name[NAME_MAX+1]; /* filename (null-terminated) */\n"
"}\n"

#. type: Plain text
#: build/C/man2/readdir.2:86
msgid ""
"I<d_ino> is an inode number.  I<d_off> is the distance from the start of the "
"directory to this I<old_linux_dirent>.  I<d_reclen> is the size of "
"I<d_name>, not counting the terminating null byte.  I<d_name> is a null-"
"terminated filename."
msgstr ""
"I<d_ino> は inode 番号である。 I<d_off> はディレクトリの最初からこの "
"I<old_linux_dirent> まで距離である。 I<d_reclen> は I<d_name> の大きさで、終"
"端のヌルバイト (null byte) を含まない。 I<d_name> はヌルバイトで終わるファイ"
"ル名である。"

#. type: Plain text
#: build/C/man2/readdir.2:92
msgid ""
"On success, 1 is returned.  On end of directory, 0 is returned.  On error, "
"-1 is returned, and I<errno> is set appropriately."
msgstr ""
"成功した場合は、1 が返される。 ディレクトリの最後では 0 が返される。 エラーの"
"場合は -1 が返され、 I<errno> が適切に設定される。"

#. type: Plain text
#: build/C/man2/readdir.2:111
msgid "This system call is Linux-specific."
msgstr "このシステム・コールは Linux 特有である。"

#. type: Plain text
#: build/C/man2/readdir.2:117
msgid ""
"Glibc does not provide a wrapper for this system call; call it using "
"B<syscall>(2).  You will need to define the I<old_linux_dirent> structure "
"yourself."
msgstr ""
"glibc はこのシステムコールに対するラッパー関数を提供していない。 B<syscall>"
"(2)  を使って呼び出すこと。 I<old_linux_dirent> 構造体を自分自身で定義する必"
"要がある。"

#. type: Plain text
#: build/C/man2/readdir.2:119
msgid "B<getdents>(2), B<readdir>(3)"
msgstr "B<getdents>(2), B<readdir>(3)"

#. type: TH
#: build/C/man3/readdir.3:34
#, no-wrap
msgid "2010-09-10"
msgstr "2010-09-10"

#. type: Plain text
#: build/C/man3/readdir.3:37
msgid "readdir, readdir_r - read a directory"
msgstr "readdir, readdir_r - ディレクトリを読み込む"

#. type: Plain text
#: build/C/man3/readdir.3:42
#, no-wrap
msgid "B<struct dirent *readdir(DIR *>I<dirp>B<);>\n"
msgstr "B<struct dirent *readdir(DIR *>I<dirp>B<);>\n"

#. type: Plain text
#: build/C/man3/readdir.3:45
#, no-wrap
msgid "B<int readdir_r(DIR *>I<dirp>B<, struct dirent *>I<entry>B<, struct dirent **>I<result>B<);>\n"
msgstr "B<int readdir_r(DIR *>I<dirp>B<, struct dirent *>I<entry>B<, struct dirent **>I<result>B<);>\n"

#. type: Plain text
#: build/C/man3/readdir.3:54
msgid "B<readdir_r>():"
msgstr "B<readdir_r>():"

#. type: Plain text
#: build/C/man3/readdir.3:57
msgid ""
"_POSIX_C_SOURCE\\ E<gt>=\\ 1 || _XOPEN_SOURCE || _BSD_SOURCE || _SVID_SOURCE "
"|| _POSIX_SOURCE"
msgstr ""
"_POSIX_C_SOURCE\\ E<gt>=\\ 1 || _XOPEN_SOURCE || _BSD_SOURCE || _SVID_SOURCE "
"|| _POSIX_SOURCE"

#. type: Plain text
#: build/C/man3/readdir.3:67
msgid ""
"The B<readdir>()  function returns a pointer to a I<dirent> structure "
"representing the next directory entry in the directory stream pointed to by "
"I<dirp>.  It returns NULL on reaching the end of the directory stream or if "
"an error occurred."
msgstr ""
"B<readdir>()  関数は、I<dirp> が指すディレクトリストリームの中で、 次のディレ"
"クトリエントリを表す I<dirent> 構造体へのポインタを返す。 ディレクトリスト"
"リームの末尾に達した場合や、 エラーが発生した場合は、 NULL を返す。"

#. type: Plain text
#: build/C/man3/readdir.3:71
msgid "On Linux, the I<dirent> structure is defined as follows:"
msgstr "Linux では I<dirent> 構造体は以下のように定義されている。"

#. type: Plain text
#: build/C/man3/readdir.3:82
#, no-wrap
msgid ""
"struct dirent {\n"
"    ino_t          d_ino;       /* inode number */\n"
"    off_t          d_off;       /* offset to the next dirent */\n"
"    unsigned short d_reclen;    /* length of this record */\n"
"    unsigned char  d_type;      /* type of file; not supported\n"
"                                   by all file system types */\n"
"    char           d_name[256]; /* filename */\n"
"};\n"
msgstr ""
"struct dirent {\n"
"    ino_t          d_ino;       /* inode 番号 */\n"
"    off_t          d_off;       /* 次の dirent へのオフセット */\n"
"    unsigned short d_reclen;    /* このレコードの長さ */\n"
"    unsigned char  d_type;      /* ファイル種別。全ファイルシステム */\n"
"                                   でサポートされているわけではない */\n"
"    char           d_name[256]; /* ファイル名 */\n"
"};\n"

#. type: Plain text
#: build/C/man3/readdir.3:96
msgid ""
"The only fields in the I<dirent> structure that are mandated by POSIX.1 are: "
"I<d_name>[], of unspecified size, with at most B<NAME_MAX> characters "
"preceding the terminating null byte; and (as an XSI extension)  I<d_ino>.  "
"The other fields are unstandardized, and not present on all systems; see "
"NOTES below for some further details."
msgstr ""
"I<dirent> 構造体のフィールドで POSIX.1 で要求されているのは、 I<d_name>[] と "
"(XSI 拡張での)  I<d_ino> だけである。 I<d_name>[] はその大きさも規定されてお"
"らず、 このフィールドには最大で B<NAME_MAX> 個の文字と、それに続く終端の "
"NULL バイトが格納される。 他のフィールドは非標準であり、全てのシステムに存在"
"するわけではない。 詳細については、下記の「注意」を参照のこと。"

#. type: Plain text
#: build/C/man3/readdir.3:102
msgid ""
"The data returned by B<readdir>()  may be overwritten by subsequent calls to "
"B<readdir>()  for the same directory stream."
msgstr ""
"B<readdir>()  によって返されるデータは、それ以降の同じストリームに対する "
"B<readdir>()  の呼び出しによって上書きされる可能性がある。"

#. type: Plain text
#: build/C/man3/readdir.3:117
msgid ""
"The B<readdir_r>()  function is a reentrant version of B<readdir>().  It "
"reads the next directory entry from the directory stream I<dirp>, and "
"returns it in the caller-allocated buffer pointed to by I<entry>.  (See "
"NOTES for information on allocating this buffer.)  A pointer to the returned "
"item is placed in I<*result>; if the end of the directory stream was "
"encountered, then NULL is instead returned in I<*result>."
msgstr ""
"B<readdir_r>()  関数は B<readdir>()  のリエントラント版である。 この関数は"
"ディレクトリストリーム I<dirp> から次のディレクトリエントリを読み込み、 "
"I<entry> が指す呼び出し元が割り当てたバッファにそのエントリを格納して返す (こ"
"のバッファの割り当てについては「注意」の節を参照のこと)。 返されるエントリへ"
"のポインタが I<*result> に格納される。ディレクトリストリームの末尾に達した場"
"合は、 NULL が I<*result> に格納される。"

#. type: Plain text
#: build/C/man3/readdir.3:132
msgid ""
"On success, B<readdir>()  returns a pointer to a I<dirent> structure.  (This "
"structure may be statically allocated; do not attempt to B<free>(3)  it.)  "
"If the end of the directory stream is reached, NULL is returned and I<errno> "
"is not changed.  If an error occurs, NULL is returned and I<errno> is set "
"appropriately."
msgstr ""
"成功すると、 B<readdir>()  は I<dirent> 構造体へのポインタを返す。 (この構造"
"体は静的に割り当てられているかもしれない。 このポインタを B<free>(3)  しよう"
"としないこと。)  ディレクトリストリームの末尾に達した場合には、NULL が返さ"
"れ、 I<errno> は変化しない。 エラーが発生した場合、NULL が返され、 I<errno> "
"が適切に設定される。"

#. type: Plain text
#: build/C/man3/readdir.3:141
msgid ""
"The B<readdir_r>()  function returns 0 on success.  On error, it returns a "
"positive error number (listed under ERRORS).  If the end of the directory "
"stream is reached, B<readdir_r>()  returns 0, and returns NULL in I<*result>."
msgstr ""
"成功すると、 B<readdir_r>()  関数は 0 を返す。 エラーの場合、(「エラー」の節"
"のリストに載っている) 正のエラー番号を返す。 ディレクトリストリームの末尾に達"
"した場合、 B<readdir_r>()  は返り値として 0 を返し、 I<*result> に NULL を格"
"納する。"

#. type: Plain text
#: build/C/man3/readdir.3:147 build/C/man3/rewinddir.3:51
msgid "SVr4, 4.3BSD, POSIX.1-2001."
msgstr "SVr4, 4.3BSD, POSIX.1-2001."

#. type: Plain text
#: build/C/man3/readdir.3:163
msgid ""
"Only the fields I<d_name> and I<d_ino> are specified in POSIX.1-2001.  The "
"remaining fields are available on many, but not all systems.  Under glibc, "
"programs can check for the availability of the fields not defined in POSIX.1 "
"by testing whether the macros B<_DIRENT_HAVE_D_NAMLEN>, "
"B<_DIRENT_HAVE_D_RECLEN>, B<_DIRENT_HAVE_D_OFF>, or B<_DIRENT_HAVE_D_TYPE> "
"are defined."
msgstr ""
"フィールド I<d_name> と I<d_ino> だけが POSIX.1-2001 で規定されている。 残り"
"のフィールドは多くのシステムに存在するが、全てのシステムに 存在するわけではな"
"い。 glibc では、プログラムが POSIX.1 で定義されていないフィールドが 利用でき"
"るかをチェックすることができる。 チェックするには、マクロ "
"B<_DIRENT_HAVE_D_NAMLEN>, B<_DIRENT_HAVE_D_RECLEN>, B<_DIRENT_HAVE_D_OFF>, "
"B<_DIRENT_HAVE_D_TYPE> が定義されているかをテストすればよい。"

#. type: Plain text
#: build/C/man3/readdir.3:176
msgid ""
"Other than Linux, the I<d_type> field is available mainly only on BSD "
"systems.  This field makes it possible to avoid the expense of calling "
"B<lstat>(2)  if further actions depend on the type of the file.  If the "
"B<_BSD_SOURCE> feature test macro is defined, then glibc defines the "
"following macro constants for the value returned in I<d_type>:"
msgstr ""
"I<d_type> フィールドは、Linux 以外では、 主に BSD 系のシステムにだけ存在す"
"る。 このフィールドを使うと、 その後の動作がファイルの種別により決まる場合"
"に、 B<lstat>(2)  を呼び出すコストを避けることができる。 機能検査マクロ "
"B<_BSD_SOURCE> が定義された場合、glibc は I<d_type> で返される値として以下の"
"マクロ定数を定義する。"

#. type: Plain text
#: build/C/man3/readdir.3:207
msgid ""
"If the file type could not be determined, the value B<DT_UNKNOWN> is "
"returned in I<d_type>."
msgstr ""
"ファイル種別を決定できなかった場合には、 I<d_type> に B<DT_UNKNOWN> が入る。"

#. type: Plain text
#: build/C/man3/readdir.3:226
msgid ""
"Since POSIX.1 does not specify the size of the I<d_name> field, and other "
"nonstandard fields may precede that field within the I<dirent> structure, "
"portable applications that use B<readdir_r>()  should allocate the buffer "
"whose address is passed in I<entry> as follows:"
msgstr ""
"POSIX.1 では I<d_name> フィールドのサイズは規定されておらず、 I<dirent> 構造"
"体の I<d_name> の後ろに他の非標準のフィールドがあるかもしれないので、 移植性"
"が必要なアプリケーションで B<readdir_r>()  を使う場合は I<entry> に渡すバッ"
"ファを次のようにして割り当てるべきである。"

#. type: Plain text
#: build/C/man3/readdir.3:232
#, no-wrap
msgid ""
"len = offsetof(struct dirent, d_name) +\n"
"          pathconf(dirpath, _PC_NAME_MAX) + 1\n"
"entryp = malloc(len);\n"
msgstr ""
"len = offsetof(struct dirent, d_name) +\n"
"          pathconf(dirpath, _PC_NAME_MAX) + 1\n"
"entryp = malloc(len);\n"

#. type: Plain text
#: build/C/man3/readdir.3:239
msgid ""
"(POSIX.1 requires that I<d_name> is the last field in a I<struct dirent>.)"
msgstr ""
"(POSIX.1 では I<struct dirent> の最後のフィールドが I<d_name> であることを要"
"求している。)"

#. type: Plain text
#: build/C/man3/readdir.3:250
msgid ""
"B<getdents>(2), B<read>(2), B<closedir>(3), B<dirfd>(3), B<ftw>(3), "
"B<offsetof>(3), B<opendir>(3), B<rewinddir>(3), B<scandir>(3), B<seekdir>"
"(3), B<telldir>(3)"
msgstr ""
"B<getdents>(2), B<read>(2), B<closedir>(3), B<dirfd>(3), B<ftw>(3), "
"B<offsetof>(3), B<opendir>(3), B<rewinddir>(3), B<scandir>(3), B<seekdir>"
"(3), B<telldir>(3)"

#. type: TH
#: build/C/man3/rewinddir.3:29
#, no-wrap
msgid "REWINDDIR"
msgstr "REWINDDIR"

#. type: TH
#: build/C/man3/rewinddir.3:29
#, no-wrap
msgid "1995-06-11"
msgstr "1995-06-11"

#. type: Plain text
#: build/C/man3/rewinddir.3:32
msgid "rewinddir - reset directory stream"
msgstr "rewinddir - ディレクトリストリームの初期化"

#. type: Plain text
#: build/C/man3/rewinddir.3:39
#, no-wrap
msgid "B<void rewinddir(DIR *>I<dirp>B<);>\n"
msgstr "B<void rewinddir(DIR *>I<dirp>B<);>\n"

#. type: Plain text
#: build/C/man3/rewinddir.3:45
msgid ""
"The B<rewinddir>()  function resets the position of the directory stream "
"I<dirp> to the beginning of the directory."
msgstr ""
"B<rewinddir>()  関数は、ディレクトリストリーム I<dirp> の位置を ディレクトリ"
"の先頭に初期化する。"

#. type: Plain text
#: build/C/man3/rewinddir.3:49
msgid "The B<rewinddir>()  function returns no value."
msgstr "B<rewinddir>()  関数は、値を返さない。"

#. type: Plain text
#: build/C/man3/rewinddir.3:57
msgid ""
"B<closedir>(3), B<opendir>(3), B<readdir>(3), B<scandir>(3), B<seekdir>(3), "
"B<telldir>(3)"
msgstr ""
"B<closedir>(3), B<opendir>(3), B<readdir>(3), B<scandir>(3), B<seekdir>(3), "
"B<telldir>(3)"

#. type: TH
#: build/C/man3/scandir.3:34
#, no-wrap
msgid "SCANDIR"
msgstr "SCANDIR"

#. type: TH
#: build/C/man3/scandir.3:34
#, fuzzy, no-wrap
#| msgid "2009-03-11"
msgid "2012-03-20"
msgstr "2009-03-11"

#. type: Plain text
#: build/C/man3/scandir.3:37
msgid "scandir, alphasort, versionsort - scan a directory for matching entries"
msgstr "scandir, alphasort, versionsort - ディレクトリを走査する"

#. type: Plain text
#: build/C/man3/scandir.3:42
#, no-wrap
msgid "B<int scandir(const char *>I<dirp>B<, struct dirent ***>I<namelist>B<,>\n"
msgstr "B<int scandir(const char *>I<dirp>B<, struct dirent ***>I<namelist>B<,>\n"

#. type: Plain text
#: build/C/man3/scandir.3:45 build/C/man3/scandirat.3:43
#, no-wrap
msgid ""
"B<int (*>I<filter>B<)(const struct dirent *),>\n"
"B<int (*>I<compar>B<)(const struct dirent **, const struct dirent **));>\n"
msgstr ""
"B<int (*>I<filter>B<)(const struct dirent *),>\n"
"B<int (*>I<compar>B<)(const struct dirent **, const struct dirent **));>\n"

#. type: Plain text
#: build/C/man3/scandir.3:48
#, no-wrap
msgid "B<int alphasort(const void *>I<a>B<, const void *>I<b>B<);>\n"
msgstr "B<int alphasort(const void *>I<a>B<, const void *>I<b>B<);>\n"

#. type: Plain text
#: build/C/man3/scandir.3:50
#, no-wrap
msgid "B<int versionsort(const void *>I<a>B<, const void *>I<b>B<);>\n"
msgstr "B<int versionsort(const void *>I<a>B<, const void *>I<b>B<);>\n"

#. type: Plain text
#: build/C/man3/scandir.3:60
msgid "B<scandir>(), B<alphasort>(): _BSD_SOURCE || _SVID_SOURCE"
msgstr "B<scandir>(), B<alphasort>(): _BSD_SOURCE || _SVID_SOURCE"

#. type: Plain text
#: build/C/man3/scandir.3:63
msgid "B<versionsort>(): _GNU_SOURCE"
msgstr "B<versionsort>(): _GNU_SOURCE"

#. type: Plain text
#: build/C/man3/scandir.3:78
msgid ""
"The B<scandir>()  function scans the directory I<dirp>, calling I<filter>() "
"on each directory entry.  Entries for which I<filter>() returns nonzero are "
"stored in strings allocated via B<malloc>(3), sorted using B<qsort>(3)  with "
"the comparison function I<compar>(), and collected in array I<namelist> "
"which is allocated via B<malloc>(3).  If I<filter> is NULL, all entries are "
"selected."
msgstr ""
"関数 B<scandir>()  はディレクトリ I<dirp> を走査し、 ディレクトリの各エントリ"
"を引き数として B<filter>()  を呼び出す。 B<filter>()  が 0 以外の値を返すエン"
"トリは B<malloc>(3)  によって 確保された文字列に保存され、比較関数 B<compar>"
"()  を用いて B<qsort>(3)  によりソートされ、 B<malloc>(3)  により確保された配"
"列 I<namelist> にまとめられる。 I<filter> が NULL ならば、すべてのエントリが"
"選択される。"

#. type: Plain text
#: build/C/man3/scandir.3:90
msgid ""
"The B<alphasort>()  and B<versionsort>()  functions can be used as the "
"comparison function I<compar>().  The former sorts directory entries using "
"B<strcoll>(3), the latter using B<strverscmp>(3)  on the strings I<(*a)-"
"E<gt>d_name> and I<(*b)-E<gt>d_name>."
msgstr ""
"比較関数 I<compar>()  には B<alphasort>()  関数と B<versionsort>()  関数を使"
"うことができる。 B<alphasort>()  は B<strcoll>(3)  を用いてディレクトリエント"
"リをソートし、 B<versionsort>()  は文字列 I<(*a)-E<gt>d_name> と I<(*b)-"
"E<gt>d_name> に対して B<strverscmp>(3)  を用いる。"

#. type: Plain text
#: build/C/man3/scandir.3:95
msgid ""
"The B<scandir>()  function returns the number of directory entries selected "
"or -1 if an error occurs."
msgstr ""
"関数 B<scandir>()  は選択されたエントリの数か、 (エラーが発生した場合) -1 を"
"返す。"

#. type: Plain text
#: build/C/man3/scandir.3:103
msgid ""
"The B<alphasort>()  and B<versionsort>()  functions return an integer less "
"than, equal to, or greater than zero if the first argument is considered to "
"be respectively less than, equal to, or greater than the second."
msgstr ""
"関数 B<alphasort>()  と B<versionsort>()  は 1 番目の引き数が 2 番目の引き数"
"に対して、 [小さい/等しい/大きい] かに応じて、0 より [小さい/等しい/大きい] "
"値を返す。"

#. type: Plain text
#: build/C/man3/scandir.3:107
msgid "The path in I<dirp> does not exist."
msgstr "I<dirp> で指定されたパスが存在しない。"

#. type: Plain text
#: build/C/man3/scandir.3:113
msgid "The path in I<dirp> is not a directory."
msgstr "I<dirp> で指定されたパスがディレクトリではない。"

#. type: Plain text
#: build/C/man3/scandir.3:116
msgid "B<versionsort>()  was added to glibc in version 2.1."
msgstr "B<versionsort>()  は、glibc バージョン 2.1 で追加された。"

#. type: Plain text
#: build/C/man3/scandir.3:123
msgid ""
"B<alphasort>()  and B<scandir>()  are specified in POSIX.1-2008, and are "
"widely available.  B<versionsort>()  is a GNU extension."
msgstr ""
"B<alphasort>()  と B<scandir>()  は POSIX.1-2008 で規定されており、広く利用可"
"能である。 B<versionsort>()  は GNU 拡張である。"

#. type: Plain text
#: build/C/man3/scandir.3:130
msgid ""
"The functions B<scandir>()  and B<alphasort>()  are from 4.3BSD, and have "
"been available under Linux since libc4.  Libc4 and libc5 use the more "
"precise prototype"
msgstr ""
"関数 B<scandir>()  と B<alphasort>()  は 4.3BSD から取り入れられ、Linux では "
"libc4 から使用可能になった。 libc4 と libc5 では以下のようなもっと詳細なプロ"
"トタイプを使っている。"

#. type: Plain text
#: build/C/man3/scandir.3:134
#, no-wrap
msgid ""
"    int alphasort(const struct dirent ** a,\n"
"                  const struct dirent **b);\n"
msgstr ""
"    int alphasort(const struct dirent ** a,\n"
"                  const struct dirent **b);\n"

#. type: Plain text
#: build/C/man3/scandir.3:137
msgid "but glibc 2.0 returns to the imprecise BSD prototype."
msgstr "しかし glibc 2.0 では不正確な BSD のプロトタイプに戻った。"

#. type: Plain text
#: build/C/man3/scandir.3:141
msgid ""
"The function B<versionsort>()  is a GNU extension, available since glibc 2.1."
msgstr ""
"関数 B<versionsort>()  は GNU の拡張であり、glibc 2.1 以降で使用可能である。"

#. type: Plain text
#: build/C/man3/scandir.3:148
msgid ""
"Since glibc 2.1, B<alphasort>()  calls B<strcoll>(3); earlier it used "
"B<strcmp>(3)."
msgstr ""
"glibc 2.1 以降では B<alphasort>()  は B<strcoll>(3)  を呼び出す。 "
"B<alphasort>()  は以前は B<strcmp>(3)  を使っていた。"

#. type: Plain text
#: build/C/man3/scandir.3:153
#, no-wrap
msgid ""
"#define _SVID_SOURCE\n"
"/* print files in current directory in reverse order */\n"
"#include E<lt>dirent.hE<gt>\n"
msgstr ""
"#define _SVID_SOURCE\n"
"/* カレントディレクトリのファイルを逆順に出力する */\n"
"#include E<lt>dirent.hE<gt>\n"

#. type: Plain text
#: build/C/man3/scandir.3:159
#, no-wrap
msgid ""
"int\n"
"main(void)\n"
"{\n"
"    struct dirent **namelist;\n"
"    int n;\n"
msgstr ""
"int\n"
"main(void)\n"
"{\n"
"    struct dirent **namelist;\n"
"    int n;\n"

#. type: Plain text
#: build/C/man3/scandir.3:171
#, no-wrap
msgid ""
"    n = scandir(\".\", &namelist, 0, alphasort);\n"
"    if (n E<lt> 0)\n"
"        perror(\"scandir\");\n"
"    else {\n"
"        while (n--) {\n"
"            printf(\"%s\\en\", namelist[n]-E<gt>d_name);\n"
"            free(namelist[n]);\n"
"        }\n"
"        free(namelist);\n"
"    }\n"
"}\n"
msgstr ""
"    n = scandir(\".\", &namelist, 0, alphasort);\n"
"    if (n E<lt> 0)\n"
"        perror(\"scandir\");\n"
"    else {\n"
"        while (n--) {\n"
"            printf(\"%s\\en\", namelist[n]-E<gt>d_name);\n"
"            free(namelist[n]);\n"
"        }\n"
"        free(namelist);\n"
"    }\n"
"}\n"

#. type: Plain text
#: build/C/man3/scandir.3:183
#, fuzzy
#| msgid ""
#| "B<closedir>(3), B<fnmatch>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>"
#| "(3), B<seekdir>(3), B<strcmp>(3), B<strcoll>(3), B<strverscmp>(3), "
#| "B<telldir>(3)"
msgid ""
"B<closedir>(3), B<fnmatch>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>"
"(3), B<scandirat>(3), B<seekdir>(3), B<strcmp>(3), B<strcoll>(3), "
"B<strverscmp>(3), B<telldir>(3)"
msgstr ""
"B<closedir>(3), B<fnmatch>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>"
"(3), B<seekdir>(3), B<strcmp>(3), B<strcoll>(3), B<strverscmp>(3), B<telldir>"
"(3)"

#. type: TH
#: build/C/man3/scandirat.3:26
#, fuzzy, no-wrap
#| msgid "SCANDIR"
msgid "SCANDIRAT"
msgstr "SCANDIR"

#. type: TH
#: build/C/man3/scandirat.3:26
#, fuzzy, no-wrap
#| msgid "2009-03-11"
msgid "2012-03-17"
msgstr "2009-03-11"

#. type: Plain text
#: build/C/man3/scandirat.3:29
#, fuzzy
#| msgid "dirfd - get directory stream file descriptor"
msgid "scandirat - scan a directory relative to a directory file descriptor"
msgstr "dirfd - ディレクトリストリームのファイルディスクリプタを取得する"

#. type: Plain text
#: build/C/man3/scandirat.3:32
#, no-wrap
msgid "B<#define _GNU_SOURCE>         /* See feature_test_macros(7) */\n"
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:35
#, no-wrap
msgid ""
"B<#include E<lt>fcntl.hE<gt>>          /* Definition of AT_* constants */\n"
"B<#include E<lt>dirent.hE<gt>>\n"
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:39
#, fuzzy
#| msgid ""
#| "B<int scandir(const char *>I<dirp>B<, struct dirent ***>I<namelist>B<,>\n"
msgid ""
"B<int scandirat(int >I<dirfd>B<, const char *>I<dirp>B<,> B<struct dirent "
"***>I<namelist>B<,>"
msgstr ""
"B<int scandir(const char *>I<dirp>B<, struct dirent ***>I<namelist>B<,>\n"

#. type: Plain text
#: build/C/man3/scandirat.3:51
msgid ""
"The B<scandirat>()  system call operates in exactly the same way as "
"B<scandir>(3), except for the differences described in this manual page."
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:61
msgid ""
"If the pathname given in I<dirp> is relative, then it is interpreted "
"relative to the directory referred to by the file descriptor I<dirfd> "
"(rather than relative to the current working directory of the calling "
"process, as is done by B<scandir>(3)  for a relative pathname)."
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:73
msgid ""
"If I<dirp> is relative and I<dirfd> is the special value B<AT_FDCWD>, then "
"I<dirp> is interpreted relative to the current working directory of the "
"calling process (like B<scandir>(3))."
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:79
msgid "If I<dirp> is absolute, then I<dirfd> is ignored."
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:86
#, fuzzy
#| msgid ""
#| "On success, 1 is returned.  On end of directory, 0 is returned.  On "
#| "error, -1 is returned, and I<errno> is set appropriately."
msgid ""
"On success, B<scandirat>()  returns the number of directory entries "
"selected.  On error, -1 is returned and I<errno> is set to indicate the "
"error."
msgstr ""
"成功した場合は、1 が返される。 ディレクトリの最後では 0 が返される。 エラーの"
"場合は -1 が返され、 I<errno> が適切に設定される。"

#. type: Plain text
#: build/C/man3/scandirat.3:93
msgid ""
"The same errors that occur for B<scandir>(3)  can also occur for B<scandirat>"
"().  The following additional errors can occur for B<scandirat>():"
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:97
#, fuzzy
#| msgid "I<fd> is not a valid file descriptor opened for reading."
msgid "I<dirfd> is not a valid file descriptor."
msgstr ""
"I<fd> が読み出し用にオープンされた、有効なファイルディスクリプタではない。"

#. type: Plain text
#: build/C/man3/scandirat.3:103
msgid ""
"I<dirp> is a relative path and I<dirfd> is a file descriptor referring to a "
"file other than a directory."
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:106
#, fuzzy
#| msgid "B<versionsort>()  was added to glibc in version 2.1."
msgid "B<scandirat>()  was added to glibc in version 2.15."
msgstr "B<versionsort>()  は、glibc バージョン 2.1 で追加された。"

#. type: Plain text
#: build/C/man3/scandirat.3:108
msgid "This function is a GNU extension."
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:113
msgid "See B<openat>(2)  for an explanation of the need for B<scandirat>()."
msgstr ""

#. type: Plain text
#: build/C/man3/scandirat.3:116
msgid "B<openat>(2), B<scandir>(3), B<path_resolution>(7)"
msgstr ""

#. type: TH
#: build/C/man3/seekdir.3:28
#, no-wrap
msgid "SEEKDIR"
msgstr "SEEKDIR"

#. type: TH
#: build/C/man3/seekdir.3:28 build/C/man3/telldir.3:28
#, no-wrap
msgid "2009-03-11"
msgstr "2009-03-11"

#. type: Plain text
#: build/C/man3/seekdir.3:32
msgid ""
"seekdir - set the position of the next readdir() call in the directory "
"stream."
msgstr ""
"seekdir - 次の readdir() 呼び出しのために、ディレクトリストリーム中の位置を "
"設定する"

#. type: Plain text
#: build/C/man3/seekdir.3:37
#, no-wrap
msgid "B<void seekdir(DIR *>I<dirp>B<, long >I<offset>B<);>\n"
msgstr "B<void seekdir(DIR *>I<dirp>B<, long >I<offset>B<);>\n"

#. type: Plain text
#: build/C/man3/seekdir.3:46
msgid "B<seekdir>(): _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE"
msgstr "B<seekdir>(): _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE"

#. type: Plain text
#: build/C/man3/seekdir.3:58
msgid ""
"The B<seekdir>()  function sets the location in the directory stream from "
"which the next B<readdir>(2)  call will start.  B<seekdir>()  should be used "
"with an I<offset> returned by B<telldir>(3)."
msgstr ""
"B<seekdir>()  関数は、次の B<readdir>(3)  呼び出しの開始位置である、 ディレク"
"トリストリームの中での位置を設定する。 B<seekdir>()  は B<telldir>(3)  によっ"
"て返される I<offset> とともに使用されるべきである。"

#. type: Plain text
#: build/C/man3/seekdir.3:62
msgid "The B<seekdir>()  function returns no value."
msgstr "B<seekdir>()  関数は、値を返さない。"

#. type: Plain text
#: build/C/man3/seekdir.3:64 build/C/man3/telldir.3:64
msgid "4.3BSD, POSIX.1-2001."
msgstr "4.3BSD, POSIX.1-2001."

#. type: Plain text
#: build/C/man3/seekdir.3:72
msgid ""
"In glibc up to version 2.1.1, the type of the I<offset> argument was "
"I<off_t>.  POSIX.1-2001 specifies I<long>, and this is the type used since "
"glibc 2.1.2."
msgstr ""
"バージョン 2.1.1 以前の glibc では、 I<offset> 引き数の型は I<off_t> であっ"
"た。 POSIX.1-2001 では I<long> と規定されており、glibc 2.1.2 以降では "
"I<long> になっている。"

#. type: Plain text
#: build/C/man3/seekdir.3:79
msgid ""
"B<lseek>(2), B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<telldir>(3)"
msgstr ""
"B<lseek>(2), B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), "
"B<scandir>(3), B<telldir>(3)"

#. type: TH
#: build/C/man3/telldir.3:28
#, no-wrap
msgid "TELLDIR"
msgstr "TELLDIR"

#. type: Plain text
#: build/C/man3/telldir.3:31
msgid "telldir - return current location in directory stream"
msgstr "telldir - ディレクトリストリーム中の現在位置を返す"

#. type: Plain text
#: build/C/man3/telldir.3:36
#, no-wrap
msgid "B<long telldir(DIR *>I<dirp>B<);>\n"
msgstr "B<long telldir(DIR *>I<dirp>B<);>\n"

#. type: Plain text
#: build/C/man3/telldir.3:45
msgid "B<telldir>(): _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE"
msgstr "B<telldir>(): _BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE"

#. type: Plain text
#: build/C/man3/telldir.3:50
msgid ""
"The B<telldir>()  function returns the current location associated with the "
"directory stream I<dirp>."
msgstr ""
"B<telldir>()  関数は、ディレクトリストリーム I<dirp> に結びつけられた 現在位"
"置を返す。"

#. type: Plain text
#: build/C/man3/telldir.3:58
msgid ""
"On success, the B<telldir>()  function returns the current location in the "
"directory stream.  On error, -1 is returned, and I<errno> is set "
"appropriately."
msgstr ""
"成功した場合、 B<telldir>()  関数はディレクトリストリーム中の現在位置を返"
"す。 エラーの場合、-1 が返されて、 I<errno> が適切に設定される。"

#. type: Plain text
#: build/C/man3/telldir.3:72
msgid ""
"In glibc up to version 2.1.1, the return type of B<telldir>()  was "
"I<off_t>.  POSIX.1-2001 specifies I<long>, and this is the type used since "
"glibc 2.1.2."
msgstr ""
"バージョン 2.1.1 以前の glibc では、 B<telldir>()9 の返り値の型は I<off_t> で"
"あった。 POSIX.1-2001 では I<long> と規定されており、glibc 2.1.2 以降では "
"I<long> になっている。"

#. type: Plain text
#: build/C/man3/telldir.3:78
msgid ""
"B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), B<scandir>"
"(3), B<seekdir>(3)"
msgstr ""
"B<closedir>(3), B<opendir>(3), B<readdir>(3), B<rewinddir>(3), B<scandir>"
"(3), B<seekdir>(3)"

#~ msgid "COLOPHON"
#~ msgstr "この文書について"

#, fuzzy
#~| msgid ""
#~| "This page is part of release 3.37 of the Linux I<man-pages> project.  A "
#~| "description of the project, and information about reporting bugs, can be "
#~| "found at http://www.kernel.org/doc/man-pages/."
#~ msgid ""
#~ "This page is part of release 3.38 of the Linux I<man-pages> project.  A "
#~ "description of the project, and information about reporting bugs, can be "
#~ "found at http://www.kernel.org/doc/man-pages/."
#~ msgstr ""
#~ "この man ページは Linux I<man-pages> プロジェクトのリリース 3.37 の一部で"
#~ "ある。\n"
#~ "プロジェクトの説明とバグ報告に関する情報は\n"
#~ "http://www.kernel.org/doc/man-pages/ に書かれている。"

#~ msgid "2011-09-08"
#~ msgstr "2011-09-08"

#~ msgid ""
#~ "Currently, only some file systems (among them: Btrfs, ext2, ext3, and "
#~ "ext4)  have full support returning the file type in I<d_type>.  All "
#~ "applications must properly handle a return of B<DT_UNKNOWN>."
#~ msgstr ""
#~ "現在のところ、 I<d_type> でファイルタイプを返す機能が完全にサポートされて"
#~ "いるのは、 いくつかのファイルシステムにおいてのみである (Btrfs, ext2, "
#~ "ext3, ext4 はサポートしている)。 どのアプリケーションも、 B<DT_UNKNOWN> が"
#~ "返された際に適切に処理できなければならない。"

#~ msgid "2009-07-04"
#~ msgstr "2009-07-04"
