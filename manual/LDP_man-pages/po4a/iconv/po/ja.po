# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-03-19 23:50+0900\n"
"PO-Revision-Date: 2012-03-21 23:30+0900\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: build/C/man3/iconv.3:16
#, no-wrap
msgid "ICONV"
msgstr "ICONV"

#. type: TH
#: build/C/man3/iconv.3:16
#, no-wrap
msgid "2008-09-08"
msgstr "2008-09-08"

#. type: TH
#: build/C/man3/iconv.3:16 build/C/man3/iconv_close.3:12
#: build/C/man3/iconv_open.3:16
#, no-wrap
msgid "GNU"
msgstr "GNU"

#. type: TH
#: build/C/man3/iconv.3:16 build/C/man3/iconv_close.3:12
#: build/C/man3/iconv_open.3:16
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux Programmer's Manual"

#. type: SH
#: build/C/man3/iconv.3:17 build/C/man3/iconv_close.3:13
#: build/C/man3/iconv_open.3:17
#, no-wrap
msgid "NAME"
msgstr "名前"

#. type: Plain text
#: build/C/man3/iconv.3:19
msgid "iconv - perform character set conversion"
msgstr "iconv - 文字セット変換を行う"

#. type: SH
#: build/C/man3/iconv.3:19 build/C/man3/iconv_close.3:15
#: build/C/man3/iconv_open.3:19
#, no-wrap
msgid "SYNOPSIS"
msgstr "書式"

#. type: Plain text
#: build/C/man3/iconv.3:22 build/C/man3/iconv_close.3:18
#: build/C/man3/iconv_open.3:22
#, no-wrap
msgid "B<#include E<lt>iconv.hE<gt>>\n"
msgstr "B<#include E<lt>iconv.hE<gt>>\n"

#. type: Plain text
#: build/C/man3/iconv.3:26
#, no-wrap
msgid ""
"B<size_t iconv(iconv_t >I<cd>B<,>\n"
"B<             char **>I<inbuf>B<, size_t *>I<inbytesleft>B<,>\n"
"B<             char **>I<outbuf>B<, size_t *>I<outbytesleft>B<);>\n"
msgstr ""
"B<size_t iconv(iconv_t >I<cd>B<,>\n"
"B<             char **>I<inbuf>B<, size_t *>I<inbytesleft>B<,>\n"
"B<             char **>I<outbuf>B<, size_t *>I<outbytesleft>B<);>\n"

#. type: SH
#: build/C/man3/iconv.3:27 build/C/man3/iconv_close.3:21
#: build/C/man3/iconv_open.3:25
#, no-wrap
msgid "DESCRIPTION"
msgstr "説明"

#. type: Plain text
#: build/C/man3/iconv.3:31
msgid ""
"The argument I<cd> must be a conversion descriptor created using the "
"function B<iconv_open>(3)."
msgstr ""
"引き数 I<cd> は、関数 B<iconv_open>(3)  を使って生成される 変換ディスクリプ"
"ターでなければならない。"

#. type: Plain text
#: build/C/man3/iconv.3:39
msgid ""
"The main case is when I<inbuf> is not NULL and I<*inbuf> is not NULL.  In "
"this case, the B<iconv>()  function converts the multibyte sequence starting "
"at I<*inbuf> to a multibyte sequence starting at I<*outbuf>.  At most "
"I<*inbytesleft> bytes, starting at I<*inbuf>, will be read.  At most "
"I<*outbytesleft> bytes, starting at I<*outbuf>, will be written."
msgstr ""
"主に使われるのは、 「I<inbuf> が NULL でなく、かつ I<*inbuf> が NULL でな"
"い」 という場合である。 この場合、 B<iconv>()  関数は、 I<*inbuf> で始まるマ"
"ルチバイト文字列を I<*outbuf> で始まるマルチバイト文字列に変換する。 "
"I<*inbuf> を先頭として最大 I<*inbytesleft> バイトが読み込まれ、 I<*outbuf> を"
"先頭として最大 I<*outbytesleft> バイトが書き出される。"

#. type: Plain text
#: build/C/man3/iconv.3:53
msgid ""
"The B<iconv>()  function converts one multibyte character at a time, and for "
"each character conversion it increments I<*inbuf> and decrements "
"I<*inbytesleft> by the number of converted input bytes, it increments "
"I<*outbuf> and decrements I<*outbytesleft> by the number of converted output "
"bytes, and it updates the conversion state contained in I<cd>.  If the "
"character encoding of the input is stateful, the B<iconv>()  function can "
"also convert a sequence of input bytes to an update to the conversion state "
"without producing any output bytes; such input is called a I<shift "
"sequence>.  The conversion can stop for four reasons:"
msgstr ""
"B<iconv>()  関数は 1 度に 1 つのマルチバイト文字を変換する。 そして、各文字変"
"換毎に、変換された入力バイトの数だけ I<*inbuf> を増加させ、I<*inbytesleft> を"
"減少させる。 また、変換された出力バイトの数だけ I<*outbuf> を増加させ、"
"I<*outbytesleft> を減少させる。 さらに、I<cd> に含まれる変換状態を更新する。 "
"入力の文字エンコーディングがが状態を持つ場合、 B<iconv>()  関数は入力バイトの"
"列に対して変換にも対応しており、 バイト出力を伴わずに変換状態を更新することが"
"できる。 変換は、次の 4 つの場合に停止する。"

#. type: Plain text
#: build/C/man3/iconv.3:60
msgid ""
"1. An invalid multibyte sequence is encountered in the input.  In this case "
"it sets I<errno> to B<EILSEQ> and returns I<(size_t)\\ -1>.  I<*inbuf> is "
"left pointing to the beginning of the invalid multibyte sequence."
msgstr ""
"1. 入力に無効なマルチバイト文字列があった場合。 この場合、関数は I<errno> を "
"B<EILSEQ> に設定し、 I<(size_t)\\ -1> を返す。 I<*inbuf> は、無効なマルチバイ"
"ト文字列の先頭を指したままになる。"

#. type: Plain text
#: build/C/man3/iconv.3:67
msgid ""
"2. The input byte sequence has been entirely converted, that is, "
"I<*inbytesleft> has gone down to 0.  In this case B<iconv>()  returns the "
"number of nonreversible conversions performed during this call."
msgstr ""
"2. 入力バイト文字列が完全に変換され、I<*inbytesleft> が 0 になった場合。 この"
"場合、 B<iconv>()  は、呼出しの間に非可逆変換が行われた回数を返す。"

#. type: Plain text
#: build/C/man3/iconv.3:75
msgid ""
"3. An incomplete multibyte sequence is encountered in the input, and the "
"input byte sequence terminates after it.  In this case it sets I<errno> to "
"B<EINVAL> and returns I<(size_t)\\ -1>.  I<*inbuf> is left pointing to the "
"beginning of the incomplete multibyte sequence."
msgstr ""
"3. 入力に不完全なマルチバイト文字列があり、 入力バイト文字列がその後で終了し"
"ている場合。 この場合、関数は、I<errno> を B<EINVAL> に設定し、 I<(size_t)\\ "
"-1> を返す。 I<*inbuf> は、不完全なマルチバイト文字列の先頭を指したままにされ"
"る。"

#. type: Plain text
#: build/C/man3/iconv.3:79
msgid ""
"4. The output buffer has no more room for the next converted character.  In "
"this case it sets I<errno> to B<E2BIG> and returns I<(size_t)\\ -1>."
msgstr ""
"4. 出力バッファーに次の変換された文字列のための空きがない場合。 この場合、"
"I<errno> が B<E2BIG> に設定され、 I<(size_t)\\ -1> が返される。"

#. type: Plain text
#: build/C/man3/iconv.3:93
msgid ""
"A different case is when I<inbuf> is NULL or I<*inbuf> is NULL, but "
"I<outbuf> is not NULL and I<*outbuf> is not NULL.  In this case, the B<iconv>"
"()  function attempts to set I<cd>'s conversion state to the initial state "
"and store a corresponding shift sequence at I<*outbuf>.  At most "
"I<*outbytesleft> bytes, starting at I<*outbuf>, will be written.  If the "
"output buffer has no more room for this reset sequence, it sets I<errno> to "
"B<E2BIG> and returns I<(size_t)\\ -1>.  Otherwise it increments I<*outbuf> "
"and decrements I<*outbytesleft> by the number of bytes written."
msgstr ""
"別のケースとしては、 「I<inbuf> が NULL、または I<*inbuf> が NULL である。 し"
"かし、I<outbuf> が NULL でなく、かつ I<*outbuf> が NULL でない」 という場合が"
"ある。 この場合、 B<iconv>()  関数は、I<cd> の変換状態を初期状態にして、 対応"
"するシフト文字列を I<*outbuf> に保存しようとする。 最大 I<*outbytesleft> バイ"
"トが、I<*outbuf> を始めとして書き出される。 このリセットされた文字列に対し"
"て、出力バッファーに空きがない場合、 この関数は I<errno> を B<E2BIG> に設定"
"し、 I<(size_t)\\ -1> を返す。 それ以外の場合、この関数は、書き込まれたバイト"
"の数だけ I<*outbuf> を増加させ、I<*outbytesleft> を減少させる。"

#. type: Plain text
#: build/C/man3/iconv.3:99
msgid ""
"A third case is when I<inbuf> is NULL or I<*inbuf> is NULL, and I<outbuf> is "
"NULL or I<*outbuf> is NULL.  In this case, the B<iconv>()  function sets "
"I<cd>'s conversion state to the initial state."
msgstr ""
"3 番目のケースしては、 「I<inbuf> が NULL、または I<*inbuf> が NULL である。 "
"かつ、I<outbuf> が NULL、または I<*outbuf> が NULL である」 という場合があ"
"る。 この場合、 B<iconv>()  関数は、I<cd> の変換状態を初期状態にする。"

#. type: SH
#: build/C/man3/iconv.3:99 build/C/man3/iconv_close.3:27
#: build/C/man3/iconv_open.3:69
#, no-wrap
msgid "RETURN VALUE"
msgstr "返り値"

#. type: Plain text
#: build/C/man3/iconv.3:106
msgid ""
"The B<iconv>()  function returns the number of characters converted in a "
"nonreversible way during this call; reversible conversions are not counted.  "
"In case of error, it sets I<errno> and returns I<(size_t)\\ -1>."
msgstr ""
"B<iconv>()  関数は、呼出しの間に非可逆な方法で変換された文字数を返す。 つま"
"り、可逆変換はカウントされない。 エラーの場合、この関数は I<errno> を設定"
"し、 I<(size_t)\\ -1> を返す。"

#. type: SH
#: build/C/man3/iconv.3:106 build/C/man3/iconv_open.3:76
#, no-wrap
msgid "ERRORS"
msgstr "エラー"

#. type: Plain text
#: build/C/man3/iconv.3:108
msgid "The following errors can occur, among others:"
msgstr "他のいろいろなエラーのうちから、以下のエラーが起こりうる。"

#. type: TP
#: build/C/man3/iconv.3:108
#, no-wrap
msgid "B<E2BIG>"
msgstr "B<E2BIG>"

#. type: Plain text
#: build/C/man3/iconv.3:111
msgid "There is not sufficient room at I<*outbuf>."
msgstr "I<*outbuf> に十分な空きがない。"

#. type: TP
#: build/C/man3/iconv.3:111
#, no-wrap
msgid "B<EILSEQ>"
msgstr "B<EILSEQ>"

#. type: Plain text
#: build/C/man3/iconv.3:114
msgid "An invalid multibyte sequence has been encountered in the input."
msgstr "入力に無効なマルチバイト文字列があった。"

#. type: TP
#: build/C/man3/iconv.3:114 build/C/man3/iconv_open.3:78
#, no-wrap
msgid "B<EINVAL>"
msgstr "B<EINVAL>"

#. type: Plain text
#: build/C/man3/iconv.3:117
msgid "An incomplete multibyte sequence has been encountered in the input."
msgstr "入力に不完全なマルチバイト文字列があった。"

#. type: SH
#: build/C/man3/iconv.3:117 build/C/man3/iconv_close.3:34
#: build/C/man3/iconv_open.3:82
#, no-wrap
msgid "VERSIONS"
msgstr "バージョン"

#. type: Plain text
#: build/C/man3/iconv.3:119 build/C/man3/iconv_close.3:36
#: build/C/man3/iconv_open.3:84
msgid "This function is available in glibc since version 2.1."
msgstr "この関数はバージョン 2.1 以降の glibc で利用可能である。"

#. type: SH
#: build/C/man3/iconv.3:119 build/C/man3/iconv_close.3:36
#: build/C/man3/iconv_open.3:84
#, no-wrap
msgid "CONFORMING TO"
msgstr "準拠"

#. type: Plain text
#: build/C/man3/iconv.3:121
msgid "POSIX.1-2001."
msgstr "POSIX.1-2001."

#. type: SH
#: build/C/man3/iconv.3:121 build/C/man3/iconv_close.3:38
#: build/C/man3/iconv_open.3:86
#, no-wrap
msgid "SEE ALSO"
msgstr "関連項目"

#. type: Plain text
#: build/C/man3/iconv.3:124
msgid "B<iconv_close>(3), B<iconv_open>(3)"
msgstr "B<iconv_close>(3), B<iconv_open>(3)"

#. type: SH
#: build/C/man3/iconv.3:124 build/C/man3/iconv_close.3:41
#: build/C/man3/iconv_open.3:90
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
#: build/C/man3/iconv.3:131 build/C/man3/iconv_close.3:48
#: build/C/man3/iconv_open.3:97
msgid ""
"This page is part of release 3.35 of the Linux I<man-pages> project.  A "
"description of the project, and information about reporting bugs, can be "
"found at http://man7.org/linux/man-pages/."
msgstr ""

#. type: TH
#: build/C/man3/iconv_close.3:12
#, no-wrap
msgid "ICONV_CLOSE"
msgstr "ICONV_CLOSE"

#. type: TH
#: build/C/man3/iconv_close.3:12 build/C/man3/iconv_open.3:16
#, no-wrap
msgid "2008-08-11"
msgstr "2008-08-11"

#. type: Plain text
#: build/C/man3/iconv_close.3:15
msgid "iconv_close - deallocate descriptor for character set conversion"
msgstr "iconv_close - 文字セット変換のためのディスクリプターを解放する"

#. type: Plain text
#: build/C/man3/iconv_close.3:20
#, no-wrap
msgid "B<int iconv_close(iconv_t >I<cd>B<);>\n"
msgstr "B<int iconv_close(iconv_t >I<cd>B<);>\n"

#. type: Plain text
#: build/C/man3/iconv_close.3:27
msgid ""
"The B<iconv_close>()  function deallocates a conversion descriptor I<cd> "
"previously allocated using B<iconv_open>(3)."
msgstr ""
"B<iconv_close>()  関数は、 B<iconv_open>(3)  を使って以前に割り当てられた 変"
"換ディスクリプター I<cd> を解放する。"

#. type: Plain text
#: build/C/man3/iconv_close.3:34
msgid ""
"When successful, the B<iconv_close>()  function returns 0.  In case of "
"error, it sets I<errno> and returns -1."
msgstr ""
"成功した場合、 B<iconv_close>()  関数は 0 を返す。 エラーの場合、この関数は "
"I<errno> を設定し -1 を返す。"

#. type: Plain text
#: build/C/man3/iconv_close.3:38 build/C/man3/iconv_open.3:86
msgid "UNIX98, POSIX.1-2001."
msgstr "UNIX98, POSIX.1-2001."

#. type: Plain text
#: build/C/man3/iconv_close.3:41
msgid "B<iconv>(3), B<iconv_open>(3)"
msgstr "B<iconv>(3), B<iconv_open>(3)"

#. type: TH
#: build/C/man3/iconv_open.3:16
#, no-wrap
msgid "ICONV_OPEN"
msgstr "ICONV_OPEN"

#. type: Plain text
#: build/C/man3/iconv_open.3:19
msgid "iconv_open - allocate descriptor for character set conversion"
msgstr "iconv_open - 文字セット変換のためのディスクリプタを割り当てる"

#. type: Plain text
#: build/C/man3/iconv_open.3:24
#, no-wrap
msgid "B<iconv_t iconv_open(const char *>I<tocode>B<, const char *>I<fromcode>B<);>\n"
msgstr "B<iconv_t iconv_open(const char *>I<tocode>B<, const char *>I<fromcode>B<);>\n"

#. type: Plain text
#: build/C/man3/iconv_open.3:31
msgid ""
"The B<iconv_open>()  function allocates a conversion descriptor suitable for "
"converting byte sequences from character encoding I<fromcode> to character "
"encoding I<tocode>."
msgstr ""
"B<iconv_open>()  関数は、文字エンコーディング I<fromcode> から 文字エンコー"
"ディング I<tocode> へのバイト文字列変換に適した 変換ディスクリプタを割り当て"
"る。"

#. type: Plain text
#: build/C/man3/iconv_open.3:39
msgid ""
"The values permitted for I<fromcode> and I<tocode> and the supported "
"combinations are system-dependent.  For the GNU C library, the permitted "
"values are listed by the B<iconv --list> command, and all combinations of "
"the listed values are supported.  Furthermore the GNU C library and the GNU "
"libiconv library support the following two suffixes:"
msgstr ""
"I<fromcode> と I<tocode> に使うことのできる値と、 サポートされる組み合わせ"
"は、システムに依存する。 GNU C ライブラリでは、使うことのできる値は B<iconv "
"--list> コマンドでリストされ、 リストされたすべての値の組み合わせがサポートさ"
"れる。 さらに、 GNU C ライブラリと GNU libiconv ライブラリでは、 以下の接尾辞"
"がサポートされている。"

#. type: TP
#: build/C/man3/iconv_open.3:39
#, no-wrap
msgid "//TRANSLIT"
msgstr "//TRANSLIT"

#. type: Plain text
#: build/C/man3/iconv_open.3:46
msgid ""
"When the string \"//TRANSLIT\" is appended to I<tocode>, transliteration is "
"activated.  This means that when a character cannot be represented in the "
"target character set, it can be approximated through one or several "
"similarly looking characters."
msgstr ""
"I<tocode> の後ろに文字列 \"//TRANSLIT\" が付いている場合、 翻訳 "
"(transliteration) が有効になる。この場合、 変換先の文字セットで表現できない文"
"字を、その文字と同じように見える 文字 (複数文字の場合もある) で表現することが"
"できる。"

#. type: TP
#: build/C/man3/iconv_open.3:46
#, no-wrap
msgid "//IGNORE"
msgstr "//IGNORE"

#. type: Plain text
#: build/C/man3/iconv_open.3:50
msgid ""
"When the string \"//IGNORE\" is appended to I<tocode>, characters that "
"cannot be represented in the target character set will be silently discarded."
msgstr ""
"I<tocode> の後ろに文字列 \"//IGNORE\" が付いている場合、 変換先の文字セットで"
"表現できない文字は黙って無視される。"

#. type: Plain text
#: build/C/man3/iconv_open.3:56
msgid ""
"The resulting conversion descriptor can be used with B<iconv>(3)  any number "
"of times.  It remains valid until deallocated using B<iconv_close>(3)."
msgstr ""
"この関数を読んで得られた変換ディスクリプタは、 B<iconv>(3)  で 何度でも使うこ"
"とができる。 これは B<iconv_close>(3)  を使って解放されるまで有効である。"

#. type: Plain text
#: build/C/man3/iconv_open.3:69
msgid ""
"A conversion descriptor contains a conversion state.  After creation using "
"B<iconv_open>(), the state is in the initial state.  Using B<iconv>(3)  "
"modifies the descriptor's conversion state.  (This implies that a conversion "
"descriptor can not be used in multiple threads simultaneously.)  To bring "
"the state back to the initial state, use B<iconv>(3)  with NULL as I<inbuf> "
"argument."
msgstr ""
"変換ディスクリプタは変換状態を持つ。 B<iconv_open>()  を用いて生成された後、"
"変換状態は初期状態である。 B<iconv>(3)  を使うことにより、ディスクリプタの変"
"換状態が変更される。 (変換ディスクリプタはマルチスレッドで 同時に使うことがで"
"きないことを意味している。)  変換状態を初期状態に戻すには、 I<inbuf> 引き数"
"を NULL として B<iconv>(3)  を用いること。"

#. type: Plain text
#: build/C/man3/iconv_open.3:76
msgid ""
"The B<iconv_open>()  function returns a freshly allocated conversion "
"descriptor.  In case of error, it sets I<errno> and returns I<(iconv_t)\\ "
"-1>."
msgstr ""
"B<iconv_open>()  関数は、新たに割り当てられた変換ディスクリプタを返す。 エ"
"ラーの場合、この関数は I<errno> を設定し、 I<(iconv_t)\\ -1> を返す。"

#. type: Plain text
#: build/C/man3/iconv_open.3:78
msgid "The following error can occur, among others:"
msgstr "他のいろいろなエラーのうち、以下のエラーが起こりうる。"

#. type: Plain text
#: build/C/man3/iconv_open.3:82
msgid ""
"The conversion from I<fromcode> to I<tocode> is not supported by the "
"implementation."
msgstr ""
"I<fromcode> から I<tocode> への変換は、この実装ではサポートされていない。"

#. type: Plain text
#: build/C/man3/iconv_open.3:90
msgid "B<iconv>(1), B<iconv>(3), B<iconv_close>(3)"
msgstr "B<iconv>(1), B<iconv>(3), B<iconv_close>(3)"
